<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.1 (Python 3.10.11 on win32)" generated="20240424 19:39:06.735" rpa="false" schemaversion="3">
<suite id="s1" name="Ui" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui">
<kw name="Launch Solibri And Login To SSC" type="SETUP">
<doc>Launch Solibri And Login To SSC</doc>
<kw name="Take Screenshot" library="ScreenCapLibrary">
<doc>Takes a screenshot in the specified format at library import and
embeds it into the log file (PNG by default).</doc>
<msg timestamp="20240424 19:39:11.006" level="INFO" html="true">&lt;a href="screenshot_1.png"&gt;&lt;img src="screenshot_1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240424 19:39:10.928" endtime="20240424 19:39:11.006"/>
</kw>
<kw name="Start Video Recording" library="ScreenCapLibrary">
<arg>alias=${SUITE_NAME}</arg>
<arg>embed=${True}</arg>
<doc>Starts the recording of a video in the background with the specified ``name``.
The recording can be stopped by calling the `Stop Video Recording` keyword.</doc>
<msg timestamp="20240424 19:39:13.053" level="INFO">Automatically setting a fps of 19.5</msg>
<status status="PASS" starttime="20240424 19:39:11.006" endtime="20240424 19:39:13.069"/>
</kw>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:39:13.258" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:39:13.258" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:39:13 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:39:13.069" endtime="20240424 19:39:13.258"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:39:13.258" endtime="20240424 19:39:13.258"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:13.258" endtime="20240424 19:39:13.377"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:39:13.380" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:39:13.377" endtime="20240424 19:39:13.380"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:39:13.380" endtime="20240424 19:39:13.380"/>
</kw>
<status status="PASS" starttime="20240424 19:39:13.377" endtime="20240424 19:39:13.380"/>
</kw>
<status status="PASS" starttime="20240424 19:39:13.069" endtime="20240424 19:39:13.380"/>
</kw>
<kw name="When User Logs In To SSC" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Logged in to SSC</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:39:13.380" endtime="20240424 19:39:13.380"/>
</kw>
<status status="PASS" starttime="20240424 19:39:13.380" endtime="20240424 19:39:13.380"/>
</kw>
<kw name="When User Accepts License Agreement">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${License_agreement_open}</var>
<arg>Dialog Should Be Open</arg>
<arg>License Agreement</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>License Agreement</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:39:13.380" endtime="20240424 19:39:13.412"/>
</kw>
<msg timestamp="20240424 19:39:13.412" level="INFO">${License_agreement_open} = True</msg>
<status status="PASS" starttime="20240424 19:39:13.380" endtime="20240424 19:39:13.412"/>
</kw>
<if>
<branch type="IF" condition="${License_agreement_open} == $True">
<kw name="Select Dialog" library="SwingRobot">
<arg>License Agreement</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:39:13.412" endtime="20240424 19:39:13.435"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Accept</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:39:13.435" endtime="20240424 19:39:13.603"/>
</kw>
<status status="PASS" starttime="20240424 19:39:13.412" endtime="20240424 19:39:13.603"/>
</branch>
<status status="PASS" starttime="20240424 19:39:13.412" endtime="20240424 19:39:13.603"/>
</if>
<status status="PASS" starttime="20240424 19:39:13.380" endtime="20240424 19:39:13.603"/>
</kw>
<kw name="Then Solibri Office Is Opened" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Solibri Office Is Opened</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:39:13.603" endtime="20240424 19:39:13.603"/>
</kw>
<status status="PASS" starttime="20240424 19:39:13.603" endtime="20240424 19:39:13.603"/>
</kw>
<status status="PASS" starttime="20240424 19:39:10.928" endtime="20240424 19:39:13.603"/>
</kw>
<suite id="s1-s1" name="01 Model Handling Flow" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\01_model_handling_flow.robot">
<test id="s1-s1-t1" name="Opening IFC Model File From File Chooser" line="22">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:13.770" endtime="20240424 19:39:13.792"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:39:13.792" endtime="20240424 19:39:13.904"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:13.904" endtime="20240424 19:39:13.920"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:13.920" endtime="20240424 19:39:13.936"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:13.936" endtime="20240424 19:39:13.951"/>
</kw>
<status status="PASS" starttime="20240424 19:39:13.904" endtime="20240424 19:39:13.951"/>
</kw>
<status status="PASS" starttime="20240424 19:39:13.770" endtime="20240424 19:39:13.951"/>
</kw>
<status status="PASS" starttime="20240424 19:39:13.770" endtime="20240424 19:39:13.951"/>
</kw>
<kw name="Scenario Outline Opening Model File From File Chooser">
<arg>ifc</arg>
<kw name="Given No Existing Model Is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:13.951" endtime="20240424 19:39:13.959"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:13.959" endtime="20240424 19:39:13.960"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:13.960" endtime="20240424 19:39:13.974"/>
</kw>
<status status="PASS" starttime="20240424 19:39:13.951" endtime="20240424 19:39:13.974"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:39:13.974" endtime="20240424 19:39:14.039"/>
</kw>
<status status="PASS" starttime="20240424 19:39:13.974" endtime="20240424 19:39:14.039"/>
</kw>
<msg timestamp="20240424 19:39:14.039" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 19:39:13.974" endtime="20240424 19:39:14.039"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:39:14.039" endtime="20240424 19:39:14.039"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:39:14.039" endtime="20240424 19:39:14.039"/>
</branch>
<status status="PASS" starttime="20240424 19:39:14.039" endtime="20240424 19:39:14.039"/>
</if>
<status status="PASS" starttime="20240424 19:39:13.951" endtime="20240424 19:39:14.039"/>
</kw>
<kw name="And File Layout Is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:14.039" endtime="20240424 19:39:14.039"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:14.039" endtime="20240424 19:39:14.039"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:14.039" endtime="20240424 19:39:14.082"/>
</kw>
<status status="PASS" starttime="20240424 19:39:14.039" endtime="20240424 19:39:14.082"/>
</kw>
<status status="PASS" starttime="20240424 19:39:14.039" endtime="20240424 19:39:14.082"/>
</kw>
<kw name="And Open BIM Validation Role" library="information_take_off_step_definitions">
<kw name="Open &quot;BIM Validation - Architectural.xml&quot; Role" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:14.082" endtime="20240424 19:39:14.097"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Roles_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:39:14.097" endtime="20240424 19:39:14.144"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open Role</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:39:14.144" endtime="20240424 19:39:18.466"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Dialog Should Be Open</arg>
<arg>Open Role</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Open Role</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:39:18.466" endtime="20240424 19:39:18.469"/>
</kw>
<status status="PASS" starttime="20240424 19:39:18.466" endtime="20240424 19:39:18.469"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open Role</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:39:18.469" endtime="20240424 19:39:18.490"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Files</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:39:18.490" endtime="20240424 19:39:18.601"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${role_with_path}</var>
<arg>${roles_folder}</arg>
<arg>BIM Validation - Architectural.xml</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:39:18.601" level="INFO">${role_with_path} = C:\users\public\Solibri\SOLIBRI\Roles\BIM Validation - Architectural.xml</msg>
<status status="PASS" starttime="20240424 19:39:18.601" endtime="20240424 19:39:18.601"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${role_with_path}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:39:18.601" endtime="20240424 19:39:18.889"/>
</kw>
<status status="PASS" starttime="20240424 19:39:14.082" endtime="20240424 19:39:18.889"/>
</kw>
<status status="PASS" starttime="20240424 19:39:14.082" endtime="20240424 19:39:18.889"/>
</kw>
<kw name="And Restore Default Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:18.889" endtime="20240424 19:39:18.950"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:18.950" endtime="20240424 19:39:18.959"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:18.959" endtime="20240424 19:39:18.962"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:18.962" endtime="20240424 19:39:18.971"/>
</kw>
<status status="PASS" starttime="20240424 19:39:18.950" endtime="20240424 19:39:18.971"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:39:18.971" endtime="20240424 19:39:19.449"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Layouts</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:19.449" endtime="20240424 19:39:19.453"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Layouts</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:39:19.453" endtime="20240424 19:39:19.590"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Push Button</arg>
<arg>Restore</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:19.590" endtime="20240424 19:39:19.594"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Restore</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:39:19.594" endtime="20240424 19:39:19.728"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:39:19.728" endtime="20240424 19:39:19.963"/>
</kw>
<status status="PASS" starttime="20240424 19:39:18.889" endtime="20240424 19:39:19.963"/>
</kw>
<kw name="When File Is Open From File Chooser" library="ModelHandlingResource">
<arg>${filetype}</arg>
<if>
<branch type="IF" condition="'${filetype}' == 'ifc'">
<kw name="Join Path" library="OperatingSystem">
<var>${filename}</var>
<arg>${ifc_folder}</arg>
<arg>Solibri Building.ifc</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:39:19.963" level="INFO">${filename} = C:\users\public\Solibri\SOLIBRI\Samples\ifc\Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:39:19.963" endtime="20240424 19:39:19.963"/>
</kw>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${filename}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:19.963" endtime="20240424 19:39:19.975"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:39:19.975" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:39:19.975" endtime="20240424 19:39:19.975"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:39:19.975" endtime="20240424 19:39:19.975"/>
</kw>
<status status="PASS" starttime="20240424 19:39:19.975" endtime="20240424 19:39:19.975"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:19.975" endtime="20240424 19:39:19.999"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:19.999" endtime="20240424 19:39:20.015"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:20.015" endtime="20240424 19:39:20.032"/>
</kw>
<status status="PASS" starttime="20240424 19:39:19.975" endtime="20240424 19:39:20.032"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:39:20.032" endtime="20240424 19:39:20.047"/>
</kw>
<status status="PASS" starttime="20240424 19:39:20.032" endtime="20240424 19:39:20.047"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:39:20.047" endtime="20240424 19:39:20.115"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:20.115" endtime="20240424 19:39:20.115"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:39:20.115" endtime="20240424 19:39:20.583"/>
</kw>
<status status="PASS" starttime="20240424 19:39:20.115" endtime="20240424 19:39:20.583"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:39:20.583" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:39:20.583" endtime="20240424 19:39:20.583"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:39:20.583" endtime="20240424 19:39:20.583"/>
</return>
<msg timestamp="20240424 19:39:20.583" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:39:20.583" endtime="20240424 19:39:20.583"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:39:20.583" endtime="20240424 19:39:20.971"/>
</kw>
<status status="PASS" starttime="20240424 19:39:20.583" endtime="20240424 19:39:20.971"/>
</kw>
<status status="PASS" starttime="20240424 19:39:20.583" endtime="20240424 19:39:20.971"/>
</branch>
<status status="PASS" starttime="20240424 19:39:20.583" endtime="20240424 19:39:20.971"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:39:21.017" endtime="20240424 19:39:21.017"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:39:21.017" endtime="20240424 19:39:21.017"/>
</branch>
<status status="PASS" starttime="20240424 19:39:21.017" endtime="20240424 19:39:21.017"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:39:21.017" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\ifc</msg>
<msg timestamp="20240424 19:39:21.017" level="INFO">${filename} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:39:21.017" endtime="20240424 19:39:21.017"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:39:21.017" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 19:39:21.017" level="INFO">${ext} = ifc</msg>
<status status="PASS" starttime="20240424 19:39:21.017" endtime="20240424 19:39:21.017"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<status status="NOT RUN" starttime="20240424 19:39:21.017" endtime="20240424 19:39:21.017"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:39:21.017" endtime="20240424 19:39:21.017"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<msg timestamp="20240424 19:39:21.522" level="INFO">Closed dialog ''.</msg>
<status status="PASS" starttime="20240424 19:39:21.017" endtime="20240424 19:39:21.522"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:21.522" endtime="20240424 19:39:21.851"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:21.851" endtime="20240424 19:39:21.862"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:21.862" endtime="20240424 19:39:21.870"/>
</kw>
<status status="PASS" starttime="20240424 19:39:21.522" endtime="20240424 19:39:21.870"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:39:26.938" level="INFO">2024-04-24 19:39:24.016+0000 [Thread-49] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 31 ms.
2024-04-24 19:39:24.016+0000 [Thread-49] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 2776 ms (using 1 threads)
2024-04-24 19:39:24.251+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 156 ms
2024-04-24 19:39:26.576+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 2544 ms.</msg>
<status status="PASS" starttime="20240424 19:39:21.870" endtime="20240424 19:39:26.938"/>
</kw>
<status status="PASS" starttime="20240424 19:39:21.870" endtime="20240424 19:39:26.938"/>
</kw>
<msg timestamp="20240424 19:39:26.938" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:39:21.870" endtime="20240424 19:39:26.938"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:39:26.939" endtime="20240424 19:39:27.021"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:39:27.022" endtime="20240424 19:39:29.871"/>
</kw>
<status status="PASS" starttime="20240424 19:39:26.939" endtime="20240424 19:39:29.871"/>
</branch>
<status status="PASS" starttime="20240424 19:39:26.938" endtime="20240424 19:39:29.871"/>
</if>
<status status="PASS" starttime="20240424 19:39:21.017" endtime="20240424 19:39:29.871"/>
</kw>
<status status="PASS" starttime="20240424 19:39:21.017" endtime="20240424 19:39:29.871"/>
</branch>
<status status="PASS" starttime="20240424 19:39:21.017" endtime="20240424 19:39:29.871"/>
</if>
<status status="PASS" starttime="20240424 19:39:19.963" endtime="20240424 19:39:29.871"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${modelname}</var>
<arg>Solibri Building</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240424 19:39:29.872" level="INFO">${modelname} = Solibri Building</msg>
<status status="PASS" starttime="20240424 19:39:29.871" endtime="20240424 19:39:29.872"/>
</kw>
<status status="PASS" starttime="20240424 19:39:19.963" endtime="20240424 19:39:29.872"/>
</branch>
<branch type="ELSE IF" condition="'${filetype}' == 'pdf'">
<kw name="Join Path" library="OperatingSystem">
<var>${filename}</var>
<arg>${pdf_folder}</arg>
<arg>Floor Plan-Ground Floor_100.pdf</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<status status="NOT RUN" starttime="20240424 19:39:29.872" endtime="20240424 19:39:29.872"/>
</kw>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${filename}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:39:29.872" endtime="20240424 19:39:29.872"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${modelname}</var>
<arg>Floor Plan-Ground Floor_100</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240424 19:39:29.873" endtime="20240424 19:39:29.873"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:39:29.872" endtime="20240424 19:39:29.873"/>
</branch>
<branch type="ELSE IF" condition="'${filetype}' == 'smc'">
<kw name="Join Path" library="OperatingSystem">
<var>${filename}</var>
<arg>${models_folder}</arg>
<arg>Solibri Building.smc</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<status status="NOT RUN" starttime="20240424 19:39:29.873" endtime="20240424 19:39:29.873"/>
</kw>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${filename}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:39:29.873" endtime="20240424 19:39:29.873"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${modelname}</var>
<arg>(ARC) Solibri Building</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240424 19:39:29.873" endtime="20240424 19:39:29.873"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:39:29.873" endtime="20240424 19:39:29.873"/>
</branch>
<status status="PASS" starttime="20240424 19:39:19.963" endtime="20240424 19:39:29.873"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${modelname}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240424 19:39:29.874" level="INFO">${modelname} = Solibri Building</msg>
<status status="PASS" starttime="20240424 19:39:29.874" endtime="20240424 19:39:29.874"/>
</kw>
<status status="PASS" starttime="20240424 19:39:19.963" endtime="20240424 19:39:29.874"/>
</kw>
<kw name="Then Model Tree Should Have Correct Model" library="model_handling_flow_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:29.875" endtime="20240424 19:39:29.880"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:29.880" endtime="20240424 19:39:29.888"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:29.889" endtime="20240424 19:39:29.892"/>
</kw>
<status status="PASS" starttime="20240424 19:39:29.875" endtime="20240424 19:39:29.892"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${COMPONENT_HIERARCHY_PANEL}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:39:29.893" endtime="20240424 19:39:29.896"/>
</kw>
<kw name="Switch to Containment Hierarchy" library="ModelTreeResource">
<doc>Opens Containment tree in Component hierarchy ModelViewComponentHierarchyPanel</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:29.897" endtime="20240424 19:39:29.903"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:39:29.903" endtime="20240424 19:39:29.950"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${select_containment_hierarchy}</var>
<arg>Toggle Button Should Be Selected</arg>
<arg>2</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Toggle Button Should Be Selected" library="SwingRobot">
<arg>2</arg>
<doc>Fails if toggle button is not selected.</doc>
<status status="PASS" starttime="20240424 19:39:29.950" endtime="20240424 19:39:29.955"/>
</kw>
<msg timestamp="20240424 19:39:29.955" level="INFO">${select_containment_hierarchy} = True</msg>
<status status="PASS" starttime="20240424 19:39:29.950" endtime="20240424 19:39:29.955"/>
</kw>
<if>
<branch type="IF" condition="${select_containment_hierarchy} == ${False}">
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:39:29.955" endtime="20240424 19:39:29.955"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:39:29.955" endtime="20240424 19:39:29.956"/>
</branch>
<status status="PASS" starttime="20240424 19:39:29.955" endtime="20240424 19:39:29.956"/>
</if>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:39:29.956" endtime="20240424 19:39:30.013"/>
</kw>
<status status="PASS" starttime="20240424 19:39:29.897" endtime="20240424 19:39:30.014"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>ContainmentTree</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:39:30.096" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:39:30.014" endtime="20240424 19:39:30.096"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>ContainmentTree</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:39:30.096" endtime="20240424 19:39:30.349"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${modelname_in_modeltree}</var>
<arg>ContainmentTree</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:39:30.402" level="INFO">${modelname_in_modeltree} = Solibri Building</msg>
<status status="PASS" starttime="20240424 19:39:30.349" endtime="20240424 19:39:30.402"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${modelname}</arg>
<arg>${modelname_in_modeltree}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:39:30.403" endtime="20240424 19:39:30.403"/>
</kw>
<status status="PASS" starttime="20240424 19:39:29.874" endtime="20240424 19:39:30.403"/>
</kw>
<status status="PASS" starttime="20240424 19:39:13.951" endtime="20240424 19:39:30.403"/>
</kw>
<kw name="Clean Up" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>ScreenCapLibrary.Take Screenshot</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20240424 19:39:30.404" endtime="20240424 19:39:30.404"/>
</kw>
<kw name="Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:39:30.405" endtime="20240424 19:39:30.521"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:30.522" endtime="20240424 19:39:30.555"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:30.555" endtime="20240424 19:39:30.560"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:30.561" endtime="20240424 19:39:30.565"/>
</kw>
<status status="PASS" starttime="20240424 19:39:30.522" endtime="20240424 19:39:30.565"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:39:30.565" endtime="20240424 19:39:30.770"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:39:30.771" endtime="20240424 19:39:30.785"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:39:40.810" level="INFO">Exception in thread "Thread-96" java.lang.RuntimeException: Wait for "MODEL" subcomponent to be displayed
	at org.robotframework.javalib.library.AnnotationLibrary.retrieveInnerException(AnnotationLibrary.java:158)
	at org.robotframework.javalib.library.AnnotationLibrary.runKeyword(AnnotationLibrary.java:131)
	at org.robotframework.javalib.library.KeywordFactoryBasedLibrary.runKeyword(KeywordFactoryBasedLibrary.java:44)
	at org.robotframework.javalib.library.AnnotationLibrary.runKeyword(AnnotationLibrary.java:138)
	at org.robotframework.swing.SwingLibrary.runKeyword(SwingLibrary.java:122)
	at org.robotframework.swing.keyword.concurrent.ThreadKeywords$1.run(ThreadKeywords.java:50)
Caused by: org.netbeans.jemmy.TimeoutExpiredException: Wait for "MODEL" subcomponent to be displayed
	at org.netbeans.jemmy.Waiter.waitAction(Waiter.java:147)
	at org.netbeans.jemmy.operators.ContainerOperator.waitSubComponent(ContainerOperator.java:298)
	at org.netbeans.jemmy.operators.JComponentOperator.&lt;init&gt;(JComponentOperator.java:110)
	at org.netbeans.jemmy.operators.JComponentOperator.&lt;init&gt;(JComponentOperator.java:122)
	at org.robotframework.swing.component.ComponentOperator.&lt;init&gt;(ComponentOperator.java:51)
	at org.robotframework.swing.component.ComponentOperator.newOperatorFor(ComponentOperator.java:47)
	at org.robotframework.swing.component.ComponentOperatorFactory.createOperatorByName(ComponentOperatorFactory.java:32)
	at org.robotframework.swing.component.ComponentOperatorFactory.createOperatorByName(ComponentOperatorFactory.java:24)
	at org.robotframework.swing.factory.IdentifierParsingOperatorFactory.nameArgument(IdentifierParsingOperatorFactory.java:33)
	at org.robotframework.swing.arguments.ArgumentParser.parseSwingArgument(ArgumentParser.java:51)
	at org.robotframework.swing.arguments.ArgumentParser.parseArgument(ArgumentParser.java:35)
	at org.robotframework.swing.factory.DefaultContextVerifyingOperatorFactory.parseArgument(DefaultContextVerifyingOperatorFactory.java:27)
	at org.robotframework.swing.factory.IdentifierParsingOperatorFactory.createOperator(IdentifierParsingOperatorFactory.java:25)
	at org.robotframework.swing.keyword.component.ComponentKeywords.operator(ComponentKeywords.java:281)
	at org.robotframework.swing.keyword.component.ComponentKeywords.clickOnComponent(ComponentKeywords.java:88)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.robotframework.javalib.reflection.KeywordInvoker.invoke(KeywordInvoker.java:63)
	at org.robotframework.javalib.beans.annotation.AnnotationKeywordExtractor$1.execute(AnnotationKeywordExtractor.java:66)
	at org.robotframework.javalib.library.KeywordFactoryBasedLibrary.runKeyword(KeywordFactoryBasedLibrary.java:40)
	at org.robotframework.javalib.library.AnnotationLibrary.runKeyword(AnnotationLibrary.java:129)
	... 4 more</msg>
<msg timestamp="20240424 19:39:40.810" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:39:30.786" endtime="20240424 19:39:40.810"/>
</kw>
<msg timestamp="20240424 19:39:40.810" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:39:30.786" endtime="20240424 19:39:40.810"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:39:40.810" endtime="20240424 19:39:40.810"/>
</kw>
<msg timestamp="20240424 19:39:40.810" level="INFO">${check_if_save_asked} = True</msg>
<status status="PASS" starttime="20240424 19:39:40.810" endtime="20240424 19:39:40.810"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:39:40.810" endtime="20240424 19:39:40.810"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:39:40.810" endtime="20240424 19:39:40.880"/>
</kw>
<status status="PASS" starttime="20240424 19:39:40.810" endtime="20240424 19:39:40.880"/>
</kw>
<status status="PASS" starttime="20240424 19:39:40.810" endtime="20240424 19:39:40.880"/>
</branch>
<status status="PASS" starttime="20240424 19:39:40.810" endtime="20240424 19:39:40.880"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:39:40.880" endtime="20240424 19:39:40.880"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:39:40.880" endtime="20240424 19:39:40.895"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:39:40.880" endtime="20240424 19:39:40.895"/>
</branch>
<status status="PASS" starttime="20240424 19:39:40.880" endtime="20240424 19:39:40.895"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:40.895" endtime="20240424 19:39:41.043"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:39:41.050" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:39:41.043" endtime="20240424 19:39:41.050"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:39:44.059" endtime="20240424 19:39:44.074"/>
</kw>
<status status="PASS" starttime="20240424 19:39:41.043" endtime="20240424 19:39:44.074"/>
</kw>
<status status="PASS" starttime="20240424 19:39:30.404" endtime="20240424 19:39:44.074"/>
</kw>
<status status="PASS" starttime="20240424 19:39:30.404" endtime="20240424 19:39:44.074"/>
</kw>
<doc>Test to open IFC file from file chooser</doc>
<tag>ifc</tag>
<tag>tag</tag>
<status status="PASS" starttime="20240424 19:39:13.770" endtime="20240424 19:39:44.074"/>
</test>
<test id="s1-s1-t2" name="Opening PDF Model File From File Chooser" line="28">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:44.074" endtime="20240424 19:39:44.082"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:39:44.082" endtime="20240424 19:39:44.192"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:44.192" endtime="20240424 19:39:44.206"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:44.206" endtime="20240424 19:39:44.206"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:44.206" endtime="20240424 19:39:44.219"/>
</kw>
<status status="PASS" starttime="20240424 19:39:44.192" endtime="20240424 19:39:44.219"/>
</kw>
<status status="PASS" starttime="20240424 19:39:44.074" endtime="20240424 19:39:44.219"/>
</kw>
<status status="PASS" starttime="20240424 19:39:44.074" endtime="20240424 19:39:44.219"/>
</kw>
<kw name="Scenario Outline Opening Model File From File Chooser">
<arg>pdf</arg>
<kw name="Given No Existing Model Is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:44.219" endtime="20240424 19:39:44.226"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:44.226" endtime="20240424 19:39:44.228"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:44.228" endtime="20240424 19:39:44.245"/>
</kw>
<status status="PASS" starttime="20240424 19:39:44.219" endtime="20240424 19:39:44.245"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:39:44.246" endtime="20240424 19:39:44.316"/>
</kw>
<status status="PASS" starttime="20240424 19:39:44.246" endtime="20240424 19:39:44.316"/>
</kw>
<msg timestamp="20240424 19:39:44.316" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 19:39:44.245" endtime="20240424 19:39:44.316"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:39:44.316" endtime="20240424 19:39:44.316"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:39:44.316" endtime="20240424 19:39:44.316"/>
</branch>
<status status="PASS" starttime="20240424 19:39:44.316" endtime="20240424 19:39:44.316"/>
</if>
<status status="PASS" starttime="20240424 19:39:44.219" endtime="20240424 19:39:44.316"/>
</kw>
<kw name="And File Layout Is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:44.319" endtime="20240424 19:39:44.388"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:44.388" endtime="20240424 19:39:44.393"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:44.393" endtime="20240424 19:39:44.399"/>
</kw>
<status status="PASS" starttime="20240424 19:39:44.319" endtime="20240424 19:39:44.399"/>
</kw>
<status status="PASS" starttime="20240424 19:39:44.318" endtime="20240424 19:39:44.399"/>
</kw>
<kw name="And Open BIM Validation Role" library="information_take_off_step_definitions">
<kw name="Open &quot;BIM Validation - Architectural.xml&quot; Role" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:44.399" endtime="20240424 19:39:44.404"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Roles_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:39:44.404" endtime="20240424 19:39:44.439"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open Role</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:39:44.439" endtime="20240424 19:39:45.897"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Dialog Should Be Open</arg>
<arg>Open Role</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Open Role</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:39:45.897" endtime="20240424 19:39:45.916"/>
</kw>
<status status="PASS" starttime="20240424 19:39:45.897" endtime="20240424 19:39:45.916"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open Role</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:39:45.916" endtime="20240424 19:39:45.936"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Files</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:39:45.936" endtime="20240424 19:39:45.952"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${role_with_path}</var>
<arg>${roles_folder}</arg>
<arg>BIM Validation - Architectural.xml</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:39:45.955" level="INFO">${role_with_path} = C:\users\public\Solibri\SOLIBRI\Roles\BIM Validation - Architectural.xml</msg>
<status status="PASS" starttime="20240424 19:39:45.952" endtime="20240424 19:39:45.955"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${role_with_path}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:39:45.955" endtime="20240424 19:39:46.048"/>
</kw>
<status status="PASS" starttime="20240424 19:39:44.399" endtime="20240424 19:39:46.048"/>
</kw>
<status status="PASS" starttime="20240424 19:39:44.399" endtime="20240424 19:39:46.048"/>
</kw>
<kw name="And Restore Default Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:46.048" endtime="20240424 19:39:46.069"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:46.069" endtime="20240424 19:39:46.074"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:46.074" endtime="20240424 19:39:46.075"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:46.075" endtime="20240424 19:39:46.089"/>
</kw>
<status status="PASS" starttime="20240424 19:39:46.069" endtime="20240424 19:39:46.089"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:39:46.089" endtime="20240424 19:39:46.433"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Layouts</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:46.433" endtime="20240424 19:39:46.442"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Layouts</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:39:46.442" endtime="20240424 19:39:46.624"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Push Button</arg>
<arg>Restore</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:46.624" endtime="20240424 19:39:46.627"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Restore</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:39:46.627" endtime="20240424 19:39:46.703"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:39:46.703" endtime="20240424 19:39:46.838"/>
</kw>
<status status="PASS" starttime="20240424 19:39:46.048" endtime="20240424 19:39:46.838"/>
</kw>
<kw name="When File Is Open From File Chooser" library="ModelHandlingResource">
<arg>${filetype}</arg>
<if>
<branch type="IF" condition="'${filetype}' == 'ifc'">
<kw name="Join Path" library="OperatingSystem">
<var>${filename}</var>
<arg>${ifc_folder}</arg>
<arg>Solibri Building.ifc</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<status status="NOT RUN" starttime="20240424 19:39:46.838" endtime="20240424 19:39:46.838"/>
</kw>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${filename}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:39:46.838" endtime="20240424 19:39:46.838"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${modelname}</var>
<arg>Solibri Building</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240424 19:39:46.838" endtime="20240424 19:39:46.838"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:39:46.838" endtime="20240424 19:39:46.838"/>
</branch>
<branch type="ELSE IF" condition="'${filetype}' == 'pdf'">
<kw name="Join Path" library="OperatingSystem">
<var>${filename}</var>
<arg>${pdf_folder}</arg>
<arg>Floor Plan-Ground Floor_100.pdf</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:39:46.838" level="INFO">${filename} = C:\users\public\Solibri\SOLIBRI\Samples\pdf\Floor Plan-Ground Floor_100.pdf</msg>
<status status="PASS" starttime="20240424 19:39:46.838" endtime="20240424 19:39:46.838"/>
</kw>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${filename}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:46.838" endtime="20240424 19:39:46.888"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:39:46.890" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:39:46.888" endtime="20240424 19:39:46.890"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:39:46.890" endtime="20240424 19:39:46.890"/>
</kw>
<status status="PASS" starttime="20240424 19:39:46.888" endtime="20240424 19:39:46.890"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:46.890" endtime="20240424 19:39:46.900"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:46.900" endtime="20240424 19:39:46.908"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:46.908" endtime="20240424 19:39:46.924"/>
</kw>
<status status="PASS" starttime="20240424 19:39:46.890" endtime="20240424 19:39:46.924"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:39:46.924" endtime="20240424 19:39:46.962"/>
</kw>
<status status="PASS" starttime="20240424 19:39:46.924" endtime="20240424 19:39:46.962"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:39:46.962" endtime="20240424 19:39:46.990"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:46.990" endtime="20240424 19:39:46.992"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:39:46.992" endtime="20240424 19:39:47.407"/>
</kw>
<status status="PASS" starttime="20240424 19:39:46.992" endtime="20240424 19:39:47.407"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:39:47.407" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:39:47.407" endtime="20240424 19:39:47.407"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:39:47.407" endtime="20240424 19:39:47.407"/>
</return>
<msg timestamp="20240424 19:39:47.407" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:39:47.407" endtime="20240424 19:39:47.407"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:39:47.407" endtime="20240424 19:39:47.898"/>
</kw>
<status status="PASS" starttime="20240424 19:39:47.407" endtime="20240424 19:39:47.898"/>
</kw>
<status status="PASS" starttime="20240424 19:39:47.407" endtime="20240424 19:39:47.898"/>
</branch>
<status status="PASS" starttime="20240424 19:39:47.407" endtime="20240424 19:39:47.898"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:39:47.898" endtime="20240424 19:39:47.898"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:39:47.898" endtime="20240424 19:39:47.898"/>
</branch>
<status status="PASS" starttime="20240424 19:39:47.898" endtime="20240424 19:39:47.898"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:39:47.898" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\pdf</msg>
<msg timestamp="20240424 19:39:47.898" level="INFO">${filename} = Floor Plan-Ground Floor_100.pdf</msg>
<status status="PASS" starttime="20240424 19:39:47.898" endtime="20240424 19:39:47.898"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:39:47.898" level="INFO">${filename} = Floor Plan-Ground Floor_100</msg>
<msg timestamp="20240424 19:39:47.898" level="INFO">${ext} = pdf</msg>
<status status="PASS" starttime="20240424 19:39:47.898" endtime="20240424 19:39:47.898"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<status status="NOT RUN" starttime="20240424 19:39:47.898" endtime="20240424 19:39:47.898"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:39:47.898" endtime="20240424 19:39:47.898"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:39:47.898" endtime="20240424 19:39:48.018"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:48.018" endtime="20240424 19:39:48.392"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:48.392" endtime="20240424 19:39:48.399"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:48.399" endtime="20240424 19:39:48.604"/>
</kw>
<status status="PASS" starttime="20240424 19:39:48.018" endtime="20240424 19:39:48.604"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:39:48.604" endtime="20240424 19:39:48.659"/>
</kw>
<status status="PASS" starttime="20240424 19:39:48.604" endtime="20240424 19:39:48.659"/>
</kw>
<msg timestamp="20240424 19:39:48.659" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:39:48.604" endtime="20240424 19:39:48.659"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:39:48.659" endtime="20240424 19:39:48.667"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:39:48.667" endtime="20240424 19:39:48.780"/>
</kw>
<status status="PASS" starttime="20240424 19:39:48.659" endtime="20240424 19:39:48.780"/>
</branch>
<status status="PASS" starttime="20240424 19:39:48.659" endtime="20240424 19:39:48.780"/>
</if>
<status status="PASS" starttime="20240424 19:39:47.898" endtime="20240424 19:39:48.780"/>
</kw>
<status status="PASS" starttime="20240424 19:39:47.898" endtime="20240424 19:39:48.780"/>
</branch>
<status status="PASS" starttime="20240424 19:39:47.898" endtime="20240424 19:39:48.780"/>
</if>
<status status="PASS" starttime="20240424 19:39:46.838" endtime="20240424 19:39:48.780"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${modelname}</var>
<arg>Floor Plan-Ground Floor_100</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240424 19:39:48.780" level="INFO">${modelname} = Floor Plan-Ground Floor_100</msg>
<status status="PASS" starttime="20240424 19:39:48.780" endtime="20240424 19:39:48.780"/>
</kw>
<status status="PASS" starttime="20240424 19:39:46.838" endtime="20240424 19:39:48.780"/>
</branch>
<branch type="ELSE IF" condition="'${filetype}' == 'smc'">
<kw name="Join Path" library="OperatingSystem">
<var>${filename}</var>
<arg>${models_folder}</arg>
<arg>Solibri Building.smc</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<status status="NOT RUN" starttime="20240424 19:39:48.780" endtime="20240424 19:39:48.780"/>
</kw>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${filename}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:39:48.780" endtime="20240424 19:39:48.780"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${modelname}</var>
<arg>(ARC) Solibri Building</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240424 19:39:48.780" endtime="20240424 19:39:48.780"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:39:48.780" endtime="20240424 19:39:48.780"/>
</branch>
<status status="PASS" starttime="20240424 19:39:46.838" endtime="20240424 19:39:48.780"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${modelname}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240424 19:39:48.780" level="INFO">${modelname} = Floor Plan-Ground Floor_100</msg>
<status status="PASS" starttime="20240424 19:39:48.780" endtime="20240424 19:39:48.780"/>
</kw>
<status status="PASS" starttime="20240424 19:39:46.838" endtime="20240424 19:39:48.780"/>
</kw>
<kw name="Then Model Tree Should Have Correct Model" library="model_handling_flow_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:48.780" endtime="20240424 19:39:48.839"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:48.839" endtime="20240424 19:39:48.842"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:48.842" endtime="20240424 19:39:48.901"/>
</kw>
<status status="PASS" starttime="20240424 19:39:48.780" endtime="20240424 19:39:48.901"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${COMPONENT_HIERARCHY_PANEL}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:39:48.901" endtime="20240424 19:39:48.905"/>
</kw>
<kw name="Switch to Containment Hierarchy" library="ModelTreeResource">
<doc>Opens Containment tree in Component hierarchy ModelViewComponentHierarchyPanel</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:48.905" endtime="20240424 19:39:48.967"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:39:48.967" endtime="20240424 19:39:49.155"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${select_containment_hierarchy}</var>
<arg>Toggle Button Should Be Selected</arg>
<arg>2</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Toggle Button Should Be Selected" library="SwingRobot">
<arg>2</arg>
<doc>Fails if toggle button is not selected.</doc>
<status status="PASS" starttime="20240424 19:39:49.155" endtime="20240424 19:39:49.155"/>
</kw>
<msg timestamp="20240424 19:39:49.155" level="INFO">${select_containment_hierarchy} = True</msg>
<status status="PASS" starttime="20240424 19:39:49.155" endtime="20240424 19:39:49.155"/>
</kw>
<if>
<branch type="IF" condition="${select_containment_hierarchy} == ${False}">
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:39:49.155" endtime="20240424 19:39:49.155"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:39:49.155" endtime="20240424 19:39:49.155"/>
</branch>
<status status="PASS" starttime="20240424 19:39:49.155" endtime="20240424 19:39:49.155"/>
</if>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:39:49.155" endtime="20240424 19:39:49.155"/>
</kw>
<status status="PASS" starttime="20240424 19:39:48.905" endtime="20240424 19:39:49.155"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>ContainmentTree</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:39:49.171" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:39:49.155" endtime="20240424 19:39:49.171"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>ContainmentTree</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:39:49.171" endtime="20240424 19:39:49.198"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${modelname_in_modeltree}</var>
<arg>ContainmentTree</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:39:49.245" level="INFO">${modelname_in_modeltree} = Floor Plan-Ground Floor_100</msg>
<status status="PASS" starttime="20240424 19:39:49.198" endtime="20240424 19:39:49.246"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${modelname}</arg>
<arg>${modelname_in_modeltree}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:39:49.246" endtime="20240424 19:39:49.246"/>
</kw>
<status status="PASS" starttime="20240424 19:39:48.780" endtime="20240424 19:39:49.246"/>
</kw>
<status status="PASS" starttime="20240424 19:39:44.219" endtime="20240424 19:39:49.247"/>
</kw>
<kw name="Clean Up" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>ScreenCapLibrary.Take Screenshot</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20240424 19:39:49.247" endtime="20240424 19:39:49.247"/>
</kw>
<kw name="Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:39:49.248" endtime="20240424 19:39:49.366"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:49.366" endtime="20240424 19:39:49.386"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:49.386" endtime="20240424 19:39:49.395"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:49.395" endtime="20240424 19:39:49.429"/>
</kw>
<status status="PASS" starttime="20240424 19:39:49.366" endtime="20240424 19:39:49.429"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:39:49.429" endtime="20240424 19:39:49.589"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:39:49.589" endtime="20240424 19:39:49.595"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:39:59.610" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:39:49.595" endtime="20240424 19:39:59.610"/>
</kw>
<msg timestamp="20240424 19:39:59.610" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:39:49.595" endtime="20240424 19:39:59.610"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:39:59.610" endtime="20240424 19:39:59.610"/>
</kw>
<msg timestamp="20240424 19:39:59.610" level="INFO">${check_if_save_asked} = True</msg>
<status status="PASS" starttime="20240424 19:39:59.610" endtime="20240424 19:39:59.610"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:39:59.610" endtime="20240424 19:39:59.621"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:39:59.621" endtime="20240424 19:39:59.717"/>
</kw>
<status status="PASS" starttime="20240424 19:39:59.610" endtime="20240424 19:39:59.717"/>
</kw>
<status status="PASS" starttime="20240424 19:39:59.610" endtime="20240424 19:39:59.717"/>
</branch>
<status status="PASS" starttime="20240424 19:39:59.610" endtime="20240424 19:39:59.717"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:39:59.717" endtime="20240424 19:39:59.717"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:39:59.717" endtime="20240424 19:39:59.717"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:39:59.717" endtime="20240424 19:39:59.717"/>
</branch>
<status status="PASS" starttime="20240424 19:39:59.717" endtime="20240424 19:39:59.717"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:59.717" endtime="20240424 19:39:59.762"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:39:59.762" endtime="20240424 19:39:59.784"/>
</kw>
<status status="PASS" starttime="20240424 19:39:59.762" endtime="20240424 19:39:59.784"/>
</kw>
<status status="PASS" starttime="20240424 19:39:49.248" endtime="20240424 19:39:59.784"/>
</kw>
<status status="PASS" starttime="20240424 19:39:49.247" endtime="20240424 19:39:59.784"/>
</kw>
<doc>Test to open PDF file from file chooser</doc>
<tag>pdf</tag>
<tag>tag</tag>
<status status="PASS" starttime="20240424 19:39:44.074" endtime="20240424 19:39:59.784"/>
</test>
<test id="s1-s1-t3" name="Opening SMC Model File From File Chooser" line="34">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:59.784" endtime="20240424 19:39:59.801"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:39:59.801" endtime="20240424 19:39:59.910"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:59.910" endtime="20240424 19:39:59.910"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:59.910" endtime="20240424 19:39:59.920"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:59.920" endtime="20240424 19:39:59.990"/>
</kw>
<status status="PASS" starttime="20240424 19:39:59.910" endtime="20240424 19:39:59.990"/>
</kw>
<status status="PASS" starttime="20240424 19:39:59.784" endtime="20240424 19:39:59.990"/>
</kw>
<status status="PASS" starttime="20240424 19:39:59.784" endtime="20240424 19:39:59.990"/>
</kw>
<kw name="Scenario Outline Opening Model File From File Chooser">
<arg>smc</arg>
<kw name="Given No Existing Model Is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:59.990" endtime="20240424 19:39:59.990"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:39:59.990" endtime="20240424 19:39:59.990"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:39:59.990" endtime="20240424 19:40:00.002"/>
</kw>
<status status="PASS" starttime="20240424 19:39:59.990" endtime="20240424 19:40:00.002"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:40:00.002" endtime="20240424 19:40:00.018"/>
</kw>
<status status="PASS" starttime="20240424 19:40:00.002" endtime="20240424 19:40:00.018"/>
</kw>
<msg timestamp="20240424 19:40:00.018" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 19:40:00.002" endtime="20240424 19:40:00.018"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:40:00.018" endtime="20240424 19:40:00.018"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:40:00.018" endtime="20240424 19:40:00.018"/>
</branch>
<status status="PASS" starttime="20240424 19:40:00.018" endtime="20240424 19:40:00.018"/>
</if>
<status status="PASS" starttime="20240424 19:39:59.990" endtime="20240424 19:40:00.018"/>
</kw>
<kw name="And File Layout Is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:00.018" endtime="20240424 19:40:00.024"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:40:00.024" endtime="20240424 19:40:00.024"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:00.024" endtime="20240424 19:40:00.041"/>
</kw>
<status status="PASS" starttime="20240424 19:40:00.018" endtime="20240424 19:40:00.041"/>
</kw>
<status status="PASS" starttime="20240424 19:40:00.018" endtime="20240424 19:40:00.041"/>
</kw>
<kw name="And Open BIM Validation Role" library="information_take_off_step_definitions">
<kw name="Open &quot;BIM Validation - Architectural.xml&quot; Role" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:00.042" endtime="20240424 19:40:00.112"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Roles_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:40:00.112" endtime="20240424 19:40:00.231"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open Role</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:40:00.231" endtime="20240424 19:40:01.273"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Dialog Should Be Open</arg>
<arg>Open Role</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Open Role</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:40:01.273" endtime="20240424 19:40:01.276"/>
</kw>
<status status="PASS" starttime="20240424 19:40:01.273" endtime="20240424 19:40:01.276"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open Role</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:40:01.276" endtime="20240424 19:40:01.292"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Files</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:40:01.292" endtime="20240424 19:40:01.360"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${role_with_path}</var>
<arg>${roles_folder}</arg>
<arg>BIM Validation - Architectural.xml</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:40:01.360" level="INFO">${role_with_path} = C:\users\public\Solibri\SOLIBRI\Roles\BIM Validation - Architectural.xml</msg>
<status status="PASS" starttime="20240424 19:40:01.360" endtime="20240424 19:40:01.360"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${role_with_path}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:40:01.360" endtime="20240424 19:40:01.477"/>
</kw>
<status status="PASS" starttime="20240424 19:40:00.042" endtime="20240424 19:40:01.477"/>
</kw>
<status status="PASS" starttime="20240424 19:40:00.041" endtime="20240424 19:40:01.477"/>
</kw>
<kw name="And Restore Default Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:01.477" endtime="20240424 19:40:01.485"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:01.485" endtime="20240424 19:40:01.549"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:40:01.549" endtime="20240424 19:40:01.551"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:01.551" endtime="20240424 19:40:01.569"/>
</kw>
<status status="PASS" starttime="20240424 19:40:01.485" endtime="20240424 19:40:01.569"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:40:01.569" endtime="20240424 19:40:01.852"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Layouts</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:40:01.852" endtime="20240424 19:40:01.866"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Layouts</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:40:01.866" endtime="20240424 19:40:02.146"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Push Button</arg>
<arg>Restore</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:40:02.146" endtime="20240424 19:40:02.150"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Restore</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:40:02.150" endtime="20240424 19:40:02.471"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:40:02.471" endtime="20240424 19:40:02.771"/>
</kw>
<status status="PASS" starttime="20240424 19:40:01.477" endtime="20240424 19:40:02.771"/>
</kw>
<kw name="When File Is Open From File Chooser" library="ModelHandlingResource">
<arg>${filetype}</arg>
<if>
<branch type="IF" condition="'${filetype}' == 'ifc'">
<kw name="Join Path" library="OperatingSystem">
<var>${filename}</var>
<arg>${ifc_folder}</arg>
<arg>Solibri Building.ifc</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<status status="NOT RUN" starttime="20240424 19:40:02.771" endtime="20240424 19:40:02.771"/>
</kw>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${filename}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:40:02.771" endtime="20240424 19:40:02.771"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${modelname}</var>
<arg>Solibri Building</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240424 19:40:02.771" endtime="20240424 19:40:02.771"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:40:02.771" endtime="20240424 19:40:02.771"/>
</branch>
<branch type="ELSE IF" condition="'${filetype}' == 'pdf'">
<kw name="Join Path" library="OperatingSystem">
<var>${filename}</var>
<arg>${pdf_folder}</arg>
<arg>Floor Plan-Ground Floor_100.pdf</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<status status="NOT RUN" starttime="20240424 19:40:02.771" endtime="20240424 19:40:02.771"/>
</kw>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${filename}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:40:02.771" endtime="20240424 19:40:02.771"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${modelname}</var>
<arg>Floor Plan-Ground Floor_100</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240424 19:40:02.771" endtime="20240424 19:40:02.771"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:40:02.771" endtime="20240424 19:40:02.771"/>
</branch>
<branch type="ELSE IF" condition="'${filetype}' == 'smc'">
<kw name="Join Path" library="OperatingSystem">
<var>${filename}</var>
<arg>${models_folder}</arg>
<arg>Solibri Building.smc</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:40:02.771" level="INFO">${filename} = C:\users\public\Solibri\SOLIBRI\Samples\models\Solibri Building.smc</msg>
<status status="PASS" starttime="20240424 19:40:02.771" endtime="20240424 19:40:02.771"/>
</kw>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${filename}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:02.771" endtime="20240424 19:40:02.901"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:40:02.903" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:40:02.901" endtime="20240424 19:40:02.903"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:40:02.903" endtime="20240424 19:40:02.903"/>
</kw>
<status status="PASS" starttime="20240424 19:40:02.901" endtime="20240424 19:40:02.903"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:02.903" endtime="20240424 19:40:02.951"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:40:02.951" endtime="20240424 19:40:02.951"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:02.951" endtime="20240424 19:40:02.958"/>
</kw>
<status status="PASS" starttime="20240424 19:40:02.903" endtime="20240424 19:40:02.958"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:40:02.958" endtime="20240424 19:40:02.972"/>
</kw>
<status status="PASS" starttime="20240424 19:40:02.958" endtime="20240424 19:40:02.972"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:40:02.972" endtime="20240424 19:40:03.047"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:40:03.047" endtime="20240424 19:40:03.047"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:40:03.047" endtime="20240424 19:40:03.436"/>
</kw>
<status status="PASS" starttime="20240424 19:40:03.047" endtime="20240424 19:40:03.436"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:40:03.436" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:40:03.436" endtime="20240424 19:40:03.436"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:40:03.436" endtime="20240424 19:40:03.436"/>
</return>
<msg timestamp="20240424 19:40:03.436" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:40:03.436" endtime="20240424 19:40:03.436"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:40:03.436" endtime="20240424 19:40:03.777"/>
</kw>
<status status="PASS" starttime="20240424 19:40:03.436" endtime="20240424 19:40:03.777"/>
</kw>
<status status="PASS" starttime="20240424 19:40:03.436" endtime="20240424 19:40:03.777"/>
</branch>
<status status="PASS" starttime="20240424 19:40:03.436" endtime="20240424 19:40:03.777"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:40:03.777" endtime="20240424 19:40:03.777"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:40:03.777" endtime="20240424 19:40:03.777"/>
</branch>
<status status="PASS" starttime="20240424 19:40:03.777" endtime="20240424 19:40:03.777"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:40:03.777" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\models</msg>
<msg timestamp="20240424 19:40:03.777" level="INFO">${filename} = Solibri Building.smc</msg>
<status status="PASS" starttime="20240424 19:40:03.777" endtime="20240424 19:40:03.777"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:40:03.777" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 19:40:03.777" level="INFO">${ext} = smc</msg>
<status status="PASS" starttime="20240424 19:40:03.777" endtime="20240424 19:40:03.777"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:03.777" endtime="20240424 19:40:03.785"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:40:03.785" endtime="20240424 19:40:03.816"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:03.816" endtime="20240424 19:40:04.492"/>
</kw>
<status status="PASS" starttime="20240424 19:40:03.777" endtime="20240424 19:40:04.492"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<msg timestamp="20240424 19:40:05.641" level="INFO">Deleted 14 Visualizations</msg>
<status status="PASS" starttime="20240424 19:40:04.492" endtime="20240424 19:40:05.641"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${COMPONENT_HIERARCHY_PANEL}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:40:05.641" endtime="20240424 19:40:05.645"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>ContainmentTree</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:40:05.648" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:40:05.645" endtime="20240424 19:40:05.648"/>
</kw>
<if>
<branch type="IF" condition="${row_count} &gt; ${0}">
<kw name="Evaluate" library="BuiltIn">
<var>${row_count}</var>
<arg>${row_count}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:40:05.648" level="INFO">${row_count} = 0</msg>
<status status="PASS" starttime="20240424 19:40:05.648" endtime="20240424 19:40:05.648"/>
</kw>
<status status="PASS" starttime="20240424 19:40:05.648" endtime="20240424 19:40:05.648"/>
</branch>
<status status="PASS" starttime="20240424 19:40:05.648" endtime="20240424 19:40:05.648"/>
</if>
<status status="PASS" starttime="20240424 19:40:03.777" endtime="20240424 19:40:05.648"/>
</kw>
<status status="PASS" starttime="20240424 19:40:03.777" endtime="20240424 19:40:05.648"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<status status="NOT RUN" starttime="20240424 19:40:05.648" endtime="20240424 19:40:05.648"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:40:05.648" endtime="20240424 19:40:05.648"/>
</branch>
<status status="PASS" starttime="20240424 19:40:03.777" endtime="20240424 19:40:05.648"/>
</if>
<status status="PASS" starttime="20240424 19:40:02.771" endtime="20240424 19:40:05.648"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${modelname}</var>
<arg>(ARC) Solibri Building</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240424 19:40:05.648" level="INFO">${modelname} = (ARC) Solibri Building</msg>
<status status="PASS" starttime="20240424 19:40:05.648" endtime="20240424 19:40:05.648"/>
</kw>
<status status="PASS" starttime="20240424 19:40:02.771" endtime="20240424 19:40:05.648"/>
</branch>
<status status="PASS" starttime="20240424 19:40:02.771" endtime="20240424 19:40:05.648"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${modelname}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240424 19:40:05.648" level="INFO">${modelname} = (ARC) Solibri Building</msg>
<status status="PASS" starttime="20240424 19:40:05.648" endtime="20240424 19:40:05.648"/>
</kw>
<status status="PASS" starttime="20240424 19:40:02.771" endtime="20240424 19:40:05.648"/>
</kw>
<kw name="Then Model Tree Should Have Correct Model" library="model_handling_flow_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:05.648" endtime="20240424 19:40:05.658"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:40:05.658" endtime="20240424 19:40:05.660"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:05.660" endtime="20240424 19:40:05.660"/>
</kw>
<status status="PASS" starttime="20240424 19:40:05.648" endtime="20240424 19:40:05.660"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${COMPONENT_HIERARCHY_PANEL}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:40:05.660" endtime="20240424 19:40:05.660"/>
</kw>
<kw name="Switch to Containment Hierarchy" library="ModelTreeResource">
<doc>Opens Containment tree in Component hierarchy ModelViewComponentHierarchyPanel</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:05.660" endtime="20240424 19:40:05.672"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:40:05.672" endtime="20240424 19:40:05.766"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${select_containment_hierarchy}</var>
<arg>Toggle Button Should Be Selected</arg>
<arg>2</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Toggle Button Should Be Selected" library="SwingRobot">
<arg>2</arg>
<doc>Fails if toggle button is not selected.</doc>
<status status="PASS" starttime="20240424 19:40:05.766" endtime="20240424 19:40:05.766"/>
</kw>
<msg timestamp="20240424 19:40:05.766" level="INFO">${select_containment_hierarchy} = True</msg>
<status status="PASS" starttime="20240424 19:40:05.766" endtime="20240424 19:40:05.766"/>
</kw>
<if>
<branch type="IF" condition="${select_containment_hierarchy} == ${False}">
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:40:05.766" endtime="20240424 19:40:05.766"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:40:05.766" endtime="20240424 19:40:05.766"/>
</branch>
<status status="PASS" starttime="20240424 19:40:05.766" endtime="20240424 19:40:05.766"/>
</if>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:40:05.766" endtime="20240424 19:40:05.776"/>
</kw>
<status status="PASS" starttime="20240424 19:40:05.660" endtime="20240424 19:40:05.776"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>ContainmentTree</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:40:05.776" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:40:05.776" endtime="20240424 19:40:05.776"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>ContainmentTree</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:40:05.776" endtime="20240424 19:40:05.870"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${modelname_in_modeltree}</var>
<arg>ContainmentTree</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:40:05.920" level="INFO">${modelname_in_modeltree} = (ARC) Solibri Building</msg>
<status status="PASS" starttime="20240424 19:40:05.870" endtime="20240424 19:40:05.920"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${modelname}</arg>
<arg>${modelname_in_modeltree}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:40:05.920" endtime="20240424 19:40:05.920"/>
</kw>
<status status="PASS" starttime="20240424 19:40:05.648" endtime="20240424 19:40:05.920"/>
</kw>
<status status="PASS" starttime="20240424 19:39:59.990" endtime="20240424 19:40:05.920"/>
</kw>
<kw name="Clean Up" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>ScreenCapLibrary.Take Screenshot</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20240424 19:40:05.920" endtime="20240424 19:40:05.920"/>
</kw>
<kw name="Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:40:05.920" endtime="20240424 19:40:06.034"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:06.034" endtime="20240424 19:40:06.100"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:40:06.100" endtime="20240424 19:40:06.113"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:06.113" endtime="20240424 19:40:06.133"/>
</kw>
<status status="PASS" starttime="20240424 19:40:06.034" endtime="20240424 19:40:06.133"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:40:06.133" endtime="20240424 19:40:06.260"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:40:06.260" endtime="20240424 19:40:06.270"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:40:16.275" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:40:06.270" endtime="20240424 19:40:16.275"/>
</kw>
<msg timestamp="20240424 19:40:16.275" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:40:06.270" endtime="20240424 19:40:16.275"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:40:26.284" level="FAIL">Dialog 'Select' is not open</msg>
<status status="FAIL" starttime="20240424 19:40:16.275" endtime="20240424 19:40:26.284"/>
</kw>
<msg timestamp="20240424 19:40:26.284" level="INFO">${check_if_save_asked} = False</msg>
<status status="PASS" starttime="20240424 19:40:16.275" endtime="20240424 19:40:26.284"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:40:26.284" endtime="20240424 19:40:26.284"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:40:26.284" endtime="20240424 19:40:26.284"/>
</branch>
<status status="PASS" starttime="20240424 19:40:26.284" endtime="20240424 19:40:26.284"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:40:26.284" endtime="20240424 19:40:26.284"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:40:26.284" endtime="20240424 19:40:26.284"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:40:26.284" endtime="20240424 19:40:26.284"/>
</branch>
<status status="PASS" starttime="20240424 19:40:26.284" endtime="20240424 19:40:26.284"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:26.284" endtime="20240424 19:40:26.284"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:40:26.284" endtime="20240424 19:40:26.297"/>
</kw>
<status status="PASS" starttime="20240424 19:40:26.284" endtime="20240424 19:40:26.297"/>
</kw>
<status status="PASS" starttime="20240424 19:40:05.920" endtime="20240424 19:40:26.297"/>
</kw>
<status status="PASS" starttime="20240424 19:40:05.920" endtime="20240424 19:40:26.297"/>
</kw>
<doc>Test to open SMC model from file chooser</doc>
<tag>smc</tag>
<tag>tag</tag>
<status status="PASS" starttime="20240424 19:39:59.784" endtime="20240424 19:40:26.297"/>
</test>
<test id="s1-s1-t4" name="Opening an IFC file and saving it to model should work" line="40">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:26.297" endtime="20240424 19:40:26.297"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:40:26.297" endtime="20240424 19:40:26.410"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:26.410" endtime="20240424 19:40:26.410"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:40:26.410" endtime="20240424 19:40:26.410"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:26.410" endtime="20240424 19:40:26.424"/>
</kw>
<status status="PASS" starttime="20240424 19:40:26.410" endtime="20240424 19:40:26.424"/>
</kw>
<status status="PASS" starttime="20240424 19:40:26.297" endtime="20240424 19:40:26.424"/>
</kw>
<status status="PASS" starttime="20240424 19:40:26.297" endtime="20240424 19:40:26.424"/>
</kw>
<kw name="Given No Existing Model Is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:26.424" endtime="20240424 19:40:26.440"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:40:26.440" endtime="20240424 19:40:26.445"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:26.445" endtime="20240424 19:40:26.586"/>
</kw>
<status status="PASS" starttime="20240424 19:40:26.424" endtime="20240424 19:40:26.586"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:40:26.586" endtime="20240424 19:40:26.586"/>
</kw>
<status status="PASS" starttime="20240424 19:40:26.586" endtime="20240424 19:40:26.586"/>
</kw>
<msg timestamp="20240424 19:40:26.586" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 19:40:26.586" endtime="20240424 19:40:26.586"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:40:26.586" endtime="20240424 19:40:26.586"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:40:26.586" endtime="20240424 19:40:26.586"/>
</branch>
<status status="PASS" starttime="20240424 19:40:26.586" endtime="20240424 19:40:26.586"/>
</if>
<status status="PASS" starttime="20240424 19:40:26.424" endtime="20240424 19:40:26.586"/>
</kw>
<kw name="And File Layout Is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:26.586" endtime="20240424 19:40:26.586"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:40:26.586" endtime="20240424 19:40:26.711"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:26.711" endtime="20240424 19:40:26.716"/>
</kw>
<status status="PASS" starttime="20240424 19:40:26.586" endtime="20240424 19:40:26.716"/>
</kw>
<status status="PASS" starttime="20240424 19:40:26.586" endtime="20240424 19:40:26.716"/>
</kw>
<kw name="And IFC File Is Open" library="ModelHandlingResource">
<arg>${solibri_building_ifc}</arg>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${file_name_with_path}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:26.716" endtime="20240424 19:40:26.722"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:40:26.724" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:40:26.722" endtime="20240424 19:40:26.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:40:26.724" endtime="20240424 19:40:26.724"/>
</kw>
<status status="PASS" starttime="20240424 19:40:26.722" endtime="20240424 19:40:26.724"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:26.724" endtime="20240424 19:40:26.730"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:40:26.730" endtime="20240424 19:40:26.731"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:26.731" endtime="20240424 19:40:26.768"/>
</kw>
<status status="PASS" starttime="20240424 19:40:26.724" endtime="20240424 19:40:26.768"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:40:26.768" endtime="20240424 19:40:26.773"/>
</kw>
<status status="PASS" starttime="20240424 19:40:26.768" endtime="20240424 19:40:26.773"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:40:26.773" endtime="20240424 19:40:26.776"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:40:26.776" endtime="20240424 19:40:26.776"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:40:26.776" endtime="20240424 19:40:28.308"/>
</kw>
<status status="PASS" starttime="20240424 19:40:26.776" endtime="20240424 19:40:28.308"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:40:28.308" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:40:28.308" endtime="20240424 19:40:28.308"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:40:28.308" endtime="20240424 19:40:28.308"/>
</return>
<msg timestamp="20240424 19:40:28.308" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:40:28.308" endtime="20240424 19:40:28.308"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:40:28.308" endtime="20240424 19:40:28.628"/>
</kw>
<status status="PASS" starttime="20240424 19:40:28.308" endtime="20240424 19:40:28.628"/>
</kw>
<status status="PASS" starttime="20240424 19:40:28.308" endtime="20240424 19:40:28.628"/>
</branch>
<status status="PASS" starttime="20240424 19:40:28.308" endtime="20240424 19:40:28.628"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:40:28.628" endtime="20240424 19:40:28.628"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:40:28.628" endtime="20240424 19:40:28.628"/>
</branch>
<status status="PASS" starttime="20240424 19:40:28.628" endtime="20240424 19:40:28.628"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:40:28.644" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\ifc</msg>
<msg timestamp="20240424 19:40:28.644" level="INFO">${filename} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:40:28.628" endtime="20240424 19:40:28.644"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:40:28.644" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 19:40:28.644" level="INFO">${ext} = ifc</msg>
<status status="PASS" starttime="20240424 19:40:28.644" endtime="20240424 19:40:28.644"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<status status="NOT RUN" starttime="20240424 19:40:28.644" endtime="20240424 19:40:28.644"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:40:28.644" endtime="20240424 19:40:28.644"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:40:28.644" endtime="20240424 19:40:28.946"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:28.946" endtime="20240424 19:40:29.522"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:40:29.522" endtime="20240424 19:40:29.538"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:29.538" endtime="20240424 19:40:29.642"/>
</kw>
<status status="PASS" starttime="20240424 19:40:28.946" endtime="20240424 19:40:29.642"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:40:31.373" level="INFO">2024-04-24 19:40:29.701+0000 [Thread-182] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 0 ms.
2024-04-24 19:40:29.702+0000 [Thread-182] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 1074 ms (using 1 threads)
2024-04-24 19:40:29.749+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 45 ms
2024-04-24 19:40:30.795+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 1093 ms.</msg>
<status status="PASS" starttime="20240424 19:40:29.642" endtime="20240424 19:40:31.373"/>
</kw>
<status status="PASS" starttime="20240424 19:40:29.642" endtime="20240424 19:40:31.373"/>
</kw>
<msg timestamp="20240424 19:40:31.373" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:40:29.642" endtime="20240424 19:40:31.373"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:40:31.373" endtime="20240424 19:40:31.843"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:40:31.843" endtime="20240424 19:40:32.248"/>
</kw>
<status status="PASS" starttime="20240424 19:40:31.373" endtime="20240424 19:40:32.248"/>
</branch>
<status status="PASS" starttime="20240424 19:40:31.373" endtime="20240424 19:40:32.248"/>
</if>
<status status="PASS" starttime="20240424 19:40:28.644" endtime="20240424 19:40:32.249"/>
</kw>
<status status="PASS" starttime="20240424 19:40:28.644" endtime="20240424 19:40:32.249"/>
</branch>
<status status="PASS" starttime="20240424 19:40:28.644" endtime="20240424 19:40:32.249"/>
</if>
<status status="PASS" starttime="20240424 19:40:26.716" endtime="20240424 19:40:32.249"/>
</kw>
<status status="PASS" starttime="20240424 19:40:26.716" endtime="20240424 19:40:32.249"/>
</kw>
<kw name="When Model Is Saved To" library="model_handling_flow_step_definitions">
<arg>${test_files_folder}</arg>
<kw name="Save Model" library="ModelHandlingResource">
<arg>${button_save_title}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:32.250" endtime="20240424 19:40:32.254"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:40:32.254" endtime="20240424 19:40:32.366"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:32.367" endtime="20240424 19:40:32.370"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:40:32.370" endtime="20240424 19:40:32.373"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:32.373" endtime="20240424 19:40:32.376"/>
</kw>
<status status="PASS" starttime="20240424 19:40:32.366" endtime="20240424 19:40:32.377"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:40:32.377" endtime="20240424 19:40:32.479"/>
</kw>
<status status="PASS" starttime="20240424 19:40:32.377" endtime="20240424 19:40:32.479"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:40:32.480" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:40:32.479" endtime="20240424 19:40:32.480"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:40:32.480" endtime="20240424 19:40:32.480"/>
</return>
<msg timestamp="20240424 19:40:32.480" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20240424 19:40:32.479" endtime="20240424 19:40:32.480"/>
</kw>
<if>
<branch type="IF" condition="'${os}' == 'Windows'">
<kw name="Check If File Already Exists" library="ModelHandlingResource">
<var>${file_exists}</var>
<arg>${test_files_folder}\\Solibri Building.smc</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${file_exist}</var>
<arg>File Should Exist</arg>
<arg>${filename_to_check}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${filename_to_check}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20240424 19:40:32.482" level="FAIL">File 'C:\Users\runneradmin\Documents\RFTestFiles\Solibri Building.smc' does not exist.</msg>
<status status="FAIL" starttime="20240424 19:40:32.482" endtime="20240424 19:40:32.482"/>
</kw>
<msg timestamp="20240424 19:40:32.482" level="INFO">${file_exist} = False</msg>
<status status="PASS" starttime="20240424 19:40:32.481" endtime="20240424 19:40:32.482"/>
</kw>
<return>
<value>${file_exist}</value>
<status status="PASS" starttime="20240424 19:40:32.482" endtime="20240424 19:40:32.482"/>
</return>
<msg timestamp="20240424 19:40:32.483" level="INFO">${file_exists} = False</msg>
<status status="PASS" starttime="20240424 19:40:32.481" endtime="20240424 19:40:32.483"/>
</kw>
<if>
<branch type="IF" condition="${file_exists}">
<kw name="Over Write File" library="ModelHandlingResource">
<arg>${test_files_folder}</arg>
<status status="NOT RUN" starttime="20240424 19:40:32.483" endtime="20240424 19:40:32.483"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:40:32.483" endtime="20240424 19:40:32.483"/>
</branch>
<branch type="ELSE">
<kw name="Click On Component" library="SwingRobot">
<arg>${save_button}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:40:32.483" endtime="20240424 19:40:32.488"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>2</arg>
<arg>Select Dialog</arg>
<arg>Save As</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:40:33.798" level="INFO">2024-04-24 19:40:32.502+0000 [Save model] WARN  c.s.s.p.c.c.CheckingState - invalid state transition asked, IdleState.requestStopChecking
2024-04-24 19:40:32.503+0000 [Save model] WARN  c.s.s.p.c.c.CheckingState - invalid state transition asked, IdleState.requestStopChecking</msg>
<status status="PASS" starttime="20240424 19:40:32.488" endtime="20240424 19:40:33.799"/>
</kw>
<status status="PASS" starttime="20240424 19:40:32.488" endtime="20240424 19:40:33.799"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${test_files_folder}\\Solibri Building.smc</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:40:33.799" endtime="20240424 19:40:33.969"/>
</kw>
<status status="PASS" starttime="20240424 19:40:32.483" endtime="20240424 19:40:33.969"/>
</branch>
<status status="PASS" starttime="20240424 19:40:32.483" endtime="20240424 19:40:33.969"/>
</if>
<status status="PASS" starttime="20240424 19:40:32.480" endtime="20240424 19:40:33.969"/>
</branch>
<status status="PASS" starttime="20240424 19:40:32.480" endtime="20240424 19:40:33.970"/>
</if>
<if>
<branch type="IF" condition="'${os}' == 'Darwin'">
<kw name="Get Length" library="BuiltIn">
<var>${length}</var>
<arg>${test_files_folder}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20240424 19:40:33.970" endtime="20240424 19:40:33.970"/>
</kw>
<if>
<branch type="IF" condition="${length} &gt; 0">
<kw name="Navigate To Folder" library="ModelHandlingResource">
<arg>${test_files_folder}</arg>
<tag>mac</tag>
<status status="NOT RUN" starttime="20240424 19:40:33.973" endtime="20240424 19:40:33.973"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:40:33.970" endtime="20240424 19:40:33.973"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:40:33.970" endtime="20240424 19:40:33.973"/>
</if>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${fileName}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<status status="NOT RUN" starttime="20240424 19:40:33.973" endtime="20240424 19:40:33.973"/>
</kw>
<kw name="Check If File Already Exists" library="ModelHandlingResource">
<var>${file_exists}</var>
<arg>${test_files_folder}/${fileName}</arg>
<status status="NOT RUN" starttime="20240424 19:40:33.973" endtime="20240424 19:40:33.973"/>
</kw>
<if>
<branch type="IF" condition="${file_exists}">
<kw name="Over Write File" library="ModelHandlingResource">
<arg>${test_files_folder}</arg>
<status status="NOT RUN" starttime="20240424 19:40:33.974" endtime="20240424 19:40:33.974"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:40:33.974" endtime="20240424 19:40:33.974"/>
</branch>
<branch type="ELSE">
<kw name="Click On Component" library="SwingRobot">
<arg>${save_button}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="NOT RUN" starttime="20240424 19:40:33.974" endtime="20240424 19:40:33.974"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:40:33.974" endtime="20240424 19:40:33.974"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Save As</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:40:33.975" endtime="20240424 19:40:33.975"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:40:33.974" endtime="20240424 19:40:33.975"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:40:33.974" endtime="20240424 19:40:33.975"/>
</if>
<status status="NOT RUN" starttime="20240424 19:40:33.970" endtime="20240424 19:40:33.975"/>
</branch>
<status status="PASS" starttime="20240424 19:40:33.970" endtime="20240424 19:40:33.975"/>
</if>
<kw name="Wait For Project To Save" library="ModelHandlingResource">
<kw name="Log To Console" library="BuiltIn">
<arg>Waiting For Project To Save</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:40:33.978" endtime="20240424 19:40:33.978"/>
</kw>
<kw name="Wait For Saving Progress To Complete" library="ModelHandlingResource">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:33.978" endtime="20240424 19:40:33.997"/>
</kw>
<kw name="List Components In Context" library="SwingRobot">
<arg>formatted</arg>
<doc>Prints components (their types and their internal names) from the selected context.</doc>
<msg timestamp="20240424 19:40:34.231" level="INFO">Level: 0 Component: com.solibri.saf.core.ApplicationFrame Index: 0 Name: frame0
    Level: 1 Component: javax.swing.JRootPane Index: 0 Name: null
       Level: 2 Component: javax.swing.JPanel Index: 0 Name: null.glassPane
       Level: 2 Component: javax.swing.JLayeredPane Index: 0 Name: null.layeredPane
          Level: 3 Component: com.solibri.modelchecker.ui.SmcPerspectivePanel Index: 1 Name: null
             Level: 4 Component: javax.swing.JPanel Index: 2 Name: null
                Level: 5 Component: javax.swing.JPanel Index: 3 Name: null
                   Level: 6 Component: com.solibri.saf.plugins.java3dplugin.actions.ThreeDViewToolbar Index: 4 Name: null
                      Level: 7 Component: com.solibri.saf.plugins.java3dplugin.actions.ThreeDViewToolbar$ToolbarWithThemeIconSize Index: null Name: 3D
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 0 Name: Undo
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 1 Name: Redo
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 2 Name: Spin
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 3 Name: dropDownButton
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 4 Name: Info
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 5 Name: dropDownButton
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 6 Name: Show All
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 7 Name: Show Unselected Transparent
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 8 Name: Show Selected
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 9 Name: Paint Visible With Current Color
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 10 Name: dropDownButton
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 11 Name: Show / Hide Space
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 12 Name: dropDownButton
                         Level: 8 Component: com.solibri.saf.plugins.java3dplugin.actions.FloorsVisibilityPopupMenuButton Index: 13 Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 14 Name: Zoom Extents
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 15 Name: Zoom In
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 16 Name: Zoom Out
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 17 Name: Zoom Selected
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 18 Name: Top Front Right
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 19 Name: dropDownButton
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 20 Name: Change Camera Projection
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$ToolBarToggleButton Index: 0 Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$ToolBarToggleButton Index: 1 Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 21 Name: null
                      Level: 7 Component: com.solibri.saf.core.ui.SearchField Index: 5 Name: null
                         Level: 8 Component: javax.swing.JTextField Index: 0 Name: null
                         Level: 8 Component: javax.swing.JButton Index: 22 Name: null
             Level: 4 Component: com.solibri.saf.core.ui.SafPanel Index: 6 Name: null
                Level: 5 Component: com.solibri.saf.core.ui.ViewSplitPane Index: 7 Name: null
                   Level: 6 Component: SMC_FILE Index: 8 Name: null
                      Level: 7 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel Index: 9 Name: FilePanel
                         Level: 8 Component: javax.swing.JPanel Index: 10 Name: null
                         Level: 8 Component: javax.swing.JToolBar Index: null Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$TransparentGradientPanel Index: 11 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 0 Name: Open Models
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 1 Name: Add Models
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 2 Name: Update Models
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 3 Name: Save Model
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 4 Name: Save Model as
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 5 Name: Security Settings
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 6 Name: Close
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 12 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 13 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 7 Name: Recent
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 8 Name: Integrations
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 9 Name: Roles
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 10 Name: Solution Center
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 11 Name: Settings
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 12 Name: Help
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 14 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 15 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 13 Name: Ruleset Manager
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 16 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 17 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 14 Name: Exit
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 18 Name: null
                         Level: 8 Component: com.solibri.saf.core.ui.SafPanel Index: 19 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.RecentPanel Index: 20 Name: RECENT
                               Level: 10 Component: com.solibri.saf.core.ui.ViewSplitPane Index: 21 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 22 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 15 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 0 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 0 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 23 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 24 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 1 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 25 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 26 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 0 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 0 Name: SafTable
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 0 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 1 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ViewSplitPane$Divider Index: 23 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 24 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 16 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 1 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 2 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 27 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 28 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 3 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 29 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 30 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 2 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 1 Name: SafTable
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 1 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 3 Name: null
                            Level: 9 Component: javax.swing.JPanel Index: 25 Name: REMOTE INTEGRATIONS
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 26 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 27 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 17 Name: null
                                     Level: 12 Component: javax.swing.JTextArea Index: 1 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 28 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 18 Name: null
                                     Level: 12 Component: com.solibri.saf.core.opencdedocuments.ConnectedServerLabel Index: 19 Name: null
                                     Level: 12 Component: javax.swing.JButton Index: 31 Name: null
                                     Level: 12 Component: javax.swing.JButton Index: 32 Name: null
                                     Level: 12 Component: javax.swing.JButton Index: 33 Name: null
                                     Level: 12 Component: com.solibri.saf.core.ui.SafPanel Index: 29 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 30 Name: null
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 31 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 20 Name: null
                                  Level: 11 Component: com.solibri.sae.ui.RoundedPanel Index: 32 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 2 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 4 Name: null
                                           Level: 14 Component: javax.swing.JPanel Index: 33 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 34 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 35 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 21 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 22 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 23 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 2 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 36 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 2 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 24 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 25 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 37 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 38 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 26 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 27 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 28 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 3 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 39 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 3 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 29 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 30 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 40 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 41 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 31 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 32 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 33 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 4 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 42 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 4 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 34 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 35 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 43 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 44 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 36 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 37 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 38 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 5 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 45 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 5 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 39 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 40 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 4 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 34 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 35 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 5 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 36 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 37 Name: null
                            Level: 9 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel Index: 46 Name: ROLES
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 47 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 41 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 42 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 43 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 44 Name: null
                                  Level: 11 Component: javax.swing.JTextField Index: 6 Name: roleNameText
                                  Level: 11 Component: com.solibri.saf.core.ui.HtmlEditorPanel Index: 48 Name: null
                                     Level: 12 Component: com.solibri.saf.core.DefaultViewToolBar Index: null Name: 
                                        Level: 13 Component: com.solibri.sae.ui.ToolBarButton Index: 38 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 3 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 5 Name: null
                                           Level: 14 Component: javax.swing.JTextPane Index: 7 Name: roleDescription
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 6 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 39 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 40 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 7 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 41 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 42 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$FileChooserPanel Index: 49 Name: null
                                     Level: 12 Component: javax.swing.JTextField Index: 8 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 43 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$LayoutFileChooserPanel Index: 50 Name: null
                                     Level: 12 Component: javax.swing.JTextField Index: 9 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 44 Name: null
                                  Level: 11 Component: com.solibri.sae.ui.JDefaultButton Index: 45 Name: null
                                  Level: 11 Component: com.solibri.sae.ui.ToolBarButton Index: 46 Name: Remove Default Layout Set
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 51 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.ResourceTablePanel Index: 52 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 45 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 4 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 8 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 47 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 48 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 9 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 49 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 50 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 6 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 2 Name: RULESETS
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 2 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 7 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 51 Name: Add Rulesets...
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 52 Name: Remove Rulesets
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.ResourceTablePanel Index: 53 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 46 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 5 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 10 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 53 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 54 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 11 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 55 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 56 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 8 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 3 Name: CLASSIFICATIONS
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 3 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 9 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 57 Name: Add Classifications...
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 58 Name: Remove Classifications
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.ResourceTablePanel Index: 54 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 47 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 6 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 12 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 59 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 60 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 13 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 61 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 62 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 10 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 4 Name: ITOS
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 4 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 11 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 63 Name: Add Information Takeoff Definitions...
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 64 Name: Remove Information Takeoff Definitions
                               Level: 10 Component: javax.swing.JSeparator Index: null Name: null
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 55 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$NamedActionButton Index: 65 Name: Save
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$NamedActionButton Index: 66 Name: Save As
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$NamedActionButton Index: 67 Name: Revert
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.SolutionCenterPanel Index: 56 Name: Solibri Solution Center
                               Level: 10 Component: javax.swing.JScrollPane Index: 7 Name: null
                                  Level: 11 Component: javax.swing.JViewport Index: 12 Name: null
                                     Level: 12 Component: javax.swing.JPanel Index: 57 Name: null
                                        Level: 13 Component: com.solibri.saf.core.ui.AntialisedLabel Index: 48 Name: null
                                        Level: 13 Component: com.solibri.saf.core.ui.AntialisedLabel Index: 49 Name: null
                                        Level: 13 Component: javax.swing.JPanel Index: 58 Name: null
                                        Level: 13 Component: javax.swing.JPanel Index: 59 Name: null
                                  Level: 11 Component: javax.swing.JScrollPane$ScrollBar Index: 14 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 68 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 69 Name: null
                                  Level: 11 Component: javax.swing.JScrollPane$ScrollBar Index: 15 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 70 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 71 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 60 Name: null
                                  Level: 11 Component: javax.swing.JTextPane Index: 10 Name: null
                                  Level: 11 Component: javax.swing.JButton Index: 72 Name: null
                                  Level: 11 Component: javax.swing.JPanel Index: 61 Name: null
                                     Level: 12 Component: javax.swing.JTextPane Index: 11 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 62 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.AntialisedLabel Index: 50 Name: null
                                  Level: 11 Component: javax.swing.JProgressBar Index: null Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.SettingsPanel Index: 63 Name: SETTINGS
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 51 Name: Layouts
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 52 Name: General
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 53 Name: Units
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 54 Name: Proxy Server Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 55 Name: Report Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 56 Name: Discipline and Color Map...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 57 Name: Checking...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 58 Name: Info...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 59 Name: IFC Import Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 60 Name: Presentation...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 61 Name: 3D...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 62 Name: Dimension...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 63 Name: Markup...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 64 Name: Sectioning...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 65 Name: Footprints...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 66 Name: Navigation Map...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 67 Name: DWG Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 68 Name: Hyperlink Templates...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 69 Name: BCF Live Connector...
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.HelpPanel Index: 64 Name: HELP
                               Level: 10 Component: javax.swing.JPanel Index: 65 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 70 Name: Help
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 71 Name: &lt;html&gt;&lt;u&gt;Support&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 72 Name: &lt;html&gt;&lt;u&gt;Feedback&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 73 Name: &lt;html&gt;&lt;u&gt;Tutorials&lt;/u&gt;
                                  Level: 11 Component: javax.swing.JSeparator Index: null Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 74 Name: &lt;html&gt;&lt;u&gt;Solibri Solution Center&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 75 Name: &lt;html&gt;&lt;u&gt;Solibri&lt;/u&gt;
                                  Level: 11 Component: javax.swing.JSeparator Index: null Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 76 Name: &lt;html&gt;&lt;u&gt;Check for Updates&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 77 Name: License Key...
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 78 Name: Borrow License...
                                  Level: 11 Component: javax.swing.JSeparator Index: null Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 79 Name: License Agreement...
                               Level: 10 Component: com.solibri.modelchecker.plugins.fileplugin.ui.InfoPanel Index: 66 Name: INFO
             Level: 4 Component: com.solibri.modelchecker.core.SmcPerspective$1 Index: null Name: Searchbar
                Level: 5 Component: com.solibri.modelchecker.core.SmcPerspective$ToDoToolBarButton Index: 73 Name: null
                Level: 5 Component: com.solibri.sae.ui.ToolBarButton Index: 74 Name: VIEWS
                Level: 5 Component: javax.swing.JButton Index: 75 Name: null
             Level: 4 Component: javax.swing.JPanel Index: 67 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 80 Name: null
                Level: 5 Component: javax.swing.JPanel Index: 68 Name: progressPanel
                   Level: 6 Component: javax.swing.JPanel Index: 69 Name: progressBarAndLabelPanel
                      Level: 7 Component: javax.swing.JProgressBar Index: null Name: thebar
                      Level: 7 Component: javax.swing.JLabel Index: 81 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 82 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 83 Name: Task
                Level: 5 Component: javax.swing.JLabel Index: 84 Name: null
                Level: 5 Component: javax.swing.JPanel Index: 70 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 85 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 86 Name: Selected
                Level: 5 Component: javax.swing.JLabel Index: 87 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 88 Name: SlideTrackingId
                Level: 5 Component: javax.swing.JLabel Index: 89 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 90 Name: SlideStatus
                Level: 5 Component: javax.swing.JLabel Index: 91 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 92 Name: Slide
                Level: 5 Component: javax.swing.JLabel Index: 93 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 94 Name: Coordinates
                Level: 5 Component: javax.swing.JLabel Index: 95 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 96 Name: Location
             Level: 4 Component: javax.swing.JPanel Index: 71 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 97 Name: null
             Level: 4 Component: javax.swing.JToolBar Index: null Name: Solibri Office
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 98 Name: FILE
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 99 Name: MODEL
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 100 Name: CHECKING
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 101 Name: COMMUNICATION
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 102 Name: INFORMATION TAKEOFF
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 103 Name: BCF LIVE CONNECTOR
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 104 Name: SCORE
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 105 Name: AddLayoutButton
          Level: 3 Component: com.formdev.flatlaf.ui.FlatTitlePane Index: null Name: null
             Level: 4 Component: javax.swing.JPanel Index: 72 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 106 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$2 Index: null Name: null
             Level: 4 Component: com.formdev.flatlaf.ui.FlatTitlePane$1 Index: 107 Name: null
             Level: 4 Component: com.formdev.flatlaf.ui.FlatTitlePane$4 Index: 73 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 76 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 77 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 78 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 79 Name: null</msg>
<status status="PASS" starttime="20240424 19:40:33.998" endtime="20240424 19:40:34.232"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${OS}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:40:34.233" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:40:34.233" endtime="20240424 19:40:34.234"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:40:34.234" endtime="20240424 19:40:34.234"/>
</return>
<msg timestamp="20240424 19:40:34.234" level="INFO">${OS} = Windows</msg>
<status status="PASS" starttime="20240424 19:40:34.233" endtime="20240424 19:40:34.234"/>
</kw>
<if>
<branch type="IF" condition="'${OS}' == 'Windows'">
<while condition="${True}">
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:40:34.235" endtime="20240424 19:40:34.464"/>
</kw>
<msg timestamp="20240424 19:40:34.465" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:40:34.235" endtime="20240424 19:40:34.465"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:40:34.466" endtime="20240424 19:40:34.466"/>
</break>
<status status="NOT RUN" starttime="20240424 19:40:34.466" endtime="20240424 19:40:34.466"/>
</branch>
<status status="PASS" starttime="20240424 19:40:34.465" endtime="20240424 19:40:34.466"/>
</if>
<status status="PASS" starttime="20240424 19:40:34.234" endtime="20240424 19:40:34.466"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:40:34.467" endtime="20240424 19:40:34.915"/>
</kw>
<msg timestamp="20240424 19:40:34.915" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:40:34.466" endtime="20240424 19:40:34.915"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:40:34.915" endtime="20240424 19:40:34.915"/>
</break>
<status status="NOT RUN" starttime="20240424 19:40:34.915" endtime="20240424 19:40:34.915"/>
</branch>
<status status="PASS" starttime="20240424 19:40:34.915" endtime="20240424 19:40:34.915"/>
</if>
<status status="PASS" starttime="20240424 19:40:34.466" endtime="20240424 19:40:34.915"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:40:34.915" endtime="20240424 19:40:34.919"/>
</kw>
<msg timestamp="20240424 19:40:34.919" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:40:34.915" endtime="20240424 19:40:34.919"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:40:34.919" endtime="20240424 19:40:34.919"/>
</break>
<status status="NOT RUN" starttime="20240424 19:40:34.919" endtime="20240424 19:40:34.919"/>
</branch>
<status status="PASS" starttime="20240424 19:40:34.919" endtime="20240424 19:40:34.919"/>
</if>
<status status="PASS" starttime="20240424 19:40:34.915" endtime="20240424 19:40:34.919"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:40:34.919" endtime="20240424 19:40:34.971"/>
</kw>
<msg timestamp="20240424 19:40:34.971" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:40:34.919" endtime="20240424 19:40:34.971"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:40:34.971" endtime="20240424 19:40:34.971"/>
</break>
<status status="NOT RUN" starttime="20240424 19:40:34.971" endtime="20240424 19:40:34.971"/>
</branch>
<status status="PASS" starttime="20240424 19:40:34.971" endtime="20240424 19:40:34.971"/>
</if>
<status status="PASS" starttime="20240424 19:40:34.919" endtime="20240424 19:40:34.971"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:40:34.971" endtime="20240424 19:40:34.985"/>
</kw>
<msg timestamp="20240424 19:40:34.985" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:40:34.971" endtime="20240424 19:40:34.985"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:40:34.985" endtime="20240424 19:40:34.985"/>
</break>
<status status="NOT RUN" starttime="20240424 19:40:34.985" endtime="20240424 19:40:34.985"/>
</branch>
<status status="PASS" starttime="20240424 19:40:34.985" endtime="20240424 19:40:34.985"/>
</if>
<status status="PASS" starttime="20240424 19:40:34.971" endtime="20240424 19:40:34.985"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:40:34.985" endtime="20240424 19:40:35.112"/>
</kw>
<msg timestamp="20240424 19:40:35.112" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:40:34.985" endtime="20240424 19:40:35.112"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:40:35.112" endtime="20240424 19:40:35.112"/>
</break>
<status status="NOT RUN" starttime="20240424 19:40:35.112" endtime="20240424 19:40:35.112"/>
</branch>
<status status="PASS" starttime="20240424 19:40:35.112" endtime="20240424 19:40:35.112"/>
</if>
<status status="PASS" starttime="20240424 19:40:34.985" endtime="20240424 19:40:35.112"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:40:45.144" level="FAIL">Dialog 'Progress...' is not open</msg>
<status status="FAIL" starttime="20240424 19:40:35.112" endtime="20240424 19:40:45.144"/>
</kw>
<msg timestamp="20240424 19:40:45.144" level="INFO">${is_progress_dialog_displayed} = False</msg>
<status status="PASS" starttime="20240424 19:40:35.112" endtime="20240424 19:40:45.144"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="PASS" starttime="20240424 19:40:45.144" endtime="20240424 19:40:45.144"/>
</break>
<status status="PASS" starttime="20240424 19:40:45.144" endtime="20240424 19:40:45.144"/>
</branch>
<status status="PASS" starttime="20240424 19:40:45.144" endtime="20240424 19:40:45.144"/>
</if>
<status status="PASS" starttime="20240424 19:40:35.112" endtime="20240424 19:40:45.144"/>
</iter>
<status status="PASS" starttime="20240424 19:40:34.234" endtime="20240424 19:40:45.144"/>
</while>
<status status="PASS" starttime="20240424 19:40:34.234" endtime="20240424 19:40:45.144"/>
</branch>
<status status="PASS" starttime="20240424 19:40:34.234" endtime="20240424 19:40:45.144"/>
</if>
<if>
<branch type="IF" condition="'${OS}' == 'Darwin'">
<while condition="${True}">
<iter>
<kw name="Call Component Method" library="SwingRobot">
<var>${value}</var>
<arg>thebar</arg>
<arg>getValue</arg>
<doc>Calls a method from specified component.</doc>
<status status="NOT RUN" starttime="20240424 19:40:45.144" endtime="20240424 19:40:45.144"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Saving progress ${value}%</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240424 19:40:45.144" endtime="20240424 19:40:45.144"/>
</kw>
<if>
<branch type="IF" condition="'${value}' == '0'">
<break>
<status status="NOT RUN" starttime="20240424 19:40:45.144" endtime="20240424 19:40:45.144"/>
</break>
<status status="NOT RUN" starttime="20240424 19:40:45.144" endtime="20240424 19:40:45.144"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:40:45.144" endtime="20240424 19:40:45.144"/>
</if>
<status status="NOT RUN" starttime="20240424 19:40:45.144" endtime="20240424 19:40:45.144"/>
</iter>
<status status="NOT RUN" starttime="20240424 19:40:45.144" endtime="20240424 19:40:45.144"/>
</while>
<status status="NOT RUN" starttime="20240424 19:40:45.144" endtime="20240424 19:40:45.144"/>
</branch>
<status status="PASS" starttime="20240424 19:40:45.144" endtime="20240424 19:40:45.144"/>
</if>
<status status="PASS" starttime="20240424 19:40:33.978" endtime="20240424 19:40:45.144"/>
</kw>
<status status="PASS" starttime="20240424 19:40:33.975" endtime="20240424 19:40:45.144"/>
</kw>
<status status="PASS" starttime="20240424 19:40:32.250" endtime="20240424 19:40:45.144"/>
</kw>
<status status="PASS" starttime="20240424 19:40:32.249" endtime="20240424 19:40:45.144"/>
</kw>
<kw name="Then Model File Is Saved To Given Location" library="model_handling_flow_step_definitions">
<arg>${test_files_folder}</arg>
<arg>Solibri Building.smc</arg>
<kw name="List Files In Directory" library="OperatingSystem">
<var>@{list_of_files}</var>
<arg>${folder_path}</arg>
<doc>Wrapper for `List Directory` that returns only files.</doc>
<msg timestamp="20240424 19:40:45.144" level="INFO" html="true">Listing contents of directory '&lt;a href="file://C:\Users\runneradmin\Documents\RFTestFiles"&gt;C:\Users\runneradmin\Documents\RFTestFiles&lt;/a&gt;'.</msg>
<msg timestamp="20240424 19:40:45.144" level="INFO">2 files:
Solibri Building.smc
~$Solibri Building.smc</msg>
<msg timestamp="20240424 19:40:45.144" level="INFO">@{list_of_files} = [ Solibri Building.smc | ~$Solibri Building.smc ]</msg>
<status status="PASS" starttime="20240424 19:40:45.144" endtime="20240424 19:40:45.144"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${list_of_files}</arg>
<arg>${filename}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20240424 19:40:45.144" endtime="20240424 19:40:45.144"/>
</kw>
<status status="PASS" starttime="20240424 19:40:45.144" endtime="20240424 19:40:45.144"/>
</kw>
<kw name="Clean Up" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>ScreenCapLibrary.Take Screenshot</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20240424 19:40:45.144" endtime="20240424 19:40:45.144"/>
</kw>
<kw name="Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:40:45.144" endtime="20240424 19:40:45.263"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:45.263" endtime="20240424 19:40:45.263"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:40:45.263" endtime="20240424 19:40:45.270"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:40:45.270" endtime="20240424 19:40:45.273"/>
</kw>
<status status="PASS" starttime="20240424 19:40:45.263" endtime="20240424 19:40:45.273"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:40:45.274" endtime="20240424 19:40:45.345"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:40:45.345" endtime="20240424 19:40:45.367"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:40:55.384" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:40:45.367" endtime="20240424 19:40:55.384"/>
</kw>
<msg timestamp="20240424 19:40:55.384" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:40:45.367" endtime="20240424 19:40:55.384"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:41:05.388" level="FAIL">Dialog 'Select' is not open</msg>
<status status="FAIL" starttime="20240424 19:40:55.384" endtime="20240424 19:41:05.388"/>
</kw>
<msg timestamp="20240424 19:41:05.388" level="INFO">${check_if_save_asked} = False</msg>
<status status="PASS" starttime="20240424 19:40:55.384" endtime="20240424 19:41:05.388"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:41:05.388" endtime="20240424 19:41:05.388"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:41:05.388" endtime="20240424 19:41:05.388"/>
</branch>
<status status="PASS" starttime="20240424 19:41:05.388" endtime="20240424 19:41:05.388"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:41:05.388" endtime="20240424 19:41:05.388"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:41:05.388" endtime="20240424 19:41:05.388"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:41:05.388" endtime="20240424 19:41:05.388"/>
</branch>
<status status="PASS" starttime="20240424 19:41:05.388" endtime="20240424 19:41:05.388"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:05.388" endtime="20240424 19:41:05.403"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:41:05.403" endtime="20240424 19:41:05.432"/>
</kw>
<status status="PASS" starttime="20240424 19:41:05.403" endtime="20240424 19:41:05.432"/>
</kw>
<status status="PASS" starttime="20240424 19:40:45.144" endtime="20240424 19:41:05.432"/>
</kw>
<status status="PASS" starttime="20240424 19:40:45.144" endtime="20240424 19:41:05.432"/>
</kw>
<status status="PASS" starttime="20240424 19:40:26.297" endtime="20240424 19:41:05.432"/>
</test>
<test id="s1-s1-t5" name="Open SMC Model Save As SMC Model And Reopen Model" line="47">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:05.432" endtime="20240424 19:41:05.432"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:41:05.432" endtime="20240424 19:41:05.546"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:05.546" endtime="20240424 19:41:05.550"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:41:05.550" endtime="20240424 19:41:05.555"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:05.555" endtime="20240424 19:41:05.628"/>
</kw>
<status status="PASS" starttime="20240424 19:41:05.546" endtime="20240424 19:41:05.628"/>
</kw>
<status status="PASS" starttime="20240424 19:41:05.432" endtime="20240424 19:41:05.628"/>
</kw>
<status status="PASS" starttime="20240424 19:41:05.432" endtime="20240424 19:41:05.628"/>
</kw>
<kw name="Given No Existing Model Is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:05.628" endtime="20240424 19:41:05.631"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:41:05.631" endtime="20240424 19:41:05.631"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:05.631" endtime="20240424 19:41:05.639"/>
</kw>
<status status="PASS" starttime="20240424 19:41:05.628" endtime="20240424 19:41:05.639"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:41:05.639" endtime="20240424 19:41:05.732"/>
</kw>
<status status="PASS" starttime="20240424 19:41:05.639" endtime="20240424 19:41:05.732"/>
</kw>
<msg timestamp="20240424 19:41:05.732" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 19:41:05.639" endtime="20240424 19:41:05.732"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:41:05.732" endtime="20240424 19:41:05.732"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:41:05.732" endtime="20240424 19:41:05.732"/>
</branch>
<status status="PASS" starttime="20240424 19:41:05.732" endtime="20240424 19:41:05.732"/>
</if>
<status status="PASS" starttime="20240424 19:41:05.628" endtime="20240424 19:41:05.732"/>
</kw>
<kw name="And SMC Model Is Open" library="model_handling_flow_step_definitions">
<arg>${solibri_building_smc}</arg>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${modelname}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:05.732" endtime="20240424 19:41:05.732"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:41:05.732" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:41:05.732" endtime="20240424 19:41:05.732"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:41:05.732" endtime="20240424 19:41:05.732"/>
</kw>
<status status="PASS" starttime="20240424 19:41:05.732" endtime="20240424 19:41:05.732"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:05.732" endtime="20240424 19:41:05.732"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:41:05.732" endtime="20240424 19:41:05.747"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:05.747" endtime="20240424 19:41:05.755"/>
</kw>
<status status="PASS" starttime="20240424 19:41:05.732" endtime="20240424 19:41:05.755"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:41:05.755" endtime="20240424 19:41:05.764"/>
</kw>
<status status="PASS" starttime="20240424 19:41:05.755" endtime="20240424 19:41:05.764"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:41:05.764" endtime="20240424 19:41:05.769"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:41:05.769" endtime="20240424 19:41:05.769"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:41:05.769" endtime="20240424 19:41:07.160"/>
</kw>
<status status="PASS" starttime="20240424 19:41:05.769" endtime="20240424 19:41:07.160"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:41:07.160" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:41:07.160" endtime="20240424 19:41:07.160"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:41:07.160" endtime="20240424 19:41:07.160"/>
</return>
<msg timestamp="20240424 19:41:07.160" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:41:07.160" endtime="20240424 19:41:07.160"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:41:07.160" endtime="20240424 19:41:07.560"/>
</kw>
<status status="PASS" starttime="20240424 19:41:07.160" endtime="20240424 19:41:07.560"/>
</kw>
<status status="PASS" starttime="20240424 19:41:07.160" endtime="20240424 19:41:07.560"/>
</branch>
<status status="PASS" starttime="20240424 19:41:07.160" endtime="20240424 19:41:07.560"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:41:07.560" endtime="20240424 19:41:07.560"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:41:07.560" endtime="20240424 19:41:07.560"/>
</branch>
<status status="PASS" starttime="20240424 19:41:07.560" endtime="20240424 19:41:07.560"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:41:07.560" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\models</msg>
<msg timestamp="20240424 19:41:07.560" level="INFO">${filename} = Solibri Building.smc</msg>
<status status="PASS" starttime="20240424 19:41:07.560" endtime="20240424 19:41:07.560"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:41:07.560" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 19:41:07.560" level="INFO">${ext} = smc</msg>
<status status="PASS" starttime="20240424 19:41:07.560" endtime="20240424 19:41:07.560"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:07.560" endtime="20240424 19:41:07.595"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:41:07.595" endtime="20240424 19:41:07.647"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:07.647" endtime="20240424 19:41:07.708"/>
</kw>
<status status="PASS" starttime="20240424 19:41:07.560" endtime="20240424 19:41:07.708"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<msg timestamp="20240424 19:41:08.431" level="INFO">Deleted 14 Visualizations</msg>
<status status="PASS" starttime="20240424 19:41:07.708" endtime="20240424 19:41:08.431"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${COMPONENT_HIERARCHY_PANEL}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:41:08.431" endtime="20240424 19:41:08.476"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>ContainmentTree</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:41:08.496" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:41:08.476" endtime="20240424 19:41:08.496"/>
</kw>
<if>
<branch type="IF" condition="${row_count} &gt; ${0}">
<kw name="Evaluate" library="BuiltIn">
<var>${row_count}</var>
<arg>${row_count}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:41:08.496" level="INFO">${row_count} = 0</msg>
<status status="PASS" starttime="20240424 19:41:08.496" endtime="20240424 19:41:08.496"/>
</kw>
<status status="PASS" starttime="20240424 19:41:08.496" endtime="20240424 19:41:08.496"/>
</branch>
<status status="PASS" starttime="20240424 19:41:08.496" endtime="20240424 19:41:08.496"/>
</if>
<status status="PASS" starttime="20240424 19:41:07.560" endtime="20240424 19:41:08.496"/>
</kw>
<status status="PASS" starttime="20240424 19:41:07.560" endtime="20240424 19:41:08.496"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<status status="NOT RUN" starttime="20240424 19:41:08.496" endtime="20240424 19:41:08.496"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:41:08.496" endtime="20240424 19:41:08.496"/>
</branch>
<status status="PASS" starttime="20240424 19:41:07.560" endtime="20240424 19:41:08.496"/>
</if>
<status status="PASS" starttime="20240424 19:41:05.732" endtime="20240424 19:41:08.496"/>
</kw>
<status status="PASS" starttime="20240424 19:41:05.732" endtime="20240424 19:41:08.496"/>
</kw>
<kw name="Then Model Is Saved As Another Model" library="model_handling_flow_step_definitions">
<arg>${test_files_folder}</arg>
<kw name="Save Model" library="ModelHandlingResource">
<arg>${button_save_as_title}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:08.496" endtime="20240424 19:41:08.559"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:41:08.559" endtime="20240424 19:41:08.672"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:08.672" endtime="20240424 19:41:08.676"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:41:08.676" endtime="20240424 19:41:08.676"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:08.676" endtime="20240424 19:41:08.779"/>
</kw>
<status status="PASS" starttime="20240424 19:41:08.672" endtime="20240424 19:41:08.779"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:41:08.779" endtime="20240424 19:41:08.786"/>
</kw>
<status status="PASS" starttime="20240424 19:41:08.779" endtime="20240424 19:41:08.786"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:41:08.786" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:41:08.786" endtime="20240424 19:41:08.786"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:41:08.786" endtime="20240424 19:41:08.786"/>
</return>
<msg timestamp="20240424 19:41:08.786" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20240424 19:41:08.786" endtime="20240424 19:41:08.786"/>
</kw>
<if>
<branch type="IF" condition="'${os}' == 'Windows'">
<kw name="Check If File Already Exists" library="ModelHandlingResource">
<var>${file_exists}</var>
<arg>${test_files_folder}\\Solibri Building.smc</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${file_exist}</var>
<arg>File Should Exist</arg>
<arg>${filename_to_check}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${filename_to_check}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20240424 19:41:08.786" level="INFO" html="true">File '&lt;a href="file://C:\Users\runneradmin\Documents\RFTestFiles\Solibri Building.smc"&gt;C:\Users\runneradmin\Documents\RFTestFiles\Solibri Building.smc&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20240424 19:41:08.786" endtime="20240424 19:41:08.786"/>
</kw>
<msg timestamp="20240424 19:41:08.786" level="INFO">${file_exist} = True</msg>
<status status="PASS" starttime="20240424 19:41:08.786" endtime="20240424 19:41:08.786"/>
</kw>
<return>
<value>${file_exist}</value>
<status status="PASS" starttime="20240424 19:41:08.786" endtime="20240424 19:41:08.786"/>
</return>
<msg timestamp="20240424 19:41:08.786" level="INFO">${file_exists} = True</msg>
<status status="PASS" starttime="20240424 19:41:08.786" endtime="20240424 19:41:08.786"/>
</kw>
<if>
<branch type="IF" condition="${file_exists}">
<kw name="Over Write File" library="ModelHandlingResource">
<arg>${test_files_folder}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:08.786" endtime="20240424 19:41:08.793"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>Save Model as</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:41:08.793" endtime="20240424 19:41:08.797"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>2</arg>
<arg>Select Dialog</arg>
<arg>Save As</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:41:09.083" level="INFO">2024-04-24 19:41:08.796+0000 [Save as model] WARN  c.s.s.p.c.c.CheckingState - invalid state transition asked, IdleState.requestStopChecking</msg>
<status status="PASS" starttime="20240424 19:41:08.797" endtime="20240424 19:41:09.083"/>
</kw>
<status status="PASS" starttime="20240424 19:41:08.797" endtime="20240424 19:41:09.083"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${folder_to_save}\\Solibri Building.smc</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:41:09.083" endtime="20240424 19:41:09.272"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>2</arg>
<arg>Select Dialog</arg>
<arg>Confirm Save As</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Confirm Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:41:09.272" endtime="20240424 19:41:09.326"/>
</kw>
<status status="PASS" starttime="20240424 19:41:09.272" endtime="20240424 19:41:09.326"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Yes</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:41:09.326" endtime="20240424 19:41:09.367"/>
</kw>
<status status="PASS" starttime="20240424 19:41:08.786" endtime="20240424 19:41:09.367"/>
</kw>
<status status="PASS" starttime="20240424 19:41:08.786" endtime="20240424 19:41:09.367"/>
</branch>
<branch type="ELSE">
<kw name="Click On Component" library="SwingRobot">
<arg>${save_button}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="NOT RUN" starttime="20240424 19:41:09.367" endtime="20240424 19:41:09.367"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>2</arg>
<arg>Select Dialog</arg>
<arg>Save As</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20240424 19:41:09.367" endtime="20240424 19:41:09.367"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${test_files_folder}\\Solibri Building.smc</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="NOT RUN" starttime="20240424 19:41:09.367" endtime="20240424 19:41:09.367"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:41:09.367" endtime="20240424 19:41:09.367"/>
</branch>
<status status="PASS" starttime="20240424 19:41:08.786" endtime="20240424 19:41:09.367"/>
</if>
<status status="PASS" starttime="20240424 19:41:08.786" endtime="20240424 19:41:09.367"/>
</branch>
<status status="PASS" starttime="20240424 19:41:08.786" endtime="20240424 19:41:09.367"/>
</if>
<if>
<branch type="IF" condition="'${os}' == 'Darwin'">
<kw name="Get Length" library="BuiltIn">
<var>${length}</var>
<arg>${test_files_folder}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20240424 19:41:09.367" endtime="20240424 19:41:09.367"/>
</kw>
<if>
<branch type="IF" condition="${length} &gt; 0">
<kw name="Navigate To Folder" library="ModelHandlingResource">
<arg>${test_files_folder}</arg>
<tag>mac</tag>
<status status="NOT RUN" starttime="20240424 19:41:09.367" endtime="20240424 19:41:09.367"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:41:09.367" endtime="20240424 19:41:09.367"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:41:09.367" endtime="20240424 19:41:09.367"/>
</if>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${fileName}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<status status="NOT RUN" starttime="20240424 19:41:09.367" endtime="20240424 19:41:09.367"/>
</kw>
<kw name="Check If File Already Exists" library="ModelHandlingResource">
<var>${file_exists}</var>
<arg>${test_files_folder}/${fileName}</arg>
<status status="NOT RUN" starttime="20240424 19:41:09.367" endtime="20240424 19:41:09.367"/>
</kw>
<if>
<branch type="IF" condition="${file_exists}">
<kw name="Over Write File" library="ModelHandlingResource">
<arg>${test_files_folder}</arg>
<status status="NOT RUN" starttime="20240424 19:41:09.367" endtime="20240424 19:41:09.367"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:41:09.367" endtime="20240424 19:41:09.367"/>
</branch>
<branch type="ELSE">
<kw name="Click On Component" library="SwingRobot">
<arg>${save_button}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="NOT RUN" starttime="20240424 19:41:09.367" endtime="20240424 19:41:09.367"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:41:09.367" endtime="20240424 19:41:09.367"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Save As</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:41:09.367" endtime="20240424 19:41:09.367"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:41:09.367" endtime="20240424 19:41:09.367"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:41:09.367" endtime="20240424 19:41:09.367"/>
</if>
<status status="NOT RUN" starttime="20240424 19:41:09.367" endtime="20240424 19:41:09.367"/>
</branch>
<status status="PASS" starttime="20240424 19:41:09.367" endtime="20240424 19:41:09.367"/>
</if>
<kw name="Wait For Project To Save" library="ModelHandlingResource">
<kw name="Log To Console" library="BuiltIn">
<arg>Waiting For Project To Save</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:41:09.367" endtime="20240424 19:41:09.367"/>
</kw>
<kw name="Wait For Saving Progress To Complete" library="ModelHandlingResource">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:09.367" endtime="20240424 19:41:09.546"/>
</kw>
<kw name="List Components In Context" library="SwingRobot">
<arg>formatted</arg>
<doc>Prints components (their types and their internal names) from the selected context.</doc>
<msg timestamp="20240424 19:41:09.580" level="INFO">Level: 0 Component: com.solibri.saf.core.ApplicationFrame Index: 0 Name: frame0
    Level: 1 Component: javax.swing.JRootPane Index: 0 Name: null
       Level: 2 Component: javax.swing.JPanel Index: 0 Name: null.glassPane
       Level: 2 Component: javax.swing.JLayeredPane Index: 0 Name: null.layeredPane
          Level: 3 Component: com.solibri.modelchecker.ui.SmcPerspectivePanel Index: 1 Name: null
             Level: 4 Component: javax.swing.JPanel Index: 2 Name: null
                Level: 5 Component: javax.swing.JPanel Index: 3 Name: null
                   Level: 6 Component: com.solibri.saf.plugins.java3dplugin.actions.ThreeDViewToolbar Index: 4 Name: null
                      Level: 7 Component: com.solibri.saf.plugins.java3dplugin.actions.ThreeDViewToolbar$ToolbarWithThemeIconSize Index: null Name: 3D
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 0 Name: Undo
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 1 Name: Redo
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 2 Name: Spin
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 3 Name: dropDownButton
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 4 Name: Info
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 5 Name: dropDownButton
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 6 Name: Show All
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 7 Name: Show Unselected Transparent
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 8 Name: Show Selected
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 9 Name: Paint Visible With Current Color
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 10 Name: dropDownButton
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 11 Name: Show / Hide Space
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 12 Name: dropDownButton
                         Level: 8 Component: com.solibri.saf.plugins.java3dplugin.actions.FloorsVisibilityPopupMenuButton Index: 13 Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 14 Name: Zoom Extents
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 15 Name: Zoom In
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 16 Name: Zoom Out
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 17 Name: Zoom Selected
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 18 Name: Top Front Right
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 19 Name: dropDownButton
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 20 Name: Change Camera Projection
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$ToolBarToggleButton Index: 0 Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$ToolBarToggleButton Index: 1 Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 21 Name: null
                      Level: 7 Component: com.solibri.saf.core.ui.SearchField Index: 5 Name: null
                         Level: 8 Component: javax.swing.JTextField Index: 0 Name: null
                         Level: 8 Component: javax.swing.JButton Index: 22 Name: null
             Level: 4 Component: com.solibri.saf.core.ui.SafPanel Index: 6 Name: null
                Level: 5 Component: com.solibri.saf.core.ui.ViewSplitPane Index: 7 Name: null
                   Level: 6 Component: SMC_FILE Index: 8 Name: null
                      Level: 7 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel Index: 9 Name: FilePanel
                         Level: 8 Component: javax.swing.JPanel Index: 10 Name: null
                         Level: 8 Component: javax.swing.JToolBar Index: null Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$TransparentGradientPanel Index: 11 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 0 Name: Open Models
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 1 Name: Add Models
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 2 Name: Update Models
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 3 Name: Save Model
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 4 Name: Save Model as
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 5 Name: Security Settings
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 6 Name: Close
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 12 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 13 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 7 Name: Recent
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 8 Name: Integrations
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 9 Name: Roles
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 10 Name: Solution Center
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 11 Name: Settings
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 12 Name: Help
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 14 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 15 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 13 Name: Ruleset Manager
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 16 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 17 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 14 Name: Exit
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 18 Name: null
                         Level: 8 Component: com.solibri.saf.core.ui.SafPanel Index: 19 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.RecentPanel Index: 20 Name: RECENT
                               Level: 10 Component: com.solibri.saf.core.ui.ViewSplitPane Index: 21 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 22 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 15 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 0 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 0 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 23 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 24 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 1 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 25 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 26 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 0 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 0 Name: SafTable
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 0 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 1 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ViewSplitPane$Divider Index: 23 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 24 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 16 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 1 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 2 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 27 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 28 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 3 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 29 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 30 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 2 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 1 Name: SafTable
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 1 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 3 Name: null
                            Level: 9 Component: javax.swing.JPanel Index: 25 Name: REMOTE INTEGRATIONS
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 26 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 27 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 17 Name: null
                                     Level: 12 Component: javax.swing.JTextArea Index: 1 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 28 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 18 Name: null
                                     Level: 12 Component: com.solibri.saf.core.opencdedocuments.ConnectedServerLabel Index: 19 Name: null
                                     Level: 12 Component: javax.swing.JButton Index: 31 Name: null
                                     Level: 12 Component: javax.swing.JButton Index: 32 Name: null
                                     Level: 12 Component: javax.swing.JButton Index: 33 Name: null
                                     Level: 12 Component: com.solibri.saf.core.ui.SafPanel Index: 29 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 30 Name: null
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 31 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 20 Name: null
                                  Level: 11 Component: com.solibri.sae.ui.RoundedPanel Index: 32 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 2 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 4 Name: null
                                           Level: 14 Component: javax.swing.JPanel Index: 33 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 34 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 35 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 21 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 22 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 23 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 2 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 36 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 2 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 24 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 25 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 37 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 38 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 26 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 27 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 28 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 3 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 39 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 3 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 29 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 30 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 40 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 41 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 31 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 32 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 33 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 4 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 42 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 4 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 34 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 35 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 43 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 44 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 36 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 37 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 38 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 5 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 45 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 5 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 39 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 40 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 4 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 34 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 35 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 5 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 36 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 37 Name: null
                            Level: 9 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel Index: 46 Name: ROLES
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 47 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 41 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 42 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 43 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 44 Name: null
                                  Level: 11 Component: javax.swing.JTextField Index: 6 Name: roleNameText
                                  Level: 11 Component: com.solibri.saf.core.ui.HtmlEditorPanel Index: 48 Name: null
                                     Level: 12 Component: com.solibri.saf.core.DefaultViewToolBar Index: null Name: 
                                        Level: 13 Component: com.solibri.sae.ui.ToolBarButton Index: 38 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 3 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 5 Name: null
                                           Level: 14 Component: javax.swing.JTextPane Index: 7 Name: roleDescription
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 6 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 39 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 40 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 7 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 41 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 42 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$FileChooserPanel Index: 49 Name: null
                                     Level: 12 Component: javax.swing.JTextField Index: 8 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 43 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$LayoutFileChooserPanel Index: 50 Name: null
                                     Level: 12 Component: javax.swing.JTextField Index: 9 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 44 Name: null
                                  Level: 11 Component: com.solibri.sae.ui.JDefaultButton Index: 45 Name: null
                                  Level: 11 Component: com.solibri.sae.ui.ToolBarButton Index: 46 Name: Remove Default Layout Set
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 51 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.ResourceTablePanel Index: 52 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 45 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 4 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 8 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 47 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 48 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 9 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 49 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 50 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 6 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 2 Name: RULESETS
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 2 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 7 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 51 Name: Add Rulesets...
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 52 Name: Remove Rulesets
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.ResourceTablePanel Index: 53 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 46 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 5 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 10 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 53 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 54 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 11 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 55 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 56 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 8 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 3 Name: CLASSIFICATIONS
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 3 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 9 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 57 Name: Add Classifications...
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 58 Name: Remove Classifications
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.ResourceTablePanel Index: 54 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 47 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 6 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 12 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 59 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 60 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 13 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 61 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 62 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 10 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 4 Name: ITOS
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 4 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 11 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 63 Name: Add Information Takeoff Definitions...
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 64 Name: Remove Information Takeoff Definitions
                               Level: 10 Component: javax.swing.JSeparator Index: null Name: null
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 55 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$NamedActionButton Index: 65 Name: Save
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$NamedActionButton Index: 66 Name: Save As
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$NamedActionButton Index: 67 Name: Revert
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.SolutionCenterPanel Index: 56 Name: Solibri Solution Center
                               Level: 10 Component: javax.swing.JScrollPane Index: 7 Name: null
                                  Level: 11 Component: javax.swing.JViewport Index: 12 Name: null
                                     Level: 12 Component: javax.swing.JPanel Index: 57 Name: null
                                        Level: 13 Component: com.solibri.saf.core.ui.AntialisedLabel Index: 48 Name: null
                                        Level: 13 Component: com.solibri.saf.core.ui.AntialisedLabel Index: 49 Name: null
                                        Level: 13 Component: javax.swing.JPanel Index: 58 Name: null
                                        Level: 13 Component: javax.swing.JPanel Index: 59 Name: null
                                  Level: 11 Component: javax.swing.JScrollPane$ScrollBar Index: 14 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 68 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 69 Name: null
                                  Level: 11 Component: javax.swing.JScrollPane$ScrollBar Index: 15 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 70 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 71 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 60 Name: null
                                  Level: 11 Component: javax.swing.JTextPane Index: 10 Name: null
                                  Level: 11 Component: javax.swing.JButton Index: 72 Name: null
                                  Level: 11 Component: javax.swing.JPanel Index: 61 Name: null
                                     Level: 12 Component: javax.swing.JTextPane Index: 11 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 62 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.AntialisedLabel Index: 50 Name: null
                                  Level: 11 Component: javax.swing.JProgressBar Index: null Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.SettingsPanel Index: 63 Name: SETTINGS
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 51 Name: Layouts
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 52 Name: General
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 53 Name: Units
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 54 Name: Proxy Server Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 55 Name: Report Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 56 Name: Discipline and Color Map...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 57 Name: Checking...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 58 Name: Info...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 59 Name: IFC Import Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 60 Name: Presentation...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 61 Name: 3D...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 62 Name: Dimension...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 63 Name: Markup...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 64 Name: Sectioning...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 65 Name: Footprints...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 66 Name: Navigation Map...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 67 Name: DWG Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 68 Name: Hyperlink Templates...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 69 Name: BCF Live Connector...
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.HelpPanel Index: 64 Name: HELP
                               Level: 10 Component: javax.swing.JPanel Index: 65 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 70 Name: Help
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 71 Name: &lt;html&gt;&lt;u&gt;Support&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 72 Name: &lt;html&gt;&lt;u&gt;Feedback&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 73 Name: &lt;html&gt;&lt;u&gt;Tutorials&lt;/u&gt;
                                  Level: 11 Component: javax.swing.JSeparator Index: null Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 74 Name: &lt;html&gt;&lt;u&gt;Solibri Solution Center&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 75 Name: &lt;html&gt;&lt;u&gt;Solibri&lt;/u&gt;
                                  Level: 11 Component: javax.swing.JSeparator Index: null Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 76 Name: &lt;html&gt;&lt;u&gt;Check for Updates&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 77 Name: License Key...
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 78 Name: Borrow License...
                                  Level: 11 Component: javax.swing.JSeparator Index: null Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 79 Name: License Agreement...
                               Level: 10 Component: com.solibri.modelchecker.plugins.fileplugin.ui.InfoPanel Index: 66 Name: INFO
             Level: 4 Component: com.solibri.modelchecker.core.SmcPerspective$1 Index: null Name: Searchbar
                Level: 5 Component: com.solibri.modelchecker.core.SmcPerspective$ToDoToolBarButton Index: 73 Name: null
                Level: 5 Component: com.solibri.sae.ui.ToolBarButton Index: 74 Name: VIEWS
                Level: 5 Component: javax.swing.JButton Index: 75 Name: null
             Level: 4 Component: javax.swing.JPanel Index: 67 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 80 Name: null
                Level: 5 Component: javax.swing.JPanel Index: 68 Name: progressPanel
                   Level: 6 Component: javax.swing.JPanel Index: 69 Name: progressBarAndLabelPanel
                      Level: 7 Component: javax.swing.JProgressBar Index: null Name: thebar
                      Level: 7 Component: javax.swing.JLabel Index: 81 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 82 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 83 Name: Task
                Level: 5 Component: javax.swing.JLabel Index: 84 Name: null
                Level: 5 Component: javax.swing.JPanel Index: 70 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 85 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 86 Name: Selected
                Level: 5 Component: javax.swing.JLabel Index: 87 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 88 Name: SlideTrackingId
                Level: 5 Component: javax.swing.JLabel Index: 89 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 90 Name: SlideStatus
                Level: 5 Component: javax.swing.JLabel Index: 91 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 92 Name: Slide
                Level: 5 Component: javax.swing.JLabel Index: 93 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 94 Name: Coordinates
                Level: 5 Component: javax.swing.JLabel Index: 95 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 96 Name: Location
             Level: 4 Component: javax.swing.JPanel Index: 71 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 97 Name: null
             Level: 4 Component: javax.swing.JToolBar Index: null Name: Solibri Office
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 98 Name: FILE
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 99 Name: MODEL
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 100 Name: CHECKING
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 101 Name: COMMUNICATION
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 102 Name: INFORMATION TAKEOFF
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 103 Name: BCF LIVE CONNECTOR
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 104 Name: SCORE
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 105 Name: AddLayoutButton
          Level: 3 Component: com.formdev.flatlaf.ui.FlatTitlePane Index: null Name: null
             Level: 4 Component: javax.swing.JPanel Index: 72 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 106 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$2 Index: null Name: null
             Level: 4 Component: com.formdev.flatlaf.ui.FlatTitlePane$1 Index: 107 Name: null
             Level: 4 Component: com.formdev.flatlaf.ui.FlatTitlePane$4 Index: 73 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 76 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 77 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 78 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 79 Name: null</msg>
<status status="PASS" starttime="20240424 19:41:09.546" endtime="20240424 19:41:09.580"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${OS}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:41:09.580" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:41:09.580" endtime="20240424 19:41:09.580"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:41:09.580" endtime="20240424 19:41:09.580"/>
</return>
<msg timestamp="20240424 19:41:09.580" level="INFO">${OS} = Windows</msg>
<status status="PASS" starttime="20240424 19:41:09.580" endtime="20240424 19:41:09.580"/>
</kw>
<if>
<branch type="IF" condition="'${OS}' == 'Windows'">
<while condition="${True}">
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:09.580" endtime="20240424 19:41:09.700"/>
</kw>
<msg timestamp="20240424 19:41:09.700" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:09.580" endtime="20240424 19:41:09.700"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:09.700" endtime="20240424 19:41:09.700"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:09.700" endtime="20240424 19:41:09.700"/>
</branch>
<status status="PASS" starttime="20240424 19:41:09.700" endtime="20240424 19:41:09.700"/>
</if>
<status status="PASS" starttime="20240424 19:41:09.580" endtime="20240424 19:41:09.700"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:09.700" endtime="20240424 19:41:09.716"/>
</kw>
<msg timestamp="20240424 19:41:09.716" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:09.700" endtime="20240424 19:41:09.716"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:09.716" endtime="20240424 19:41:09.716"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:09.716" endtime="20240424 19:41:09.716"/>
</branch>
<status status="PASS" starttime="20240424 19:41:09.716" endtime="20240424 19:41:09.716"/>
</if>
<status status="PASS" starttime="20240424 19:41:09.700" endtime="20240424 19:41:09.716"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:09.716" endtime="20240424 19:41:09.764"/>
</kw>
<msg timestamp="20240424 19:41:09.764" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:09.716" endtime="20240424 19:41:09.764"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:09.764" endtime="20240424 19:41:09.764"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:09.764" endtime="20240424 19:41:09.764"/>
</branch>
<status status="PASS" starttime="20240424 19:41:09.764" endtime="20240424 19:41:09.764"/>
</if>
<status status="PASS" starttime="20240424 19:41:09.716" endtime="20240424 19:41:09.764"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:09.764" endtime="20240424 19:41:09.764"/>
</kw>
<msg timestamp="20240424 19:41:09.764" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:09.764" endtime="20240424 19:41:09.764"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:09.764" endtime="20240424 19:41:09.764"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:09.764" endtime="20240424 19:41:09.764"/>
</branch>
<status status="PASS" starttime="20240424 19:41:09.764" endtime="20240424 19:41:09.764"/>
</if>
<status status="PASS" starttime="20240424 19:41:09.764" endtime="20240424 19:41:09.764"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:09.764" endtime="20240424 19:41:09.780"/>
</kw>
<msg timestamp="20240424 19:41:09.780" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:09.764" endtime="20240424 19:41:09.780"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:09.780" endtime="20240424 19:41:09.780"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:09.780" endtime="20240424 19:41:09.780"/>
</branch>
<status status="PASS" starttime="20240424 19:41:09.780" endtime="20240424 19:41:09.780"/>
</if>
<status status="PASS" starttime="20240424 19:41:09.764" endtime="20240424 19:41:09.780"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:09.780" endtime="20240424 19:41:09.780"/>
</kw>
<msg timestamp="20240424 19:41:09.780" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:09.780" endtime="20240424 19:41:09.780"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:09.780" endtime="20240424 19:41:09.780"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:09.780" endtime="20240424 19:41:09.780"/>
</branch>
<status status="PASS" starttime="20240424 19:41:09.780" endtime="20240424 19:41:09.780"/>
</if>
<status status="PASS" starttime="20240424 19:41:09.780" endtime="20240424 19:41:09.780"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:09.780" endtime="20240424 19:41:09.833"/>
</kw>
<msg timestamp="20240424 19:41:09.833" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:09.780" endtime="20240424 19:41:09.833"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:09.833" endtime="20240424 19:41:09.833"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:09.833" endtime="20240424 19:41:09.833"/>
</branch>
<status status="PASS" starttime="20240424 19:41:09.833" endtime="20240424 19:41:09.833"/>
</if>
<status status="PASS" starttime="20240424 19:41:09.780" endtime="20240424 19:41:09.833"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:09.833" endtime="20240424 19:41:09.833"/>
</kw>
<msg timestamp="20240424 19:41:09.833" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:09.833" endtime="20240424 19:41:09.833"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:09.833" endtime="20240424 19:41:09.833"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:09.833" endtime="20240424 19:41:09.833"/>
</branch>
<status status="PASS" starttime="20240424 19:41:09.833" endtime="20240424 19:41:09.833"/>
</if>
<status status="PASS" starttime="20240424 19:41:09.833" endtime="20240424 19:41:09.833"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:09.833" endtime="20240424 19:41:09.866"/>
</kw>
<msg timestamp="20240424 19:41:09.866" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:09.833" endtime="20240424 19:41:09.866"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:09.866" endtime="20240424 19:41:09.866"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:09.866" endtime="20240424 19:41:09.866"/>
</branch>
<status status="PASS" starttime="20240424 19:41:09.866" endtime="20240424 19:41:09.866"/>
</if>
<status status="PASS" starttime="20240424 19:41:09.833" endtime="20240424 19:41:09.866"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:09.866" endtime="20240424 19:41:09.928"/>
</kw>
<msg timestamp="20240424 19:41:09.928" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:09.866" endtime="20240424 19:41:09.928"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:09.928" endtime="20240424 19:41:09.928"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:09.928" endtime="20240424 19:41:09.928"/>
</branch>
<status status="PASS" starttime="20240424 19:41:09.928" endtime="20240424 19:41:09.928"/>
</if>
<status status="PASS" starttime="20240424 19:41:09.866" endtime="20240424 19:41:09.928"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:09.928" endtime="20240424 19:41:09.928"/>
</kw>
<msg timestamp="20240424 19:41:09.928" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:09.928" endtime="20240424 19:41:09.928"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:09.928" endtime="20240424 19:41:09.928"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:09.928" endtime="20240424 19:41:09.928"/>
</branch>
<status status="PASS" starttime="20240424 19:41:09.928" endtime="20240424 19:41:09.928"/>
</if>
<status status="PASS" starttime="20240424 19:41:09.928" endtime="20240424 19:41:09.928"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:09.928" endtime="20240424 19:41:09.942"/>
</kw>
<msg timestamp="20240424 19:41:09.942" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:09.928" endtime="20240424 19:41:09.942"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.942"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.942"/>
</branch>
<status status="PASS" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.942"/>
</if>
<status status="PASS" starttime="20240424 19:41:09.928" endtime="20240424 19:41:09.942"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.942"/>
</kw>
<msg timestamp="20240424 19:41:09.942" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.942"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.942"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.942"/>
</branch>
<status status="PASS" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.942"/>
</if>
<status status="PASS" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.942"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.942"/>
</kw>
<msg timestamp="20240424 19:41:09.942" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.942"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.942"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.942"/>
</branch>
<status status="PASS" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.942"/>
</if>
<status status="PASS" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.942"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.942"/>
</kw>
<msg timestamp="20240424 19:41:09.942" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.942"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.942"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.942"/>
</branch>
<status status="PASS" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.942"/>
</if>
<status status="PASS" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.942"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.957"/>
</kw>
<msg timestamp="20240424 19:41:09.957" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.957"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:09.957" endtime="20240424 19:41:09.957"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:09.957" endtime="20240424 19:41:09.957"/>
</branch>
<status status="PASS" starttime="20240424 19:41:09.957" endtime="20240424 19:41:09.957"/>
</if>
<status status="PASS" starttime="20240424 19:41:09.942" endtime="20240424 19:41:09.957"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:09.957" endtime="20240424 19:41:09.989"/>
</kw>
<msg timestamp="20240424 19:41:09.989" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:09.957" endtime="20240424 19:41:09.989"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:09.989" endtime="20240424 19:41:09.989"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:09.989" endtime="20240424 19:41:09.989"/>
</branch>
<status status="PASS" starttime="20240424 19:41:09.989" endtime="20240424 19:41:09.989"/>
</if>
<status status="PASS" starttime="20240424 19:41:09.957" endtime="20240424 19:41:09.989"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:10.004" endtime="20240424 19:41:10.004"/>
</kw>
<msg timestamp="20240424 19:41:10.004" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:10.004" endtime="20240424 19:41:10.004"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:10.004" endtime="20240424 19:41:10.004"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:10.004" endtime="20240424 19:41:10.004"/>
</branch>
<status status="PASS" starttime="20240424 19:41:10.004" endtime="20240424 19:41:10.004"/>
</if>
<status status="PASS" starttime="20240424 19:41:10.004" endtime="20240424 19:41:10.004"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:10.004" endtime="20240424 19:41:10.004"/>
</kw>
<msg timestamp="20240424 19:41:10.004" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:10.004" endtime="20240424 19:41:10.004"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:10.004" endtime="20240424 19:41:10.004"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:10.004" endtime="20240424 19:41:10.004"/>
</branch>
<status status="PASS" starttime="20240424 19:41:10.004" endtime="20240424 19:41:10.004"/>
</if>
<status status="PASS" starttime="20240424 19:41:10.004" endtime="20240424 19:41:10.004"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:10.004" endtime="20240424 19:41:10.004"/>
</kw>
<msg timestamp="20240424 19:41:10.004" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:10.004" endtime="20240424 19:41:10.004"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:10.004" endtime="20240424 19:41:10.004"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:10.004" endtime="20240424 19:41:10.004"/>
</branch>
<status status="PASS" starttime="20240424 19:41:10.004" endtime="20240424 19:41:10.004"/>
</if>
<status status="PASS" starttime="20240424 19:41:10.004" endtime="20240424 19:41:10.004"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:10.004" endtime="20240424 19:41:10.017"/>
</kw>
<msg timestamp="20240424 19:41:10.017" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:10.004" endtime="20240424 19:41:10.017"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:10.017" endtime="20240424 19:41:10.017"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:10.017" endtime="20240424 19:41:10.017"/>
</branch>
<status status="PASS" starttime="20240424 19:41:10.017" endtime="20240424 19:41:10.017"/>
</if>
<status status="PASS" starttime="20240424 19:41:10.004" endtime="20240424 19:41:10.017"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:10.017" endtime="20240424 19:41:10.017"/>
</kw>
<msg timestamp="20240424 19:41:10.017" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:10.017" endtime="20240424 19:41:10.017"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:10.017" endtime="20240424 19:41:10.017"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:10.017" endtime="20240424 19:41:10.017"/>
</branch>
<status status="PASS" starttime="20240424 19:41:10.017" endtime="20240424 19:41:10.017"/>
</if>
<status status="PASS" starttime="20240424 19:41:10.017" endtime="20240424 19:41:10.017"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:10.017" endtime="20240424 19:41:10.017"/>
</kw>
<msg timestamp="20240424 19:41:10.017" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:10.017" endtime="20240424 19:41:10.017"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:10.017" endtime="20240424 19:41:10.017"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:10.017" endtime="20240424 19:41:10.017"/>
</branch>
<status status="PASS" starttime="20240424 19:41:10.017" endtime="20240424 19:41:10.017"/>
</if>
<status status="PASS" starttime="20240424 19:41:10.017" endtime="20240424 19:41:10.017"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:41:10.017" endtime="20240424 19:41:10.030"/>
</kw>
<msg timestamp="20240424 19:41:10.030" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:41:10.017" endtime="20240424 19:41:10.030"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:10.030" endtime="20240424 19:41:10.030"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:10.030" endtime="20240424 19:41:10.030"/>
</branch>
<status status="PASS" starttime="20240424 19:41:10.030" endtime="20240424 19:41:10.030"/>
</if>
<status status="PASS" starttime="20240424 19:41:10.017" endtime="20240424 19:41:10.030"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:41:20.402" level="FAIL">Dialog 'Progress...' is not open</msg>
<status status="FAIL" starttime="20240424 19:41:10.030" endtime="20240424 19:41:20.402"/>
</kw>
<msg timestamp="20240424 19:41:20.402" level="INFO">${is_progress_dialog_displayed} = False</msg>
<status status="PASS" starttime="20240424 19:41:10.030" endtime="20240424 19:41:20.402"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="PASS" starttime="20240424 19:41:20.402" endtime="20240424 19:41:20.402"/>
</break>
<status status="PASS" starttime="20240424 19:41:20.402" endtime="20240424 19:41:20.402"/>
</branch>
<status status="PASS" starttime="20240424 19:41:20.402" endtime="20240424 19:41:20.402"/>
</if>
<status status="PASS" starttime="20240424 19:41:10.030" endtime="20240424 19:41:20.402"/>
</iter>
<status status="PASS" starttime="20240424 19:41:09.580" endtime="20240424 19:41:20.402"/>
</while>
<status status="PASS" starttime="20240424 19:41:09.580" endtime="20240424 19:41:20.402"/>
</branch>
<status status="PASS" starttime="20240424 19:41:09.580" endtime="20240424 19:41:20.402"/>
</if>
<if>
<branch type="IF" condition="'${OS}' == 'Darwin'">
<while condition="${True}">
<iter>
<kw name="Call Component Method" library="SwingRobot">
<var>${value}</var>
<arg>thebar</arg>
<arg>getValue</arg>
<doc>Calls a method from specified component.</doc>
<status status="NOT RUN" starttime="20240424 19:41:20.402" endtime="20240424 19:41:20.402"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Saving progress ${value}%</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240424 19:41:20.402" endtime="20240424 19:41:20.402"/>
</kw>
<if>
<branch type="IF" condition="'${value}' == '0'">
<break>
<status status="NOT RUN" starttime="20240424 19:41:20.402" endtime="20240424 19:41:20.402"/>
</break>
<status status="NOT RUN" starttime="20240424 19:41:20.402" endtime="20240424 19:41:20.402"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:41:20.402" endtime="20240424 19:41:20.402"/>
</if>
<status status="NOT RUN" starttime="20240424 19:41:20.402" endtime="20240424 19:41:20.402"/>
</iter>
<status status="NOT RUN" starttime="20240424 19:41:20.402" endtime="20240424 19:41:20.402"/>
</while>
<status status="NOT RUN" starttime="20240424 19:41:20.402" endtime="20240424 19:41:20.402"/>
</branch>
<status status="PASS" starttime="20240424 19:41:20.402" endtime="20240424 19:41:20.402"/>
</if>
<status status="PASS" starttime="20240424 19:41:09.367" endtime="20240424 19:41:20.402"/>
</kw>
<status status="PASS" starttime="20240424 19:41:09.367" endtime="20240424 19:41:20.402"/>
</kw>
<status status="PASS" starttime="20240424 19:41:08.496" endtime="20240424 19:41:20.402"/>
</kw>
<status status="PASS" starttime="20240424 19:41:08.496" endtime="20240424 19:41:20.402"/>
</kw>
<kw name="And Close The Model" library="model_handling_flow_step_definitions">
<kw name="Log To Console" library="BuiltIn">
<arg>Closing the Model</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:41:20.402" endtime="20240424 19:41:20.402"/>
</kw>
<kw name="Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:41:20.402" endtime="20240424 19:41:20.513"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:20.513" endtime="20240424 19:41:20.517"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:41:20.517" endtime="20240424 19:41:20.517"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:20.517" endtime="20240424 19:41:20.529"/>
</kw>
<status status="PASS" starttime="20240424 19:41:20.513" endtime="20240424 19:41:20.529"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:41:20.529" endtime="20240424 19:41:20.536"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:41:20.536" endtime="20240424 19:41:20.610"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:41:30.622" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:41:20.610" endtime="20240424 19:41:30.622"/>
</kw>
<msg timestamp="20240424 19:41:30.622" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:41:20.610" endtime="20240424 19:41:30.622"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:41:40.634" level="FAIL">Dialog 'Select' is not open</msg>
<status status="FAIL" starttime="20240424 19:41:30.622" endtime="20240424 19:41:40.634"/>
</kw>
<msg timestamp="20240424 19:41:40.634" level="INFO">${check_if_save_asked} = False</msg>
<status status="PASS" starttime="20240424 19:41:30.622" endtime="20240424 19:41:40.634"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:41:40.634" endtime="20240424 19:41:40.634"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:41:40.634" endtime="20240424 19:41:40.634"/>
</branch>
<status status="PASS" starttime="20240424 19:41:40.634" endtime="20240424 19:41:40.634"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:41:40.634" endtime="20240424 19:41:40.634"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:41:40.634" endtime="20240424 19:41:40.634"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:41:40.634" endtime="20240424 19:41:40.634"/>
</branch>
<status status="PASS" starttime="20240424 19:41:40.634" endtime="20240424 19:41:40.634"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:40.634" endtime="20240424 19:41:40.634"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:41:40.634" endtime="20240424 19:41:40.634"/>
</kw>
<status status="PASS" starttime="20240424 19:41:40.634" endtime="20240424 19:41:40.634"/>
</kw>
<status status="PASS" starttime="20240424 19:41:20.402" endtime="20240424 19:41:40.634"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240424 19:41:42.635" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240424 19:41:40.634" endtime="20240424 19:41:42.635"/>
</kw>
<status status="PASS" starttime="20240424 19:41:20.402" endtime="20240424 19:41:42.635"/>
</kw>
<kw name="When When Model Is Reopened" library="model_handling_flow_step_definitions">
<arg>${solibri_building_saved_to_test_folder_smc}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Opening Model ${smcfile}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:41:42.635" endtime="20240424 19:41:42.635"/>
</kw>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${smcfile}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:42.635" endtime="20240424 19:41:42.635"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:41:42.635" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:41:42.635" endtime="20240424 19:41:42.635"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:41:42.635" endtime="20240424 19:41:42.635"/>
</kw>
<status status="PASS" starttime="20240424 19:41:42.635" endtime="20240424 19:41:42.635"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:42.635" endtime="20240424 19:41:42.635"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:41:42.635" endtime="20240424 19:41:42.649"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:42.649" endtime="20240424 19:41:42.725"/>
</kw>
<status status="PASS" starttime="20240424 19:41:42.635" endtime="20240424 19:41:42.725"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:41:42.725" endtime="20240424 19:41:42.731"/>
</kw>
<status status="PASS" starttime="20240424 19:41:42.725" endtime="20240424 19:41:42.731"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:41:42.731" endtime="20240424 19:41:42.731"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:41:42.731" endtime="20240424 19:41:42.731"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:41:42.731" endtime="20240424 19:41:44.038"/>
</kw>
<status status="PASS" starttime="20240424 19:41:42.731" endtime="20240424 19:41:44.038"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:41:44.038" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:41:44.038" endtime="20240424 19:41:44.038"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:41:44.038" endtime="20240424 19:41:44.038"/>
</return>
<msg timestamp="20240424 19:41:44.038" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:41:44.038" endtime="20240424 19:41:44.038"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:41:44.038" endtime="20240424 19:41:44.313"/>
</kw>
<status status="PASS" starttime="20240424 19:41:44.038" endtime="20240424 19:41:44.313"/>
</kw>
<status status="PASS" starttime="20240424 19:41:44.038" endtime="20240424 19:41:44.329"/>
</branch>
<status status="PASS" starttime="20240424 19:41:44.038" endtime="20240424 19:41:44.329"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:41:44.329" endtime="20240424 19:41:44.329"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:41:44.329" endtime="20240424 19:41:44.329"/>
</branch>
<status status="PASS" starttime="20240424 19:41:44.329" endtime="20240424 19:41:44.329"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:41:44.329" level="INFO">${path} = C:\Users\runneradmin\Documents\RFTestFiles</msg>
<msg timestamp="20240424 19:41:44.329" level="INFO">${filename} = Solibri Building.smc</msg>
<status status="PASS" starttime="20240424 19:41:44.329" endtime="20240424 19:41:44.329"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:41:44.329" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 19:41:44.329" level="INFO">${ext} = smc</msg>
<status status="PASS" starttime="20240424 19:41:44.329" endtime="20240424 19:41:44.329"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:44.329" endtime="20240424 19:41:44.590"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:41:44.590" endtime="20240424 19:41:44.596"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:44.596" endtime="20240424 19:41:44.682"/>
</kw>
<status status="PASS" starttime="20240424 19:41:44.329" endtime="20240424 19:41:44.683"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:41:44.683" endtime="20240424 19:41:45.108"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${COMPONENT_HIERARCHY_PANEL}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:41:45.108" endtime="20240424 19:41:45.111"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>ContainmentTree</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:41:45.169" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:41:45.111" endtime="20240424 19:41:45.169"/>
</kw>
<if>
<branch type="IF" condition="${row_count} &gt; ${0}">
<kw name="Evaluate" library="BuiltIn">
<var>${row_count}</var>
<arg>${row_count}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:41:45.169" level="INFO">${row_count} = 0</msg>
<status status="PASS" starttime="20240424 19:41:45.169" endtime="20240424 19:41:45.169"/>
</kw>
<status status="PASS" starttime="20240424 19:41:45.169" endtime="20240424 19:41:45.169"/>
</branch>
<status status="PASS" starttime="20240424 19:41:45.169" endtime="20240424 19:41:45.169"/>
</if>
<status status="PASS" starttime="20240424 19:41:44.329" endtime="20240424 19:41:45.169"/>
</kw>
<status status="PASS" starttime="20240424 19:41:44.329" endtime="20240424 19:41:45.169"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<status status="NOT RUN" starttime="20240424 19:41:45.169" endtime="20240424 19:41:45.169"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:41:45.169" endtime="20240424 19:41:45.169"/>
</branch>
<status status="PASS" starttime="20240424 19:41:44.329" endtime="20240424 19:41:45.169"/>
</if>
<status status="PASS" starttime="20240424 19:41:42.635" endtime="20240424 19:41:45.169"/>
</kw>
<status status="PASS" starttime="20240424 19:41:42.635" endtime="20240424 19:41:45.169"/>
</kw>
<kw name="Then Model Name Is Displayed In Title" library="model_handling_flow_step_definitions">
<arg>Solibri Building</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:45.169" endtime="20240424 19:41:45.183"/>
</kw>
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:41:45.183" level="INFO">${context} = Solibri Office - Solibri Building</msg>
<status status="PASS" starttime="20240424 19:41:45.183" endtime="20240424 19:41:45.183"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${modelname}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:41:45.183" endtime="20240424 19:41:45.183"/>
</kw>
<status status="PASS" starttime="20240424 19:41:45.169" endtime="20240424 19:41:45.183"/>
</kw>
<kw name="Clean Up" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>ScreenCapLibrary.Take Screenshot</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20240424 19:41:45.183" endtime="20240424 19:41:45.183"/>
</kw>
<kw name="Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:41:45.183" endtime="20240424 19:41:45.296"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:45.296" endtime="20240424 19:41:45.308"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:41:45.308" endtime="20240424 19:41:45.309"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:41:45.309" endtime="20240424 19:41:45.332"/>
</kw>
<status status="PASS" starttime="20240424 19:41:45.296" endtime="20240424 19:41:45.332"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:41:45.333" endtime="20240424 19:41:45.437"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:41:45.437" endtime="20240424 19:41:45.443"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:41:55.458" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:41:45.443" endtime="20240424 19:41:55.458"/>
</kw>
<msg timestamp="20240424 19:41:55.458" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:41:45.443" endtime="20240424 19:41:55.458"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:42:05.469" level="FAIL">Dialog 'Select' is not open</msg>
<status status="FAIL" starttime="20240424 19:41:55.458" endtime="20240424 19:42:05.469"/>
</kw>
<msg timestamp="20240424 19:42:05.469" level="INFO">${check_if_save_asked} = False</msg>
<status status="PASS" starttime="20240424 19:41:55.458" endtime="20240424 19:42:05.469"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:42:05.469" endtime="20240424 19:42:05.469"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:42:05.469" endtime="20240424 19:42:05.469"/>
</branch>
<status status="PASS" starttime="20240424 19:42:05.469" endtime="20240424 19:42:05.469"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:42:05.469" endtime="20240424 19:42:05.469"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:42:05.469" endtime="20240424 19:42:05.469"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:42:05.469" endtime="20240424 19:42:05.469"/>
</branch>
<status status="PASS" starttime="20240424 19:42:05.469" endtime="20240424 19:42:05.469"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:05.469" endtime="20240424 19:42:05.507"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:42:05.507" endtime="20240424 19:42:05.538"/>
</kw>
<status status="PASS" starttime="20240424 19:42:05.507" endtime="20240424 19:42:05.538"/>
</kw>
<status status="PASS" starttime="20240424 19:41:45.183" endtime="20240424 19:42:05.538"/>
</kw>
<status status="PASS" starttime="20240424 19:41:45.183" endtime="20240424 19:42:05.538"/>
</kw>
<status status="PASS" starttime="20240424 19:41:05.432" endtime="20240424 19:42:05.538"/>
</test>
<test id="s1-s1-t6" name="Model Name Is Displayed on Application Title Bar" line="55">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:05.538" endtime="20240424 19:42:05.562"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:42:05.562" endtime="20240424 19:42:05.673"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:05.673" endtime="20240424 19:42:05.680"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:05.680" endtime="20240424 19:42:05.687"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:05.687" endtime="20240424 19:42:05.694"/>
</kw>
<status status="PASS" starttime="20240424 19:42:05.673" endtime="20240424 19:42:05.694"/>
</kw>
<status status="PASS" starttime="20240424 19:42:05.538" endtime="20240424 19:42:05.694"/>
</kw>
<status status="PASS" starttime="20240424 19:42:05.538" endtime="20240424 19:42:05.694"/>
</kw>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:42:05.704" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:42:05.704" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:42:05 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:42:05.696" endtime="20240424 19:42:05.704"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:42:05.704" endtime="20240424 19:42:05.704"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:05.705" endtime="20240424 19:42:05.765"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:42:05.765" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:42:05.765" endtime="20240424 19:42:05.765"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:42:05.765" endtime="20240424 19:42:05.765"/>
</kw>
<status status="PASS" starttime="20240424 19:42:05.765" endtime="20240424 19:42:05.765"/>
</kw>
<status status="PASS" starttime="20240424 19:42:05.696" endtime="20240424 19:42:05.765"/>
</kw>
<kw name="And No Existing Model Is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:05.765" endtime="20240424 19:42:05.765"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:05.765" endtime="20240424 19:42:05.778"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:05.778" endtime="20240424 19:42:05.781"/>
</kw>
<status status="PASS" starttime="20240424 19:42:05.765" endtime="20240424 19:42:05.781"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:42:05.781" endtime="20240424 19:42:05.787"/>
</kw>
<status status="PASS" starttime="20240424 19:42:05.781" endtime="20240424 19:42:05.787"/>
</kw>
<msg timestamp="20240424 19:42:05.787" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 19:42:05.781" endtime="20240424 19:42:05.787"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:42:05.787" endtime="20240424 19:42:05.787"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:42:05.787" endtime="20240424 19:42:05.787"/>
</branch>
<status status="PASS" starttime="20240424 19:42:05.787" endtime="20240424 19:42:05.787"/>
</if>
<status status="PASS" starttime="20240424 19:42:05.765" endtime="20240424 19:42:05.787"/>
</kw>
<kw name="When IFC File Is Open" library="ModelHandlingResource">
<arg>${solibri_building_ifc}</arg>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${file_name_with_path}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:05.787" endtime="20240424 19:42:05.795"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:42:05.795" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:42:05.795" endtime="20240424 19:42:05.795"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:42:05.795" endtime="20240424 19:42:05.795"/>
</kw>
<status status="PASS" starttime="20240424 19:42:05.795" endtime="20240424 19:42:05.795"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:05.795" endtime="20240424 19:42:05.805"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:05.805" endtime="20240424 19:42:05.808"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:05.809" endtime="20240424 19:42:05.949"/>
</kw>
<status status="PASS" starttime="20240424 19:42:05.795" endtime="20240424 19:42:05.949"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:42:05.949" endtime="20240424 19:42:05.949"/>
</kw>
<status status="PASS" starttime="20240424 19:42:05.949" endtime="20240424 19:42:05.949"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:42:05.949" endtime="20240424 19:42:05.949"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:05.949" endtime="20240424 19:42:05.962"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:42:05.962" endtime="20240424 19:42:07.252"/>
</kw>
<status status="PASS" starttime="20240424 19:42:05.962" endtime="20240424 19:42:07.252"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:42:07.252" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:42:07.252" endtime="20240424 19:42:07.252"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:42:07.252" endtime="20240424 19:42:07.252"/>
</return>
<msg timestamp="20240424 19:42:07.252" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:42:07.252" endtime="20240424 19:42:07.252"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:42:07.252" endtime="20240424 19:42:07.553"/>
</kw>
<status status="PASS" starttime="20240424 19:42:07.252" endtime="20240424 19:42:07.553"/>
</kw>
<status status="PASS" starttime="20240424 19:42:07.252" endtime="20240424 19:42:07.553"/>
</branch>
<status status="PASS" starttime="20240424 19:42:07.252" endtime="20240424 19:42:07.553"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:42:07.553" endtime="20240424 19:42:07.553"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:42:07.553" endtime="20240424 19:42:07.553"/>
</branch>
<status status="PASS" starttime="20240424 19:42:07.553" endtime="20240424 19:42:07.553"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:42:07.553" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\ifc</msg>
<msg timestamp="20240424 19:42:07.553" level="INFO">${filename} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:42:07.553" endtime="20240424 19:42:07.553"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:42:07.553" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 19:42:07.553" level="INFO">${ext} = ifc</msg>
<status status="PASS" starttime="20240424 19:42:07.553" endtime="20240424 19:42:07.553"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<status status="NOT RUN" starttime="20240424 19:42:07.553" endtime="20240424 19:42:07.553"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:42:07.553" endtime="20240424 19:42:07.553"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:42:07.553" endtime="20240424 19:42:07.674"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:07.674" endtime="20240424 19:42:07.777"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:07.777" endtime="20240424 19:42:07.777"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:07.777" endtime="20240424 19:42:07.783"/>
</kw>
<status status="PASS" starttime="20240424 19:42:07.674" endtime="20240424 19:42:07.783"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:42:10.161" level="INFO">2024-04-24 19:42:08.362+0000 [Thread-283] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 15 ms.
2024-04-24 19:42:08.362+0000 [Thread-283] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 798 ms (using 1 threads)
2024-04-24 19:42:08.411+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 49 ms
2024-04-24 19:42:09.529+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 1167 ms.</msg>
<status status="PASS" starttime="20240424 19:42:07.783" endtime="20240424 19:42:10.161"/>
</kw>
<status status="PASS" starttime="20240424 19:42:07.783" endtime="20240424 19:42:10.161"/>
</kw>
<msg timestamp="20240424 19:42:10.161" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:42:07.783" endtime="20240424 19:42:10.161"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:42:10.161" endtime="20240424 19:42:10.167"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:42:10.167" endtime="20240424 19:42:10.518"/>
</kw>
<status status="PASS" starttime="20240424 19:42:10.161" endtime="20240424 19:42:10.518"/>
</branch>
<status status="PASS" starttime="20240424 19:42:10.161" endtime="20240424 19:42:10.518"/>
</if>
<status status="PASS" starttime="20240424 19:42:07.553" endtime="20240424 19:42:10.518"/>
</kw>
<status status="PASS" starttime="20240424 19:42:07.553" endtime="20240424 19:42:10.518"/>
</branch>
<status status="PASS" starttime="20240424 19:42:07.553" endtime="20240424 19:42:10.518"/>
</if>
<status status="PASS" starttime="20240424 19:42:05.787" endtime="20240424 19:42:10.518"/>
</kw>
<status status="PASS" starttime="20240424 19:42:05.787" endtime="20240424 19:42:10.518"/>
</kw>
<kw name="Then Model Name Is Displayed In Title" library="model_handling_flow_step_definitions">
<arg>Solibri Building</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:10.518" endtime="20240424 19:42:10.528"/>
</kw>
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:42:10.530" level="INFO">${context} = Solibri Office - Solibri Building</msg>
<status status="PASS" starttime="20240424 19:42:10.528" endtime="20240424 19:42:10.530"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${modelname}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:42:10.530" endtime="20240424 19:42:10.530"/>
</kw>
<status status="PASS" starttime="20240424 19:42:10.518" endtime="20240424 19:42:10.530"/>
</kw>
<status status="PASS" starttime="20240424 19:42:05.538" endtime="20240424 19:42:10.530"/>
</test>
<test id="s1-s1-t7" name="Verify File Layout Menu Options State" line="62">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:10.530" endtime="20240424 19:42:10.573"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:42:10.573" endtime="20240424 19:42:10.684"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:10.684" endtime="20240424 19:42:10.684"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:10.684" endtime="20240424 19:42:10.692"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:10.692" endtime="20240424 19:42:10.783"/>
</kw>
<status status="PASS" starttime="20240424 19:42:10.684" endtime="20240424 19:42:10.783"/>
</kw>
<status status="PASS" starttime="20240424 19:42:10.530" endtime="20240424 19:42:10.783"/>
</kw>
<status status="PASS" starttime="20240424 19:42:10.530" endtime="20240424 19:42:10.783"/>
</kw>
<kw name="When FILE Layout Is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:10.783" endtime="20240424 19:42:10.783"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:10.783" endtime="20240424 19:42:10.791"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:10.791" endtime="20240424 19:42:10.861"/>
</kw>
<status status="PASS" starttime="20240424 19:42:10.783" endtime="20240424 19:42:10.861"/>
</kw>
<status status="PASS" starttime="20240424 19:42:10.783" endtime="20240424 19:42:10.861"/>
</kw>
<kw name="Then Open Button Should Be Disabled" library="model_handling_flow_step_definitions">
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:42:10.861" endtime="20240424 19:42:10.861"/>
</kw>
<status status="PASS" starttime="20240424 19:42:10.861" endtime="20240424 19:42:10.861"/>
</kw>
<kw name="And Add Model Button Should Be Enabled" library="model_handling_flow_step_definitions">
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:42:10.861" endtime="20240424 19:42:10.872"/>
</kw>
<status status="PASS" starttime="20240424 19:42:10.861" endtime="20240424 19:42:10.872"/>
</kw>
<kw name="And Save Button Should Be Enabled" library="model_handling_flow_step_definitions">
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_save_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:42:10.872" endtime="20240424 19:42:10.872"/>
</kw>
<status status="PASS" starttime="20240424 19:42:10.872" endtime="20240424 19:42:10.872"/>
</kw>
<kw name="And Close Button Should Be Enabled" library="model_handling_flow_step_definitions">
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:42:10.872" endtime="20240424 19:42:10.872"/>
</kw>
<status status="PASS" starttime="20240424 19:42:10.872" endtime="20240424 19:42:10.872"/>
</kw>
<kw name="Clean Up" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>ScreenCapLibrary.Take Screenshot</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20240424 19:42:10.872" endtime="20240424 19:42:10.872"/>
</kw>
<kw name="Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:42:10.872" endtime="20240424 19:42:10.986"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:10.986" endtime="20240424 19:42:10.986"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:10.986" endtime="20240424 19:42:10.993"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:10.993" endtime="20240424 19:42:10.995"/>
</kw>
<status status="PASS" starttime="20240424 19:42:10.986" endtime="20240424 19:42:10.995"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:42:10.995" endtime="20240424 19:42:11.066"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:42:11.066" endtime="20240424 19:42:11.066"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:42:21.079" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:42:11.066" endtime="20240424 19:42:21.079"/>
</kw>
<msg timestamp="20240424 19:42:21.079" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:42:11.066" endtime="20240424 19:42:21.079"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:42:21.079" endtime="20240424 19:42:21.084"/>
</kw>
<msg timestamp="20240424 19:42:21.084" level="INFO">${check_if_save_asked} = True</msg>
<status status="PASS" starttime="20240424 19:42:21.079" endtime="20240424 19:42:21.084"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:42:21.084" endtime="20240424 19:42:21.084"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:42:21.084" endtime="20240424 19:42:21.111"/>
</kw>
<status status="PASS" starttime="20240424 19:42:21.084" endtime="20240424 19:42:21.111"/>
</kw>
<status status="PASS" starttime="20240424 19:42:21.084" endtime="20240424 19:42:21.111"/>
</branch>
<status status="PASS" starttime="20240424 19:42:21.084" endtime="20240424 19:42:21.111"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:42:21.111" endtime="20240424 19:42:21.111"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:42:21.111" endtime="20240424 19:42:21.111"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:42:21.111" endtime="20240424 19:42:21.111"/>
</branch>
<status status="PASS" starttime="20240424 19:42:21.111" endtime="20240424 19:42:21.111"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:21.111" endtime="20240424 19:42:21.128"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:42:21.158" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:42:21.129" endtime="20240424 19:42:21.158"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:42:24.162" endtime="20240424 19:42:24.165"/>
</kw>
<status status="PASS" starttime="20240424 19:42:21.128" endtime="20240424 19:42:24.165"/>
</kw>
<status status="PASS" starttime="20240424 19:42:10.872" endtime="20240424 19:42:24.165"/>
</kw>
<status status="PASS" starttime="20240424 19:42:10.872" endtime="20240424 19:42:24.165"/>
</kw>
<status status="PASS" starttime="20240424 19:42:10.530" endtime="20240424 19:42:24.165"/>
</test>
<test id="s1-s1-t8" name="Model Opened Is Added To Recent List" line="69">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:24.165" endtime="20240424 19:42:24.165"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:42:24.165" endtime="20240424 19:42:24.282"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:24.282" endtime="20240424 19:42:24.282"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:24.282" endtime="20240424 19:42:24.289"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:24.289" endtime="20240424 19:42:24.294"/>
</kw>
<status status="PASS" starttime="20240424 19:42:24.282" endtime="20240424 19:42:24.294"/>
</kw>
<status status="PASS" starttime="20240424 19:42:24.165" endtime="20240424 19:42:24.294"/>
</kw>
<status status="PASS" starttime="20240424 19:42:24.165" endtime="20240424 19:42:24.294"/>
</kw>
<kw name="Given No Existing Model Is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:24.295" endtime="20240424 19:42:24.364"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:24.364" endtime="20240424 19:42:24.370"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:24.370" endtime="20240424 19:42:24.441"/>
</kw>
<status status="PASS" starttime="20240424 19:42:24.295" endtime="20240424 19:42:24.441"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:42:24.441" endtime="20240424 19:42:24.441"/>
</kw>
<status status="PASS" starttime="20240424 19:42:24.441" endtime="20240424 19:42:24.441"/>
</kw>
<msg timestamp="20240424 19:42:24.441" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 19:42:24.441" endtime="20240424 19:42:24.441"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:42:24.441" endtime="20240424 19:42:24.441"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:42:24.441" endtime="20240424 19:42:24.441"/>
</branch>
<status status="PASS" starttime="20240424 19:42:24.441" endtime="20240424 19:42:24.441"/>
</if>
<status status="PASS" starttime="20240424 19:42:24.295" endtime="20240424 19:42:24.441"/>
</kw>
<kw name="When IFC File Is Open" library="ModelHandlingResource">
<arg>${solibri_building_ifc}</arg>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${file_name_with_path}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:24.441" endtime="20240424 19:42:24.448"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:42:24.450" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:42:24.448" endtime="20240424 19:42:24.450"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:42:24.450" endtime="20240424 19:42:24.450"/>
</kw>
<status status="PASS" starttime="20240424 19:42:24.448" endtime="20240424 19:42:24.450"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:24.450" endtime="20240424 19:42:24.454"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:24.454" endtime="20240424 19:42:24.459"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:24.459" endtime="20240424 19:42:24.463"/>
</kw>
<status status="PASS" starttime="20240424 19:42:24.450" endtime="20240424 19:42:24.463"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:42:24.464" endtime="20240424 19:42:24.532"/>
</kw>
<status status="PASS" starttime="20240424 19:42:24.463" endtime="20240424 19:42:24.532"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:42:24.532" endtime="20240424 19:42:24.532"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:24.532" endtime="20240424 19:42:24.541"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:42:24.541" endtime="20240424 19:42:25.875"/>
</kw>
<status status="PASS" starttime="20240424 19:42:24.541" endtime="20240424 19:42:25.875"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:42:25.875" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:42:25.875" endtime="20240424 19:42:25.875"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:42:25.875" endtime="20240424 19:42:25.875"/>
</return>
<msg timestamp="20240424 19:42:25.890" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:42:25.875" endtime="20240424 19:42:25.890"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:42:25.890" endtime="20240424 19:42:26.155"/>
</kw>
<status status="PASS" starttime="20240424 19:42:25.890" endtime="20240424 19:42:26.155"/>
</kw>
<status status="PASS" starttime="20240424 19:42:25.890" endtime="20240424 19:42:26.184"/>
</branch>
<status status="PASS" starttime="20240424 19:42:25.890" endtime="20240424 19:42:26.184"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:42:26.184" endtime="20240424 19:42:26.184"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:42:26.184" endtime="20240424 19:42:26.184"/>
</branch>
<status status="PASS" starttime="20240424 19:42:26.184" endtime="20240424 19:42:26.184"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:42:26.184" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\ifc</msg>
<msg timestamp="20240424 19:42:26.184" level="INFO">${filename} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:42:26.184" endtime="20240424 19:42:26.184"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:42:26.184" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 19:42:26.184" level="INFO">${ext} = ifc</msg>
<status status="PASS" starttime="20240424 19:42:26.184" endtime="20240424 19:42:26.184"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<status status="NOT RUN" starttime="20240424 19:42:26.184" endtime="20240424 19:42:26.184"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:42:26.184" endtime="20240424 19:42:26.184"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:42:26.184" endtime="20240424 19:42:26.308"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:26.308" endtime="20240424 19:42:26.308"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:26.308" endtime="20240424 19:42:26.316"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:26.316" endtime="20240424 19:42:26.387"/>
</kw>
<status status="PASS" starttime="20240424 19:42:26.308" endtime="20240424 19:42:26.387"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:42:28.626" level="INFO">2024-04-24 19:42:26.903+0000 [Thread-350] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 15 ms.
2024-04-24 19:42:26.903+0000 [Thread-350] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 719 ms (using 1 threads)
2024-04-24 19:42:26.961+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 58 ms
2024-04-24 19:42:27.966+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 1063 ms.</msg>
<status status="PASS" starttime="20240424 19:42:26.387" endtime="20240424 19:42:28.626"/>
</kw>
<status status="PASS" starttime="20240424 19:42:26.387" endtime="20240424 19:42:28.626"/>
</kw>
<msg timestamp="20240424 19:42:28.626" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:42:26.387" endtime="20240424 19:42:28.626"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:42:28.626" endtime="20240424 19:42:28.670"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:42:28.670" endtime="20240424 19:42:28.777"/>
</kw>
<status status="PASS" starttime="20240424 19:42:28.626" endtime="20240424 19:42:28.777"/>
</branch>
<status status="PASS" starttime="20240424 19:42:28.626" endtime="20240424 19:42:28.777"/>
</if>
<status status="PASS" starttime="20240424 19:42:26.184" endtime="20240424 19:42:28.777"/>
</kw>
<status status="PASS" starttime="20240424 19:42:26.184" endtime="20240424 19:42:28.777"/>
</branch>
<status status="PASS" starttime="20240424 19:42:26.184" endtime="20240424 19:42:28.777"/>
</if>
<status status="PASS" starttime="20240424 19:42:24.441" endtime="20240424 19:42:28.777"/>
</kw>
<status status="PASS" starttime="20240424 19:42:24.441" endtime="20240424 19:42:28.777"/>
</kw>
<kw name="Then IFC File Is Added To Recent Models List" library="model_handling_flow_step_definitions">
<arg>${solibri_building_ifc}</arg>
<kw name="Get First Model In Recent Models List" library="ModelHandlingResource">
<var>${recent_filename}</var>
<kw name="Switch Layout" library="Common">
<arg>FILE</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:28.777" endtime="20240424 19:42:28.783"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:28.783" endtime="20240424 19:42:28.783"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:28.783" endtime="20240424 19:42:28.789"/>
</kw>
<status status="PASS" starttime="20240424 19:42:28.777" endtime="20240424 19:42:28.789"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Recent_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:42:28.791" endtime="20240424 19:42:28.884"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>RECENT</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:42:28.884" endtime="20240424 19:42:28.940"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${value}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:42:28.944" level="INFO">${value} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:42:28.940" endtime="20240424 19:42:28.944"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20240424 19:42:28.944" endtime="20240424 19:42:28.944"/>
</return>
<msg timestamp="20240424 19:42:28.944" level="INFO">${recent_filename} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:42:28.777" endtime="20240424 19:42:28.944"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${modelname}</arg>
<arg>${recent_filename}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:42:28.944" endtime="20240424 19:42:28.944"/>
</kw>
<status status="PASS" starttime="20240424 19:42:28.777" endtime="20240424 19:42:28.944"/>
</kw>
<kw name="And IFC File Path Is Added To Recent Paths" library="model_handling_flow_step_definitions">
<arg>${ifc_folder}</arg>
<kw name="Get First Place in Recent Places" library="ModelHandlingResource">
<var>${recent_filepath}</var>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:28.944" endtime="20240424 19:42:28.948"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:28.948" endtime="20240424 19:42:28.953"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:28.953" endtime="20240424 19:42:29.024"/>
</kw>
<status status="PASS" starttime="20240424 19:42:28.944" endtime="20240424 19:42:29.024"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>RECENT</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:42:29.024" endtime="20240424 19:42:29.024"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${value}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:42:29.024" level="INFO">${value} = ifc</msg>
<status status="PASS" starttime="20240424 19:42:29.024" endtime="20240424 19:42:29.024"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20240424 19:42:29.024" endtime="20240424 19:42:29.024"/>
</return>
<msg timestamp="20240424 19:42:29.024" level="INFO">${recent_filepath} = ifc</msg>
<status status="PASS" starttime="20240424 19:42:28.944" endtime="20240424 19:42:29.024"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${modelpath}</arg>
<arg>${recent_filepath}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:42:29.024" endtime="20240424 19:42:29.024"/>
</kw>
<status status="PASS" starttime="20240424 19:42:28.944" endtime="20240424 19:42:29.024"/>
</kw>
<kw name="Clean Up" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>ScreenCapLibrary.Take Screenshot</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20240424 19:42:29.024" endtime="20240424 19:42:29.024"/>
</kw>
<kw name="Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:42:29.024" endtime="20240424 19:42:29.133"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:29.133" endtime="20240424 19:42:29.133"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:29.133" endtime="20240424 19:42:29.143"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:29.143" endtime="20240424 19:42:29.147"/>
</kw>
<status status="PASS" starttime="20240424 19:42:29.133" endtime="20240424 19:42:29.147"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:42:29.148" endtime="20240424 19:42:29.220"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:42:29.220" endtime="20240424 19:42:29.228"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:42:39.266" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:42:29.228" endtime="20240424 19:42:39.266"/>
</kw>
<msg timestamp="20240424 19:42:39.266" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:42:29.228" endtime="20240424 19:42:39.266"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:42:39.266" endtime="20240424 19:42:39.270"/>
</kw>
<msg timestamp="20240424 19:42:39.270" level="INFO">${check_if_save_asked} = True</msg>
<status status="PASS" starttime="20240424 19:42:39.266" endtime="20240424 19:42:39.270"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:42:39.270" endtime="20240424 19:42:39.282"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:42:39.282" endtime="20240424 19:42:39.302"/>
</kw>
<status status="PASS" starttime="20240424 19:42:39.270" endtime="20240424 19:42:39.302"/>
</kw>
<status status="PASS" starttime="20240424 19:42:39.270" endtime="20240424 19:42:39.302"/>
</branch>
<status status="PASS" starttime="20240424 19:42:39.270" endtime="20240424 19:42:39.302"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:42:39.302" endtime="20240424 19:42:39.302"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:42:39.302" endtime="20240424 19:42:39.302"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:42:39.302" endtime="20240424 19:42:39.302"/>
</branch>
<status status="PASS" starttime="20240424 19:42:39.302" endtime="20240424 19:42:39.302"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:39.302" endtime="20240424 19:42:39.375"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:42:39.378" endtime="20240424 19:42:39.467"/>
</kw>
<status status="PASS" starttime="20240424 19:42:39.375" endtime="20240424 19:42:39.467"/>
</kw>
<status status="PASS" starttime="20240424 19:42:29.024" endtime="20240424 19:42:39.467"/>
</kw>
<status status="PASS" starttime="20240424 19:42:29.024" endtime="20240424 19:42:39.467"/>
</kw>
<status status="PASS" starttime="20240424 19:42:24.165" endtime="20240424 19:42:39.467"/>
</test>
<test id="s1-s1-t9" name="Update Model Manually And Model Is Modified" line="75">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:39.467" endtime="20240424 19:42:39.467"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:42:39.467" endtime="20240424 19:42:39.581"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:39.581" endtime="20240424 19:42:39.581"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:39.581" endtime="20240424 19:42:39.591"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:39.591" endtime="20240424 19:42:39.661"/>
</kw>
<status status="PASS" starttime="20240424 19:42:39.581" endtime="20240424 19:42:39.661"/>
</kw>
<status status="PASS" starttime="20240424 19:42:39.467" endtime="20240424 19:42:39.661"/>
</kw>
<status status="PASS" starttime="20240424 19:42:39.467" endtime="20240424 19:42:39.661"/>
</kw>
<kw name="Given No Existing Model Is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:39.661" endtime="20240424 19:42:39.661"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:39.661" endtime="20240424 19:42:39.661"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:39.661" endtime="20240424 19:42:39.742"/>
</kw>
<status status="PASS" starttime="20240424 19:42:39.661" endtime="20240424 19:42:39.742"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:42:39.742" endtime="20240424 19:42:39.750"/>
</kw>
<status status="PASS" starttime="20240424 19:42:39.742" endtime="20240424 19:42:39.750"/>
</kw>
<msg timestamp="20240424 19:42:39.750" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 19:42:39.742" endtime="20240424 19:42:39.750"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:42:39.750" endtime="20240424 19:42:39.750"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:42:39.750" endtime="20240424 19:42:39.750"/>
</branch>
<status status="PASS" starttime="20240424 19:42:39.750" endtime="20240424 19:42:39.750"/>
</if>
<status status="PASS" starttime="20240424 19:42:39.661" endtime="20240424 19:42:39.750"/>
</kw>
<kw name="Given IFC File Is Open" library="ModelHandlingResource">
<arg>${solibri_building_ifc}</arg>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${file_name_with_path}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:39.750" endtime="20240424 19:42:39.750"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:42:39.750" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:42:39.750" endtime="20240424 19:42:39.750"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:42:39.750" endtime="20240424 19:42:39.750"/>
</kw>
<status status="PASS" starttime="20240424 19:42:39.750" endtime="20240424 19:42:39.750"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:39.750" endtime="20240424 19:42:39.767"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:39.767" endtime="20240424 19:42:39.767"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:39.767" endtime="20240424 19:42:39.774"/>
</kw>
<status status="PASS" starttime="20240424 19:42:39.750" endtime="20240424 19:42:39.774"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:42:39.774" endtime="20240424 19:42:39.779"/>
</kw>
<status status="PASS" starttime="20240424 19:42:39.774" endtime="20240424 19:42:39.779"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:42:39.779" endtime="20240424 19:42:39.783"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:39.783" endtime="20240424 19:42:39.787"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:42:39.787" endtime="20240424 19:42:41.178"/>
</kw>
<status status="PASS" starttime="20240424 19:42:39.787" endtime="20240424 19:42:41.178"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:42:41.178" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:42:41.178" endtime="20240424 19:42:41.178"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:42:41.178" endtime="20240424 19:42:41.178"/>
</return>
<msg timestamp="20240424 19:42:41.178" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:42:41.178" endtime="20240424 19:42:41.178"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:42:41.178" endtime="20240424 19:42:41.361"/>
</kw>
<status status="PASS" starttime="20240424 19:42:41.178" endtime="20240424 19:42:41.361"/>
</kw>
<status status="PASS" starttime="20240424 19:42:41.178" endtime="20240424 19:42:41.361"/>
</branch>
<status status="PASS" starttime="20240424 19:42:41.178" endtime="20240424 19:42:41.361"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:42:41.361" endtime="20240424 19:42:41.361"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:42:41.361" endtime="20240424 19:42:41.361"/>
</branch>
<status status="PASS" starttime="20240424 19:42:41.361" endtime="20240424 19:42:41.361"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:42:41.361" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\ifc</msg>
<msg timestamp="20240424 19:42:41.361" level="INFO">${filename} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:42:41.361" endtime="20240424 19:42:41.361"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:42:41.361" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 19:42:41.361" level="INFO">${ext} = ifc</msg>
<status status="PASS" starttime="20240424 19:42:41.361" endtime="20240424 19:42:41.361"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<status status="NOT RUN" starttime="20240424 19:42:41.361" endtime="20240424 19:42:41.361"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:42:41.361" endtime="20240424 19:42:41.361"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:42:41.367" endtime="20240424 19:42:41.482"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:41.482" endtime="20240424 19:42:41.560"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:41.560" endtime="20240424 19:42:41.569"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:41.569" endtime="20240424 19:42:41.575"/>
</kw>
<status status="PASS" starttime="20240424 19:42:41.482" endtime="20240424 19:42:41.575"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:42:43.304" level="INFO">2024-04-24 19:42:42.083+0000 [Thread-417] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 0 ms.
2024-04-24 19:42:42.083+0000 [Thread-417] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 711 ms (using 1 threads)
2024-04-24 19:42:42.130+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 31 ms
2024-04-24 19:42:42.991+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 908 ms.</msg>
<status status="PASS" starttime="20240424 19:42:41.575" endtime="20240424 19:42:43.304"/>
</kw>
<status status="PASS" starttime="20240424 19:42:41.575" endtime="20240424 19:42:43.304"/>
</kw>
<msg timestamp="20240424 19:42:43.304" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:42:41.575" endtime="20240424 19:42:43.304"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:42:43.304" endtime="20240424 19:42:43.686"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:42:43.686" endtime="20240424 19:42:43.821"/>
</kw>
<status status="PASS" starttime="20240424 19:42:43.304" endtime="20240424 19:42:43.821"/>
</branch>
<status status="PASS" starttime="20240424 19:42:43.304" endtime="20240424 19:42:43.821"/>
</if>
<status status="PASS" starttime="20240424 19:42:41.361" endtime="20240424 19:42:43.821"/>
</kw>
<status status="PASS" starttime="20240424 19:42:41.361" endtime="20240424 19:42:43.821"/>
</branch>
<status status="PASS" starttime="20240424 19:42:41.361" endtime="20240424 19:42:43.821"/>
</if>
<status status="PASS" starttime="20240424 19:42:39.750" endtime="20240424 19:42:43.821"/>
</kw>
<status status="PASS" starttime="20240424 19:42:39.750" endtime="20240424 19:42:43.821"/>
</kw>
<kw name="And Store All Wall Details In Roof" library="model_handling_flow_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:43.821" endtime="20240424 19:42:43.856"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:43.856" endtime="20240424 19:42:43.933"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:43.933" endtime="20240424 19:42:43.947"/>
</kw>
<status status="PASS" starttime="20240424 19:42:43.821" endtime="20240424 19:42:43.947"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Component Should Exist</arg>
<arg>Model Tree_View</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Component Should Exist" library="SwingRobot">
<arg>Model Tree_View</arg>
<doc>Fails if component does not exist within current context.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 19:42:43.947" endtime="20240424 19:42:43.950"/>
</kw>
<status status="PASS" starttime="20240424 19:42:43.947" endtime="20240424 19:42:43.950"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>2</arg>
<arg>Push Toggle Button</arg>
<arg>5</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>5</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:42:43.950" endtime="20240424 19:42:44.070"/>
</kw>
<status status="PASS" starttime="20240424 19:42:43.950" endtime="20240424 19:42:44.070"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>5</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:42:44.070" endtime="20240424 19:42:44.085"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Toggle Button Should Be Selected</arg>
<arg>5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Toggle Button Should Be Selected" library="SwingRobot">
<arg>5</arg>
<doc>Fails if toggle button is not selected.</doc>
<status status="PASS" starttime="20240424 19:42:44.085" endtime="20240424 19:42:44.088"/>
</kw>
<msg timestamp="20240424 19:42:44.088" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20240424 19:42:44.085" endtime="20240424 19:42:44.088"/>
</kw>
<if>
<branch type="IF" condition="not ${status}">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5x</arg>
<arg>Push Toggle Button</arg>
<arg>5</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20240424 19:42:44.088" endtime="20240424 19:42:44.088"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:42:44.088" endtime="20240424 19:42:44.088"/>
</branch>
<status status="PASS" starttime="20240424 19:42:44.088" endtime="20240424 19:42:44.088"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Table Should Not Be Empty</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Table Should Not Be Empty" library="Common">
<arg>0</arg>
<arg>1</arg>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>${table_locator}</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:42:44.092" level="INFO">${row_count} = 4</msg>
<status status="PASS" starttime="20240424 19:42:44.088" endtime="20240424 19:42:44.092"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${row_count} &gt; ${table_rows}</arg>
<arg>The table has fewer rows than expected</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240424 19:42:44.092" endtime="20240424 19:42:44.092"/>
</kw>
<status status="PASS" starttime="20240424 19:42:44.088" endtime="20240424 19:42:44.092"/>
</kw>
<status status="PASS" starttime="20240424 19:42:44.088" endtime="20240424 19:42:44.092"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count1}</var>
<arg>LogicalFloorTree</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:42:44.095" level="INFO">${row_count1} = 4</msg>
<status status="PASS" starttime="20240424 19:42:44.092" endtime="20240424 19:42:44.095"/>
</kw>
<kw name="Take Screenshot" library="ScreenCapLibrary">
<doc>Takes a screenshot in the specified format at library import and
embeds it into the log file (PNG by default).</doc>
<msg timestamp="20240424 19:42:44.158" level="INFO" html="true">&lt;a href="screenshot_2.png"&gt;&lt;img src="screenshot_2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240424 19:42:44.095" endtime="20240424 19:42:44.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count1}</arg>
<arg>4</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 19:42:44.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:42:44.173" endtime="20240424 19:42:44.173"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>LogicalFloorTree</arg>
<arg>3</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:42:44.173" endtime="20240424 19:42:44.193"/>
</kw>
<kw name="Table Cell Should Be Selected" library="SwingRobot">
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Fails if given table cell is not selected in a table.</doc>
<status status="PASS" starttime="20240424 19:42:44.193" endtime="20240424 19:42:44.381"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count2}</var>
<arg>LogicalFloorTree</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:42:44.428" level="INFO">${row_count2} = 11</msg>
<status status="PASS" starttime="20240424 19:42:44.381" endtime="20240424 19:42:44.428"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>LogicalFloorTree</arg>
<arg>10</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:42:44.428" endtime="20240424 19:42:44.477"/>
</kw>
<kw name="Table Cell Should Be Selected" library="SwingRobot">
<arg>0</arg>
<arg>10</arg>
<arg>0</arg>
<doc>Fails if given table cell is not selected in a table.</doc>
<status status="PASS" starttime="20240424 19:42:44.477" endtime="20240424 19:42:44.519"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count3}</var>
<arg>LogicalFloorTree</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:42:44.560" level="INFO">${row_count3} = 29</msg>
<status status="PASS" starttime="20240424 19:42:44.519" endtime="20240424 19:42:44.560"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${walls_count}</var>
<arg>${row_count3} - ${row_count1}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:42:44.560" level="INFO">${walls_count} = 25</msg>
<status status="PASS" starttime="20240424 19:42:44.560" endtime="20240424 19:42:44.560"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${walls_count}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240424 19:42:44.560" level="INFO">${walls_count} = 25</msg>
<status status="PASS" starttime="20240424 19:42:44.560" endtime="20240424 19:42:44.560"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:42:44.560" endtime="20240424 19:42:44.609"/>
</kw>
<status status="PASS" starttime="20240424 19:42:43.821" endtime="20240424 19:42:44.609"/>
</kw>
<kw name="When IFC File Is Updated With One Less Wall" library="model_handling_flow_step_definitions">
<arg>${solibri_building_modified_ifc}</arg>
<kw name="Update Model" library="ModelHandlingResource">
<arg>${ifc_file}</arg>
<doc>Updates the model with the given ifc file</doc>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:44.609" endtime="20240424 19:42:44.655"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:44.655" endtime="20240424 19:42:44.659"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:44.659" endtime="20240424 19:42:44.659"/>
</kw>
<status status="PASS" starttime="20240424 19:42:44.609" endtime="20240424 19:42:44.659"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:42:44.659" endtime="20240424 19:42:44.767"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_update_models_title}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:44.767" endtime="20240424 19:42:44.780"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Update Models</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:42:44.780" endtime="20240424 19:42:44.860"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Update Models</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:42:44.860" endtime="20240424 19:42:44.876"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Table Cell</arg>
<arg>0</arg>
<arg>0</arg>
<arg>5</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:44.876" endtime="20240424 19:42:44.891"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>2</arg>
<arg>Select Dialog</arg>
<arg>${select_file_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${select_file_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:42:44.891" endtime="20240424 19:42:46.281"/>
</kw>
<status status="PASS" starttime="20240424 19:42:44.891" endtime="20240424 19:42:46.281"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${OS}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:42:46.281" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:42:46.281" endtime="20240424 19:42:46.281"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:42:46.281" endtime="20240424 19:42:46.281"/>
</return>
<msg timestamp="20240424 19:42:46.281" level="INFO">${OS} = Windows</msg>
<status status="PASS" starttime="20240424 19:42:46.281" endtime="20240424 19:42:46.281"/>
</kw>
<if>
<branch type="IF" condition="'${OS}' == 'Windows'">
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_file_to_update}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:42:46.281" endtime="20240424 19:42:46.337"/>
</kw>
<status status="PASS" starttime="20240424 19:42:46.281" endtime="20240424 19:42:46.337"/>
</branch>
<branch type="ELSE">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_file_to_update}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:42:46.337" endtime="20240424 19:42:46.337"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:42:46.337" endtime="20240424 19:42:46.337"/>
</branch>
<status status="PASS" starttime="20240424 19:42:46.281" endtime="20240424 19:42:46.337"/>
</if>
<kw name="Select Dialog" library="SwingRobot">
<arg>Update Models</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:42:46.337" endtime="20240424 19:42:46.346"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>0</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:42:46.346" endtime="20240424 19:42:46.419"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240424 19:42:48.435" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240424 19:42:46.419" endtime="20240424 19:42:48.435"/>
</kw>
<status status="PASS" starttime="20240424 19:42:44.609" endtime="20240424 19:42:48.435"/>
</kw>
<status status="PASS" starttime="20240424 19:42:44.609" endtime="20240424 19:42:48.435"/>
</kw>
<kw name="Then Updated Model Should Not Have The Removed Wall" library="model_handling_flow_step_definitions">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:42:48.435" endtime="20240424 19:42:48.547"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:48.547" endtime="20240424 19:42:48.620"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:48.620" endtime="20240424 19:42:48.628"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:48.628" endtime="20240424 19:42:48.648"/>
</kw>
<status status="PASS" starttime="20240424 19:42:48.547" endtime="20240424 19:42:48.648"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>5</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:42:48.648" endtime="20240424 19:42:48.706"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>LogicalFloorTree</arg>
<arg>3</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:42:48.706" endtime="20240424 19:42:48.873"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${count1}</var>
<arg>LogicalFloorTree</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:42:48.879" level="INFO">${count1} = 29</msg>
<status status="PASS" starttime="20240424 19:42:48.873" endtime="20240424 19:42:48.879"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>LogicalFloorTree</arg>
<arg>10</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:42:48.879" endtime="20240424 19:42:48.942"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${count2}</var>
<arg>LogicalFloorTree</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:42:48.948" level="INFO">${count2} = 29</msg>
<status status="PASS" starttime="20240424 19:42:48.942" endtime="20240424 19:42:48.948"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${walls_count_after_update}</var>
<arg>${count2} - ${count1}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:42:48.948" level="INFO">${walls_count_after_update} = 0</msg>
<status status="PASS" starttime="20240424 19:42:48.948" endtime="20240424 19:42:48.948"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${walls_count}</arg>
<arg>${walls_count_after_update}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20240424 19:42:48.948" endtime="20240424 19:42:48.948"/>
</kw>
<status status="PASS" starttime="20240424 19:42:48.435" endtime="20240424 19:42:48.948"/>
</kw>
<kw name="Clean Up" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>ScreenCapLibrary.Take Screenshot</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20240424 19:42:48.948" endtime="20240424 19:42:48.948"/>
</kw>
<kw name="Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:42:48.948" endtime="20240424 19:42:49.061"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:49.061" endtime="20240424 19:42:49.067"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:42:49.067" endtime="20240424 19:42:49.081"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:42:49.081" endtime="20240424 19:42:49.082"/>
</kw>
<status status="PASS" starttime="20240424 19:42:49.061" endtime="20240424 19:42:49.082"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:42:49.504" level="FAIL">Label 'Close' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:42:49.082" endtime="20240424 19:42:49.504"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:42:49.504" endtime="20240424 19:42:49.508"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:42:59.517" level="INFO">2024-04-24 19:42:49.648+0000 [Update Queue] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building - modified) converted in: 1863 ms.</msg>
<msg timestamp="20240424 19:42:59.517" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:42:49.508" endtime="20240424 19:42:59.517"/>
</kw>
<msg timestamp="20240424 19:42:59.517" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:42:49.508" endtime="20240424 19:42:59.517"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:43:09.521" level="FAIL">Dialog 'Select' is not open</msg>
<status status="FAIL" starttime="20240424 19:42:59.517" endtime="20240424 19:43:09.521"/>
</kw>
<msg timestamp="20240424 19:43:09.521" level="INFO">${check_if_save_asked} = False</msg>
<status status="PASS" starttime="20240424 19:42:59.517" endtime="20240424 19:43:09.521"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:43:09.521" endtime="20240424 19:43:09.521"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:43:09.521" endtime="20240424 19:43:09.521"/>
</branch>
<status status="PASS" starttime="20240424 19:43:09.521" endtime="20240424 19:43:09.521"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:43:09.521" endtime="20240424 19:43:09.521"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:43:09.521" endtime="20240424 19:43:09.521"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:43:09.521" endtime="20240424 19:43:09.521"/>
</branch>
<status status="PASS" starttime="20240424 19:43:09.521" endtime="20240424 19:43:09.521"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:09.521" endtime="20240424 19:43:09.521"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:43:09.521" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:43:09.521" endtime="20240424 19:43:09.521"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:43:12.523" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:43:12.523" endtime="20240424 19:43:12.523"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:43:15.523" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:43:15.523" endtime="20240424 19:43:15.523"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:43:18.528" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:43:18.524" endtime="20240424 19:43:18.528"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:43:21.529" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:43:21.529" endtime="20240424 19:43:21.529"/>
</kw>
<msg timestamp="20240424 19:43:21.529" level="FAIL">Keyword 'Label Should Be Enabled' failed after retrying for 10 seconds. The last error was: Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:43:09.521" endtime="20240424 19:43:21.529"/>
</kw>
<status status="FAIL" starttime="20240424 19:42:48.948" endtime="20240424 19:43:21.529"/>
</kw>
<status status="FAIL" starttime="20240424 19:42:48.948" endtime="20240424 19:43:21.529">Several failures occurred:

1) Label 'Close' is not enabled

2) Keyword 'Label Should Be Enabled' failed after retrying for 10 seconds. The last error was: Label 'Open Models' is not enabled</status>
</kw>
<status status="FAIL" starttime="20240424 19:42:39.467" endtime="20240424 19:43:21.529">Teardown failed:
Several failures occurred:

1) Label 'Close' is not enabled

2) Keyword 'Label Should Be Enabled' failed after retrying for 10 seconds. The last error was: Label 'Open Models' is not enabled</status>
</test>
<test id="s1-s1-t10" name="Verify Add or Remove Model on Model Tree" line="82">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:21.529" endtime="20240424 19:43:21.529"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:43:21.529" endtime="20240424 19:43:21.644"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:21.644" endtime="20240424 19:43:21.648"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:43:21.648" endtime="20240424 19:43:21.648"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:21.648" endtime="20240424 19:43:21.657"/>
</kw>
<status status="PASS" starttime="20240424 19:43:21.644" endtime="20240424 19:43:21.657"/>
</kw>
<status status="PASS" starttime="20240424 19:43:21.529" endtime="20240424 19:43:21.657"/>
</kw>
<status status="PASS" starttime="20240424 19:43:21.529" endtime="20240424 19:43:21.657"/>
</kw>
<kw name="Given No Existing Model Is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:21.658" endtime="20240424 19:43:21.775"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:43:21.775" endtime="20240424 19:43:21.777"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:21.777" endtime="20240424 19:43:21.782"/>
</kw>
<status status="PASS" starttime="20240424 19:43:21.658" endtime="20240424 19:43:21.782"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:43:21.785" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:43:21.782" endtime="20240424 19:43:21.785"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:43:26.797" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:43:26.797" endtime="20240424 19:43:26.797"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:43:31.802" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:43:31.799" endtime="20240424 19:43:31.802"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:43:36.807" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:43:36.804" endtime="20240424 19:43:36.807"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:43:41.813" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:43:41.808" endtime="20240424 19:43:41.813"/>
</kw>
<msg timestamp="20240424 19:43:41.813" level="FAIL">Keyword 'Label Should Be Enabled' failed after retrying 5 times. The last error was: Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:43:21.782" endtime="20240424 19:43:41.813"/>
</kw>
<msg timestamp="20240424 19:43:41.813" level="INFO">${model_open} = False</msg>
<status status="PASS" starttime="20240424 19:43:21.782" endtime="20240424 19:43:41.813"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:43:41.813" endtime="20240424 19:43:41.922"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:41.922" endtime="20240424 19:43:41.937"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:43:41.937" endtime="20240424 19:43:41.943"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:41.943" endtime="20240424 19:43:41.979"/>
</kw>
<status status="PASS" starttime="20240424 19:43:41.922" endtime="20240424 19:43:41.979"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:43:41.979" endtime="20240424 19:43:41.995"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:43:41.995" endtime="20240424 19:43:41.999"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:43:52.008" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:43:41.999" endtime="20240424 19:43:52.008"/>
</kw>
<msg timestamp="20240424 19:43:52.008" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:43:41.999" endtime="20240424 19:43:52.008"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:43:52.008" endtime="20240424 19:43:52.008"/>
</kw>
<msg timestamp="20240424 19:43:52.008" level="INFO">${check_if_save_asked} = True</msg>
<status status="PASS" starttime="20240424 19:43:52.008" endtime="20240424 19:43:52.008"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:43:52.008" endtime="20240424 19:43:52.008"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:43:52.008" endtime="20240424 19:43:52.043"/>
</kw>
<status status="PASS" starttime="20240424 19:43:52.008" endtime="20240424 19:43:52.074"/>
</kw>
<status status="PASS" starttime="20240424 19:43:52.008" endtime="20240424 19:43:52.074"/>
</branch>
<status status="PASS" starttime="20240424 19:43:52.008" endtime="20240424 19:43:52.074"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:43:52.075" endtime="20240424 19:43:52.075"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:43:52.075" endtime="20240424 19:43:52.075"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:43:52.075" endtime="20240424 19:43:52.075"/>
</branch>
<status status="PASS" starttime="20240424 19:43:52.074" endtime="20240424 19:43:52.075"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:52.077" endtime="20240424 19:43:52.147"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:43:52.147" endtime="20240424 19:43:52.153"/>
</kw>
<status status="PASS" starttime="20240424 19:43:52.147" endtime="20240424 19:43:52.153"/>
</kw>
<status status="PASS" starttime="20240424 19:43:41.813" endtime="20240424 19:43:52.153"/>
</kw>
<status status="PASS" starttime="20240424 19:43:41.813" endtime="20240424 19:43:52.153"/>
</branch>
<status status="PASS" starttime="20240424 19:43:41.813" endtime="20240424 19:43:52.153"/>
</if>
<status status="PASS" starttime="20240424 19:43:21.657" endtime="20240424 19:43:52.153"/>
</kw>
<kw name="And IFC File Is Open" library="ModelHandlingResource">
<arg>${solibri_building_modified_ifc}</arg>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${file_name_with_path}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:52.153" endtime="20240424 19:43:52.159"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:43:52.159" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:43:52.159" endtime="20240424 19:43:52.159"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:43:52.159" endtime="20240424 19:43:52.159"/>
</kw>
<status status="PASS" starttime="20240424 19:43:52.159" endtime="20240424 19:43:52.159"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:52.159" endtime="20240424 19:43:52.167"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:43:52.167" endtime="20240424 19:43:52.169"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:52.169" endtime="20240424 19:43:52.202"/>
</kw>
<status status="PASS" starttime="20240424 19:43:52.159" endtime="20240424 19:43:52.202"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:43:52.202" endtime="20240424 19:43:52.279"/>
</kw>
<status status="PASS" starttime="20240424 19:43:52.202" endtime="20240424 19:43:52.279"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:43:52.279" endtime="20240424 19:43:52.283"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:43:52.283" endtime="20240424 19:43:52.288"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:43:52.288" endtime="20240424 19:43:53.604"/>
</kw>
<status status="PASS" starttime="20240424 19:43:52.288" endtime="20240424 19:43:53.604"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:43:53.604" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:43:53.604" endtime="20240424 19:43:53.604"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:43:53.604" endtime="20240424 19:43:53.604"/>
</return>
<msg timestamp="20240424 19:43:53.604" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:43:53.604" endtime="20240424 19:43:53.604"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:43:53.604" endtime="20240424 19:43:53.698"/>
</kw>
<status status="PASS" starttime="20240424 19:43:53.604" endtime="20240424 19:43:53.698"/>
</kw>
<status status="PASS" starttime="20240424 19:43:53.604" endtime="20240424 19:43:53.698"/>
</branch>
<status status="PASS" starttime="20240424 19:43:53.604" endtime="20240424 19:43:53.698"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:43:53.698" endtime="20240424 19:43:53.698"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:43:53.698" endtime="20240424 19:43:53.698"/>
</branch>
<status status="PASS" starttime="20240424 19:43:53.698" endtime="20240424 19:43:53.698"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:43:53.698" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\ifc</msg>
<msg timestamp="20240424 19:43:53.698" level="INFO">${filename} = Solibri Building - modified.ifc</msg>
<status status="PASS" starttime="20240424 19:43:53.698" endtime="20240424 19:43:53.698"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:43:53.698" level="INFO">${filename} = Solibri Building - modified</msg>
<msg timestamp="20240424 19:43:53.698" level="INFO">${ext} = ifc</msg>
<status status="PASS" starttime="20240424 19:43:53.698" endtime="20240424 19:43:53.698"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<status status="NOT RUN" starttime="20240424 19:43:53.705" endtime="20240424 19:43:53.705"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:43:53.698" endtime="20240424 19:43:53.705"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:43:53.705" endtime="20240424 19:43:53.855"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:53.855" endtime="20240424 19:43:53.861"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:43:53.861" endtime="20240424 19:43:53.909"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:53.909" endtime="20240424 19:43:53.929"/>
</kw>
<status status="PASS" starttime="20240424 19:43:53.855" endtime="20240424 19:43:53.929"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:43:55.989" level="INFO">2024-04-24 19:43:54.379+0000 [Thread-510] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 0 ms.
2024-04-24 19:43:54.379+0000 [Thread-510] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 665 ms (using 1 threads)
2024-04-24 19:43:54.411+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 32 ms
2024-04-24 19:43:55.390+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building - modified) converted in: 1011 ms.</msg>
<status status="PASS" starttime="20240424 19:43:53.929" endtime="20240424 19:43:55.989"/>
</kw>
<status status="PASS" starttime="20240424 19:43:53.929" endtime="20240424 19:43:55.989"/>
</kw>
<msg timestamp="20240424 19:43:55.991" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:43:53.929" endtime="20240424 19:43:55.991"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:43:55.991" endtime="20240424 19:43:56.001"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:43:56.001" endtime="20240424 19:43:56.187"/>
</kw>
<status status="PASS" starttime="20240424 19:43:55.991" endtime="20240424 19:43:56.187"/>
</branch>
<status status="PASS" starttime="20240424 19:43:55.991" endtime="20240424 19:43:56.187"/>
</if>
<status status="PASS" starttime="20240424 19:43:53.705" endtime="20240424 19:43:56.187"/>
</kw>
<status status="PASS" starttime="20240424 19:43:53.705" endtime="20240424 19:43:56.187"/>
</branch>
<status status="PASS" starttime="20240424 19:43:53.698" endtime="20240424 19:43:56.187"/>
</if>
<status status="PASS" starttime="20240424 19:43:52.153" endtime="20240424 19:43:56.187"/>
</kw>
<status status="PASS" starttime="20240424 19:43:52.153" endtime="20240424 19:43:56.187"/>
</kw>
<kw name="And IFC File Is Added" library="model_handling_flow_step_definitions">
<arg>${crane_ifc}</arg>
<kw name="Add Model From File Chooser" library="ModelHandlingResource">
<arg>${filename}</arg>
<doc>Adds a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:56.187" endtime="20240424 19:43:56.191"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:43:56.194" level="INFO">${context} = Solibri Office - Solibri Building - modified</msg>
<status status="PASS" starttime="20240424 19:43:56.191" endtime="20240424 19:43:56.194"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:43:56.194" endtime="20240424 19:43:56.194"/>
</kw>
<status status="PASS" starttime="20240424 19:43:56.191" endtime="20240424 19:43:56.194"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>FILE</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:56.194" endtime="20240424 19:43:56.197"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:43:56.197" endtime="20240424 19:43:56.197"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:56.197" endtime="20240424 19:43:56.207"/>
</kw>
<status status="PASS" starttime="20240424 19:43:56.194" endtime="20240424 19:43:56.207"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:43:56.207" endtime="20240424 19:43:56.216"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:43:56.216" endtime="20240424 19:43:56.316"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_add_models_title}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:43:56.316" endtime="20240424 19:43:56.318"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_add_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:43:56.318" endtime="20240424 19:43:56.623"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:43:56.623" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:43:56.623" endtime="20240424 19:43:56.623"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:43:56.623" endtime="20240424 19:43:56.623"/>
</return>
<msg timestamp="20240424 19:43:56.623" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20240424 19:43:56.623" endtime="20240424 19:43:56.623"/>
</kw>
<if>
<branch type="IF" condition="'${os}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:43:56.638" endtime="20240424 19:43:56.728"/>
</kw>
<status status="PASS" starttime="20240424 19:43:56.638" endtime="20240424 19:43:56.732"/>
</kw>
<status status="PASS" starttime="20240424 19:43:56.623" endtime="20240424 19:43:56.732"/>
</branch>
<status status="PASS" starttime="20240424 19:43:56.623" endtime="20240424 19:43:56.732"/>
</if>
<if>
<branch type="IF" condition="'${os}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:43:56.732" endtime="20240424 19:43:56.732"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:43:56.732" endtime="20240424 19:43:56.732"/>
</branch>
<status status="PASS" starttime="20240424 19:43:56.732" endtime="20240424 19:43:56.732"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:43:56.732" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\ifc</msg>
<msg timestamp="20240424 19:43:56.732" level="INFO">${filename} = Crane.ifc</msg>
<status status="PASS" starttime="20240424 19:43:56.732" endtime="20240424 19:43:56.732"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:43:56.732" level="INFO">${filename} = Crane</msg>
<msg timestamp="20240424 19:43:56.732" level="INFO">${ext} = ifc</msg>
<status status="PASS" starttime="20240424 19:43:56.732" endtime="20240424 19:43:56.732"/>
</kw>
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<msg timestamp="20240424 19:43:56.886" level="INFO">2024-04-24 19:43:56.808+0000 [Thread-560] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 0 ms.
2024-04-24 19:43:56.808+0000 [Thread-560] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 58 ms (using 1 threads)
2024-04-24 19:43:56.808+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 0 ms
2024-04-24 19:43:56.808+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Crane) converted in: 0 ms.</msg>
<status status="PASS" starttime="20240424 19:43:56.732" endtime="20240424 19:43:56.886"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:56.886" endtime="20240424 19:43:57.202"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:43:57.202" endtime="20240424 19:43:57.205"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:57.205" endtime="20240424 19:43:57.205"/>
</kw>
<status status="PASS" starttime="20240424 19:43:56.886" endtime="20240424 19:43:57.205"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:43:57.205" endtime="20240424 19:43:57.221"/>
</kw>
<status status="PASS" starttime="20240424 19:43:57.205" endtime="20240424 19:43:57.221"/>
</kw>
<msg timestamp="20240424 19:43:57.221" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:43:57.205" endtime="20240424 19:43:57.221"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:43:57.221" endtime="20240424 19:43:57.236"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:43:57.236" endtime="20240424 19:43:57.390"/>
</kw>
<status status="PASS" starttime="20240424 19:43:57.221" endtime="20240424 19:43:57.390"/>
</branch>
<status status="PASS" starttime="20240424 19:43:57.221" endtime="20240424 19:43:57.390"/>
</if>
<status status="PASS" starttime="20240424 19:43:56.732" endtime="20240424 19:43:57.390"/>
</kw>
<status status="PASS" starttime="20240424 19:43:56.187" endtime="20240424 19:43:57.390"/>
</kw>
<status status="PASS" starttime="20240424 19:43:56.187" endtime="20240424 19:43:57.390"/>
</kw>
<kw name="Then There Are Two Models In Model Tree" library="model_handling_flow_step_definitions">
<kw name="Switch to Containment Hierarchy" library="ModelTreeResource">
<doc>Opens Containment tree in Component hierarchy ModelViewComponentHierarchyPanel</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:57.390" endtime="20240424 19:43:57.390"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:43:57.390" endtime="20240424 19:43:57.402"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${select_containment_hierarchy}</var>
<arg>Toggle Button Should Be Selected</arg>
<arg>2</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Toggle Button Should Be Selected" library="SwingRobot">
<arg>2</arg>
<doc>Fails if toggle button is not selected.</doc>
<status status="PASS" starttime="20240424 19:43:57.402" endtime="20240424 19:43:57.402"/>
</kw>
<msg timestamp="20240424 19:43:57.402" level="INFO">${select_containment_hierarchy} = True</msg>
<status status="PASS" starttime="20240424 19:43:57.402" endtime="20240424 19:43:57.402"/>
</kw>
<if>
<branch type="IF" condition="${select_containment_hierarchy} == ${False}">
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:43:57.402" endtime="20240424 19:43:57.402"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:43:57.402" endtime="20240424 19:43:57.402"/>
</branch>
<status status="PASS" starttime="20240424 19:43:57.402" endtime="20240424 19:43:57.402"/>
</if>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:43:57.402" endtime="20240424 19:43:57.415"/>
</kw>
<status status="PASS" starttime="20240424 19:43:57.390" endtime="20240424 19:43:57.418"/>
</kw>
<kw name="Get Number Of Models In Model Tree" library="ModelTreeResource">
<var>${model_count_in_modeltree}</var>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${model_count_in_modeltree}</var>
<arg>ContainmentTree</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:43:57.418" level="INFO">${model_count_in_modeltree} = 2</msg>
<status status="PASS" starttime="20240424 19:43:57.418" endtime="20240424 19:43:57.418"/>
</kw>
<return>
<value>${model_count_in_modeltree}</value>
<status status="PASS" starttime="20240424 19:43:57.418" endtime="20240424 19:43:57.418"/>
</return>
<msg timestamp="20240424 19:43:57.418" level="INFO">${model_count_in_modeltree} = 2</msg>
<status status="PASS" starttime="20240424 19:43:57.418" endtime="20240424 19:43:57.418"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${2}</arg>
<arg>${model_count_in_modeltree}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:43:57.418" endtime="20240424 19:43:57.418"/>
</kw>
<status status="PASS" starttime="20240424 19:43:57.390" endtime="20240424 19:43:57.418"/>
</kw>
<kw name="Then Verify Model Name In Model Tree" library="ModelTreeResource">
<arg>1</arg>
<arg>Solibri Building - modified</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:57.418" endtime="20240424 19:43:57.423"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Table Should Not Be Empty</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Table Should Not Be Empty" library="Common">
<arg>0</arg>
<arg>0</arg>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>${table_locator}</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:43:57.423" level="INFO">${row_count} = 2</msg>
<status status="PASS" starttime="20240424 19:43:57.423" endtime="20240424 19:43:57.423"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${row_count} &gt; ${table_rows}</arg>
<arg>The table has fewer rows than expected</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240424 19:43:57.423" endtime="20240424 19:43:57.423"/>
</kw>
<status status="PASS" starttime="20240424 19:43:57.423" endtime="20240424 19:43:57.423"/>
</kw>
<status status="PASS" starttime="20240424 19:43:57.423" endtime="20240424 19:43:57.423"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${modelnames_in_modeltree}</var>
<arg>ContainmentTree</arg>
<arg>${modelname_tobe_get_by_index}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:43:57.431" level="INFO">${modelnames_in_modeltree} = Solibri Building - modified</msg>
<status status="PASS" starttime="20240424 19:43:57.423" endtime="20240424 19:43:57.431"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${modelnames_in_modeltree}</arg>
<arg>${modelname_to_verify}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:43:57.431" endtime="20240424 19:43:57.431"/>
</kw>
<status status="PASS" starttime="20240424 19:43:57.418" endtime="20240424 19:43:57.431"/>
</kw>
<kw name="Then Verify Model Name In Model Tree" library="ModelTreeResource">
<arg>0</arg>
<arg>Crane</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:57.431" endtime="20240424 19:43:57.433"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Table Should Not Be Empty</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Table Should Not Be Empty" library="Common">
<arg>0</arg>
<arg>0</arg>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>${table_locator}</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:43:57.433" level="INFO">${row_count} = 2</msg>
<status status="PASS" starttime="20240424 19:43:57.433" endtime="20240424 19:43:57.433"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${row_count} &gt; ${table_rows}</arg>
<arg>The table has fewer rows than expected</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240424 19:43:57.433" endtime="20240424 19:43:57.433"/>
</kw>
<status status="PASS" starttime="20240424 19:43:57.433" endtime="20240424 19:43:57.433"/>
</kw>
<status status="PASS" starttime="20240424 19:43:57.433" endtime="20240424 19:43:57.433"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${modelnames_in_modeltree}</var>
<arg>ContainmentTree</arg>
<arg>${modelname_tobe_get_by_index}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:43:57.449" level="INFO">${modelnames_in_modeltree} = (B) Crane</msg>
<status status="PASS" starttime="20240424 19:43:57.433" endtime="20240424 19:43:57.449"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${modelnames_in_modeltree}</arg>
<arg>${modelname_to_verify}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:43:57.449" endtime="20240424 19:43:57.449"/>
</kw>
<status status="PASS" starttime="20240424 19:43:57.431" endtime="20240424 19:43:57.449"/>
</kw>
<kw name="And Remove Model" library="model_handling_flow_step_definitions">
<arg>2</arg>
<arg>0</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:43:57.449" endtime="20240424 19:43:57.449"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>ContainmentTree</arg>
<arg>${row_to_be_remove}</arg>
<arg>0</arg>
<arg>Remove From Model</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 19:43:57.449" endtime="20240424 19:43:57.920"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<var>${remove_dialog_visible}</var>
<arg>5x</arg>
<arg>2x</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Select Dialog</arg>
<arg>Remove from Model</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<arg>Select Dialog</arg>
<arg>Remove from Model</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Remove from Model</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:43:57.920" endtime="20240424 19:43:57.977"/>
</kw>
<status status="PASS" starttime="20240424 19:43:57.920" endtime="20240424 19:43:57.977"/>
</kw>
<msg timestamp="20240424 19:43:57.977" level="INFO">${remove_dialog_visible} = True</msg>
<status status="PASS" starttime="20240424 19:43:57.920" endtime="20240424 19:43:57.977"/>
</kw>
<if>
<branch type="IF" condition="${remove_dialog_visible}">
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:43:57.977" endtime="20240424 19:43:58.120"/>
</kw>
<status status="PASS" starttime="20240424 19:43:57.977" endtime="20240424 19:43:58.120"/>
</branch>
<status status="PASS" starttime="20240424 19:43:57.977" endtime="20240424 19:43:58.120"/>
</if>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${select_dialog_visible}</var>
<arg>Select Dialog</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:44:08.128" level="FAIL">org.netbeans.jemmy.TimeoutExpiredException: Dialog with name or title 'Select'</msg>
<status status="FAIL" starttime="20240424 19:43:58.120" endtime="20240424 19:44:08.128"/>
</kw>
<msg timestamp="20240424 19:44:08.128" level="INFO">${select_dialog_visible} = False</msg>
<status status="PASS" starttime="20240424 19:43:58.120" endtime="20240424 19:44:08.128"/>
</kw>
<if>
<branch type="IF" condition="${select_dialog_visible}">
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:44:08.128" endtime="20240424 19:44:08.128"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:44:08.128" endtime="20240424 19:44:08.128"/>
</branch>
<status status="PASS" starttime="20240424 19:44:08.128" endtime="20240424 19:44:08.128"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:44:08.128" endtime="20240424 19:44:08.138"/>
</kw>
<status status="PASS" starttime="20240424 19:43:57.449" endtime="20240424 19:44:08.138"/>
</kw>
<kw name="Then Verify Model Name In Model Tree" library="ModelTreeResource">
<arg>0</arg>
<arg>Solibri Building - modified</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:44:08.138" endtime="20240424 19:44:08.138"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Table Should Not Be Empty</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Table Should Not Be Empty" library="Common">
<arg>0</arg>
<arg>0</arg>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>${table_locator}</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:44:08.143" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:44:08.138" endtime="20240424 19:44:08.143"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${row_count} &gt; ${table_rows}</arg>
<arg>The table has fewer rows than expected</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240424 19:44:08.143" endtime="20240424 19:44:08.143"/>
</kw>
<status status="PASS" starttime="20240424 19:44:08.138" endtime="20240424 19:44:08.143"/>
</kw>
<status status="PASS" starttime="20240424 19:44:08.138" endtime="20240424 19:44:08.143"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${modelnames_in_modeltree}</var>
<arg>ContainmentTree</arg>
<arg>${modelname_tobe_get_by_index}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:44:08.150" level="INFO">${modelnames_in_modeltree} = Solibri Building - modified</msg>
<status status="PASS" starttime="20240424 19:44:08.143" endtime="20240424 19:44:08.150"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${modelnames_in_modeltree}</arg>
<arg>${modelname_to_verify}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:44:08.150" endtime="20240424 19:44:08.150"/>
</kw>
<status status="PASS" starttime="20240424 19:44:08.138" endtime="20240424 19:44:08.150"/>
</kw>
<kw name="When Model Is Saved To" library="model_handling_flow_step_definitions">
<arg>${test_files_folder}</arg>
<kw name="Save Model" library="ModelHandlingResource">
<arg>${button_save_title}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:44:08.150" endtime="20240424 19:44:08.150"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:44:08.150" endtime="20240424 19:44:08.263"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:44:08.263" endtime="20240424 19:44:08.267"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:44:08.267" endtime="20240424 19:44:08.272"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:44:08.272" endtime="20240424 19:44:08.377"/>
</kw>
<status status="PASS" starttime="20240424 19:44:08.263" endtime="20240424 19:44:08.377"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:44:08.377" endtime="20240424 19:44:08.383"/>
</kw>
<status status="PASS" starttime="20240424 19:44:08.377" endtime="20240424 19:44:08.383"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:44:08.383" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:44:08.383" endtime="20240424 19:44:08.383"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:44:08.383" endtime="20240424 19:44:08.383"/>
</return>
<msg timestamp="20240424 19:44:08.383" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20240424 19:44:08.383" endtime="20240424 19:44:08.383"/>
</kw>
<if>
<branch type="IF" condition="'${os}' == 'Windows'">
<kw name="Check If File Already Exists" library="ModelHandlingResource">
<var>${file_exists}</var>
<arg>${test_files_folder}\\Solibri Building.smc</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${file_exist}</var>
<arg>File Should Exist</arg>
<arg>${filename_to_check}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${filename_to_check}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20240424 19:44:08.383" level="INFO" html="true">File '&lt;a href="file://C:\Users\runneradmin\Documents\RFTestFiles\Solibri Building.smc"&gt;C:\Users\runneradmin\Documents\RFTestFiles\Solibri Building.smc&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20240424 19:44:08.383" endtime="20240424 19:44:08.383"/>
</kw>
<msg timestamp="20240424 19:44:08.383" level="INFO">${file_exist} = True</msg>
<status status="PASS" starttime="20240424 19:44:08.383" endtime="20240424 19:44:08.383"/>
</kw>
<return>
<value>${file_exist}</value>
<status status="PASS" starttime="20240424 19:44:08.383" endtime="20240424 19:44:08.383"/>
</return>
<msg timestamp="20240424 19:44:08.383" level="INFO">${file_exists} = True</msg>
<status status="PASS" starttime="20240424 19:44:08.383" endtime="20240424 19:44:08.383"/>
</kw>
<if>
<branch type="IF" condition="${file_exists}">
<kw name="Over Write File" library="ModelHandlingResource">
<arg>${test_files_folder}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:44:08.383" endtime="20240424 19:44:08.390"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>Save Model as</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:44:08.390" endtime="20240424 19:44:08.543"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>2</arg>
<arg>Select Dialog</arg>
<arg>Save As</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:44:09.880" level="INFO">2024-04-24 19:44:08.545+0000 [Save as model] WARN  c.s.s.p.c.c.CheckingState - invalid state transition asked, IdleState.requestStopChecking</msg>
<status status="PASS" starttime="20240424 19:44:08.543" endtime="20240424 19:44:09.880"/>
</kw>
<status status="PASS" starttime="20240424 19:44:08.543" endtime="20240424 19:44:09.880"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${folder_to_save}\\Solibri Building.smc</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:44:09.880" endtime="20240424 19:44:10.052"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>2</arg>
<arg>Select Dialog</arg>
<arg>Confirm Save As</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Confirm Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:44:10.052" endtime="20240424 19:44:10.056"/>
</kw>
<status status="PASS" starttime="20240424 19:44:10.052" endtime="20240424 19:44:10.056"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Yes</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:44:10.056" endtime="20240424 19:44:10.082"/>
</kw>
<status status="PASS" starttime="20240424 19:44:08.383" endtime="20240424 19:44:10.082"/>
</kw>
<status status="PASS" starttime="20240424 19:44:08.383" endtime="20240424 19:44:10.082"/>
</branch>
<branch type="ELSE">
<kw name="Click On Component" library="SwingRobot">
<arg>${save_button}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="NOT RUN" starttime="20240424 19:44:10.082" endtime="20240424 19:44:10.082"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>2</arg>
<arg>Select Dialog</arg>
<arg>Save As</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20240424 19:44:10.082" endtime="20240424 19:44:10.082"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${test_files_folder}\\Solibri Building.smc</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="NOT RUN" starttime="20240424 19:44:10.082" endtime="20240424 19:44:10.082"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:44:10.082" endtime="20240424 19:44:10.082"/>
</branch>
<status status="PASS" starttime="20240424 19:44:08.383" endtime="20240424 19:44:10.082"/>
</if>
<status status="PASS" starttime="20240424 19:44:08.383" endtime="20240424 19:44:10.082"/>
</branch>
<status status="PASS" starttime="20240424 19:44:08.383" endtime="20240424 19:44:10.082"/>
</if>
<if>
<branch type="IF" condition="'${os}' == 'Darwin'">
<kw name="Get Length" library="BuiltIn">
<var>${length}</var>
<arg>${test_files_folder}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20240424 19:44:10.082" endtime="20240424 19:44:10.082"/>
</kw>
<if>
<branch type="IF" condition="${length} &gt; 0">
<kw name="Navigate To Folder" library="ModelHandlingResource">
<arg>${test_files_folder}</arg>
<tag>mac</tag>
<status status="NOT RUN" starttime="20240424 19:44:10.082" endtime="20240424 19:44:10.082"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:44:10.082" endtime="20240424 19:44:10.082"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:44:10.082" endtime="20240424 19:44:10.082"/>
</if>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${fileName}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<status status="NOT RUN" starttime="20240424 19:44:10.082" endtime="20240424 19:44:10.082"/>
</kw>
<kw name="Check If File Already Exists" library="ModelHandlingResource">
<var>${file_exists}</var>
<arg>${test_files_folder}/${fileName}</arg>
<status status="NOT RUN" starttime="20240424 19:44:10.082" endtime="20240424 19:44:10.082"/>
</kw>
<if>
<branch type="IF" condition="${file_exists}">
<kw name="Over Write File" library="ModelHandlingResource">
<arg>${test_files_folder}</arg>
<status status="NOT RUN" starttime="20240424 19:44:10.082" endtime="20240424 19:44:10.082"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:44:10.082" endtime="20240424 19:44:10.082"/>
</branch>
<branch type="ELSE">
<kw name="Click On Component" library="SwingRobot">
<arg>${save_button}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="NOT RUN" starttime="20240424 19:44:10.082" endtime="20240424 19:44:10.082"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:44:10.082" endtime="20240424 19:44:10.082"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Save As</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:44:10.082" endtime="20240424 19:44:10.082"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:44:10.082" endtime="20240424 19:44:10.082"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:44:10.082" endtime="20240424 19:44:10.082"/>
</if>
<status status="NOT RUN" starttime="20240424 19:44:10.082" endtime="20240424 19:44:10.082"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.082" endtime="20240424 19:44:10.082"/>
</if>
<kw name="Wait For Project To Save" library="ModelHandlingResource">
<kw name="Log To Console" library="BuiltIn">
<arg>Waiting For Project To Save</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:44:10.082" endtime="20240424 19:44:10.082"/>
</kw>
<kw name="Wait For Saving Progress To Complete" library="ModelHandlingResource">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:44:10.082" endtime="20240424 19:44:10.194"/>
</kw>
<kw name="List Components In Context" library="SwingRobot">
<arg>formatted</arg>
<doc>Prints components (their types and their internal names) from the selected context.</doc>
<msg timestamp="20240424 19:44:10.197" level="INFO">Level: 0 Component: com.solibri.saf.core.ApplicationFrame Index: 0 Name: frame0
    Level: 1 Component: javax.swing.JRootPane Index: 0 Name: null
       Level: 2 Component: javax.swing.JPanel Index: 0 Name: null.glassPane
       Level: 2 Component: javax.swing.JLayeredPane Index: 0 Name: null.layeredPane
          Level: 3 Component: com.solibri.modelchecker.ui.SmcPerspectivePanel Index: 1 Name: null
             Level: 4 Component: javax.swing.JPanel Index: 2 Name: null
                Level: 5 Component: javax.swing.JPanel Index: 3 Name: null
                   Level: 6 Component: com.solibri.saf.plugins.java3dplugin.actions.ThreeDViewToolbar Index: 4 Name: null
                      Level: 7 Component: com.solibri.saf.plugins.java3dplugin.actions.ThreeDViewToolbar$ToolbarWithThemeIconSize Index: null Name: 3D
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 0 Name: Undo
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 1 Name: Redo
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 2 Name: Spin
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 3 Name: dropDownButton
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 4 Name: Info
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 5 Name: dropDownButton
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 6 Name: Show All
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 7 Name: Show Unselected Transparent
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 8 Name: Show Selected
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 9 Name: Paint Visible With Current Color
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 10 Name: dropDownButton
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 11 Name: Show / Hide Space
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 12 Name: dropDownButton
                         Level: 8 Component: com.solibri.saf.plugins.java3dplugin.actions.FloorsVisibilityPopupMenuButton Index: 13 Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 14 Name: Zoom Extents
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 15 Name: Zoom In
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 16 Name: Zoom Out
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 17 Name: Zoom Selected
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 18 Name: Top Front Right
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 19 Name: dropDownButton
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 20 Name: Change Camera Projection
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$ToolBarToggleButton Index: 0 Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$ToolBarToggleButton Index: 1 Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 21 Name: null
                      Level: 7 Component: com.solibri.saf.core.ui.SearchField Index: 5 Name: null
                         Level: 8 Component: javax.swing.JTextField Index: 0 Name: null
                         Level: 8 Component: javax.swing.JButton Index: 22 Name: null
             Level: 4 Component: com.solibri.saf.core.ui.SafPanel Index: 6 Name: null
                Level: 5 Component: com.solibri.saf.core.ui.ViewSplitPane Index: 7 Name: null
                   Level: 6 Component: SMC_FILE Index: 8 Name: null
                      Level: 7 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel Index: 9 Name: FilePanel
                         Level: 8 Component: javax.swing.JPanel Index: 10 Name: null
                         Level: 8 Component: javax.swing.JToolBar Index: null Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$TransparentGradientPanel Index: 11 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 0 Name: Open Models
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 1 Name: Add Models
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 2 Name: Update Models
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 3 Name: Save Model
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 4 Name: Save Model as
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 5 Name: Security Settings
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 6 Name: Close
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 12 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 13 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 7 Name: Recent
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 8 Name: Integrations
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 9 Name: Roles
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 10 Name: Solution Center
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 11 Name: Settings
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 12 Name: Help
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 14 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 15 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 13 Name: Ruleset Manager
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 16 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 17 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 14 Name: Exit
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 18 Name: null
                         Level: 8 Component: com.solibri.saf.core.ui.SafPanel Index: 19 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.RecentPanel Index: 20 Name: RECENT
                               Level: 10 Component: com.solibri.saf.core.ui.ViewSplitPane Index: 21 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 22 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 15 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 0 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 0 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 23 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 24 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 1 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 25 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 26 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 0 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 0 Name: SafTable
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 0 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 1 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ViewSplitPane$Divider Index: 23 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 24 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 16 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 1 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 2 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 27 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 28 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 3 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 29 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 30 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 2 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 1 Name: SafTable
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 1 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 3 Name: null
                            Level: 9 Component: javax.swing.JPanel Index: 25 Name: REMOTE INTEGRATIONS
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 26 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 27 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 17 Name: null
                                     Level: 12 Component: javax.swing.JTextArea Index: 1 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 28 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 18 Name: null
                                     Level: 12 Component: com.solibri.saf.core.opencdedocuments.ConnectedServerLabel Index: 19 Name: null
                                     Level: 12 Component: javax.swing.JButton Index: 31 Name: null
                                     Level: 12 Component: javax.swing.JButton Index: 32 Name: null
                                     Level: 12 Component: javax.swing.JButton Index: 33 Name: null
                                     Level: 12 Component: com.solibri.saf.core.ui.SafPanel Index: 29 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 30 Name: null
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 31 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 20 Name: null
                                  Level: 11 Component: com.solibri.sae.ui.RoundedPanel Index: 32 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 2 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 4 Name: null
                                           Level: 14 Component: javax.swing.JPanel Index: 33 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 34 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 35 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 21 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 22 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 23 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 2 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 36 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 2 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 24 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 25 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 37 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 38 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 26 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 27 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 28 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 3 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 39 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 3 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 29 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 30 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 40 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 41 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 31 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 32 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 33 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 4 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 42 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 4 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 34 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 35 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 43 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 44 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 36 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 37 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 38 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 5 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 45 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 5 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 39 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 40 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 4 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 34 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 35 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 5 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 36 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 37 Name: null
                            Level: 9 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel Index: 46 Name: ROLES
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 47 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 41 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 42 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 43 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 44 Name: null
                                  Level: 11 Component: javax.swing.JTextField Index: 6 Name: roleNameText
                                  Level: 11 Component: com.solibri.saf.core.ui.HtmlEditorPanel Index: 48 Name: null
                                     Level: 12 Component: com.solibri.saf.core.DefaultViewToolBar Index: null Name: 
                                        Level: 13 Component: com.solibri.sae.ui.ToolBarButton Index: 38 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 3 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 5 Name: null
                                           Level: 14 Component: javax.swing.JTextPane Index: 7 Name: roleDescription
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 6 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 39 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 40 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 7 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 41 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 42 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$FileChooserPanel Index: 49 Name: null
                                     Level: 12 Component: javax.swing.JTextField Index: 8 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 43 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$LayoutFileChooserPanel Index: 50 Name: null
                                     Level: 12 Component: javax.swing.JTextField Index: 9 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 44 Name: null
                                  Level: 11 Component: com.solibri.sae.ui.JDefaultButton Index: 45 Name: null
                                  Level: 11 Component: com.solibri.sae.ui.ToolBarButton Index: 46 Name: Remove Default Layout Set
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 51 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.ResourceTablePanel Index: 52 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 45 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 4 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 8 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 47 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 48 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 9 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 49 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 50 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 6 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 2 Name: RULESETS
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 2 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 7 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 51 Name: Add Rulesets...
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 52 Name: Remove Rulesets
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.ResourceTablePanel Index: 53 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 46 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 5 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 10 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 53 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 54 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 11 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 55 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 56 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 8 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 3 Name: CLASSIFICATIONS
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 3 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 9 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 57 Name: Add Classifications...
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 58 Name: Remove Classifications
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.ResourceTablePanel Index: 54 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 47 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 6 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 12 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 59 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 60 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 13 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 61 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 62 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 10 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 4 Name: ITOS
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 4 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 11 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 63 Name: Add Information Takeoff Definitions...
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 64 Name: Remove Information Takeoff Definitions
                               Level: 10 Component: javax.swing.JSeparator Index: null Name: null
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 55 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$NamedActionButton Index: 65 Name: Save
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$NamedActionButton Index: 66 Name: Save As
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$NamedActionButton Index: 67 Name: Revert
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.SolutionCenterPanel Index: 56 Name: Solibri Solution Center
                               Level: 10 Component: javax.swing.JScrollPane Index: 7 Name: null
                                  Level: 11 Component: javax.swing.JViewport Index: 12 Name: null
                                     Level: 12 Component: javax.swing.JPanel Index: 57 Name: null
                                        Level: 13 Component: com.solibri.saf.core.ui.AntialisedLabel Index: 48 Name: null
                                        Level: 13 Component: com.solibri.saf.core.ui.AntialisedLabel Index: 49 Name: null
                                        Level: 13 Component: javax.swing.JPanel Index: 58 Name: null
                                        Level: 13 Component: javax.swing.JPanel Index: 59 Name: null
                                  Level: 11 Component: javax.swing.JScrollPane$ScrollBar Index: 14 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 68 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 69 Name: null
                                  Level: 11 Component: javax.swing.JScrollPane$ScrollBar Index: 15 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 70 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 71 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 60 Name: null
                                  Level: 11 Component: javax.swing.JTextPane Index: 10 Name: null
                                  Level: 11 Component: javax.swing.JButton Index: 72 Name: null
                                  Level: 11 Component: javax.swing.JPanel Index: 61 Name: null
                                     Level: 12 Component: javax.swing.JTextPane Index: 11 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 62 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.AntialisedLabel Index: 50 Name: null
                                  Level: 11 Component: javax.swing.JProgressBar Index: null Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.SettingsPanel Index: 63 Name: SETTINGS
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 51 Name: Layouts
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 52 Name: General
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 53 Name: Units
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 54 Name: Proxy Server Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 55 Name: Report Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 56 Name: Discipline and Color Map...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 57 Name: Checking...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 58 Name: Info...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 59 Name: IFC Import Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 60 Name: Presentation...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 61 Name: 3D...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 62 Name: Dimension...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 63 Name: Markup...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 64 Name: Sectioning...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 65 Name: Footprints...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 66 Name: Navigation Map...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 67 Name: DWG Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 68 Name: Hyperlink Templates...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 69 Name: BCF Live Connector...
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.HelpPanel Index: 64 Name: HELP
                               Level: 10 Component: javax.swing.JPanel Index: 65 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 70 Name: Help
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 71 Name: &lt;html&gt;&lt;u&gt;Support&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 72 Name: &lt;html&gt;&lt;u&gt;Feedback&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 73 Name: &lt;html&gt;&lt;u&gt;Tutorials&lt;/u&gt;
                                  Level: 11 Component: javax.swing.JSeparator Index: null Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 74 Name: &lt;html&gt;&lt;u&gt;Solibri Solution Center&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 75 Name: &lt;html&gt;&lt;u&gt;Solibri&lt;/u&gt;
                                  Level: 11 Component: javax.swing.JSeparator Index: null Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 76 Name: &lt;html&gt;&lt;u&gt;Check for Updates&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 77 Name: License Key...
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 78 Name: Borrow License...
                                  Level: 11 Component: javax.swing.JSeparator Index: null Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 79 Name: License Agreement...
                               Level: 10 Component: com.solibri.modelchecker.plugins.fileplugin.ui.InfoPanel Index: 66 Name: INFO
             Level: 4 Component: com.solibri.modelchecker.core.SmcPerspective$1 Index: null Name: Searchbar
                Level: 5 Component: com.solibri.modelchecker.core.SmcPerspective$ToDoToolBarButton Index: 73 Name: null
                Level: 5 Component: com.solibri.sae.ui.ToolBarButton Index: 74 Name: VIEWS
                Level: 5 Component: javax.swing.JButton Index: 75 Name: null
             Level: 4 Component: javax.swing.JPanel Index: 67 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 80 Name: null
                Level: 5 Component: javax.swing.JPanel Index: 68 Name: progressPanel
                   Level: 6 Component: javax.swing.JPanel Index: 69 Name: progressBarAndLabelPanel
                      Level: 7 Component: javax.swing.JProgressBar Index: null Name: thebar
                      Level: 7 Component: javax.swing.JLabel Index: 81 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 82 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 83 Name: Task
                Level: 5 Component: javax.swing.JLabel Index: 84 Name: null
                Level: 5 Component: javax.swing.JPanel Index: 70 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 85 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 86 Name: Selected
                Level: 5 Component: javax.swing.JLabel Index: 87 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 88 Name: SlideTrackingId
                Level: 5 Component: javax.swing.JLabel Index: 89 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 90 Name: SlideStatus
                Level: 5 Component: javax.swing.JLabel Index: 91 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 92 Name: Slide
                Level: 5 Component: javax.swing.JLabel Index: 93 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 94 Name: Coordinates
                Level: 5 Component: javax.swing.JLabel Index: 95 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 96 Name: Location
             Level: 4 Component: javax.swing.JPanel Index: 71 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 97 Name: null
             Level: 4 Component: javax.swing.JToolBar Index: null Name: Solibri Office
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 98 Name: FILE
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 99 Name: MODEL
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 100 Name: CHECKING
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 101 Name: COMMUNICATION
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 102 Name: INFORMATION TAKEOFF
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 103 Name: BCF LIVE CONNECTOR
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 104 Name: SCORE
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 105 Name: AddLayoutButton
          Level: 3 Component: com.formdev.flatlaf.ui.FlatTitlePane Index: null Name: null
             Level: 4 Component: javax.swing.JPanel Index: 72 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 106 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$2 Index: null Name: null
             Level: 4 Component: com.formdev.flatlaf.ui.FlatTitlePane$1 Index: 107 Name: null
             Level: 4 Component: com.formdev.flatlaf.ui.FlatTitlePane$4 Index: 73 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 76 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 77 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 78 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 79 Name: null</msg>
<status status="PASS" starttime="20240424 19:44:10.194" endtime="20240424 19:44:10.197"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${OS}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:44:10.197" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:44:10.197" endtime="20240424 19:44:10.197"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:44:10.197" endtime="20240424 19:44:10.197"/>
</return>
<msg timestamp="20240424 19:44:10.197" level="INFO">${OS} = Windows</msg>
<status status="PASS" starttime="20240424 19:44:10.197" endtime="20240424 19:44:10.197"/>
</kw>
<if>
<branch type="IF" condition="'${OS}' == 'Windows'">
<while condition="${True}">
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.197" endtime="20240424 19:44:10.214"/>
</kw>
<msg timestamp="20240424 19:44:10.214" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.197" endtime="20240424 19:44:10.214"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.214" endtime="20240424 19:44:10.214"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.214" endtime="20240424 19:44:10.214"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.214" endtime="20240424 19:44:10.214"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.197" endtime="20240424 19:44:10.214"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.214" endtime="20240424 19:44:10.217"/>
</kw>
<msg timestamp="20240424 19:44:10.217" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.214" endtime="20240424 19:44:10.217"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.217" endtime="20240424 19:44:10.217"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.217" endtime="20240424 19:44:10.217"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.217" endtime="20240424 19:44:10.217"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.214" endtime="20240424 19:44:10.217"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.217" endtime="20240424 19:44:10.221"/>
</kw>
<msg timestamp="20240424 19:44:10.221" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.217" endtime="20240424 19:44:10.221"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.221" endtime="20240424 19:44:10.221"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.221" endtime="20240424 19:44:10.221"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.221" endtime="20240424 19:44:10.221"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.217" endtime="20240424 19:44:10.221"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.221" endtime="20240424 19:44:10.235"/>
</kw>
<msg timestamp="20240424 19:44:10.235" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.221" endtime="20240424 19:44:10.235"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.235" endtime="20240424 19:44:10.235"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.235" endtime="20240424 19:44:10.235"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.235" endtime="20240424 19:44:10.235"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.221" endtime="20240424 19:44:10.235"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.235" endtime="20240424 19:44:10.241"/>
</kw>
<msg timestamp="20240424 19:44:10.241" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.235" endtime="20240424 19:44:10.241"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.241" endtime="20240424 19:44:10.241"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.241" endtime="20240424 19:44:10.241"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.241" endtime="20240424 19:44:10.241"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.235" endtime="20240424 19:44:10.241"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.241" endtime="20240424 19:44:10.243"/>
</kw>
<msg timestamp="20240424 19:44:10.243" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.241" endtime="20240424 19:44:10.243"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.243" endtime="20240424 19:44:10.243"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.243" endtime="20240424 19:44:10.243"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.243" endtime="20240424 19:44:10.243"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.241" endtime="20240424 19:44:10.243"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.243" endtime="20240424 19:44:10.345"/>
</kw>
<msg timestamp="20240424 19:44:10.345" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.243" endtime="20240424 19:44:10.345"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.345" endtime="20240424 19:44:10.345"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.345" endtime="20240424 19:44:10.345"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.345" endtime="20240424 19:44:10.345"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.243" endtime="20240424 19:44:10.345"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.345" endtime="20240424 19:44:10.345"/>
</kw>
<msg timestamp="20240424 19:44:10.345" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.345" endtime="20240424 19:44:10.345"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.345" endtime="20240424 19:44:10.345"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.345" endtime="20240424 19:44:10.345"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.345" endtime="20240424 19:44:10.345"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.345" endtime="20240424 19:44:10.345"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.345" endtime="20240424 19:44:10.361"/>
</kw>
<msg timestamp="20240424 19:44:10.361" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.345" endtime="20240424 19:44:10.361"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.361"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.361"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.361"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.345" endtime="20240424 19:44:10.361"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.361"/>
</kw>
<msg timestamp="20240424 19:44:10.361" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.361"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.361"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.361"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.361"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.361"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.361"/>
</kw>
<msg timestamp="20240424 19:44:10.361" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.361"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.361"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.361"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.361"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.361"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.361"/>
</kw>
<msg timestamp="20240424 19:44:10.361" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.361"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.361"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.361"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.361"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.361"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.377"/>
</kw>
<msg timestamp="20240424 19:44:10.377" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.377"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.377" endtime="20240424 19:44:10.377"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.377" endtime="20240424 19:44:10.377"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.377" endtime="20240424 19:44:10.377"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.361" endtime="20240424 19:44:10.377"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.377" endtime="20240424 19:44:10.377"/>
</kw>
<msg timestamp="20240424 19:44:10.377" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.377" endtime="20240424 19:44:10.377"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.377" endtime="20240424 19:44:10.377"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.377" endtime="20240424 19:44:10.377"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.377" endtime="20240424 19:44:10.377"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.377" endtime="20240424 19:44:10.377"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.377" endtime="20240424 19:44:10.450"/>
</kw>
<msg timestamp="20240424 19:44:10.450" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.377" endtime="20240424 19:44:10.450"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.450" endtime="20240424 19:44:10.450"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.450" endtime="20240424 19:44:10.450"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.450" endtime="20240424 19:44:10.450"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.377" endtime="20240424 19:44:10.450"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.450" endtime="20240424 19:44:10.450"/>
</kw>
<msg timestamp="20240424 19:44:10.450" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.450" endtime="20240424 19:44:10.450"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.450" endtime="20240424 19:44:10.450"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.450" endtime="20240424 19:44:10.450"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.450" endtime="20240424 19:44:10.450"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.450" endtime="20240424 19:44:10.450"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.450" endtime="20240424 19:44:10.450"/>
</kw>
<msg timestamp="20240424 19:44:10.450" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.450" endtime="20240424 19:44:10.450"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.450" endtime="20240424 19:44:10.450"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.450" endtime="20240424 19:44:10.450"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.450" endtime="20240424 19:44:10.450"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.450" endtime="20240424 19:44:10.450"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.450" endtime="20240424 19:44:10.464"/>
</kw>
<msg timestamp="20240424 19:44:10.464" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.450" endtime="20240424 19:44:10.464"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.450" endtime="20240424 19:44:10.464"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</kw>
<msg timestamp="20240424 19:44:10.464" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</kw>
<msg timestamp="20240424 19:44:10.464" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</kw>
<msg timestamp="20240424 19:44:10.464" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</kw>
<msg timestamp="20240424 19:44:10.464" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.464"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.480"/>
</kw>
<msg timestamp="20240424 19:44:10.480" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.480"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.480"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.480"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.480"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.464" endtime="20240424 19:44:10.480"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.480"/>
</kw>
<msg timestamp="20240424 19:44:10.480" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.480"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.480"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.480"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.480"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.480"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.480"/>
</kw>
<msg timestamp="20240424 19:44:10.480" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.480"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.480"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.480"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.480"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.480"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.480"/>
</kw>
<msg timestamp="20240424 19:44:10.480" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.480"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.480"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.480"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.480"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.480"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.490"/>
</kw>
<msg timestamp="20240424 19:44:10.490" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.490"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.480" endtime="20240424 19:44:10.490"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</kw>
<msg timestamp="20240424 19:44:10.490" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</kw>
<msg timestamp="20240424 19:44:10.490" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</kw>
<msg timestamp="20240424 19:44:10.490" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</kw>
<msg timestamp="20240424 19:44:10.490" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.490"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.522"/>
</kw>
<msg timestamp="20240424 19:44:10.522" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.522"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.522" endtime="20240424 19:44:10.522"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.522" endtime="20240424 19:44:10.522"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.522" endtime="20240424 19:44:10.522"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.490" endtime="20240424 19:44:10.522"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.522" endtime="20240424 19:44:10.522"/>
</kw>
<msg timestamp="20240424 19:44:10.522" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.522" endtime="20240424 19:44:10.522"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.522" endtime="20240424 19:44:10.522"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.522" endtime="20240424 19:44:10.522"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.522" endtime="20240424 19:44:10.522"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.522" endtime="20240424 19:44:10.522"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.522" endtime="20240424 19:44:10.553"/>
</kw>
<msg timestamp="20240424 19:44:10.553" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.522" endtime="20240424 19:44:10.553"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.553" endtime="20240424 19:44:10.553"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.553" endtime="20240424 19:44:10.553"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.553" endtime="20240424 19:44:10.553"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.522" endtime="20240424 19:44:10.553"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.553" endtime="20240424 19:44:10.553"/>
</kw>
<msg timestamp="20240424 19:44:10.553" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.553" endtime="20240424 19:44:10.553"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.553" endtime="20240424 19:44:10.553"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.553" endtime="20240424 19:44:10.553"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.553" endtime="20240424 19:44:10.553"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.553" endtime="20240424 19:44:10.553"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.553" endtime="20240424 19:44:10.563"/>
</kw>
<msg timestamp="20240424 19:44:10.563" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.553" endtime="20240424 19:44:10.563"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.563" endtime="20240424 19:44:10.563"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.563" endtime="20240424 19:44:10.563"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.563" endtime="20240424 19:44:10.563"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.553" endtime="20240424 19:44:10.563"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.563" endtime="20240424 19:44:10.563"/>
</kw>
<msg timestamp="20240424 19:44:10.563" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.563" endtime="20240424 19:44:10.563"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.563" endtime="20240424 19:44:10.563"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.563" endtime="20240424 19:44:10.563"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.563" endtime="20240424 19:44:10.563"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.563" endtime="20240424 19:44:10.563"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.563" endtime="20240424 19:44:10.569"/>
</kw>
<msg timestamp="20240424 19:44:10.569" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.563" endtime="20240424 19:44:10.569"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.563" endtime="20240424 19:44:10.569"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</kw>
<msg timestamp="20240424 19:44:10.569" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</kw>
<msg timestamp="20240424 19:44:10.569" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</kw>
<msg timestamp="20240424 19:44:10.569" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</kw>
<msg timestamp="20240424 19:44:10.569" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.569"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.585"/>
</kw>
<msg timestamp="20240424 19:44:10.585" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.585"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.585" endtime="20240424 19:44:10.585"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.585" endtime="20240424 19:44:10.585"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.585" endtime="20240424 19:44:10.585"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.569" endtime="20240424 19:44:10.585"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.585" endtime="20240424 19:44:10.632"/>
</kw>
<msg timestamp="20240424 19:44:10.632" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.585" endtime="20240424 19:44:10.632"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.632"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.632"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.632"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.585" endtime="20240424 19:44:10.632"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.632"/>
</kw>
<msg timestamp="20240424 19:44:10.632" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.632"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.632"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.632"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.632"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.632"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.632"/>
</kw>
<msg timestamp="20240424 19:44:10.632" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.632"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.632"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.632"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.632"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.632"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.632"/>
</kw>
<msg timestamp="20240424 19:44:10.632" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.632"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.632"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.632"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.632"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.632"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.647"/>
</kw>
<msg timestamp="20240424 19:44:10.647" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.647"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.647" endtime="20240424 19:44:10.647"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.647" endtime="20240424 19:44:10.647"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.647" endtime="20240424 19:44:10.647"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.632" endtime="20240424 19:44:10.647"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.647" endtime="20240424 19:44:10.647"/>
</kw>
<msg timestamp="20240424 19:44:10.647" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.647" endtime="20240424 19:44:10.647"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.647" endtime="20240424 19:44:10.647"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.647" endtime="20240424 19:44:10.647"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.647" endtime="20240424 19:44:10.647"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.647" endtime="20240424 19:44:10.647"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.647" endtime="20240424 19:44:10.647"/>
</kw>
<msg timestamp="20240424 19:44:10.647" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.647" endtime="20240424 19:44:10.647"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.647" endtime="20240424 19:44:10.647"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.647" endtime="20240424 19:44:10.647"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.647" endtime="20240424 19:44:10.647"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.647" endtime="20240424 19:44:10.647"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.647" endtime="20240424 19:44:10.688"/>
</kw>
<msg timestamp="20240424 19:44:10.688" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.647" endtime="20240424 19:44:10.688"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.688" endtime="20240424 19:44:10.688"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.688" endtime="20240424 19:44:10.688"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.688" endtime="20240424 19:44:10.688"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.647" endtime="20240424 19:44:10.688"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.703" endtime="20240424 19:44:10.745"/>
</kw>
<msg timestamp="20240424 19:44:10.745" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.703" endtime="20240424 19:44:10.745"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.745" endtime="20240424 19:44:10.745"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.745" endtime="20240424 19:44:10.745"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.745" endtime="20240424 19:44:10.745"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.703" endtime="20240424 19:44:10.745"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.745" endtime="20240424 19:44:10.761"/>
</kw>
<msg timestamp="20240424 19:44:10.792" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.745" endtime="20240424 19:44:10.792"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.792" endtime="20240424 19:44:10.792"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.792" endtime="20240424 19:44:10.792"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.792" endtime="20240424 19:44:10.792"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.745" endtime="20240424 19:44:10.792"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:44:10.792" endtime="20240424 19:44:10.834"/>
</kw>
<msg timestamp="20240424 19:44:10.835" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:44:10.792" endtime="20240424 19:44:10.835"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:10.835" endtime="20240424 19:44:10.835"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:10.835" endtime="20240424 19:44:10.835"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.835" endtime="20240424 19:44:10.835"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.792" endtime="20240424 19:44:10.835"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:44:20.849" level="FAIL">Dialog 'Progress...' is not open</msg>
<status status="FAIL" starttime="20240424 19:44:10.835" endtime="20240424 19:44:20.849"/>
</kw>
<msg timestamp="20240424 19:44:20.849" level="INFO">${is_progress_dialog_displayed} = False</msg>
<status status="PASS" starttime="20240424 19:44:10.835" endtime="20240424 19:44:20.849"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="PASS" starttime="20240424 19:44:20.849" endtime="20240424 19:44:20.849"/>
</break>
<status status="PASS" starttime="20240424 19:44:20.849" endtime="20240424 19:44:20.849"/>
</branch>
<status status="PASS" starttime="20240424 19:44:20.849" endtime="20240424 19:44:20.849"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.835" endtime="20240424 19:44:20.849"/>
</iter>
<status status="PASS" starttime="20240424 19:44:10.197" endtime="20240424 19:44:20.849"/>
</while>
<status status="PASS" starttime="20240424 19:44:10.197" endtime="20240424 19:44:20.849"/>
</branch>
<status status="PASS" starttime="20240424 19:44:10.197" endtime="20240424 19:44:20.849"/>
</if>
<if>
<branch type="IF" condition="'${OS}' == 'Darwin'">
<while condition="${True}">
<iter>
<kw name="Call Component Method" library="SwingRobot">
<var>${value}</var>
<arg>thebar</arg>
<arg>getValue</arg>
<doc>Calls a method from specified component.</doc>
<status status="NOT RUN" starttime="20240424 19:44:20.849" endtime="20240424 19:44:20.849"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Saving progress ${value}%</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240424 19:44:20.849" endtime="20240424 19:44:20.849"/>
</kw>
<if>
<branch type="IF" condition="'${value}' == '0'">
<break>
<status status="NOT RUN" starttime="20240424 19:44:20.849" endtime="20240424 19:44:20.849"/>
</break>
<status status="NOT RUN" starttime="20240424 19:44:20.849" endtime="20240424 19:44:20.849"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:44:20.849" endtime="20240424 19:44:20.849"/>
</if>
<status status="NOT RUN" starttime="20240424 19:44:20.849" endtime="20240424 19:44:20.849"/>
</iter>
<status status="NOT RUN" starttime="20240424 19:44:20.849" endtime="20240424 19:44:20.849"/>
</while>
<status status="NOT RUN" starttime="20240424 19:44:20.849" endtime="20240424 19:44:20.849"/>
</branch>
<status status="PASS" starttime="20240424 19:44:20.849" endtime="20240424 19:44:20.849"/>
</if>
<status status="PASS" starttime="20240424 19:44:10.082" endtime="20240424 19:44:20.849"/>
</kw>
<status status="PASS" starttime="20240424 19:44:10.082" endtime="20240424 19:44:20.849"/>
</kw>
<status status="PASS" starttime="20240424 19:44:08.150" endtime="20240424 19:44:20.849"/>
</kw>
<status status="PASS" starttime="20240424 19:44:08.150" endtime="20240424 19:44:20.849"/>
</kw>
<kw name="And Close The Model" library="model_handling_flow_step_definitions">
<kw name="Log To Console" library="BuiltIn">
<arg>Closing the Model</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:44:20.849" endtime="20240424 19:44:20.849"/>
</kw>
<kw name="Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:44:20.849" endtime="20240424 19:44:20.961"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:44:20.961" endtime="20240424 19:44:20.965"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:44:20.965" endtime="20240424 19:44:20.968"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:44:20.970" endtime="20240424 19:44:21.040"/>
</kw>
<status status="PASS" starttime="20240424 19:44:20.961" endtime="20240424 19:44:21.040"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:44:21.040" endtime="20240424 19:44:21.040"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:44:21.040" endtime="20240424 19:44:21.040"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:44:31.061" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:44:21.040" endtime="20240424 19:44:31.061"/>
</kw>
<msg timestamp="20240424 19:44:31.061" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:44:21.040" endtime="20240424 19:44:31.061"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:44:41.066" level="FAIL">Dialog 'Select' is not open</msg>
<status status="FAIL" starttime="20240424 19:44:31.061" endtime="20240424 19:44:41.066"/>
</kw>
<msg timestamp="20240424 19:44:41.066" level="INFO">${check_if_save_asked} = False</msg>
<status status="PASS" starttime="20240424 19:44:31.061" endtime="20240424 19:44:41.066"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:44:41.066" endtime="20240424 19:44:41.066"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:44:41.066" endtime="20240424 19:44:41.066"/>
</branch>
<status status="PASS" starttime="20240424 19:44:41.066" endtime="20240424 19:44:41.066"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:44:41.066" endtime="20240424 19:44:41.066"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:44:41.066" endtime="20240424 19:44:41.066"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:44:41.066" endtime="20240424 19:44:41.066"/>
</branch>
<status status="PASS" starttime="20240424 19:44:41.066" endtime="20240424 19:44:41.066"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:44:41.066" endtime="20240424 19:44:41.066"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:44:41.066" endtime="20240424 19:44:41.066"/>
</kw>
<status status="PASS" starttime="20240424 19:44:41.066" endtime="20240424 19:44:41.066"/>
</kw>
<status status="PASS" starttime="20240424 19:44:20.849" endtime="20240424 19:44:41.066"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240424 19:44:43.068" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240424 19:44:41.066" endtime="20240424 19:44:43.068"/>
</kw>
<status status="PASS" starttime="20240424 19:44:20.849" endtime="20240424 19:44:43.068"/>
</kw>
<kw name="When When Model Is Reopened" library="model_handling_flow_step_definitions">
<arg>${test_files_folder}\\Solibri Building.smc</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Opening Model ${smcfile}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:44:43.068" endtime="20240424 19:44:43.068"/>
</kw>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${smcfile}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:44:43.068" endtime="20240424 19:44:43.068"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:44:43.068" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:44:43.068" endtime="20240424 19:44:43.068"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:44:43.068" endtime="20240424 19:44:43.068"/>
</kw>
<status status="PASS" starttime="20240424 19:44:43.068" endtime="20240424 19:44:43.068"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:44:43.068" endtime="20240424 19:44:43.068"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:44:43.068" endtime="20240424 19:44:43.068"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:44:43.068" endtime="20240424 19:44:43.084"/>
</kw>
<status status="PASS" starttime="20240424 19:44:43.068" endtime="20240424 19:44:43.084"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:44:43.085" endtime="20240424 19:44:43.155"/>
</kw>
<status status="PASS" starttime="20240424 19:44:43.084" endtime="20240424 19:44:43.155"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:44:43.155" endtime="20240424 19:44:43.155"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:44:43.155" endtime="20240424 19:44:43.155"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:44:43.163" endtime="20240424 19:44:44.434"/>
</kw>
<status status="PASS" starttime="20240424 19:44:43.163" endtime="20240424 19:44:44.434"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:44:44.434" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:44:44.434" endtime="20240424 19:44:44.434"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:44:44.434" endtime="20240424 19:44:44.434"/>
</return>
<msg timestamp="20240424 19:44:44.434" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:44:44.434" endtime="20240424 19:44:44.434"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:44:44.434" endtime="20240424 19:44:44.535"/>
</kw>
<status status="PASS" starttime="20240424 19:44:44.434" endtime="20240424 19:44:44.613"/>
</kw>
<status status="PASS" starttime="20240424 19:44:44.434" endtime="20240424 19:44:44.613"/>
</branch>
<status status="PASS" starttime="20240424 19:44:44.434" endtime="20240424 19:44:44.613"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:44:44.613" endtime="20240424 19:44:44.613"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:44:44.613" endtime="20240424 19:44:44.613"/>
</branch>
<status status="PASS" starttime="20240424 19:44:44.613" endtime="20240424 19:44:44.613"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:44:44.613" level="INFO">${path} = C:\Users\runneradmin\Documents\RFTestFiles</msg>
<msg timestamp="20240424 19:44:44.613" level="INFO">${filename} = Solibri Building.smc</msg>
<status status="PASS" starttime="20240424 19:44:44.613" endtime="20240424 19:44:44.613"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:44:44.613" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 19:44:44.613" level="INFO">${ext} = smc</msg>
<status status="PASS" starttime="20240424 19:44:44.613" endtime="20240424 19:44:44.613"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:44:44.613" endtime="20240424 19:44:44.673"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:44:44.673" endtime="20240424 19:44:44.677"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:44:44.677" endtime="20240424 19:44:44.683"/>
</kw>
<status status="PASS" starttime="20240424 19:44:44.613" endtime="20240424 19:44:44.683"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:44:44.683" endtime="20240424 19:44:45.344"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${COMPONENT_HIERARCHY_PANEL}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:44:45.344" endtime="20240424 19:44:45.344"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>ContainmentTree</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:44:45.344" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:44:45.344" endtime="20240424 19:44:45.344"/>
</kw>
<if>
<branch type="IF" condition="${row_count} &gt; ${0}">
<kw name="Evaluate" library="BuiltIn">
<var>${row_count}</var>
<arg>${row_count}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:44:45.344" level="INFO">${row_count} = 0</msg>
<status status="PASS" starttime="20240424 19:44:45.344" endtime="20240424 19:44:45.344"/>
</kw>
<status status="PASS" starttime="20240424 19:44:45.344" endtime="20240424 19:44:45.344"/>
</branch>
<status status="PASS" starttime="20240424 19:44:45.344" endtime="20240424 19:44:45.344"/>
</if>
<status status="PASS" starttime="20240424 19:44:44.613" endtime="20240424 19:44:45.344"/>
</kw>
<status status="PASS" starttime="20240424 19:44:44.613" endtime="20240424 19:44:45.344"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<status status="NOT RUN" starttime="20240424 19:44:45.344" endtime="20240424 19:44:45.344"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:44:45.344" endtime="20240424 19:44:45.344"/>
</branch>
<status status="PASS" starttime="20240424 19:44:44.613" endtime="20240424 19:44:45.344"/>
</if>
<status status="PASS" starttime="20240424 19:44:43.068" endtime="20240424 19:44:45.344"/>
</kw>
<status status="PASS" starttime="20240424 19:44:43.068" endtime="20240424 19:44:45.344"/>
</kw>
<kw name="Then Verify Model Name In Model Tree" library="ModelTreeResource">
<arg>0</arg>
<arg>Solibri Building - modified</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:44:45.344" endtime="20240424 19:44:45.344"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Table Should Not Be Empty</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Table Should Not Be Empty" library="Common">
<arg>0</arg>
<arg>0</arg>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>${table_locator}</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:44:45.375" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:44:45.344" endtime="20240424 19:44:45.375"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${row_count} &gt; ${table_rows}</arg>
<arg>The table has fewer rows than expected</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240424 19:44:45.375" endtime="20240424 19:44:45.375"/>
</kw>
<status status="PASS" starttime="20240424 19:44:45.344" endtime="20240424 19:44:45.375"/>
</kw>
<status status="PASS" starttime="20240424 19:44:45.344" endtime="20240424 19:44:45.375"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${modelnames_in_modeltree}</var>
<arg>ContainmentTree</arg>
<arg>${modelname_tobe_get_by_index}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:44:45.391" level="INFO">${modelnames_in_modeltree} = Solibri Building - modified</msg>
<status status="PASS" starttime="20240424 19:44:45.375" endtime="20240424 19:44:45.391"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${modelnames_in_modeltree}</arg>
<arg>${modelname_to_verify}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:44:45.391" endtime="20240424 19:44:45.391"/>
</kw>
<status status="PASS" starttime="20240424 19:44:45.344" endtime="20240424 19:44:45.391"/>
</kw>
<kw name="And Remove Model" library="model_handling_flow_step_definitions">
<arg>1</arg>
<arg>0</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:44:45.391" endtime="20240424 19:44:45.393"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>ContainmentTree</arg>
<arg>${row_to_be_remove}</arg>
<arg>0</arg>
<arg>Remove From Model</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 19:44:45.393" endtime="20240424 19:44:45.565"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<var>${remove_dialog_visible}</var>
<arg>5x</arg>
<arg>2x</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Select Dialog</arg>
<arg>Remove from Model</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<arg>Select Dialog</arg>
<arg>Remove from Model</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Remove from Model</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:44:55.585" level="FAIL">org.netbeans.jemmy.TimeoutExpiredException: Dialog with name or title 'Remove from Model'</msg>
<status status="FAIL" starttime="20240424 19:44:45.565" endtime="20240424 19:44:55.585"/>
</kw>
<status status="PASS" starttime="20240424 19:44:45.565" endtime="20240424 19:44:55.585"/>
</kw>
<msg timestamp="20240424 19:44:55.585" level="INFO">${remove_dialog_visible} = False</msg>
<status status="PASS" starttime="20240424 19:44:45.565" endtime="20240424 19:44:55.585"/>
</kw>
<if>
<branch type="IF" condition="${remove_dialog_visible}">
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:44:55.585" endtime="20240424 19:44:55.585"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:44:55.585" endtime="20240424 19:44:55.585"/>
</branch>
<status status="PASS" starttime="20240424 19:44:55.585" endtime="20240424 19:44:55.585"/>
</if>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${select_dialog_visible}</var>
<arg>Select Dialog</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:45:05.589" level="FAIL">org.netbeans.jemmy.TimeoutExpiredException: Dialog with name or title 'Select'</msg>
<status status="FAIL" starttime="20240424 19:44:55.585" endtime="20240424 19:45:05.589"/>
</kw>
<msg timestamp="20240424 19:45:05.589" level="INFO">${select_dialog_visible} = False</msg>
<status status="PASS" starttime="20240424 19:44:55.585" endtime="20240424 19:45:05.589"/>
</kw>
<if>
<branch type="IF" condition="${select_dialog_visible}">
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:45:05.589" endtime="20240424 19:45:05.589"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:45:05.589" endtime="20240424 19:45:05.589"/>
</branch>
<status status="PASS" starttime="20240424 19:45:05.589" endtime="20240424 19:45:05.589"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:05.589" endtime="20240424 19:45:05.589"/>
</kw>
<status status="PASS" starttime="20240424 19:44:45.391" endtime="20240424 19:45:05.589"/>
</kw>
<kw name="Then Verify Model Tree Is Empty" library="ModelTreeResource">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:05.589" endtime="20240424 19:45:05.589"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Component Should Exist</arg>
<arg>Model Tree_View</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Component Should Exist" library="SwingRobot">
<arg>Model Tree_View</arg>
<doc>Fails if component does not exist within current context.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 19:45:05.589" endtime="20240424 19:45:05.589"/>
</kw>
<status status="PASS" starttime="20240424 19:45:05.589" endtime="20240424 19:45:05.589"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${modelnames_in_modeltree}</var>
<arg>ContainmentTree</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:45:05.602" level="INFO">${modelnames_in_modeltree} = No Model</msg>
<status status="PASS" starttime="20240424 19:45:05.589" endtime="20240424 19:45:05.602"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${modelnames_in_modeltree}</arg>
<arg>No Model</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:45:05.602" endtime="20240424 19:45:05.602"/>
</kw>
<status status="PASS" starttime="20240424 19:45:05.589" endtime="20240424 19:45:05.602"/>
</kw>
<kw name="Then Verify Only Open Model Is Enabled" library="model_handling_flow_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:05.602" endtime="20240424 19:45:05.602"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:05.602" endtime="20240424 19:45:05.608"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:05.608" endtime="20240424 19:45:05.612"/>
</kw>
<status status="PASS" starttime="20240424 19:45:05.602" endtime="20240424 19:45:05.612"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:45:05.612" endtime="20240424 19:45:05.737"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:45:05.737" endtime="20240424 19:45:05.741"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_update_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:45:05.741" endtime="20240424 19:45:05.743"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_save_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:45:05.743" endtime="20240424 19:45:05.747"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_save_as_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:45:05.747" endtime="20240424 19:45:05.752"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:45:05.752" endtime="20240424 19:45:05.755"/>
</kw>
<status status="PASS" starttime="20240424 19:45:05.602" endtime="20240424 19:45:05.755"/>
</kw>
<status status="PASS" starttime="20240424 19:43:21.529" endtime="20240424 19:45:05.755"/>
</test>
<test id="s1-s1-t11" name="Verify Saving Model with Invalid Character" line="100">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:05.755" endtime="20240424 19:45:05.758"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:45:05.758" endtime="20240424 19:45:05.874"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:05.874" endtime="20240424 19:45:05.874"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:05.874" endtime="20240424 19:45:05.880"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:05.880" endtime="20240424 19:45:05.952"/>
</kw>
<status status="PASS" starttime="20240424 19:45:05.874" endtime="20240424 19:45:05.952"/>
</kw>
<status status="PASS" starttime="20240424 19:45:05.755" endtime="20240424 19:45:05.952"/>
</kw>
<status status="PASS" starttime="20240424 19:45:05.755" endtime="20240424 19:45:05.952"/>
</kw>
<kw name="Given No Existing Model Is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:05.952" endtime="20240424 19:45:05.952"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:05.952" endtime="20240424 19:45:05.958"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:05.958" endtime="20240424 19:45:06.029"/>
</kw>
<status status="PASS" starttime="20240424 19:45:05.952" endtime="20240424 19:45:06.029"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:45:06.029" endtime="20240424 19:45:06.029"/>
</kw>
<status status="PASS" starttime="20240424 19:45:06.029" endtime="20240424 19:45:06.029"/>
</kw>
<msg timestamp="20240424 19:45:06.029" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 19:45:06.029" endtime="20240424 19:45:06.029"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:45:06.029" endtime="20240424 19:45:06.029"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:45:06.029" endtime="20240424 19:45:06.029"/>
</branch>
<status status="PASS" starttime="20240424 19:45:06.029" endtime="20240424 19:45:06.029"/>
</if>
<status status="PASS" starttime="20240424 19:45:05.952" endtime="20240424 19:45:06.029"/>
</kw>
<kw name="And IFC File Is Open" library="ModelHandlingResource">
<arg>${solibri_building_ifc}</arg>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${file_name_with_path}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:06.029" endtime="20240424 19:45:06.029"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:45:06.029" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:45:06.029" endtime="20240424 19:45:06.029"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:45:06.029" endtime="20240424 19:45:06.029"/>
</kw>
<status status="PASS" starttime="20240424 19:45:06.029" endtime="20240424 19:45:06.029"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:06.029" endtime="20240424 19:45:06.044"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:06.044" endtime="20240424 19:45:06.044"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:06.044" endtime="20240424 19:45:06.050"/>
</kw>
<status status="PASS" starttime="20240424 19:45:06.029" endtime="20240424 19:45:06.050"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:45:06.051" endtime="20240424 19:45:06.119"/>
</kw>
<status status="PASS" starttime="20240424 19:45:06.050" endtime="20240424 19:45:06.119"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:45:06.119" endtime="20240424 19:45:06.119"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:06.119" endtime="20240424 19:45:06.128"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:45:06.128" endtime="20240424 19:45:07.432"/>
</kw>
<status status="PASS" starttime="20240424 19:45:06.128" endtime="20240424 19:45:07.432"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:45:07.432" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:45:07.432" endtime="20240424 19:45:07.432"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:45:07.432" endtime="20240424 19:45:07.432"/>
</return>
<msg timestamp="20240424 19:45:07.432" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:45:07.432" endtime="20240424 19:45:07.432"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:45:07.432" endtime="20240424 19:45:07.803"/>
</kw>
<status status="PASS" starttime="20240424 19:45:07.432" endtime="20240424 19:45:07.803"/>
</kw>
<status status="PASS" starttime="20240424 19:45:07.432" endtime="20240424 19:45:07.803"/>
</branch>
<status status="PASS" starttime="20240424 19:45:07.432" endtime="20240424 19:45:07.803"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:45:07.803" endtime="20240424 19:45:07.803"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:45:07.803" endtime="20240424 19:45:07.803"/>
</branch>
<status status="PASS" starttime="20240424 19:45:07.803" endtime="20240424 19:45:07.803"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:45:07.803" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\ifc</msg>
<msg timestamp="20240424 19:45:07.803" level="INFO">${filename} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:45:07.803" endtime="20240424 19:45:07.803"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:45:07.803" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 19:45:07.803" level="INFO">${ext} = ifc</msg>
<status status="PASS" starttime="20240424 19:45:07.803" endtime="20240424 19:45:07.803"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<status status="NOT RUN" starttime="20240424 19:45:07.803" endtime="20240424 19:45:07.803"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:45:07.803" endtime="20240424 19:45:07.803"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:45:07.803" endtime="20240424 19:45:07.922"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:07.922" endtime="20240424 19:45:07.926"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:07.926" endtime="20240424 19:45:07.936"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:07.936" endtime="20240424 19:45:07.936"/>
</kw>
<status status="PASS" starttime="20240424 19:45:07.922" endtime="20240424 19:45:07.936"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:45:09.807" level="INFO">2024-04-24 19:45:08.465+0000 [Thread-621] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 0 ms.
2024-04-24 19:45:08.465+0000 [Thread-621] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 678 ms (using 1 threads)
2024-04-24 19:45:08.512+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 47 ms
2024-04-24 19:45:09.474+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 1009 ms.</msg>
<status status="PASS" starttime="20240424 19:45:07.936" endtime="20240424 19:45:09.807"/>
</kw>
<status status="PASS" starttime="20240424 19:45:07.936" endtime="20240424 19:45:09.807"/>
</kw>
<msg timestamp="20240424 19:45:09.807" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:45:07.936" endtime="20240424 19:45:09.807"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:45:09.807" endtime="20240424 19:45:09.920"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:09.920" endtime="20240424 19:45:10.144"/>
</kw>
<status status="PASS" starttime="20240424 19:45:09.807" endtime="20240424 19:45:10.144"/>
</branch>
<status status="PASS" starttime="20240424 19:45:09.807" endtime="20240424 19:45:10.144"/>
</if>
<status status="PASS" starttime="20240424 19:45:07.803" endtime="20240424 19:45:10.144"/>
</kw>
<status status="PASS" starttime="20240424 19:45:07.803" endtime="20240424 19:45:10.144"/>
</branch>
<status status="PASS" starttime="20240424 19:45:07.803" endtime="20240424 19:45:10.144"/>
</if>
<status status="PASS" starttime="20240424 19:45:06.029" endtime="20240424 19:45:10.144"/>
</kw>
<status status="PASS" starttime="20240424 19:45:06.029" endtime="20240424 19:45:10.144"/>
</kw>
<kw name="Then Verify Backslash Not Allowed" library="model_handling_flow_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>FILE</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:10.144" endtime="20240424 19:45:10.144"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:10.144" endtime="20240424 19:45:10.144"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:10.144" endtime="20240424 19:45:10.250"/>
</kw>
<status status="PASS" starttime="20240424 19:45:10.144" endtime="20240424 19:45:10.250"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click on component</arg>
<arg>Save Model</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:10.250" endtime="20240424 19:45:10.252"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:45:10.634" level="INFO">2024-04-24 19:45:10.318+0000 [Save model] WARN  c.s.s.p.c.c.CheckingState - invalid state transition asked, IdleState.requestStopChecking
2024-04-24 19:45:10.318+0000 [Save model] WARN  c.s.s.p.c.c.CheckingState - invalid state transition asked, IdleState.requestStopChecking</msg>
<status status="PASS" starttime="20240424 19:45:10.252" endtime="20240424 19:45:10.634"/>
</kw>
<kw name="Clear Text Field" library="SwingRobot">
<arg>0</arg>
<doc>Clears contents of text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:45:10.634" endtime="20240424 19:45:10.730"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>Test\\model</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:45:10.730" endtime="20240424 19:45:10.753"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Push Button</arg>
<arg>Save As</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:10.753" endtime="20240424 19:45:10.753"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Unwriteable File</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:45:10.753" endtime="20240424 19:45:10.783"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Unwriteable File</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:45:10.783" endtime="20240424 19:45:10.786"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:10.786" endtime="20240424 19:45:10.798"/>
</kw>
<status status="PASS" starttime="20240424 19:45:10.144" endtime="20240424 19:45:10.798"/>
</kw>
<kw name="Then Verify Lessthan Symbol Not Allowed" library="model_handling_flow_step_definitions">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:45:10.798" endtime="20240424 19:45:10.805"/>
</kw>
<kw name="Clear Text Field" library="SwingRobot">
<arg>0</arg>
<doc>Clears contents of text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:45:10.805" endtime="20240424 19:45:10.845"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>Test&lt;model</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:45:10.845" endtime="20240424 19:45:10.883"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Push Button</arg>
<arg>Save As</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:10.883" endtime="20240424 19:45:10.883"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Unwriteable File</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:45:10.883" endtime="20240424 19:45:10.953"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Unwriteable File</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:45:10.954" endtime="20240424 19:45:10.966"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:10.966" endtime="20240424 19:45:10.982"/>
</kw>
<status status="PASS" starttime="20240424 19:45:10.798" endtime="20240424 19:45:10.982"/>
</kw>
<kw name="Then Verify Greaterthan Symbol Not Allowed" library="model_handling_flow_step_definitions">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:45:10.982" endtime="20240424 19:45:10.986"/>
</kw>
<kw name="Clear Text Field" library="SwingRobot">
<arg>0</arg>
<doc>Clears contents of text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:45:10.986" endtime="20240424 19:45:11.017"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>Test&gt;model</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:45:11.017" endtime="20240424 19:45:11.042"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Push Button</arg>
<arg>Save As</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:11.042" endtime="20240424 19:45:11.042"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Unwriteable File</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:45:11.042" endtime="20240424 19:45:11.080"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Unwriteable File</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:45:11.080" endtime="20240424 19:45:11.083"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:11.083" endtime="20240424 19:45:11.096"/>
</kw>
<status status="PASS" starttime="20240424 19:45:10.982" endtime="20240424 19:45:11.096"/>
</kw>
<kw name="Then Verify Pipe Symbol Not Allowed" library="model_handling_flow_step_definitions">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:45:11.096" endtime="20240424 19:45:11.102"/>
</kw>
<kw name="Clear Text Field" library="SwingRobot">
<arg>0</arg>
<doc>Clears contents of text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:45:11.102" endtime="20240424 19:45:11.188"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>Test|model</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:45:11.188" endtime="20240424 19:45:11.196"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Push Button</arg>
<arg>Save As</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:11.196" endtime="20240424 19:45:11.216"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Unwriteable File</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:45:11.216" endtime="20240424 19:45:11.252"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Unwriteable File</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:45:11.252" endtime="20240424 19:45:11.262"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:11.262" endtime="20240424 19:45:11.286"/>
</kw>
<status status="PASS" starttime="20240424 19:45:11.096" endtime="20240424 19:45:11.286"/>
</kw>
<kw name="Clean Up" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>ScreenCapLibrary.Take Screenshot</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20240424 19:45:11.286" endtime="20240424 19:45:11.286"/>
</kw>
<kw name="Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<msg timestamp="20240424 19:45:11.455" level="INFO">Closed dialog 'Save As'.</msg>
<status status="PASS" starttime="20240424 19:45:11.286" endtime="20240424 19:45:11.455"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:11.455" endtime="20240424 19:45:11.455"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:11.455" endtime="20240424 19:45:11.462"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:11.462" endtime="20240424 19:45:11.533"/>
</kw>
<status status="PASS" starttime="20240424 19:45:11.455" endtime="20240424 19:45:11.533"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:45:11.533" endtime="20240424 19:45:11.533"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:11.533" endtime="20240424 19:45:11.540"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:45:21.555" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:45:11.540" endtime="20240424 19:45:21.555"/>
</kw>
<msg timestamp="20240424 19:45:21.555" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:45:11.540" endtime="20240424 19:45:21.555"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:45:21.555" endtime="20240424 19:45:21.555"/>
</kw>
<msg timestamp="20240424 19:45:21.555" level="INFO">${check_if_save_asked} = True</msg>
<status status="PASS" starttime="20240424 19:45:21.555" endtime="20240424 19:45:21.555"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:45:21.555" endtime="20240424 19:45:21.555"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:21.555" endtime="20240424 19:45:21.574"/>
</kw>
<status status="PASS" starttime="20240424 19:45:21.555" endtime="20240424 19:45:21.574"/>
</kw>
<status status="PASS" starttime="20240424 19:45:21.555" endtime="20240424 19:45:21.574"/>
</branch>
<status status="PASS" starttime="20240424 19:45:21.555" endtime="20240424 19:45:21.574"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:45:21.574" endtime="20240424 19:45:21.574"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:45:21.623" endtime="20240424 19:45:21.623"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:45:21.574" endtime="20240424 19:45:21.623"/>
</branch>
<status status="PASS" starttime="20240424 19:45:21.574" endtime="20240424 19:45:21.623"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:21.623" endtime="20240424 19:45:21.663"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:45:21.663" endtime="20240424 19:45:21.750"/>
</kw>
<status status="PASS" starttime="20240424 19:45:21.663" endtime="20240424 19:45:21.750"/>
</kw>
<status status="PASS" starttime="20240424 19:45:11.286" endtime="20240424 19:45:21.750"/>
</kw>
<status status="PASS" starttime="20240424 19:45:11.286" endtime="20240424 19:45:21.750"/>
</kw>
<status status="PASS" starttime="20240424 19:45:05.755" endtime="20240424 19:45:21.750"/>
</test>
<test id="s1-s1-t12" name="Verify Federated Floor Selection" line="108">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:21.750" endtime="20240424 19:45:21.756"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:45:21.756" endtime="20240424 19:45:21.866"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:21.866" endtime="20240424 19:45:21.866"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:21.866" endtime="20240424 19:45:21.873"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:21.873" endtime="20240424 19:45:21.943"/>
</kw>
<status status="PASS" starttime="20240424 19:45:21.866" endtime="20240424 19:45:21.943"/>
</kw>
<status status="PASS" starttime="20240424 19:45:21.750" endtime="20240424 19:45:21.943"/>
</kw>
<status status="PASS" starttime="20240424 19:45:21.750" endtime="20240424 19:45:21.943"/>
</kw>
<kw name="Given No Existing Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:21.943" endtime="20240424 19:45:21.943"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:21.943" endtime="20240424 19:45:21.943"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:21.943" endtime="20240424 19:45:22.029"/>
</kw>
<status status="PASS" starttime="20240424 19:45:21.943" endtime="20240424 19:45:22.029"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:45:22.029" endtime="20240424 19:45:22.033"/>
</kw>
<status status="PASS" starttime="20240424 19:45:22.029" endtime="20240424 19:45:22.033"/>
</kw>
<msg timestamp="20240424 19:45:22.033" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 19:45:22.029" endtime="20240424 19:45:22.033"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:45:22.033" endtime="20240424 19:45:22.033"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:45:22.033" endtime="20240424 19:45:22.033"/>
</branch>
<status status="PASS" starttime="20240424 19:45:22.033" endtime="20240424 19:45:22.033"/>
</if>
<status status="PASS" starttime="20240424 19:45:21.943" endtime="20240424 19:45:22.033"/>
</kw>
<kw name="And IFC File Is Open" library="ModelHandlingResource">
<arg>${solibri_building_ifc}</arg>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${file_name_with_path}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:22.033" endtime="20240424 19:45:22.033"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:45:22.033" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:45:22.033" endtime="20240424 19:45:22.033"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:45:22.033" endtime="20240424 19:45:22.033"/>
</kw>
<status status="PASS" starttime="20240424 19:45:22.033" endtime="20240424 19:45:22.033"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:22.033" endtime="20240424 19:45:22.033"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:22.033" endtime="20240424 19:45:22.033"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:22.033" endtime="20240424 19:45:22.047"/>
</kw>
<status status="PASS" starttime="20240424 19:45:22.033" endtime="20240424 19:45:22.047"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:45:22.047" endtime="20240424 19:45:22.054"/>
</kw>
<status status="PASS" starttime="20240424 19:45:22.047" endtime="20240424 19:45:22.054"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:45:22.054" endtime="20240424 19:45:22.125"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:22.125" endtime="20240424 19:45:22.125"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:45:22.130" endtime="20240424 19:45:23.432"/>
</kw>
<status status="PASS" starttime="20240424 19:45:22.130" endtime="20240424 19:45:23.432"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:45:23.432" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:45:23.432" endtime="20240424 19:45:23.432"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:45:23.432" endtime="20240424 19:45:23.432"/>
</return>
<msg timestamp="20240424 19:45:23.432" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:45:23.432" endtime="20240424 19:45:23.432"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:45:23.432" endtime="20240424 19:45:23.577"/>
</kw>
<status status="PASS" starttime="20240424 19:45:23.432" endtime="20240424 19:45:23.577"/>
</kw>
<status status="PASS" starttime="20240424 19:45:23.432" endtime="20240424 19:45:23.577"/>
</branch>
<status status="PASS" starttime="20240424 19:45:23.432" endtime="20240424 19:45:23.577"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:45:23.577" endtime="20240424 19:45:23.577"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:45:23.577" endtime="20240424 19:45:23.577"/>
</branch>
<status status="PASS" starttime="20240424 19:45:23.577" endtime="20240424 19:45:23.577"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:45:23.609" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\ifc</msg>
<msg timestamp="20240424 19:45:23.609" level="INFO">${filename} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:45:23.577" endtime="20240424 19:45:23.609"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:45:23.609" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 19:45:23.609" level="INFO">${ext} = ifc</msg>
<status status="PASS" starttime="20240424 19:45:23.609" endtime="20240424 19:45:23.609"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<status status="NOT RUN" starttime="20240424 19:45:23.609" endtime="20240424 19:45:23.609"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:45:23.609" endtime="20240424 19:45:23.609"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:45:23.609" endtime="20240424 19:45:23.734"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:23.734" endtime="20240424 19:45:23.738"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:23.738" endtime="20240424 19:45:23.743"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:23.743" endtime="20240424 19:45:23.812"/>
</kw>
<status status="PASS" starttime="20240424 19:45:23.734" endtime="20240424 19:45:23.812"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:45:26.195" level="INFO">2024-04-24 19:45:24.251+0000 [Thread-700] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 0 ms.
2024-04-24 19:45:24.251+0000 [Thread-700] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 658 ms (using 1 threads)
2024-04-24 19:45:24.298+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 47 ms
2024-04-24 19:45:25.316+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 1065 ms.</msg>
<status status="PASS" starttime="20240424 19:45:23.812" endtime="20240424 19:45:26.195"/>
</kw>
<status status="PASS" starttime="20240424 19:45:23.812" endtime="20240424 19:45:26.195"/>
</kw>
<msg timestamp="20240424 19:45:26.195" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:45:23.812" endtime="20240424 19:45:26.195"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:45:26.195" endtime="20240424 19:45:26.238"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:26.238" endtime="20240424 19:45:26.316"/>
</kw>
<status status="PASS" starttime="20240424 19:45:26.195" endtime="20240424 19:45:26.316"/>
</branch>
<status status="PASS" starttime="20240424 19:45:26.195" endtime="20240424 19:45:26.316"/>
</if>
<status status="PASS" starttime="20240424 19:45:23.609" endtime="20240424 19:45:26.316"/>
</kw>
<status status="PASS" starttime="20240424 19:45:23.609" endtime="20240424 19:45:26.316"/>
</branch>
<status status="PASS" starttime="20240424 19:45:23.609" endtime="20240424 19:45:26.316"/>
</if>
<status status="PASS" starttime="20240424 19:45:22.033" endtime="20240424 19:45:26.316"/>
</kw>
<status status="PASS" starttime="20240424 19:45:22.033" endtime="20240424 19:45:26.316"/>
</kw>
<kw name="Then Switch to Floor Federated Floor view" library="model_handling_flow_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:26.316" endtime="20240424 19:45:26.316"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:26.316" endtime="20240424 19:45:26.324"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:26.324" endtime="20240424 19:45:26.324"/>
</kw>
<status status="PASS" starttime="20240424 19:45:26.316" endtime="20240424 19:45:26.324"/>
</kw>
<kw name="Switch to Federated Floors Hierarchy" library="ModelTreeResource">
<doc>Opens federated floors tree in Component hierarchy ModelViewComponentHierarchyPanel</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:26.324" endtime="20240424 19:45:26.399"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>5</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:26.399" endtime="20240424 19:45:26.411"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Toggle Button Should Be Selected</arg>
<arg>5</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Toggle Button Should Be Selected" library="SwingRobot">
<arg>5</arg>
<doc>Fails if toggle button is not selected.</doc>
<status status="PASS" starttime="20240424 19:45:26.411" endtime="20240424 19:45:26.414"/>
</kw>
<status status="PASS" starttime="20240424 19:45:26.411" endtime="20240424 19:45:26.414"/>
</kw>
<status status="PASS" starttime="20240424 19:45:26.324" endtime="20240424 19:45:26.414"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${number_of_floors}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:45:26.414" level="INFO">${number_of_floors} = 4</msg>
<status status="PASS" starttime="20240424 19:45:26.414" endtime="20240424 19:45:26.414"/>
</kw>
<if>
<branch type="IF" condition="${number_of_floors} != 4">
<kw name="Switch to Federated Floors Hierarchy" library="ModelTreeResource">
<doc>Opens federated floors tree in Component hierarchy ModelViewComponentHierarchyPanel</doc>
<status status="NOT RUN" starttime="20240424 19:45:26.414" endtime="20240424 19:45:26.414"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${number_of_floors}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<status status="NOT RUN" starttime="20240424 19:45:26.414" endtime="20240424 19:45:26.414"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:45:26.414" endtime="20240424 19:45:26.414"/>
</branch>
<status status="PASS" starttime="20240424 19:45:26.414" endtime="20240424 19:45:26.414"/>
</if>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${number_of_floors}</arg>
<arg>4</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 19:45:26.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:45:26.414" endtime="20240424 19:45:26.414"/>
</kw>
<status status="PASS" starttime="20240424 19:45:26.316" endtime="20240424 19:45:26.414"/>
</kw>
<kw name="Then Add Roof to Selection Basket and Verify" library="model_handling_flow_step_definitions">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>LogicalFloorTree</arg>
<arg>3</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:26.414" endtime="20240424 19:45:26.438"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>LogicalFloorTree</arg>
<arg>4</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:26.438" endtime="20240424 19:45:26.500"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:26.500" endtime="20240424 19:45:26.500"/>
</kw>
<kw name="Label Should Exist" library="SwingRobot">
<arg>Selected: 1</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 19:45:26.500" endtime="20240424 19:45:26.500"/>
</kw>
<status status="PASS" starttime="20240424 19:45:26.414" endtime="20240424 19:45:26.500"/>
</kw>
<kw name="Then Add Second Floor Components to Selection Basket and Verify" library="model_handling_flow_step_definitions">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>LogicalFloorTree</arg>
<arg>2</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:26.500" endtime="20240424 19:45:26.533"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>LogicalFloorTree</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:26.533" endtime="20240424 19:45:26.593"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:26.593" endtime="20240424 19:45:26.593"/>
</kw>
<kw name="Label Should Exist" library="SwingRobot">
<arg>Selected: 1</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 19:45:26.593" endtime="20240424 19:45:26.593"/>
</kw>
<status status="PASS" starttime="20240424 19:45:26.500" endtime="20240424 19:45:26.593"/>
</kw>
<kw name="Then Add First Floor Components to Selection Basket and Verify" library="model_handling_flow_step_definitions">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>LogicalFloorTree</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:26.593" endtime="20240424 19:45:26.632"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>LogicalFloorTree</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:26.632" endtime="20240424 19:45:26.782"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:26.782" endtime="20240424 19:45:26.850"/>
</kw>
<kw name="Label Should Exist" library="SwingRobot">
<arg>Selected: 1</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 19:45:26.850" endtime="20240424 19:45:26.861"/>
</kw>
<status status="PASS" starttime="20240424 19:45:26.593" endtime="20240424 19:45:26.861"/>
</kw>
<kw name="Then Add Ground Floor Components to Selction Basket and Verify" library="model_handling_flow_step_definitions">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>LogicalFloorTree</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:26.861" endtime="20240424 19:45:26.888"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>LogicalFloorTree</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:26.888" endtime="20240424 19:45:26.959"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:26.959" endtime="20240424 19:45:26.959"/>
</kw>
<kw name="Label Should Exist" library="SwingRobot">
<arg>Selected: 2</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 19:45:26.959" endtime="20240424 19:45:26.969"/>
</kw>
<status status="PASS" starttime="20240424 19:45:26.861" endtime="20240424 19:45:26.969"/>
</kw>
<kw name="Then Remove Ground Floor components from Selection Basket and Verify" library="model_handling_flow_step_definitions">
<kw name="Push Button" library="SwingRobot">
<arg>Remove from Selection Basket</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:26.969" endtime="20240424 19:45:26.981"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>LogicalFloorTree</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:26.981" endtime="20240424 19:45:27.007"/>
</kw>
<kw name="Label Should Exist" library="SwingRobot">
<arg>Selected: 0</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 19:45:27.007" endtime="20240424 19:45:27.014"/>
</kw>
<status status="PASS" starttime="20240424 19:45:26.969" endtime="20240424 19:45:27.014"/>
</kw>
<kw name="Then Remove First Floor components from Selection Basket and Verify" library="model_handling_flow_step_definitions">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>LogicalFloorTree</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:27.014" endtime="20240424 19:45:27.039"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:27.039" endtime="20240424 19:45:27.057"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Remove from Selection Basket</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:27.057" endtime="20240424 19:45:27.068"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>LogicalFloorTree</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:27.068" endtime="20240424 19:45:27.095"/>
</kw>
<kw name="Label Should Exist" library="SwingRobot">
<arg>Selected: 0</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 19:45:27.095" endtime="20240424 19:45:27.150"/>
</kw>
<status status="PASS" starttime="20240424 19:45:27.014" endtime="20240424 19:45:27.150"/>
</kw>
<kw name="Then Remove Second Floor components from Selection Basket and Verify" library="model_handling_flow_step_definitions">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>LogicalFloorTree</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:27.150" endtime="20240424 19:45:27.173"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:27.173" endtime="20240424 19:45:27.178"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Remove from Selection Basket</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:27.178" endtime="20240424 19:45:27.178"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>LogicalFloorTree</arg>
<arg>2</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:27.178" endtime="20240424 19:45:27.209"/>
</kw>
<kw name="Label Should Exist" library="SwingRobot">
<arg>Selected: 0</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 19:45:27.230" endtime="20240424 19:45:27.255"/>
</kw>
<status status="PASS" starttime="20240424 19:45:27.150" endtime="20240424 19:45:27.255"/>
</kw>
<kw name="Then Remove Roof components from Selection Basket and Verify" library="model_handling_flow_step_definitions">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>LogicalFloorTree</arg>
<arg>4</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:27.255" endtime="20240424 19:45:27.267"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:27.267" endtime="20240424 19:45:27.271"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Remove from Selection Basket</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:27.271" endtime="20240424 19:45:27.277"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>LogicalFloorTree</arg>
<arg>3</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:27.277" endtime="20240424 19:45:27.277"/>
</kw>
<kw name="Label Should Exist" library="SwingRobot">
<arg>Selected: 0</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 19:45:27.277" endtime="20240424 19:45:27.334"/>
</kw>
<status status="PASS" starttime="20240424 19:45:27.255" endtime="20240424 19:45:27.334"/>
</kw>
<kw name="Clean Up" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>ScreenCapLibrary.Take Screenshot</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20240424 19:45:27.335" endtime="20240424 19:45:27.335"/>
</kw>
<kw name="Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:45:27.336" endtime="20240424 19:45:27.452"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:27.452" endtime="20240424 19:45:27.456"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:27.456" endtime="20240424 19:45:27.460"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:27.460" endtime="20240424 19:45:27.463"/>
</kw>
<status status="PASS" starttime="20240424 19:45:27.452" endtime="20240424 19:45:27.463"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:45:27.463" endtime="20240424 19:45:27.565"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:27.565" endtime="20240424 19:45:27.565"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:45:37.585" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:45:27.579" endtime="20240424 19:45:37.585"/>
</kw>
<msg timestamp="20240424 19:45:37.585" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:45:27.579" endtime="20240424 19:45:37.585"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:45:37.585" endtime="20240424 19:45:37.585"/>
</kw>
<msg timestamp="20240424 19:45:37.585" level="INFO">${check_if_save_asked} = True</msg>
<status status="PASS" starttime="20240424 19:45:37.585" endtime="20240424 19:45:37.585"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:45:37.585" endtime="20240424 19:45:37.595"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:37.595" endtime="20240424 19:45:37.607"/>
</kw>
<status status="PASS" starttime="20240424 19:45:37.585" endtime="20240424 19:45:37.607"/>
</kw>
<status status="PASS" starttime="20240424 19:45:37.585" endtime="20240424 19:45:37.607"/>
</branch>
<status status="PASS" starttime="20240424 19:45:37.585" endtime="20240424 19:45:37.607"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:45:37.607" endtime="20240424 19:45:37.607"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:45:37.607" endtime="20240424 19:45:37.607"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:45:37.607" endtime="20240424 19:45:37.607"/>
</branch>
<status status="PASS" starttime="20240424 19:45:37.607" endtime="20240424 19:45:37.607"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:37.607" endtime="20240424 19:45:37.669"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:45:37.719" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:45:37.684" endtime="20240424 19:45:37.719"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:45:40.722" endtime="20240424 19:45:40.754"/>
</kw>
<status status="PASS" starttime="20240424 19:45:37.669" endtime="20240424 19:45:40.754"/>
</kw>
<status status="PASS" starttime="20240424 19:45:27.336" endtime="20240424 19:45:40.754"/>
</kw>
<status status="PASS" starttime="20240424 19:45:27.335" endtime="20240424 19:45:40.754"/>
</kw>
<status status="PASS" starttime="20240424 19:45:21.750" endtime="20240424 19:45:40.754"/>
</test>
<test id="s1-s1-t13" name="Test Dock UnDock View" line="121">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:40.754" endtime="20240424 19:45:40.777"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:45:40.777" endtime="20240424 19:45:40.890"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:40.890" endtime="20240424 19:45:40.890"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:40.890" endtime="20240424 19:45:40.896"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:40.896" endtime="20240424 19:45:40.971"/>
</kw>
<status status="PASS" starttime="20240424 19:45:40.890" endtime="20240424 19:45:40.971"/>
</kw>
<status status="PASS" starttime="20240424 19:45:40.754" endtime="20240424 19:45:40.971"/>
</kw>
<status status="PASS" starttime="20240424 19:45:40.754" endtime="20240424 19:45:40.971"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:40.971" endtime="20240424 19:45:40.982"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:40.982" endtime="20240424 19:45:40.985"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:40.985" endtime="20240424 19:45:40.986"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:40.986" endtime="20240424 19:45:40.992"/>
</kw>
<status status="PASS" starttime="20240424 19:45:40.982" endtime="20240424 19:45:40.992"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Model Tree_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:45:40.992" endtime="20240424 19:45:41.081"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>DockingMenuButton</arg>
<arg>Undock</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 19:45:41.081" endtime="20240424 19:45:41.648"/>
</kw>
<kw name="Restore Default Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:41.648" endtime="20240424 19:45:41.682"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:41.682" endtime="20240424 19:45:41.691"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:41.691" endtime="20240424 19:45:41.691"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:41.691" endtime="20240424 19:45:41.723"/>
</kw>
<status status="PASS" starttime="20240424 19:45:41.682" endtime="20240424 19:45:41.723"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:41.723" endtime="20240424 19:45:42.240"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Layouts</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:42.240" endtime="20240424 19:45:42.249"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Layouts</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:45:42.249" endtime="20240424 19:45:42.479"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Push Button</arg>
<arg>Restore</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:42.479" endtime="20240424 19:45:42.483"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Restore</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:45:42.483" endtime="20240424 19:45:42.548"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:42.548" endtime="20240424 19:45:42.754"/>
</kw>
<status status="PASS" starttime="20240424 19:45:41.648" endtime="20240424 19:45:42.754"/>
</kw>
<status status="PASS" starttime="20240424 19:45:40.754" endtime="20240424 19:45:42.754"/>
</test>
<doc>To check the functionality of model handling user flows like
Opening IFC,PDF and SMC/Solibri model files from file chooser
Saving model files
Validating menu options in file menu panel
Validating title when a model is opened
Validating Recent files and Recent places</doc>
<meta name="Feature">Model Handling flow</meta>
<meta name="Generated by">_gherkin2robotframework on 2022-12-01T14:11:30.142501_</meta>
<status status="FAIL" starttime="20240424 19:39:13.603" endtime="20240424 19:45:42.754"/>
</suite>
<suite id="s1-s2" name="02 Role" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\02_role.robot">
<kw name="Launch Solibri And Login To SSC" library="role_step_definitions" type="SETUP">
<doc>Launch Solibri And Login To SSC</doc>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:45:42.820" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:45:42.820" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:45:42 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:45:42.801" endtime="20240424 19:45:42.820"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:45:42.820" endtime="20240424 19:45:42.820"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:42.820" endtime="20240424 19:45:42.822"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:45:42.822" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:45:42.822" endtime="20240424 19:45:42.822"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:45:42.822" endtime="20240424 19:45:42.822"/>
</kw>
<status status="PASS" starttime="20240424 19:45:42.822" endtime="20240424 19:45:42.822"/>
</kw>
<status status="PASS" starttime="20240424 19:45:42.801" endtime="20240424 19:45:42.822"/>
</kw>
<kw name="When User Logs In To SSC" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Logged in to SSC</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:45:42.822" endtime="20240424 19:45:42.822"/>
</kw>
<status status="PASS" starttime="20240424 19:45:42.822" endtime="20240424 19:45:42.822"/>
</kw>
<kw name="Then Solibri Office Is Opened" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Solibri Office Is Opened</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:45:42.822" endtime="20240424 19:45:42.822"/>
</kw>
<status status="PASS" starttime="20240424 19:45:42.822" endtime="20240424 19:45:42.822"/>
</kw>
<status status="PASS" starttime="20240424 19:45:42.801" endtime="20240424 19:45:42.822"/>
</kw>
<test id="s1-s2-t1" name="Verify Default Role and Other Roles with Resources" line="19">
<kw name="Prepare Solibri For New Test" library="role_step_definitions" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:42.822" endtime="20240424 19:45:42.847"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:45:42.847" endtime="20240424 19:45:42.959"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:42.959" endtime="20240424 19:45:42.959"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:42.959" endtime="20240424 19:45:42.959"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:42.959" endtime="20240424 19:45:42.968"/>
</kw>
<status status="PASS" starttime="20240424 19:45:42.959" endtime="20240424 19:45:42.968"/>
</kw>
<status status="PASS" starttime="20240424 19:45:42.822" endtime="20240424 19:45:42.968"/>
</kw>
<status status="PASS" starttime="20240424 19:45:42.822" endtime="20240424 19:45:42.968"/>
</kw>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:45:42.968" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:45:42.968" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:45:42 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:45:42.968" endtime="20240424 19:45:42.968"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:45:42.968" endtime="20240424 19:45:42.968"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:42.968" endtime="20240424 19:45:42.979"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:45:42.981" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:45:42.979" endtime="20240424 19:45:42.981"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:45:42.981" endtime="20240424 19:45:42.981"/>
</kw>
<status status="PASS" starttime="20240424 19:45:42.979" endtime="20240424 19:45:42.981"/>
</kw>
<status status="PASS" starttime="20240424 19:45:42.968" endtime="20240424 19:45:42.981"/>
</kw>
<kw name="And Switch to the Role View" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:42.981" endtime="20240424 19:45:42.999"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:43.000" endtime="20240424 19:45:43.067"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:43.067" endtime="20240424 19:45:43.073"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:43.073" endtime="20240424 19:45:43.144"/>
</kw>
<status status="PASS" starttime="20240424 19:45:42.999" endtime="20240424 19:45:43.144"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Roles_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:43.144" endtime="20240424 19:45:43.144"/>
</kw>
<status status="PASS" starttime="20240424 19:45:42.981" endtime="20240424 19:45:43.144"/>
</kw>
<kw name="And Open &quot;BIM Validation - Architectural.xml&quot; Role" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:43.144" endtime="20240424 19:45:43.153"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Roles_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:43.153" endtime="20240424 19:45:43.153"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open Role</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:43.153" endtime="20240424 19:45:44.482"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Dialog Should Be Open</arg>
<arg>Open Role</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Open Role</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:45:44.482" endtime="20240424 19:45:44.514"/>
</kw>
<status status="PASS" starttime="20240424 19:45:44.482" endtime="20240424 19:45:44.514"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open Role</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:45:44.514" endtime="20240424 19:45:44.514"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Files</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:45:44.514" endtime="20240424 19:45:44.535"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${role_with_path}</var>
<arg>${roles_folder}</arg>
<arg>BIM Validation - Architectural.xml</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:45:44.535" level="INFO">${role_with_path} = C:\users\public\Solibri\SOLIBRI\Roles\BIM Validation - Architectural.xml</msg>
<status status="PASS" starttime="20240424 19:45:44.535" endtime="20240424 19:45:44.535"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${role_with_path}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:45:44.535" endtime="20240424 19:45:44.622"/>
</kw>
<status status="PASS" starttime="20240424 19:45:43.144" endtime="20240424 19:45:44.622"/>
</kw>
<kw name="Then Verify &quot;BIM Validation - Architectural.xml&quot; Resources" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:44.622" endtime="20240424 19:45:44.676"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${default_rolesets_name}</var>
<arg>RULESETS</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:45:44.681" level="INFO">${default_rolesets_name} = BIM Validation - Architectural.cset</msg>
<status status="PASS" starttime="20240424 19:45:44.676" endtime="20240424 19:45:44.681"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${default_rolesets_name}</arg>
<arg>BIM Validation - Architectural.cset</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:45:44.681" endtime="20240424 19:45:44.681"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${default_classifications_name}</var>
<arg>CLASSIFICATIONS</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:45:44.686" level="INFO">${default_classifications_name} = Building Elements - General.classification</msg>
<status status="PASS" starttime="20240424 19:45:44.681" endtime="20240424 19:45:44.686"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${default_classifications_name}</arg>
<arg>Building Elements - General.classification</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:45:44.686" endtime="20240424 19:45:44.686"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${default_itos_name}</var>
<arg>ITOS</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:45:44.687" level="INFO">${default_itos_name} = Building Element Quantities.ito</msg>
<status status="PASS" starttime="20240424 19:45:44.686" endtime="20240424 19:45:44.687"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${default_itos_name}</arg>
<arg>Building Element Quantities.ito</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:45:44.687" endtime="20240424 19:45:44.687"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${Default_role_name}</var>
<arg>roleNameText</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:45:44.690" level="INFO">${Default_role_name} = BIM Validation - Architectural</msg>
<status status="PASS" starttime="20240424 19:45:44.687" endtime="20240424 19:45:44.690"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Default_role_name}</arg>
<arg>BIM Validation - Architectural</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:45:44.690" endtime="20240424 19:45:44.690"/>
</kw>
<status status="PASS" starttime="20240424 19:45:44.622" endtime="20240424 19:45:44.690"/>
</kw>
<kw name="And Open &quot;BIM Validation - Structural.xml&quot; Role" library="role_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:44.690" endtime="20240424 19:45:44.694"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:44.694" endtime="20240424 19:45:44.696"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:44.696" endtime="20240424 19:45:44.769"/>
</kw>
<status status="PASS" starttime="20240424 19:45:44.690" endtime="20240424 19:45:44.769"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Roles_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:44.769" endtime="20240424 19:45:44.769"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open Role</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:44.769" endtime="20240424 19:45:45.076"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>BIM Validation - Structural.xml</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:45:45.076" endtime="20240424 19:45:45.139"/>
</kw>
<status status="PASS" starttime="20240424 19:45:44.690" endtime="20240424 19:45:45.139"/>
</kw>
<kw name="Then Verify &quot;BIM Validation - Structural.xml&quot; Resources" library="role_step_definitions">
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${default_rolesets_name}</var>
<arg>RULESETS</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:45:45.139" level="INFO">${default_rolesets_name} = BIM Validation-Structural.cset</msg>
<status status="PASS" starttime="20240424 19:45:45.139" endtime="20240424 19:45:45.139"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${default_rolesets_name}</arg>
<arg>BIM Validation-Structural.cset</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:45:45.139" endtime="20240424 19:45:45.139"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${default_classifications_name}</var>
<arg>CLASSIFICATIONS</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:45:45.139" level="INFO">${default_classifications_name} = Building Elements - General.classification</msg>
<status status="PASS" starttime="20240424 19:45:45.139" endtime="20240424 19:45:45.139"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${default_classifications_name}</arg>
<arg>Building Elements - General.classification</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:45:45.139" endtime="20240424 19:45:45.139"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${default_itos_name}</var>
<arg>ITOS</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:45:45.149" level="INFO">${default_itos_name} = Structural Quantities.ito</msg>
<status status="PASS" starttime="20240424 19:45:45.139" endtime="20240424 19:45:45.149"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${default_itos_name}</arg>
<arg>Structural Quantities.ito</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:45:45.149" endtime="20240424 19:45:45.149"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${Default_role_name}</var>
<arg>roleNameText</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:45:45.149" level="INFO">${Default_role_name} = BIM Validation - Structural</msg>
<status status="PASS" starttime="20240424 19:45:45.149" endtime="20240424 19:45:45.149"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Default_role_name}</arg>
<arg>BIM Validation - Structural</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:45:45.149" endtime="20240424 19:45:45.149"/>
</kw>
<status status="PASS" starttime="20240424 19:45:45.139" endtime="20240424 19:45:45.149"/>
</kw>
<kw name="And Open &quot;BIM Validation - Architectural.xml&quot; Role" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:45.149" endtime="20240424 19:45:45.149"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Roles_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:45.149" endtime="20240424 19:45:45.149"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open Role</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:45.149" endtime="20240424 19:45:45.451"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Dialog Should Be Open</arg>
<arg>Open Role</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Open Role</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:45:45.451" endtime="20240424 19:45:45.456"/>
</kw>
<status status="PASS" starttime="20240424 19:45:45.451" endtime="20240424 19:45:45.456"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open Role</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:45:45.456" endtime="20240424 19:45:45.463"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Files</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:45:45.463" endtime="20240424 19:45:45.466"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${role_with_path}</var>
<arg>${roles_folder}</arg>
<arg>BIM Validation - Architectural.xml</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:45:45.466" level="INFO">${role_with_path} = C:\users\public\Solibri\SOLIBRI\Roles\BIM Validation - Architectural.xml</msg>
<status status="PASS" starttime="20240424 19:45:45.466" endtime="20240424 19:45:45.466"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${role_with_path}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:45:45.466" endtime="20240424 19:45:45.554"/>
</kw>
<status status="PASS" starttime="20240424 19:45:45.149" endtime="20240424 19:45:45.554"/>
</kw>
<kw name="Then Verify &quot;BIM Validation - Architectural.xml&quot; Resources" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:45.554" endtime="20240424 19:45:45.560"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${default_rolesets_name}</var>
<arg>RULESETS</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:45:45.565" level="INFO">${default_rolesets_name} = BIM Validation - Architectural.cset</msg>
<status status="PASS" starttime="20240424 19:45:45.560" endtime="20240424 19:45:45.565"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${default_rolesets_name}</arg>
<arg>BIM Validation - Architectural.cset</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:45:45.565" endtime="20240424 19:45:45.565"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${default_classifications_name}</var>
<arg>CLASSIFICATIONS</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:45:45.569" level="INFO">${default_classifications_name} = Building Elements - General.classification</msg>
<status status="PASS" starttime="20240424 19:45:45.565" endtime="20240424 19:45:45.569"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${default_classifications_name}</arg>
<arg>Building Elements - General.classification</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:45:45.569" endtime="20240424 19:45:45.569"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${default_itos_name}</var>
<arg>ITOS</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:45:45.623" level="INFO">${default_itos_name} = Building Element Quantities.ito</msg>
<status status="PASS" starttime="20240424 19:45:45.569" endtime="20240424 19:45:45.623"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${default_itos_name}</arg>
<arg>Building Element Quantities.ito</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:45:45.623" endtime="20240424 19:45:45.623"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${Default_role_name}</var>
<arg>roleNameText</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:45:45.623" level="INFO">${Default_role_name} = BIM Validation - Architectural</msg>
<status status="PASS" starttime="20240424 19:45:45.623" endtime="20240424 19:45:45.623"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Default_role_name}</arg>
<arg>BIM Validation - Architectural</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:45:45.623" endtime="20240424 19:45:45.623"/>
</kw>
<status status="PASS" starttime="20240424 19:45:45.554" endtime="20240424 19:45:45.623"/>
</kw>
<status status="PASS" starttime="20240424 19:45:42.822" endtime="20240424 19:45:45.623"/>
</test>
<test id="s1-s2-t2" name="Create New Role and Verify Persistence" line="31">
<kw name="Prepare Solibri For New Test" library="role_step_definitions" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:45.623" endtime="20240424 19:45:45.623"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:45:45.623" endtime="20240424 19:45:45.748"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:45.750" endtime="20240424 19:45:45.750"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:45.750" endtime="20240424 19:45:45.750"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:45.750" endtime="20240424 19:45:45.764"/>
</kw>
<status status="PASS" starttime="20240424 19:45:45.750" endtime="20240424 19:45:45.764"/>
</kw>
<status status="PASS" starttime="20240424 19:45:45.623" endtime="20240424 19:45:45.764"/>
</kw>
<status status="PASS" starttime="20240424 19:45:45.623" endtime="20240424 19:45:45.764"/>
</kw>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:45:45.772" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:45:45.772" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:45:45 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:45:45.764" endtime="20240424 19:45:45.773"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:45:45.773" endtime="20240424 19:45:45.773"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:45.773" endtime="20240424 19:45:45.839"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:45:45.839" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:45:45.839" endtime="20240424 19:45:45.839"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:45:45.839" endtime="20240424 19:45:45.839"/>
</kw>
<status status="PASS" starttime="20240424 19:45:45.839" endtime="20240424 19:45:45.839"/>
</kw>
<status status="PASS" starttime="20240424 19:45:45.764" endtime="20240424 19:45:45.839"/>
</kw>
<kw name="Then Switch to The Role View" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:45.839" endtime="20240424 19:45:45.847"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:45.847" endtime="20240424 19:45:45.847"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:45.847" endtime="20240424 19:45:45.847"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:45.847" endtime="20240424 19:45:45.929"/>
</kw>
<status status="PASS" starttime="20240424 19:45:45.847" endtime="20240424 19:45:45.929"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Roles_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:45.929" endtime="20240424 19:45:45.929"/>
</kw>
<status status="PASS" starttime="20240424 19:45:45.839" endtime="20240424 19:45:45.929"/>
</kw>
<kw name="Then Create New Role" library="role_step_definitions">
<kw name="Add Rulesets" library="role_step_definitions">
<kw name="Push Button" library="SwingRobot">
<arg>Add Rulesets</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:45.929" endtime="20240424 19:45:46.289"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open File</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:45:46.289" endtime="20240424 19:45:46.301"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Files</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:45:46.301" endtime="20240424 19:45:46.355"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${ruleset_with_path}</var>
<arg>${rules_folder}</arg>
<arg>Architectural Rules</arg>
<arg>Egress Analysis.cset</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:45:46.355" level="INFO">${ruleset_with_path} = C:\users\public\Solibri\SOLIBRI\Rulesets\Architectural Rules\Egress Analysis.cset</msg>
<status status="PASS" starttime="20240424 19:45:46.355" endtime="20240424 19:45:46.355"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ruleset_with_path}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:45:46.355" endtime="20240424 19:45:46.564"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:46.564" endtime="20240424 19:45:46.564"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Add Rulesets</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:46.564" endtime="20240424 19:45:46.932"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${ruleset_with_path}</var>
<arg>${rules_folder}</arg>
<arg>Architectural Rules</arg>
<arg>Quantity TakeOff.cset</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:45:46.932" level="INFO">${ruleset_with_path} = C:\users\public\Solibri\SOLIBRI\Rulesets\Architectural Rules\Quantity TakeOff.cset</msg>
<status status="PASS" starttime="20240424 19:45:46.932" endtime="20240424 19:45:46.932"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ruleset_with_path}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:45:46.932" endtime="20240424 19:45:47.181"/>
</kw>
<status status="PASS" starttime="20240424 19:45:45.929" endtime="20240424 19:45:47.181"/>
</kw>
<kw name="Add Classifications" library="role_step_definitions">
<kw name="Push Button" library="SwingRobot">
<arg>Add Classifications</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:47.181" endtime="20240424 19:45:47.604"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open File</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:45:47.604" endtime="20240424 19:45:47.608"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Files</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:45:47.608" endtime="20240424 19:45:47.676"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${classification_with_path}</var>
<arg>${classification_folder}</arg>
<arg>Exits.classification</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:45:47.676" level="INFO">${classification_with_path} = C:\users\public\Solibri\SOLIBRI\Classifications\Exits.classification</msg>
<status status="PASS" starttime="20240424 19:45:47.676" endtime="20240424 19:45:47.676"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${classification_with_path}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:45:47.676" endtime="20240424 19:45:47.866"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:47.866" endtime="20240424 19:45:47.868"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Add Classifications</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:47.868" endtime="20240424 19:45:48.276"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${classification_with_path}</var>
<arg>${classification_folder}</arg>
<arg>Furniture.classification</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:45:48.276" level="INFO">${classification_with_path} = C:\users\public\Solibri\SOLIBRI\Classifications\Furniture.classification</msg>
<status status="PASS" starttime="20240424 19:45:48.276" endtime="20240424 19:45:48.276"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${classification_with_path}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:45:48.276" endtime="20240424 19:45:48.480"/>
</kw>
<status status="PASS" starttime="20240424 19:45:47.181" endtime="20240424 19:45:48.480"/>
</kw>
<kw name="Add Information Takeoff Definitions" library="role_step_definitions">
<kw name="Push Button" library="SwingRobot">
<arg>Add Information Takeoff Definitions</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:48.480" endtime="20240424 19:45:48.921"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open File</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:45:48.921" endtime="20240424 19:45:48.926"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Files</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:45:48.926" endtime="20240424 19:45:48.937"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${information_takeoff_with_path}</var>
<arg>${information_takeoff_folder}</arg>
<arg>Flow Terminals and Valves.ito</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:45:48.937" level="INFO">${information_takeoff_with_path} = C:\users\public\Solibri\SOLIBRI\Information Takeoff\Flow Terminals and Valves.ito</msg>
<status status="PASS" starttime="20240424 19:45:48.937" endtime="20240424 19:45:48.937"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${information_takeoff_with_path}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:45:48.937" endtime="20240424 19:45:49.132"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:49.132" endtime="20240424 19:45:49.140"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Add Information Takeoff Definitions</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:49.140" endtime="20240424 19:45:49.591"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${information_takeoff_with_path}</var>
<arg>${information_takeoff_folder}</arg>
<arg>Pipes and Ducts.ito</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:45:49.591" level="INFO">${information_takeoff_with_path} = C:\users\public\Solibri\SOLIBRI\Information Takeoff\Pipes and Ducts.ito</msg>
<status status="PASS" starttime="20240424 19:45:49.591" endtime="20240424 19:45:49.591"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${information_takeoff_with_path}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:45:49.591" endtime="20240424 19:45:49.807"/>
</kw>
<status status="PASS" starttime="20240424 19:45:48.480" endtime="20240424 19:45:49.807"/>
</kw>
<status status="PASS" starttime="20240424 19:45:45.929" endtime="20240424 19:45:49.807"/>
</kw>
<kw name="Then Save New Role" library="role_step_definitions">
<kw name="Push Button" library="SwingRobot">
<arg>Save As</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:49.807" endtime="20240424 19:45:50.250"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:45:50.250" endtime="20240424 19:45:50.250"/>
</kw>
<kw name="Clear Text Field" library="SwingRobot">
<arg>0</arg>
<doc>Clears contents of text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:45:50.250" endtime="20240424 19:45:50.311"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${test_role_name}</var>
<arg>${test_files_folder}</arg>
<arg>TestRole.xml</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:45:50.311" level="INFO">${test_role_name} = C:\Users\runneradmin\Documents\RFTestFiles\TestRole.xml</msg>
<status status="PASS" starttime="20240424 19:45:50.311" endtime="20240424 19:45:50.311"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>${test_role_name}</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:45:50.311" endtime="20240424 19:45:50.341"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Save As</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:50.341" endtime="20240424 19:45:50.508"/>
</kw>
<status status="PASS" starttime="20240424 19:45:49.807" endtime="20240424 19:45:50.508"/>
</kw>
<kw name="Then Verify New Role" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:50.508" endtime="20240424 19:45:50.508"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${Default_role_name}</var>
<arg>roleNameText</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:45:50.520" level="INFO">${Default_role_name} = TestRole</msg>
<status status="PASS" starttime="20240424 19:45:50.508" endtime="20240424 19:45:50.520"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Default_role_name}</arg>
<arg>TestRole</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:45:50.520" endtime="20240424 19:45:50.520"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${default_rulesets_name}</var>
<arg>0</arg>
<arg>4</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:45:50.520" level="INFO">${default_rulesets_name} = Egress Analysis.cset</msg>
<status status="PASS" starttime="20240424 19:45:50.520" endtime="20240424 19:45:50.520"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${default_rulesets_name}</arg>
<arg>Egress Analysis.cset</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:45:50.520" endtime="20240424 19:45:50.520"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${default_rulesets_name}</var>
<arg>0</arg>
<arg>7</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:45:50.520" level="INFO">${default_rulesets_name} = Quantity TakeOff.cset</msg>
<status status="PASS" starttime="20240424 19:45:50.520" endtime="20240424 19:45:50.520"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${default_rulesets_name}</arg>
<arg>Quantity TakeOff.cset</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:45:50.520" endtime="20240424 19:45:50.520"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${default_classifications_name}</var>
<arg>1</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:45:50.535" level="INFO">${default_classifications_name} = Exits.classification</msg>
<status status="PASS" starttime="20240424 19:45:50.520" endtime="20240424 19:45:50.535"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${default_classifications_name}</arg>
<arg>Exits.classification</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:45:50.535" endtime="20240424 19:45:50.535"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${default_classifications_name}</var>
<arg>1</arg>
<arg>4</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:45:50.535" level="INFO">${default_classifications_name} = Furniture.classification</msg>
<status status="PASS" starttime="20240424 19:45:50.535" endtime="20240424 19:45:50.535"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${default_classifications_name}</arg>
<arg>Furniture.classification</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:45:50.535" endtime="20240424 19:45:50.535"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${default_itos_name}</var>
<arg>2</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:45:50.547" level="INFO">${default_itos_name} = Flow Terminals and Valves.ito</msg>
<status status="PASS" starttime="20240424 19:45:50.535" endtime="20240424 19:45:50.547"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${default_itos_name}</arg>
<arg>Flow Terminals and Valves.ito</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:45:50.547" endtime="20240424 19:45:50.547"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${default_itos_name}</var>
<arg>2</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:45:50.547" level="INFO">${default_itos_name} = Pipes and Ducts.ito</msg>
<status status="PASS" starttime="20240424 19:45:50.547" endtime="20240424 19:45:50.547"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${default_itos_name}</arg>
<arg>Pipes and Ducts.ito</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:45:50.547" endtime="20240424 19:45:50.547"/>
</kw>
<status status="PASS" starttime="20240424 19:45:50.508" endtime="20240424 19:45:50.547"/>
</kw>
<kw name="Then Uncheck Show Role Selection in General Settings" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:50.547" endtime="20240424 19:45:50.547"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:50.547" endtime="20240424 19:45:50.547"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:50.547" endtime="20240424 19:45:50.560"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:50.560" endtime="20240424 19:45:50.566"/>
</kw>
<status status="PASS" starttime="20240424 19:45:50.547" endtime="20240424 19:45:50.566"/>
</kw>
<kw name="Switch to the Settings View" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:50.566" endtime="20240424 19:45:50.638"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:50.638" endtime="20240424 19:45:50.638"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:50.638" endtime="20240424 19:45:50.644"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:45:50.644" endtime="20240424 19:45:50.649"/>
</kw>
<status status="PASS" starttime="20240424 19:45:50.638" endtime="20240424 19:45:50.649"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:45:50.649" endtime="20240424 19:45:51.080"/>
</kw>
<status status="PASS" starttime="20240424 19:45:50.566" endtime="20240424 19:45:51.080"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>General</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:45:51.080" endtime="20240424 19:45:51.093"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>General</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:45:51.093" endtime="20240424 19:45:51.257"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${checkbox_status}</var>
<arg>Check Box Should Be Unchecked</arg>
<arg>1</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Check Box Should Be Unchecked" library="SwingRobot">
<arg>1</arg>
<doc>Fails if checkbox is checked.</doc>
<status status="PASS" starttime="20240424 19:45:51.257" endtime="20240424 19:45:51.263"/>
</kw>
<msg timestamp="20240424 19:45:51.263" level="INFO">${checkbox_status} = True</msg>
<status status="PASS" starttime="20240424 19:45:51.257" endtime="20240424 19:45:51.263"/>
</kw>
<if>
<branch type="IF" condition="${checkbox_status} == False">
<kw name="Uncheck Check Box" library="SwingRobot">
<arg>1</arg>
<doc>Uses current context to search for a checkbox and when found, unchecks it.</doc>
<status status="NOT RUN" starttime="20240424 19:45:51.263" endtime="20240424 19:45:51.263"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:45:51.263" endtime="20240424 19:45:51.263"/>
</branch>
<status status="PASS" starttime="20240424 19:45:51.263" endtime="20240424 19:45:51.263"/>
</if>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:45:51.263" endtime="20240424 19:45:51.315"/>
</kw>
<status status="PASS" starttime="20240424 19:45:50.547" endtime="20240424 19:45:51.315"/>
</kw>
<kw name="Then Restart Solibri" library="CommonUtils">
<arg>${SOLIBRI_HOME}</arg>
<doc>Restarts Solibri</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>message=Solibri directory is ${SOLIBRI_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:45:51.315" endtime="20240424 19:45:51.315"/>
</kw>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:45:51.315" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 19:45:51.315" endtime="20240424 19:45:51.315"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>condition=${is_running}</arg>
<arg>msg=Solibri is not running</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240424 19:45:51.315" endtime="20240424 19:45:51.315"/>
</kw>
<kw name="Close Solibri" library="SolibriLibrary">
<msg timestamp="20240424 19:45:51.335" level="INFO">The SMC application is still alive and need to be killed! 

The SMC application had to be killed from CMD!</msg>
<status status="PASS" starttime="20240424 19:45:51.315" endtime="20240424 19:45:51.335"/>
</kw>
<kw name="Wait For Process To Close" library="CommonUtils">
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<arg>time_out=${timeout_for_loops}</arg>
<doc>Waits for process to close</doc>
<kw name="Get Time" library="BuiltIn">
<var>${start_time}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 19:45:51.335" level="INFO">${start_time} = 2024-04-24 19:45:51</msg>
<status status="PASS" starttime="20240424 19:45:51.335" endtime="20240424 19:45:51.335"/>
</kw>
<while condition="${True}">
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:45:51.335" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 19:45:51.335" endtime="20240424 19:45:51.335"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240424 19:45:52.335" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240424 19:45:51.335" endtime="20240424 19:45:52.335"/>
</kw>
<status status="PASS" starttime="20240424 19:45:51.335" endtime="20240424 19:45:52.335"/>
</branch>
<status status="PASS" starttime="20240424 19:45:51.335" endtime="20240424 19:45:52.335"/>
</if>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Exit For Loop</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 19:45:52.335" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<status status="PASS" starttime="20240424 19:45:52.335" endtime="20240424 19:45:52.335"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 19:45:52.335" level="INFO">${now} = 2024-04-24 19:45:52</msg>
<status status="PASS" starttime="20240424 19:45:52.335" endtime="20240424 19:45:52.335"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20240424 19:45:52.429" level="INFO">${elapsed_time} = 1.0</msg>
<status status="PASS" starttime="20240424 19:45:52.335" endtime="20240424 19:45:52.429"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not close in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 19:45:52.429" endtime="20240424 19:45:52.429"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 19:45:52.429" endtime="20240424 19:45:52.429"/>
</break>
<status status="NOT RUN" starttime="20240424 19:45:52.429" endtime="20240424 19:45:52.429"/>
</branch>
<status status="PASS" starttime="20240424 19:45:52.429" endtime="20240424 19:45:52.429"/>
</if>
<status status="PASS" starttime="20240424 19:45:51.335" endtime="20240424 19:45:52.429"/>
</iter>
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:45:52.429" level="INFO">${is_running} = None</msg>
<status status="PASS" starttime="20240424 19:45:52.429" endtime="20240424 19:45:52.429"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240424 19:45:52.429" endtime="20240424 19:45:52.429"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:45:52.429" endtime="20240424 19:45:52.429"/>
</branch>
<status status="PASS" starttime="20240424 19:45:52.429" endtime="20240424 19:45:52.429"/>
</if>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Exit For Loop</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 19:45:52.429" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing FOR loop.</doc>
<msg timestamp="20240424 19:45:52.444" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</kw>
<status status="PASS" starttime="20240424 19:45:52.429" endtime="20240424 19:45:52.444"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<status status="NOT RUN" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<status status="NOT RUN" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not close in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</break>
<status status="NOT RUN" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</if>
<status status="PASS" starttime="20240424 19:45:52.429" endtime="20240424 19:45:52.444"/>
</iter>
<status status="PASS" starttime="20240424 19:45:51.335" endtime="20240424 19:45:52.444"/>
</while>
<status status="PASS" starttime="20240424 19:45:51.335" endtime="20240424 19:45:52.444"/>
</kw>
<kw name="Open Solibri" library="SolibriLibrary">
<arg>${SOLIBRI_DIR}</arg>
<msg timestamp="20240424 19:45:52.444" level="INFO">Solibri Installation folder: D:\a\desktop-main\desktop-main\temp\installers\temporary-installation-folder\
Solibri Executable: D:\a\desktop-main\desktop-main\temp\installers\temporary-installation-folder\temporary-installation-folder\Solibri.exe</msg>
<status status="PASS" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</kw>
<kw name="Wait For Process To Open" library="CommonUtils">
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<arg>time_out=${timeout_for_loops}</arg>
<doc>Waits for process to open</doc>
<kw name="Get Time" library="BuiltIn">
<var>${start_time}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 19:45:52.444" level="INFO">${start_time} = 2024-04-24 19:45:52</msg>
<status status="PASS" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</kw>
<while condition="${True}">
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:45:52.444" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Sleep</arg>
<arg>1</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 19:45:52.444" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<status status="PASS" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<break>
<status status="PASS" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</break>
<status status="PASS" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</branch>
<status status="PASS" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</if>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<status status="NOT RUN" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<status status="NOT RUN" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not open in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</break>
<status status="NOT RUN" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</if>
<status status="PASS" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</iter>
<status status="PASS" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</while>
<status status="PASS" starttime="20240424 19:45:52.444" endtime="20240424 19:45:52.444"/>
</kw>
<kw name="Wait For Solibri Window to Appear" library="CommonUtils">
<arg>Solibri Office</arg>
<doc>Wait until Solibri is started</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>18</arg>
<arg>18</arg>
<arg>Window Should Be Open</arg>
<arg>${solibri_office}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>18</arg>
<arg>18</arg>
<arg>Window Should Be Open</arg>
<arg>${solibri_office}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Window Should Be Open" library="SwingRobot">
<arg>${solibri_office}</arg>
<doc>Fails if the window is not open.</doc>
<msg timestamp="20240424 19:45:54.477" level="FAIL">Connection to remote server broken: [WinError 10061] No connection could be made because the target machine actively refused it</msg>
<status status="FAIL" starttime="20240424 19:45:52.444" endtime="20240424 19:45:54.477"/>
</kw>
<kw name="Window Should Be Open" library="SwingRobot">
<arg>${solibri_office}</arg>
<doc>Fails if the window is not open.</doc>
<status status="PASS" starttime="20240424 19:46:12.481" endtime="20240424 19:46:12.776"/>
</kw>
<status status="PASS" starttime="20240424 19:45:52.444" endtime="20240424 19:46:12.776"/>
</kw>
<msg timestamp="20240424 19:46:12.776" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:45:52.444" endtime="20240424 19:46:12.776"/>
</kw>
<status status="PASS" starttime="20240424 19:45:52.444" endtime="20240424 19:46:12.776"/>
</kw>
<status status="PASS" starttime="20240424 19:45:51.315" endtime="20240424 19:46:12.776"/>
</kw>
<kw name="Then Switch to The Role View" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:46:12.776" endtime="20240424 19:46:12.889"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:46:12.889" endtime="20240424 19:46:12.913"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:46:12.913" endtime="20240424 19:46:12.916"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:46:12.916" endtime="20240424 19:46:12.933"/>
</kw>
<status status="PASS" starttime="20240424 19:46:12.889" endtime="20240424 19:46:12.933"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Roles_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:46:12.933" endtime="20240424 19:46:13.056"/>
</kw>
<status status="PASS" starttime="20240424 19:46:12.776" endtime="20240424 19:46:13.056"/>
</kw>
<kw name="Then Verify New Role Loaded" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:46:13.056" endtime="20240424 19:46:13.339"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<var>${role_loaded}</var>
<arg>15</arg>
<arg>15</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Label Should Exist</arg>
<arg>Role: TestRole</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<arg>Label Should Exist</arg>
<arg>Role: TestRole</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Label Should Exist" library="SwingRobot">
<arg>Role: TestRole</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 19:46:13.339" endtime="20240424 19:46:17.053"/>
</kw>
<status status="PASS" starttime="20240424 19:46:13.339" endtime="20240424 19:46:17.053"/>
</kw>
<msg timestamp="20240424 19:46:17.053" level="INFO">${role_loaded} = True</msg>
<status status="PASS" starttime="20240424 19:46:13.339" endtime="20240424 19:46:17.053"/>
</kw>
<if>
<branch type="IF" condition="${role_loaded} == True">
<kw name="Verify New Role" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:46:17.053" endtime="20240424 19:46:17.066"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${Default_role_name}</var>
<arg>roleNameText</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:46:17.170" level="INFO">${Default_role_name} = TestRole</msg>
<status status="PASS" starttime="20240424 19:46:17.066" endtime="20240424 19:46:17.170"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Default_role_name}</arg>
<arg>TestRole</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:46:17.170" endtime="20240424 19:46:17.170"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${default_rulesets_name}</var>
<arg>0</arg>
<arg>4</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:46:17.263" level="INFO">${default_rulesets_name} = Egress Analysis.cset</msg>
<status status="PASS" starttime="20240424 19:46:17.170" endtime="20240424 19:46:17.263"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${default_rulesets_name}</arg>
<arg>Egress Analysis.cset</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:46:17.263" endtime="20240424 19:46:17.263"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${default_rulesets_name}</var>
<arg>0</arg>
<arg>7</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:46:17.309" level="INFO">${default_rulesets_name} = Quantity TakeOff.cset</msg>
<status status="PASS" starttime="20240424 19:46:17.263" endtime="20240424 19:46:17.309"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${default_rulesets_name}</arg>
<arg>Quantity TakeOff.cset</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:46:17.309" endtime="20240424 19:46:17.309"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${default_classifications_name}</var>
<arg>1</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:46:17.351" level="INFO">${default_classifications_name} = Exits.classification</msg>
<status status="PASS" starttime="20240424 19:46:17.309" endtime="20240424 19:46:17.351"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${default_classifications_name}</arg>
<arg>Exits.classification</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:46:17.351" endtime="20240424 19:46:17.351"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${default_classifications_name}</var>
<arg>1</arg>
<arg>4</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:46:17.394" level="INFO">${default_classifications_name} = Furniture.classification</msg>
<status status="PASS" starttime="20240424 19:46:17.351" endtime="20240424 19:46:17.394"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${default_classifications_name}</arg>
<arg>Furniture.classification</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:46:17.394" endtime="20240424 19:46:17.394"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${default_itos_name}</var>
<arg>2</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:46:17.417" level="INFO">${default_itos_name} = Flow Terminals and Valves.ito</msg>
<status status="PASS" starttime="20240424 19:46:17.394" endtime="20240424 19:46:17.417"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${default_itos_name}</arg>
<arg>Flow Terminals and Valves.ito</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:46:17.417" endtime="20240424 19:46:17.417"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${default_itos_name}</var>
<arg>2</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:46:17.426" level="INFO">${default_itos_name} = Pipes and Ducts.ito</msg>
<status status="PASS" starttime="20240424 19:46:17.417" endtime="20240424 19:46:17.426"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${default_itos_name}</arg>
<arg>Pipes and Ducts.ito</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:46:17.426" endtime="20240424 19:46:17.426"/>
</kw>
<status status="PASS" starttime="20240424 19:46:17.053" endtime="20240424 19:46:17.426"/>
</kw>
<status status="PASS" starttime="20240424 19:46:17.053" endtime="20240424 19:46:17.426"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>TestRole is not loaded</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 19:46:17.426" endtime="20240424 19:46:17.426"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:46:17.426" endtime="20240424 19:46:17.426"/>
</branch>
<status status="PASS" starttime="20240424 19:46:17.053" endtime="20240424 19:46:17.426"/>
</if>
<status status="PASS" starttime="20240424 19:46:13.056" endtime="20240424 19:46:17.426"/>
</kw>
<status status="PASS" starttime="20240424 19:45:45.623" endtime="20240424 19:46:17.426"/>
</test>
<doc>To check the Roles
Open the multiple Roles and Verify
all resources are loaded in Solibri</doc>
<meta name="Feature">Role</meta>
<status status="PASS" starttime="20240424 19:45:42.754" endtime="20240424 19:46:17.426"/>
</suite>
<suite id="s1-s3" name="03 Checking View" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\03_checking_view.robot">
<test id="s1-s3-t1" name="Scenario: Verify Checking View" line="15">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:46:17.489" endtime="20240424 19:46:17.549"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:46:17.549" endtime="20240424 19:46:17.668"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:46:17.668" endtime="20240424 19:46:17.668"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:46:17.668" endtime="20240424 19:46:17.693"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:46:17.693" endtime="20240424 19:46:17.742"/>
</kw>
<status status="PASS" starttime="20240424 19:46:17.668" endtime="20240424 19:46:17.742"/>
</kw>
<status status="PASS" starttime="20240424 19:46:17.489" endtime="20240424 19:46:17.742"/>
</kw>
<status status="PASS" starttime="20240424 19:46:17.489" endtime="20240424 19:46:17.742"/>
</kw>
<kw name="Given No Existing Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:46:17.742" endtime="20240424 19:46:17.783"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:46:17.783" endtime="20240424 19:46:17.787"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:46:17.787" endtime="20240424 19:46:17.799"/>
</kw>
<status status="PASS" starttime="20240424 19:46:17.742" endtime="20240424 19:46:17.799"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:46:17.799" endtime="20240424 19:46:17.807"/>
</kw>
<status status="PASS" starttime="20240424 19:46:17.799" endtime="20240424 19:46:17.807"/>
</kw>
<msg timestamp="20240424 19:46:17.807" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 19:46:17.799" endtime="20240424 19:46:17.807"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:46:17.807" endtime="20240424 19:46:17.807"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:46:17.807" endtime="20240424 19:46:17.807"/>
</branch>
<status status="PASS" starttime="20240424 19:46:17.807" endtime="20240424 19:46:17.807"/>
</if>
<status status="PASS" starttime="20240424 19:46:17.742" endtime="20240424 19:46:17.807"/>
</kw>
<kw name="When I Switch to the Checking View" library="checking_view_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>CHECKING</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:46:17.807" endtime="20240424 19:46:17.814"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:46:17.814" endtime="20240424 19:46:17.817"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:46:17.817" endtime="20240424 19:46:17.850"/>
</kw>
<status status="PASS" starttime="20240424 19:46:17.807" endtime="20240424 19:46:17.850"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5x</arg>
<arg>Component Should Be Visible</arg>
<arg>Checking_View</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Component Should Be Visible" library="SwingRobot">
<arg>Checking_View</arg>
<doc>Checks that component is visible.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<msg timestamp="20240424 19:46:27.874" level="FAIL">org.netbeans.jemmy.TimeoutExpiredException: Wait for "Checking_View" subcomponent to be displayed</msg>
<status status="FAIL" starttime="20240424 19:46:17.850" endtime="20240424 19:46:27.874"/>
</kw>
<kw name="Component Should Be Visible" library="SwingRobot">
<arg>Checking_View</arg>
<doc>Checks that component is visible.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<msg timestamp="20240424 19:46:37.897" level="FAIL">org.netbeans.jemmy.TimeoutExpiredException: Wait for "Checking_View" subcomponent to be displayed</msg>
<status status="FAIL" starttime="20240424 19:46:27.890" endtime="20240424 19:46:37.897"/>
</kw>
<kw name="Component Should Be Visible" library="SwingRobot">
<arg>Checking_View</arg>
<doc>Checks that component is visible.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<msg timestamp="20240424 19:46:47.916" level="FAIL">org.netbeans.jemmy.TimeoutExpiredException: Wait for "Checking_View" subcomponent to be displayed</msg>
<status status="FAIL" starttime="20240424 19:46:37.913" endtime="20240424 19:46:47.916"/>
</kw>
<kw name="Component Should Be Visible" library="SwingRobot">
<arg>Checking_View</arg>
<doc>Checks that component is visible.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<msg timestamp="20240424 19:46:57.938" level="FAIL">org.netbeans.jemmy.TimeoutExpiredException: Wait for "Checking_View" subcomponent to be displayed</msg>
<status status="FAIL" starttime="20240424 19:46:47.932" endtime="20240424 19:46:57.938"/>
</kw>
<kw name="Component Should Be Visible" library="SwingRobot">
<arg>Checking_View</arg>
<doc>Checks that component is visible.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<msg timestamp="20240424 19:47:07.962" level="FAIL">org.netbeans.jemmy.TimeoutExpiredException: Wait for "Checking_View" subcomponent to be displayed</msg>
<status status="FAIL" starttime="20240424 19:46:57.954" endtime="20240424 19:47:07.962"/>
</kw>
<msg timestamp="20240424 19:47:07.962" level="FAIL">Keyword 'Component Should Be Visible' failed after retrying 5 times. The last error was: org.netbeans.jemmy.TimeoutExpiredException: Wait for "Checking_View" subcomponent to be displayed</msg>
<status status="FAIL" starttime="20240424 19:46:17.850" endtime="20240424 19:47:07.962"/>
</kw>
<status status="FAIL" starttime="20240424 19:46:17.807" endtime="20240424 19:47:07.962"/>
</kw>
<kw name="Then Buttons are Disabled in Checking View" library="checking_view_step_definitions">
<status status="NOT RUN" starttime="20240424 19:47:07.962" endtime="20240424 19:47:07.962"/>
</kw>
<kw name="And I Choose a Role" library="checking_view_step_definitions">
<arg>Energy Analysis</arg>
<status status="NOT RUN" starttime="20240424 19:47:07.962" endtime="20240424 19:47:07.962"/>
</kw>
<kw name="And IFC File is Open" library="ModelHandlingResource">
<arg>${solibri_building_ifc}</arg>
<status status="NOT RUN" starttime="20240424 19:47:07.962" endtime="20240424 19:47:07.962"/>
</kw>
<kw name="Then I Switch to the Checking View" library="checking_view_step_definitions">
<status status="NOT RUN" starttime="20240424 19:47:07.962" endtime="20240424 19:47:07.962"/>
</kw>
<kw name="Then Click to Add Rulesets is Enabled" library="checking_view_step_definitions">
<status status="NOT RUN" starttime="20240424 19:47:07.962" endtime="20240424 19:47:07.962"/>
</kw>
<kw name="When I Open Rulesets in the Checking View" library="checking_view_step_definitions">
<status status="NOT RUN" starttime="20240424 19:47:07.962" endtime="20240424 19:47:07.962"/>
</kw>
<kw name="Then Rulesets are Visible in the Checking View" library="checking_view_step_definitions">
<arg>Energy Analysis</arg>
<status status="NOT RUN" starttime="20240424 19:47:07.962" endtime="20240424 19:47:07.962"/>
</kw>
<kw name="Clean Up" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Take Screenshot</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<kw name="Take Screenshot" library="ScreenCapLibrary">
<doc>Takes a screenshot in the specified format at library import and
embeds it into the log file (PNG by default).</doc>
<msg timestamp="20240424 19:47:08.024" level="INFO" html="true">&lt;a href="screenshot_3.png"&gt;&lt;img src="screenshot_3.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240424 19:47:07.962" endtime="20240424 19:47:08.024"/>
</kw>
<status status="PASS" starttime="20240424 19:47:07.962" endtime="20240424 19:47:08.024"/>
</kw>
<kw name="Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:47:08.024" endtime="20240424 19:47:08.134"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:08.134" endtime="20240424 19:47:08.138"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:47:08.138" endtime="20240424 19:47:08.143"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:08.143" endtime="20240424 19:47:08.175"/>
</kw>
<status status="PASS" starttime="20240424 19:47:08.134" endtime="20240424 19:47:08.175"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:47:08.185" level="FAIL">Label 'Close' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:47:08.175" endtime="20240424 19:47:08.185"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:47:08.185" endtime="20240424 19:47:08.222"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:47:18.232" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:47:08.222" endtime="20240424 19:47:18.232"/>
</kw>
<msg timestamp="20240424 19:47:18.232" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:47:08.222" endtime="20240424 19:47:18.232"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:47:28.239" level="FAIL">Dialog 'Select' is not open</msg>
<status status="FAIL" starttime="20240424 19:47:18.232" endtime="20240424 19:47:28.239"/>
</kw>
<msg timestamp="20240424 19:47:28.239" level="INFO">${check_if_save_asked} = False</msg>
<status status="PASS" starttime="20240424 19:47:18.232" endtime="20240424 19:47:28.239"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:47:28.239" endtime="20240424 19:47:28.239"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:47:28.239" endtime="20240424 19:47:28.239"/>
</branch>
<status status="PASS" starttime="20240424 19:47:28.239" endtime="20240424 19:47:28.239"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:47:28.239" endtime="20240424 19:47:28.239"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:47:28.239" endtime="20240424 19:47:28.239"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:47:28.239" endtime="20240424 19:47:28.239"/>
</branch>
<status status="PASS" starttime="20240424 19:47:28.239" endtime="20240424 19:47:28.239"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:28.239" endtime="20240424 19:47:28.239"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:47:28.239" endtime="20240424 19:47:28.256"/>
</kw>
<status status="PASS" starttime="20240424 19:47:28.239" endtime="20240424 19:47:28.256"/>
</kw>
<status status="FAIL" starttime="20240424 19:47:08.024" endtime="20240424 19:47:28.256"/>
</kw>
<status status="FAIL" starttime="20240424 19:47:07.962" endtime="20240424 19:47:28.256">Label 'Close' is not enabled</status>
</kw>
<status status="FAIL" starttime="20240424 19:46:17.489" endtime="20240424 19:47:28.256">Keyword 'Component Should Be Visible' failed after retrying 5 times. The last error was: org.netbeans.jemmy.TimeoutExpiredException: Wait for "Checking_View" subcomponent to be displayed

Also teardown failed:
Label 'Close' is not enabled</status>
</test>
<test id="s1-s3-t2" name="Verify Checked Components view" line="26">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:28.256" endtime="20240424 19:47:28.256"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:47:28.256" endtime="20240424 19:47:28.374"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:28.374" endtime="20240424 19:47:28.374"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:47:28.374" endtime="20240424 19:47:28.374"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:28.374" endtime="20240424 19:47:28.386"/>
</kw>
<status status="PASS" starttime="20240424 19:47:28.374" endtime="20240424 19:47:28.386"/>
</kw>
<status status="PASS" starttime="20240424 19:47:28.256" endtime="20240424 19:47:28.386"/>
</kw>
<status status="PASS" starttime="20240424 19:47:28.256" endtime="20240424 19:47:28.386"/>
</kw>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:47:28.607" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:47:28.607" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:47:28 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:47:28.386" endtime="20240424 19:47:28.607"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:47:28.607" endtime="20240424 19:47:28.607"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:28.607" endtime="20240424 19:47:28.648"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:47:28.651" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:47:28.648" endtime="20240424 19:47:28.651"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:47:28.651" endtime="20240424 19:47:28.651"/>
</kw>
<status status="PASS" starttime="20240424 19:47:28.648" endtime="20240424 19:47:28.651"/>
</kw>
<status status="PASS" starttime="20240424 19:47:28.386" endtime="20240424 19:47:28.651"/>
</kw>
<kw name="And No Existing Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:28.651" endtime="20240424 19:47:28.750"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:47:28.750" endtime="20240424 19:47:28.750"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:28.750" endtime="20240424 19:47:28.789"/>
</kw>
<status status="PASS" starttime="20240424 19:47:28.651" endtime="20240424 19:47:28.789"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:47:28.789" endtime="20240424 19:47:28.801"/>
</kw>
<status status="PASS" starttime="20240424 19:47:28.789" endtime="20240424 19:47:28.801"/>
</kw>
<msg timestamp="20240424 19:47:28.801" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 19:47:28.789" endtime="20240424 19:47:28.801"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:47:28.801" endtime="20240424 19:47:28.801"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:47:28.801" endtime="20240424 19:47:28.801"/>
</branch>
<status status="PASS" starttime="20240424 19:47:28.801" endtime="20240424 19:47:28.801"/>
</if>
<status status="PASS" starttime="20240424 19:47:28.651" endtime="20240424 19:47:28.801"/>
</kw>
<kw name="And Open &quot;BIM Validation - Architectural.xml&quot; Role" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:28.801" endtime="20240424 19:47:28.822"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Roles_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:47:28.822" endtime="20240424 19:47:28.846"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open Role</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:47:28.846" endtime="20240424 19:47:30.585"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Dialog Should Be Open</arg>
<arg>Open Role</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Open Role</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:47:30.585" endtime="20240424 19:47:30.636"/>
</kw>
<status status="PASS" starttime="20240424 19:47:30.585" endtime="20240424 19:47:30.636"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open Role</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:47:30.636" endtime="20240424 19:47:30.674"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Files</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:47:30.674" endtime="20240424 19:47:30.744"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${role_with_path}</var>
<arg>${roles_folder}</arg>
<arg>BIM Validation - Architectural.xml</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:47:30.744" level="INFO">${role_with_path} = C:\users\public\Solibri\SOLIBRI\Roles\BIM Validation - Architectural.xml</msg>
<status status="PASS" starttime="20240424 19:47:30.744" endtime="20240424 19:47:30.744"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${role_with_path}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:47:30.744" endtime="20240424 19:47:31.035"/>
</kw>
<status status="PASS" starttime="20240424 19:47:28.801" endtime="20240424 19:47:31.035"/>
</kw>
<kw name="And IFC File is Open" library="ModelHandlingResource">
<arg>${solibri_building_ifc}</arg>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${file_name_with_path}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:31.035" endtime="20240424 19:47:31.075"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:47:31.075" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:47:31.075" endtime="20240424 19:47:31.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:47:31.075" endtime="20240424 19:47:31.075"/>
</kw>
<status status="PASS" starttime="20240424 19:47:31.075" endtime="20240424 19:47:31.075"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:31.075" endtime="20240424 19:47:31.084"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:47:31.084" endtime="20240424 19:47:31.084"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:31.084" endtime="20240424 19:47:31.095"/>
</kw>
<status status="PASS" starttime="20240424 19:47:31.075" endtime="20240424 19:47:31.095"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:47:31.095" endtime="20240424 19:47:31.139"/>
</kw>
<status status="PASS" starttime="20240424 19:47:31.095" endtime="20240424 19:47:31.139"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:47:31.139" endtime="20240424 19:47:31.191"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:47:31.191" endtime="20240424 19:47:31.195"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:47:31.195" endtime="20240424 19:47:31.685"/>
</kw>
<status status="PASS" starttime="20240424 19:47:31.195" endtime="20240424 19:47:31.685"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:47:31.685" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:47:31.685" endtime="20240424 19:47:31.685"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:47:31.685" endtime="20240424 19:47:31.685"/>
</return>
<msg timestamp="20240424 19:47:31.685" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:47:31.685" endtime="20240424 19:47:31.685"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:47:31.685" endtime="20240424 19:47:31.942"/>
</kw>
<status status="PASS" starttime="20240424 19:47:31.685" endtime="20240424 19:47:31.942"/>
</kw>
<status status="PASS" starttime="20240424 19:47:31.685" endtime="20240424 19:47:31.942"/>
</branch>
<status status="PASS" starttime="20240424 19:47:31.685" endtime="20240424 19:47:31.942"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:47:31.942" endtime="20240424 19:47:31.942"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:47:31.942" endtime="20240424 19:47:31.942"/>
</branch>
<status status="PASS" starttime="20240424 19:47:31.942" endtime="20240424 19:47:31.942"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:47:31.942" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\ifc</msg>
<msg timestamp="20240424 19:47:31.942" level="INFO">${filename} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:47:31.942" endtime="20240424 19:47:31.942"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:47:31.942" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 19:47:31.942" level="INFO">${ext} = ifc</msg>
<status status="PASS" starttime="20240424 19:47:31.942" endtime="20240424 19:47:31.942"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<status status="NOT RUN" starttime="20240424 19:47:31.942" endtime="20240424 19:47:31.942"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:47:31.942" endtime="20240424 19:47:31.942"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<msg timestamp="20240424 19:47:32.179" level="INFO">Closed dialog ''.</msg>
<status status="PASS" starttime="20240424 19:47:31.942" endtime="20240424 19:47:32.179"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:32.179" endtime="20240424 19:47:32.277"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:47:32.277" endtime="20240424 19:47:32.284"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:32.284" endtime="20240424 19:47:32.306"/>
</kw>
<status status="PASS" starttime="20240424 19:47:32.179" endtime="20240424 19:47:32.306"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:47:38.140" level="INFO">2024-04-24 19:47:34.767+0000 [Thread-49] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 31 ms.
2024-04-24 19:47:34.767+0000 [Thread-49] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 2506 ms (using 1 threads)
2024-04-24 19:47:34.972+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 157 ms
2024-04-24 19:47:37.198+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 2431 ms.</msg>
<status status="PASS" starttime="20240424 19:47:32.306" endtime="20240424 19:47:38.140"/>
</kw>
<status status="PASS" starttime="20240424 19:47:32.306" endtime="20240424 19:47:38.140"/>
</kw>
<msg timestamp="20240424 19:47:38.140" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:47:32.306" endtime="20240424 19:47:38.140"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:47:38.140" endtime="20240424 19:47:38.274"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:47:38.274" endtime="20240424 19:47:40.572"/>
</kw>
<status status="PASS" starttime="20240424 19:47:38.140" endtime="20240424 19:47:40.572"/>
</branch>
<status status="PASS" starttime="20240424 19:47:38.140" endtime="20240424 19:47:40.572"/>
</if>
<status status="PASS" starttime="20240424 19:47:31.942" endtime="20240424 19:47:40.572"/>
</kw>
<status status="PASS" starttime="20240424 19:47:31.942" endtime="20240424 19:47:40.572"/>
</branch>
<status status="PASS" starttime="20240424 19:47:31.942" endtime="20240424 19:47:40.572"/>
</if>
<status status="PASS" starttime="20240424 19:47:31.035" endtime="20240424 19:47:40.572"/>
</kw>
<status status="PASS" starttime="20240424 19:47:31.035" endtime="20240424 19:47:40.572"/>
</kw>
<kw name="Then Check Ruleset" library="checking_view_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:40.573" endtime="20240424 19:47:40.578"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:47:40.578" endtime="20240424 19:47:40.587"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:40.588" endtime="20240424 19:47:40.619"/>
</kw>
<status status="PASS" starttime="20240424 19:47:40.573" endtime="20240424 19:47:40.619"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Select Dialog</arg>
<arg>To-Do</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>To-Do</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:47:40.620" endtime="20240424 19:47:40.961"/>
</kw>
<msg timestamp="20240424 19:47:40.962" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20240424 19:47:40.619" endtime="20240424 19:47:40.962"/>
</kw>
<if>
<branch type="IF" condition="${status}">
<kw name="Close Dialog" library="SwingRobot">
<arg>To-Do</arg>
<doc>Closes a dialog.</doc>
<status status="PASS" starttime="20240424 19:47:40.962" endtime="20240424 19:47:41.131"/>
</kw>
<status status="PASS" starttime="20240424 19:47:40.962" endtime="20240424 19:47:41.131"/>
</branch>
<status status="PASS" starttime="20240424 19:47:40.962" endtime="20240424 19:47:41.131"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:41.132" endtime="20240424 19:47:41.141"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${total_row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:47:41.177" level="INFO">${total_row_count} = 13</msg>
<status status="PASS" starttime="20240424 19:47:41.141" endtime="20240424 19:47:41.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${total_row_count}</arg>
<arg>13</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 19:47:41.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:47:41.177" endtime="20240424 19:47:41.178"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:47:41.178" endtime="20240424 19:47:41.305"/>
</kw>
<kw name="Get Selected Table Cell Value" library="SwingRobot">
<var>${selected_ruleset}</var>
<arg>0</arg>
<doc>Returns selected cell's value from a table.</doc>
<msg timestamp="20240424 19:47:41.322" level="INFO">${selected_ruleset} = BIM Validation - Architectural</msg>
<status status="PASS" starttime="20240424 19:47:41.305" endtime="20240424 19:47:41.322"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${selected_ruleset}</arg>
<arg>BIM Validation - Architectural</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:47:41.322" endtime="20240424 19:47:41.323"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Remove Rulesets</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:47:41.323" endtime="20240424 19:47:41.356"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>5x</arg>
<arg>Button Should Be Disabled</arg>
<arg>Remove Rulesets</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Remove Rulesets</arg>
<doc>Fails if button is enabled.</doc>
<msg timestamp="20240424 19:47:41.363" level="FAIL">Button was enabled.</msg>
<status status="FAIL" starttime="20240424 19:47:41.357" endtime="20240424 19:47:41.363"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Remove Rulesets</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:47:41.370" endtime="20240424 19:47:41.374"/>
</kw>
<status status="PASS" starttime="20240424 19:47:41.357" endtime="20240424 19:47:41.374"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${after_remove_row_count1}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:47:41.378" level="INFO">${after_remove_row_count1} = 13</msg>
<status status="PASS" starttime="20240424 19:47:41.374" endtime="20240424 19:47:41.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${after_remove_row_count1}</arg>
<arg>8</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 19:47:41.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20240424 19:47:41.378" level="FAIL">13 != 8</msg>
<status status="FAIL" starttime="20240424 19:47:41.378" endtime="20240424 19:47:41.379"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="NOT RUN" starttime="20240424 19:47:41.379" endtime="20240424 19:47:41.379"/>
</kw>
<kw name="Get Selected Table Cell Value" library="SwingRobot">
<var>${selected_ruleset}</var>
<arg>0</arg>
<doc>Returns selected cell's value from a table.</doc>
<status status="NOT RUN" starttime="20240424 19:47:41.379" endtime="20240424 19:47:41.379"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${selected_ruleset}</arg>
<arg>General Space Check</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20240424 19:47:41.379" endtime="20240424 19:47:41.379"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Remove Rulesets</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:47:41.379" endtime="20240424 19:47:41.379"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>5x</arg>
<arg>Button Should Be Disabled</arg>
<arg>Remove Rulesets</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20240424 19:47:41.380" endtime="20240424 19:47:41.380"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${checking_view_row_1_value}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<status status="NOT RUN" starttime="20240424 19:47:41.380" endtime="20240424 19:47:41.380"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${checking_view_row_1_value}</arg>
<arg>Intersections Between Architectural Components</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20240424 19:47:41.380" endtime="20240424 19:47:41.380"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${checking_view_row_2_value}</var>
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<status status="NOT RUN" starttime="20240424 19:47:41.380" endtime="20240424 19:47:41.380"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${checking_view_row_2_value}</arg>
<arg>Intersections - Same Kind of Components</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20240424 19:47:41.380" endtime="20240424 19:47:41.385"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${checking_view_row_3_value}</var>
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<status status="NOT RUN" starttime="20240424 19:47:41.385" endtime="20240424 19:47:41.385"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${checking_view_row_3_value}</arg>
<arg>Intersections - Different Kind of Components</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20240424 19:47:41.385" endtime="20240424 19:47:41.386"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${checking_view_row_4_value}</var>
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<status status="NOT RUN" starttime="20240424 19:47:41.386" endtime="20240424 19:47:41.386"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${checking_view_row_4_value}</arg>
<arg>Intersections of Furniture and Other Objects</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20240424 19:47:41.386" endtime="20240424 19:47:41.386"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${after_remove_row_count2}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<status status="NOT RUN" starttime="20240424 19:47:41.386" endtime="20240424 19:47:41.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${after_remove_row_count2}</arg>
<arg>4</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20240424 19:47:41.387" endtime="20240424 19:47:41.387"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="NOT RUN" starttime="20240424 19:47:41.387" endtime="20240424 19:47:41.387"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>Checking-Dropdown</arg>
<arg>Check Model</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="NOT RUN" starttime="20240424 19:47:41.387" endtime="20240424 19:47:41.387"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Button Should Be Enabled</arg>
<arg>Report</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20240424 19:47:41.387" endtime="20240424 19:47:41.387"/>
</kw>
<status status="FAIL" starttime="20240424 19:47:40.573" endtime="20240424 19:47:41.388"/>
</kw>
<kw name="Then Verify Result Summary View" library="checking_view_step_definitions">
<status status="NOT RUN" starttime="20240424 19:47:41.388" endtime="20240424 19:47:41.388"/>
</kw>
<kw name="Then Verify Result Summary Report Dialog" library="checking_view_step_definitions">
<status status="NOT RUN" starttime="20240424 19:47:41.388" endtime="20240424 19:47:41.388"/>
</kw>
<kw name="Then Verify Checked Components" library="checking_view_step_definitions">
<status status="NOT RUN" starttime="20240424 19:47:41.388" endtime="20240424 19:47:41.388"/>
</kw>
<kw name="Then Save and Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:47:41.389" endtime="20240424 19:47:41.389"/>
</kw>
<status status="FAIL" starttime="20240424 19:47:28.256" endtime="20240424 19:47:41.389">13 != 8</status>
</test>
<test id="s1-s3-t3" name="Verify Check Selected Warning Dialogs" line="40">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:41.391" endtime="20240424 19:47:41.455"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:47:41.455" endtime="20240424 19:47:41.564"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:41.564" endtime="20240424 19:47:41.568"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:47:41.568" endtime="20240424 19:47:41.570"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:41.570" endtime="20240424 19:47:41.581"/>
</kw>
<status status="PASS" starttime="20240424 19:47:41.564" endtime="20240424 19:47:41.581"/>
</kw>
<status status="PASS" starttime="20240424 19:47:41.390" endtime="20240424 19:47:41.581"/>
</kw>
<status status="PASS" starttime="20240424 19:47:41.390" endtime="20240424 19:47:41.581"/>
</kw>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:47:41.588" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:47:41.588" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:47:41 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:47:41.581" endtime="20240424 19:47:41.588"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:47:41.588" endtime="20240424 19:47:41.588"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:41.588" endtime="20240424 19:47:41.638"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:47:41.638" level="INFO">${context} = Solibri Office - Solibri Building</msg>
<status status="PASS" starttime="20240424 19:47:41.638" endtime="20240424 19:47:41.638"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:47:41.638" endtime="20240424 19:47:41.638"/>
</kw>
<status status="PASS" starttime="20240424 19:47:41.638" endtime="20240424 19:47:41.638"/>
</kw>
<status status="PASS" starttime="20240424 19:47:41.581" endtime="20240424 19:47:41.638"/>
</kw>
<kw name="And No Existing Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:41.638" endtime="20240424 19:47:41.646"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:47:41.646" endtime="20240424 19:47:41.648"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:47:41.648" endtime="20240424 19:47:41.671"/>
</kw>
<status status="PASS" starttime="20240424 19:47:41.638" endtime="20240424 19:47:41.671"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:47:41.863" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:47:41.671" endtime="20240424 19:47:41.863"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:47:46.877" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:47:46.874" endtime="20240424 19:47:46.877"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:47:51.883" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:47:51.879" endtime="20240424 19:47:51.883"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:47:56.898" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:47:56.886" endtime="20240424 19:47:56.898"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:48:01.901" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:48:01.901" endtime="20240424 19:48:01.901"/>
</kw>
<msg timestamp="20240424 19:48:01.901" level="FAIL">Keyword 'Label Should Be Enabled' failed after retrying 5 times. The last error was: Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:47:41.671" endtime="20240424 19:48:01.901"/>
</kw>
<msg timestamp="20240424 19:48:01.901" level="INFO">${model_open} = False</msg>
<status status="PASS" starttime="20240424 19:47:41.671" endtime="20240424 19:48:01.901"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:48:01.901" endtime="20240424 19:48:02.015"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:02.015" endtime="20240424 19:48:02.015"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:48:02.015" endtime="20240424 19:48:02.026"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:02.026" endtime="20240424 19:48:02.058"/>
</kw>
<status status="PASS" starttime="20240424 19:48:02.015" endtime="20240424 19:48:02.058"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:48:02.058" endtime="20240424 19:48:02.067"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:48:02.067" endtime="20240424 19:48:02.086"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:48:12.095" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:48:02.086" endtime="20240424 19:48:12.095"/>
</kw>
<msg timestamp="20240424 19:48:12.095" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:48:02.086" endtime="20240424 19:48:12.095"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:48:12.095" endtime="20240424 19:48:12.103"/>
</kw>
<msg timestamp="20240424 19:48:12.103" level="INFO">${check_if_save_asked} = True</msg>
<status status="PASS" starttime="20240424 19:48:12.095" endtime="20240424 19:48:12.103"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:48:12.103" endtime="20240424 19:48:12.138"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:48:12.138" endtime="20240424 19:48:12.378"/>
</kw>
<status status="PASS" starttime="20240424 19:48:12.103" endtime="20240424 19:48:12.378"/>
</kw>
<status status="PASS" starttime="20240424 19:48:12.103" endtime="20240424 19:48:12.378"/>
</branch>
<status status="PASS" starttime="20240424 19:48:12.103" endtime="20240424 19:48:12.378"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:48:12.378" endtime="20240424 19:48:12.378"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:48:12.378" endtime="20240424 19:48:12.378"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:48:12.378" endtime="20240424 19:48:12.378"/>
</branch>
<status status="PASS" starttime="20240424 19:48:12.378" endtime="20240424 19:48:12.378"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:12.378" endtime="20240424 19:48:12.411"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:48:12.454" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:48:12.411" endtime="20240424 19:48:12.454"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:48:15.463" endtime="20240424 19:48:15.502"/>
</kw>
<status status="PASS" starttime="20240424 19:48:12.411" endtime="20240424 19:48:15.502"/>
</kw>
<status status="PASS" starttime="20240424 19:48:01.901" endtime="20240424 19:48:15.502"/>
</kw>
<status status="PASS" starttime="20240424 19:48:01.901" endtime="20240424 19:48:15.502"/>
</branch>
<status status="PASS" starttime="20240424 19:48:01.901" endtime="20240424 19:48:15.502"/>
</if>
<status status="PASS" starttime="20240424 19:47:41.638" endtime="20240424 19:48:15.502"/>
</kw>
<kw name="And Open &quot;BIM Validation - Architectural.xml&quot; Role" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:15.502" endtime="20240424 19:48:15.507"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Roles_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:48:15.507" endtime="20240424 19:48:15.529"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open Role</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:48:15.529" endtime="20240424 19:48:16.921"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Dialog Should Be Open</arg>
<arg>Open Role</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Open Role</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:48:16.921" endtime="20240424 19:48:16.942"/>
</kw>
<status status="PASS" starttime="20240424 19:48:16.921" endtime="20240424 19:48:16.942"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open Role</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:48:16.942" endtime="20240424 19:48:17.011"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Files</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:48:17.011" endtime="20240424 19:48:17.109"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${role_with_path}</var>
<arg>${roles_folder}</arg>
<arg>BIM Validation - Architectural.xml</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:48:17.109" level="INFO">${role_with_path} = C:\users\public\Solibri\SOLIBRI\Roles\BIM Validation - Architectural.xml</msg>
<status status="PASS" starttime="20240424 19:48:17.109" endtime="20240424 19:48:17.109"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${role_with_path}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:48:17.109" endtime="20240424 19:48:17.212"/>
</kw>
<status status="PASS" starttime="20240424 19:48:15.502" endtime="20240424 19:48:17.212"/>
</kw>
<kw name="And IFC File is Open" library="ModelHandlingResource">
<arg>${solibri_building_ifc}</arg>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${file_name_with_path}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:17.212" endtime="20240424 19:48:17.229"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:48:17.233" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:48:17.229" endtime="20240424 19:48:17.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:48:17.233" endtime="20240424 19:48:17.233"/>
</kw>
<status status="PASS" starttime="20240424 19:48:17.229" endtime="20240424 19:48:17.233"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:17.233" endtime="20240424 19:48:17.242"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:48:17.242" endtime="20240424 19:48:17.242"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:17.242" endtime="20240424 19:48:17.255"/>
</kw>
<status status="PASS" starttime="20240424 19:48:17.233" endtime="20240424 19:48:17.255"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:48:17.255" endtime="20240424 19:48:17.325"/>
</kw>
<status status="PASS" starttime="20240424 19:48:17.255" endtime="20240424 19:48:17.325"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:48:17.325" endtime="20240424 19:48:17.332"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:48:17.332" endtime="20240424 19:48:17.332"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:48:17.332" endtime="20240424 19:48:17.683"/>
</kw>
<status status="PASS" starttime="20240424 19:48:17.332" endtime="20240424 19:48:17.683"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:48:17.683" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:48:17.683" endtime="20240424 19:48:17.683"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:48:17.683" endtime="20240424 19:48:17.683"/>
</return>
<msg timestamp="20240424 19:48:17.683" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:48:17.683" endtime="20240424 19:48:17.683"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:48:17.683" endtime="20240424 19:48:17.894"/>
</kw>
<status status="PASS" starttime="20240424 19:48:17.683" endtime="20240424 19:48:17.894"/>
</kw>
<status status="PASS" starttime="20240424 19:48:17.683" endtime="20240424 19:48:17.894"/>
</branch>
<status status="PASS" starttime="20240424 19:48:17.683" endtime="20240424 19:48:17.894"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:48:17.894" endtime="20240424 19:48:17.894"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:48:17.894" endtime="20240424 19:48:17.894"/>
</branch>
<status status="PASS" starttime="20240424 19:48:17.894" endtime="20240424 19:48:17.894"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:48:17.894" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\ifc</msg>
<msg timestamp="20240424 19:48:17.894" level="INFO">${filename} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:48:17.894" endtime="20240424 19:48:17.894"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:48:17.894" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 19:48:17.894" level="INFO">${ext} = ifc</msg>
<status status="PASS" starttime="20240424 19:48:17.894" endtime="20240424 19:48:17.894"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<status status="NOT RUN" starttime="20240424 19:48:17.894" endtime="20240424 19:48:17.894"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:48:17.894" endtime="20240424 19:48:17.894"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:48:17.894" endtime="20240424 19:48:18.444"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:18.444" endtime="20240424 19:48:18.450"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:48:18.466" endtime="20240424 19:48:18.468"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:18.468" endtime="20240424 19:48:18.550"/>
</kw>
<status status="PASS" starttime="20240424 19:48:18.444" endtime="20240424 19:48:18.550"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:48:20.975" level="INFO">2024-04-24 19:48:19.010+0000 [Thread-115] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 0 ms.
2024-04-24 19:48:19.010+0000 [Thread-115] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 1116 ms (using 1 threads)
2024-04-24 19:48:19.072+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 62 ms
2024-04-24 19:48:20.389+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 1379 ms.</msg>
<status status="PASS" starttime="20240424 19:48:18.550" endtime="20240424 19:48:20.975"/>
</kw>
<status status="PASS" starttime="20240424 19:48:18.550" endtime="20240424 19:48:20.975"/>
</kw>
<msg timestamp="20240424 19:48:20.975" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:48:18.550" endtime="20240424 19:48:20.975"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:48:20.975" endtime="20240424 19:48:21.066"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:48:21.066" endtime="20240424 19:48:21.824"/>
</kw>
<status status="PASS" starttime="20240424 19:48:20.975" endtime="20240424 19:48:21.824"/>
</branch>
<status status="PASS" starttime="20240424 19:48:20.975" endtime="20240424 19:48:21.824"/>
</if>
<status status="PASS" starttime="20240424 19:48:17.894" endtime="20240424 19:48:21.824"/>
</kw>
<status status="PASS" starttime="20240424 19:48:17.894" endtime="20240424 19:48:21.824"/>
</branch>
<status status="PASS" starttime="20240424 19:48:17.894" endtime="20240424 19:48:21.824"/>
</if>
<status status="PASS" starttime="20240424 19:48:17.212" endtime="20240424 19:48:21.824"/>
</kw>
<status status="PASS" starttime="20240424 19:48:17.212" endtime="20240424 19:48:21.824"/>
</kw>
<kw name="Then Check Ruleset" library="checking_view_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:21.824" endtime="20240424 19:48:21.830"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:48:21.830" endtime="20240424 19:48:21.831"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:21.831" endtime="20240424 19:48:21.842"/>
</kw>
<status status="PASS" starttime="20240424 19:48:21.824" endtime="20240424 19:48:21.842"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Select Dialog</arg>
<arg>To-Do</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>To-Do</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:48:21.842" endtime="20240424 19:48:21.977"/>
</kw>
<msg timestamp="20240424 19:48:21.977" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20240424 19:48:21.842" endtime="20240424 19:48:21.977"/>
</kw>
<if>
<branch type="IF" condition="${status}">
<kw name="Close Dialog" library="SwingRobot">
<arg>To-Do</arg>
<doc>Closes a dialog.</doc>
<status status="PASS" starttime="20240424 19:48:21.977" endtime="20240424 19:48:21.994"/>
</kw>
<status status="PASS" starttime="20240424 19:48:21.977" endtime="20240424 19:48:21.994"/>
</branch>
<status status="PASS" starttime="20240424 19:48:21.977" endtime="20240424 19:48:21.994"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:21.994" endtime="20240424 19:48:21.998"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${total_row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:48:22.002" level="INFO">${total_row_count} = 13</msg>
<status status="PASS" starttime="20240424 19:48:21.998" endtime="20240424 19:48:22.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${total_row_count}</arg>
<arg>13</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 19:48:22.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:48:22.002" endtime="20240424 19:48:22.002"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:48:22.002" endtime="20240424 19:48:22.063"/>
</kw>
<kw name="Get Selected Table Cell Value" library="SwingRobot">
<var>${selected_ruleset}</var>
<arg>0</arg>
<doc>Returns selected cell's value from a table.</doc>
<msg timestamp="20240424 19:48:22.076" level="INFO">${selected_ruleset} = BIM Validation - Architectural</msg>
<status status="PASS" starttime="20240424 19:48:22.063" endtime="20240424 19:48:22.076"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${selected_ruleset}</arg>
<arg>BIM Validation - Architectural</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:48:22.076" endtime="20240424 19:48:22.076"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Remove Rulesets</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:48:22.076" endtime="20240424 19:48:22.105"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>5x</arg>
<arg>Button Should Be Disabled</arg>
<arg>Remove Rulesets</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Remove Rulesets</arg>
<doc>Fails if button is enabled.</doc>
<msg timestamp="20240424 19:48:22.112" level="FAIL">Button was enabled.</msg>
<status status="FAIL" starttime="20240424 19:48:22.105" endtime="20240424 19:48:22.112"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Remove Rulesets</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:48:22.118" endtime="20240424 19:48:22.123"/>
</kw>
<status status="PASS" starttime="20240424 19:48:22.105" endtime="20240424 19:48:22.123"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${after_remove_row_count1}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:48:22.287" level="INFO">${after_remove_row_count1} = 8</msg>
<status status="PASS" starttime="20240424 19:48:22.123" endtime="20240424 19:48:22.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${after_remove_row_count1}</arg>
<arg>8</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 19:48:22.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:48:22.287" endtime="20240424 19:48:22.287"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:48:22.287" endtime="20240424 19:48:22.343"/>
</kw>
<kw name="Get Selected Table Cell Value" library="SwingRobot">
<var>${selected_ruleset}</var>
<arg>0</arg>
<doc>Returns selected cell's value from a table.</doc>
<msg timestamp="20240424 19:48:22.395" level="INFO">${selected_ruleset} = General Space Check</msg>
<status status="PASS" starttime="20240424 19:48:22.343" endtime="20240424 19:48:22.395"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${selected_ruleset}</arg>
<arg>General Space Check</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:48:22.395" endtime="20240424 19:48:22.395"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Remove Rulesets</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:48:22.395" endtime="20240424 19:48:22.442"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>5x</arg>
<arg>Button Should Be Disabled</arg>
<arg>Remove Rulesets</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Remove Rulesets</arg>
<doc>Fails if button is enabled.</doc>
<msg timestamp="20240424 19:48:22.449" level="FAIL">Button was enabled.</msg>
<status status="FAIL" starttime="20240424 19:48:22.442" endtime="20240424 19:48:22.449"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Remove Rulesets</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:48:22.490" endtime="20240424 19:48:22.527"/>
</kw>
<status status="PASS" starttime="20240424 19:48:22.442" endtime="20240424 19:48:22.527"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${checking_view_row_1_value}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:48:22.527" level="INFO">${checking_view_row_1_value} = Intersections Between Architectural Components</msg>
<status status="PASS" starttime="20240424 19:48:22.527" endtime="20240424 19:48:22.527"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${checking_view_row_1_value}</arg>
<arg>Intersections Between Architectural Components</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:48:22.527" endtime="20240424 19:48:22.527"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${checking_view_row_2_value}</var>
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:48:22.536" level="INFO">${checking_view_row_2_value} = Intersections - Same Kind of Components</msg>
<status status="PASS" starttime="20240424 19:48:22.527" endtime="20240424 19:48:22.536"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${checking_view_row_2_value}</arg>
<arg>Intersections - Same Kind of Components</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:48:22.536" endtime="20240424 19:48:22.536"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${checking_view_row_3_value}</var>
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:48:22.541" level="INFO">${checking_view_row_3_value} = Intersections - Different Kind of Components</msg>
<status status="PASS" starttime="20240424 19:48:22.536" endtime="20240424 19:48:22.541"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${checking_view_row_3_value}</arg>
<arg>Intersections - Different Kind of Components</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:48:22.541" endtime="20240424 19:48:22.541"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${checking_view_row_4_value}</var>
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:48:22.550" level="INFO">${checking_view_row_4_value} = Intersections of Furniture and Other Objects</msg>
<status status="PASS" starttime="20240424 19:48:22.541" endtime="20240424 19:48:22.550"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${checking_view_row_4_value}</arg>
<arg>Intersections of Furniture and Other Objects</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:48:22.550" endtime="20240424 19:48:22.550"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${after_remove_row_count2}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:48:22.560" level="INFO">${after_remove_row_count2} = 4</msg>
<status status="PASS" starttime="20240424 19:48:22.550" endtime="20240424 19:48:22.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${after_remove_row_count2}</arg>
<arg>4</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 19:48:22.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:48:22.560" endtime="20240424 19:48:22.560"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:22.560" endtime="20240424 19:48:22.564"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>Checking-Dropdown</arg>
<arg>Check Model</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 19:48:22.564" endtime="20240424 19:48:23.183"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Button Should Be Enabled</arg>
<arg>Report</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Report</arg>
<doc>Fails if button is disabled.</doc>
<msg timestamp="20240424 19:48:23.203" level="FAIL">Button was disabled.</msg>
<status status="FAIL" starttime="20240424 19:48:23.183" endtime="20240424 19:48:23.203"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Report</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:48:28.218" endtime="20240424 19:48:28.223"/>
</kw>
<status status="PASS" starttime="20240424 19:48:23.183" endtime="20240424 19:48:28.223"/>
</kw>
<status status="PASS" starttime="20240424 19:48:21.824" endtime="20240424 19:48:28.223"/>
</kw>
<kw name="Then Add Components in Selection Basket" library="checking_view_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:28.223" endtime="20240424 19:48:28.230"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:48:28.230" endtime="20240424 19:48:28.234"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:28.234" endtime="20240424 19:48:28.240"/>
</kw>
<status status="PASS" starttime="20240424 19:48:28.223" endtime="20240424 19:48:28.240"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Component Should Exist</arg>
<arg>Model Tree_View</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Component Should Exist" library="SwingRobot">
<arg>Model Tree_View</arg>
<doc>Fails if component does not exist within current context.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 19:48:28.241" endtime="20240424 19:48:28.375"/>
</kw>
<status status="PASS" starttime="20240424 19:48:28.241" endtime="20240424 19:48:28.375"/>
</kw>
<kw name="Switch to Component Hierarchy" library="ModelTreeResource">
<doc>Opens Class tree in Component hierarchy ModelViewComponentHierarchyPanel</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:28.375" endtime="20240424 19:48:28.390"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>3</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:48:28.390" endtime="20240424 19:48:28.462"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${select_component_hierarchy}</var>
<arg>Toggle Button Should Be Selected</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Toggle Button Should Be Selected" library="SwingRobot">
<arg>3</arg>
<doc>Fails if toggle button is not selected.</doc>
<status status="PASS" starttime="20240424 19:48:28.462" endtime="20240424 19:48:28.467"/>
</kw>
<msg timestamp="20240424 19:48:28.468" level="INFO">${select_component_hierarchy} = True</msg>
<status status="PASS" starttime="20240424 19:48:28.462" endtime="20240424 19:48:28.468"/>
</kw>
<if>
<branch type="IF" condition="${select_component_hierarchy} == ${False}">
<kw name="Push Toggle Button" library="SwingRobot">
<arg>3</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:48:28.468" endtime="20240424 19:48:28.468"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:48:28.468" endtime="20240424 19:48:28.468"/>
</branch>
<status status="PASS" starttime="20240424 19:48:28.468" endtime="20240424 19:48:28.468"/>
</if>
<status status="PASS" starttime="20240424 19:48:28.375" endtime="20240424 19:48:28.468"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:48:28.468" endtime="20240424 19:48:28.491"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Add to Selection Basket</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:48:28.491" endtime="20240424 19:48:28.510"/>
</kw>
<status status="PASS" starttime="20240424 19:48:28.223" endtime="20240424 19:48:28.510"/>
</kw>
<kw name="Then Check Selected" library="checking_view_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:28.510" endtime="20240424 19:48:28.531"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:48:28.531" endtime="20240424 19:48:28.546"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:28.546" endtime="20240424 19:48:28.600"/>
</kw>
<status status="PASS" starttime="20240424 19:48:28.510" endtime="20240424 19:48:28.600"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5x</arg>
<arg>Component Should Be Visible</arg>
<arg>Checking_View</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Component Should Be Visible" library="SwingRobot">
<arg>Checking_View</arg>
<doc>Checks that component is visible.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 19:48:28.600" endtime="20240424 19:48:28.796"/>
</kw>
<status status="PASS" starttime="20240424 19:48:28.600" endtime="20240424 19:48:28.796"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Checking_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:48:28.796" endtime="20240424 19:48:28.799"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>Checking-Dropdown</arg>
<arg>Check Selected</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 19:48:28.799" endtime="20240424 19:48:29.411"/>
</kw>
<status status="PASS" starttime="20240424 19:48:28.510" endtime="20240424 19:48:29.411"/>
</kw>
<kw name="Then Modify Rule Parameters and Do Check Selected" library="checking_view_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:29.411" endtime="20240424 19:48:29.427"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:48:29.427" endtime="20240424 19:48:29.430"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:29.430" endtime="20240424 19:48:29.508"/>
</kw>
<status status="PASS" starttime="20240424 19:48:29.411" endtime="20240424 19:48:29.508"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:48:29.508" endtime="20240424 19:48:29.546"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>10</arg>
<arg>0</arg>
<arg>Rule Parameters</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 19:48:29.546" endtime="20240424 19:48:30.226"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>PARAMETERS</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:48:30.227" endtime="20240424 19:48:30.252"/>
</kw>
<kw name="Uncheck Check Box" library="SwingRobot">
<arg>0</arg>
<doc>Uses current context to search for a checkbox and when found, unchecks it.</doc>
<status status="PASS" starttime="20240424 19:48:30.252" endtime="20240424 19:48:30.280"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:30.280" endtime="20240424 19:48:30.280"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:48:30.280" endtime="20240424 19:48:30.311"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:30.311" endtime="20240424 19:48:30.335"/>
</kw>
<status status="PASS" starttime="20240424 19:48:30.280" endtime="20240424 19:48:30.335"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5x</arg>
<arg>Component Should Be Visible</arg>
<arg>Checking_View</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Component Should Be Visible" library="SwingRobot">
<arg>Checking_View</arg>
<doc>Checks that component is visible.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 19:48:30.335" endtime="20240424 19:48:30.364"/>
</kw>
<status status="PASS" starttime="20240424 19:48:30.335" endtime="20240424 19:48:30.364"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Checking_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:48:30.365" endtime="20240424 19:48:30.433"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>Checking-Dropdown</arg>
<arg>Check Selected</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 19:48:30.433" endtime="20240424 19:48:31.496"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Check Selected</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:48:31.496" endtime="20240424 19:48:31.511"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Check Selected</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:48:31.511" endtime="20240424 19:48:31.514"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Cancel</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:48:31.514" endtime="20240424 19:48:31.553"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:31.553" endtime="20240424 19:48:31.553"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:48:31.553" endtime="20240424 19:48:31.553"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:31.553" endtime="20240424 19:48:31.590"/>
</kw>
<status status="PASS" starttime="20240424 19:48:31.553" endtime="20240424 19:48:31.590"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Checking_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:48:31.590" endtime="20240424 19:48:31.658"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>Checking-Dropdown</arg>
<arg>Check Selected</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 19:48:31.658" endtime="20240424 19:48:32.441"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Check Selected</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:48:32.441" endtime="20240424 19:48:32.441"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Check Selected</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:48:32.441" endtime="20240424 19:48:32.441"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Check Anyway</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:48:32.441" endtime="20240424 19:48:32.469"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:32.469" endtime="20240424 19:48:32.545"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:48:32.545" endtime="20240424 19:48:32.551"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:32.551" endtime="20240424 19:48:32.657"/>
</kw>
<status status="PASS" starttime="20240424 19:48:32.469" endtime="20240424 19:48:32.657"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Button Should Be Enabled</arg>
<arg>Report</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Report</arg>
<doc>Fails if button is disabled.</doc>
<msg timestamp="20240424 19:48:32.687" level="FAIL">Button was disabled.</msg>
<status status="FAIL" starttime="20240424 19:48:32.657" endtime="20240424 19:48:32.687"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Report</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:48:37.698" endtime="20240424 19:48:37.700"/>
</kw>
<status status="PASS" starttime="20240424 19:48:32.657" endtime="20240424 19:48:37.700"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:37.700" endtime="20240424 19:48:37.708"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:48:37.709" endtime="20240424 19:48:37.709"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:37.709" endtime="20240424 19:48:37.740"/>
</kw>
<status status="PASS" starttime="20240424 19:48:37.700" endtime="20240424 19:48:37.740"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Checking_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:48:37.740" endtime="20240424 19:48:37.744"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>Checking-Dropdown</arg>
<arg>Check Selected</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<msg timestamp="20240424 19:48:38.576" level="INFO">2024-04-24 19:48:38.055+0000 [Thread-208] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:48:38.055+0000 [Thread-208] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:48:38.056+0000 [Thread-208] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:48:38.056+0000 [Thread-208] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:48:38.056+0000 [Thread-208] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:48:38.056+0000 [Thread-208] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:48:38.056+0000 [Thread-208] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:48:38.056+0000 [Thread-208] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:48:38.056+0000 [Thread-208] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0</msg>
<status status="PASS" starttime="20240424 19:48:37.744" endtime="20240424 19:48:38.576"/>
</kw>
<kw name="Dialog Should Not Be Open" library="SwingRobot">
<arg>Check Selected</arg>
<doc>Fails if the dialog is open.
You might want to set the waiting timeout with the keyword `Set Jemmy Timeout`.</doc>
<msg timestamp="20240424 19:48:48.580" level="INFO">Exception in thread "Thread-201" java.lang.RuntimeException: Wait for "CHECKING" subcomponent to be displayed
	at org.robotframework.javalib.library.AnnotationLibrary.retrieveInnerException(AnnotationLibrary.java:158)
	at org.robotframework.javalib.library.AnnotationLibrary.runKeyword(AnnotationLibrary.java:131)
	at org.robotframework.javalib.library.KeywordFactoryBasedLibrary.runKeyword(KeywordFactoryBasedLibrary.java:44)
	at org.robotframework.javalib.library.AnnotationLibrary.runKeyword(AnnotationLibrary.java:138)
	at org.robotframework.swing.SwingLibrary.runKeyword(SwingLibrary.java:122)
	at org.robotframework.swing.keyword.concurrent.ThreadKeywords$1.run(ThreadKeywords.java:50)
Caused by: org.netbeans.jemmy.TimeoutExpiredException: Wait for "CHECKING" subcomponent to be displayed
	at org.netbeans.jemmy.Waiter.waitAction(Waiter.java:147)
	at org.netbeans.jemmy.operators.ContainerOperator.waitSubComponent(ContainerOperator.java:298)
	at org.netbeans.jemmy.operators.JComponentOperator.&lt;init&gt;(JComponentOperator.java:110)
	at org.netbeans.jemmy.operators.JComponentOperator.&lt;init&gt;(JComponentOperator.java:122)
	at org.robotframework.swing.component.ComponentOperator.&lt;init&gt;(ComponentOperator.java:51)
	at org.robotframework.swing.component.ComponentOperator.newOperatorFor(ComponentOperator.java:47)
	at org.robotframework.swing.component.ComponentOperatorFactory.createOperatorByName(ComponentOperatorFactory.java:32)
	at org.robotframework.swing.component.ComponentOperatorFactory.createOperatorByName(ComponentOperatorFactory.java:24)
	at org.robotframework.swing.factory.IdentifierParsingOperatorFactory.nameArgument(IdentifierParsingOperatorFactory.java:33)
	at org.robotframework.swing.arguments.ArgumentParser.parseSwingArgument(ArgumentParser.java:51)
	at org.robotframework.swing.arguments.ArgumentParser.parseArgument(ArgumentParser.java:35)
	at org.robotframework.swing.factory.DefaultContextVerifyingOperatorFactory.parseArgument(DefaultContextVerifyingOperatorFactory.java:27)
	at org.robotframework.swing.factory.IdentifierParsingOperatorFactory.createOperator(IdentifierParsingOperatorFactory.java:25)
	at org.robotframework.swing.keyword.component.ComponentKeywords.operator(ComponentKeywords.java:281)
	at org.robotframework.swing.keyword.component.ComponentKeywords.clickOnComponent(ComponentKeywords.java:88)
	at jdk.internal.reflect.GeneratedMethodAccessor61.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.robotframework.javalib.reflection.KeywordInvoker.invoke(KeywordInvoker.java:63)
	at org.robotframework.javalib.beans.annotation.AnnotationKeywordExtractor$1.execute(AnnotationKeywordExtractor.java:66)
	at org.robotframework.javalib.library.KeywordFactoryBasedLibrary.runKeyword(KeywordFactoryBasedLibrary.java:40)
	at org.robotframework.javalib.library.AnnotationLibrary.runKeyword(AnnotationLibrary.java:129)
	... 4 more</msg>
<status status="PASS" starttime="20240424 19:48:38.576" endtime="20240424 19:48:48.580"/>
</kw>
<status status="PASS" starttime="20240424 19:48:29.411" endtime="20240424 19:48:48.580"/>
</kw>
<kw name="Then Disable Ruleset and Do Check Selected" library="checking_view_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:48.580" endtime="20240424 19:48:48.585"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:48:48.585" endtime="20240424 19:48:48.591"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:48.591" endtime="20240424 19:48:48.665"/>
</kw>
<status status="PASS" starttime="20240424 19:48:48.580" endtime="20240424 19:48:48.665"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:48:48.665" endtime="20240424 19:48:48.689"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>10</arg>
<arg>0</arg>
<arg>Rule Parameters</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 19:48:48.689" endtime="20240424 19:48:48.949"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>PARAMETERS</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:48:48.949" endtime="20240424 19:48:48.953"/>
</kw>
<kw name="Uncheck Check Box" library="SwingRobot">
<arg>0</arg>
<doc>Uses current context to search for a checkbox and when found, unchecks it.</doc>
<status status="PASS" starttime="20240424 19:48:48.953" endtime="20240424 19:48:48.969"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:48.969" endtime="20240424 19:48:48.977"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:48:48.977" endtime="20240424 19:48:48.997"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:48.997" endtime="20240424 19:48:49.071"/>
</kw>
<status status="PASS" starttime="20240424 19:48:48.969" endtime="20240424 19:48:49.071"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>10</arg>
<arg>0</arg>
<arg>Disable</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 19:48:49.071" endtime="20240424 19:48:49.226"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:49.226" endtime="20240424 19:48:49.232"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:48:49.232" endtime="20240424 19:48:49.237"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:49.237" endtime="20240424 19:48:49.237"/>
</kw>
<status status="PASS" starttime="20240424 19:48:49.226" endtime="20240424 19:48:49.237"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Checking_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:48:49.237" endtime="20240424 19:48:49.322"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>Checking-Dropdown</arg>
<arg>Check Selected</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 19:48:49.322" endtime="20240424 19:48:49.905"/>
</kw>
<kw name="Dialog Should Not Be Open" library="SwingRobot">
<arg>Check Selected</arg>
<doc>Fails if the dialog is open.
You might want to set the waiting timeout with the keyword `Set Jemmy Timeout`.</doc>
<msg timestamp="20240424 19:48:59.911" level="INFO">2024-04-24 19:48:50.166+0000 [Thread-222] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:48:50.166+0000 [Thread-222] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:48:50.166+0000 [Thread-222] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:48:50.166+0000 [Thread-222] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:48:50.166+0000 [Thread-222] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:48:50.166+0000 [Thread-222] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:48:50.166+0000 [Thread-222] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:48:50.166+0000 [Thread-222] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:48:50.166+0000 [Thread-222] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:48:50.166+0000 [Thread-222] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:48:50.166+0000 [Thread-222] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:48:50.166+0000 [Thread-222] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0</msg>
<status status="PASS" starttime="20240424 19:48:49.905" endtime="20240424 19:48:59.911"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:59.911" endtime="20240424 19:48:59.935"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:48:59.935" endtime="20240424 19:48:59.950"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:59.950" endtime="20240424 19:48:59.962"/>
</kw>
<status status="PASS" starttime="20240424 19:48:59.911" endtime="20240424 19:48:59.962"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Button Should Be Enabled</arg>
<arg>Report</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Report</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:48:59.962" endtime="20240424 19:48:59.968"/>
</kw>
<status status="PASS" starttime="20240424 19:48:59.962" endtime="20240424 19:48:59.968"/>
</kw>
<status status="PASS" starttime="20240424 19:48:48.580" endtime="20240424 19:48:59.968"/>
</kw>
<kw name="Then Enable Ruleset and Do Check Selected" library="checking_view_step_definitions">
<kw name="Enable Ruleset" library="checking_view_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:48:59.969" endtime="20240424 19:49:00.036"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:49:00.036" endtime="20240424 19:49:00.036"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:49:00.036" endtime="20240424 19:49:00.049"/>
</kw>
<status status="PASS" starttime="20240424 19:48:59.969" endtime="20240424 19:49:00.049"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>10</arg>
<arg>0</arg>
<arg>Enable</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 19:49:00.050" endtime="20240424 19:49:00.229"/>
</kw>
<status status="PASS" starttime="20240424 19:48:59.969" endtime="20240424 19:49:00.229"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Checking_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:49:00.229" endtime="20240424 19:49:00.233"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>Checking-Dropdown</arg>
<arg>Check Selected</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 19:49:00.233" endtime="20240424 19:49:00.802"/>
</kw>
<kw name="Dialog Should Not Be Open" library="SwingRobot">
<arg>Check Selected</arg>
<doc>Fails if the dialog is open.
You might want to set the waiting timeout with the keyword `Set Jemmy Timeout`.</doc>
<msg timestamp="20240424 19:49:10.812" level="INFO">2024-04-24 19:49:01.003+0000 [Thread-232] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:01.003+0000 [Thread-232] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:01.003+0000 [Thread-232] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:49:01.003+0000 [Thread-232] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:01.003+0000 [Thread-232] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:01.003+0000 [Thread-232] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:49:01.003+0000 [Thread-232] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:01.003+0000 [Thread-232] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:01.003+0000 [Thread-232] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:49:01.003+0000 [Thread-232] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:01.003+0000 [Thread-232] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:01.003+0000 [Thread-232] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:49:01.003+0000 [Thread-232] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:01.003+0000 [Thread-232] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:01.003+0000 [Thread-232] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0</msg>
<status status="PASS" starttime="20240424 19:49:00.802" endtime="20240424 19:49:10.812"/>
</kw>
<status status="PASS" starttime="20240424 19:48:59.968" endtime="20240424 19:49:10.812"/>
</kw>
<kw name="Then Modify Rule Parameter" library="checking_view_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:49:10.812" endtime="20240424 19:49:10.818"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:49:10.818" endtime="20240424 19:49:10.822"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:49:10.822" endtime="20240424 19:49:10.894"/>
</kw>
<status status="PASS" starttime="20240424 19:49:10.812" endtime="20240424 19:49:10.894"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:49:10.894" endtime="20240424 19:49:10.920"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>10</arg>
<arg>0</arg>
<arg>Rule Parameters</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 19:49:10.920" endtime="20240424 19:49:11.259"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>PARAMETERS</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:49:11.259" endtime="20240424 19:49:11.265"/>
</kw>
<kw name="Uncheck Check Box" library="SwingRobot">
<arg>0</arg>
<doc>Uses current context to search for a checkbox and when found, unchecks it.</doc>
<status status="PASS" starttime="20240424 19:49:11.265" endtime="20240424 19:49:11.269"/>
</kw>
<status status="PASS" starttime="20240424 19:49:10.812" endtime="20240424 19:49:11.269"/>
</kw>
<kw name="Then Disable Ruleset and Do Check Selected Again" library="checking_view_step_definitions">
<kw name="Disable Ruleset" library="checking_view_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:49:11.273" endtime="20240424 19:49:11.299"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:49:11.299" endtime="20240424 19:49:11.312"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:49:11.312" endtime="20240424 19:49:11.332"/>
</kw>
<status status="PASS" starttime="20240424 19:49:11.273" endtime="20240424 19:49:11.332"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>10</arg>
<arg>0</arg>
<arg>Disable</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 19:49:11.332" endtime="20240424 19:49:11.498"/>
</kw>
<status status="PASS" starttime="20240424 19:49:11.273" endtime="20240424 19:49:11.498"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Checking_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:49:11.498" endtime="20240424 19:49:11.503"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>Checking-Dropdown</arg>
<arg>Check Selected</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 19:49:11.503" endtime="20240424 19:49:12.090"/>
</kw>
<kw name="Dialog Should Not Be Open" library="SwingRobot">
<arg>Check Selected</arg>
<doc>Fails if the dialog is open.
You might want to set the waiting timeout with the keyword `Set Jemmy Timeout`.</doc>
<msg timestamp="20240424 19:49:22.101" level="INFO">2024-04-24 19:49:12.319+0000 [Thread-244] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:12.319+0000 [Thread-244] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:12.319+0000 [Thread-244] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:49:12.319+0000 [Thread-244] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:12.319+0000 [Thread-244] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:12.319+0000 [Thread-244] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:49:12.319+0000 [Thread-244] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:12.319+0000 [Thread-244] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:12.319+0000 [Thread-244] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:49:12.319+0000 [Thread-244] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:12.319+0000 [Thread-244] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:12.319+0000 [Thread-244] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:49:12.319+0000 [Thread-244] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:12.319+0000 [Thread-244] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:12.319+0000 [Thread-244] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:49:12.319+0000 [Thread-244] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:12.319+0000 [Thread-244] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:12.319+0000 [Thread-244] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0</msg>
<status status="PASS" starttime="20240424 19:49:12.090" endtime="20240424 19:49:22.101"/>
</kw>
<status status="PASS" starttime="20240424 19:49:11.272" endtime="20240424 19:49:22.101"/>
</kw>
<kw name="Then Enable Ruleset and Do Check Selected" library="checking_view_step_definitions">
<kw name="Enable Ruleset" library="checking_view_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:49:22.101" endtime="20240424 19:49:22.101"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:49:22.101" endtime="20240424 19:49:22.101"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:49:22.101" endtime="20240424 19:49:22.183"/>
</kw>
<status status="PASS" starttime="20240424 19:49:22.101" endtime="20240424 19:49:22.183"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>10</arg>
<arg>0</arg>
<arg>Enable</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 19:49:22.183" endtime="20240424 19:49:22.264"/>
</kw>
<status status="PASS" starttime="20240424 19:49:22.101" endtime="20240424 19:49:22.264"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Checking_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:49:22.264" endtime="20240424 19:49:22.272"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>Checking-Dropdown</arg>
<arg>Check Selected</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 19:49:22.272" endtime="20240424 19:49:22.842"/>
</kw>
<kw name="Dialog Should Not Be Open" library="SwingRobot">
<arg>Check Selected</arg>
<doc>Fails if the dialog is open.
You might want to set the waiting timeout with the keyword `Set Jemmy Timeout`.</doc>
<msg timestamp="20240424 19:49:32.855" level="INFO">2024-04-24 19:49:23.033+0000 [Thread-253] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:23.033+0000 [Thread-253] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:23.033+0000 [Thread-253] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:49:23.033+0000 [Thread-253] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:23.033+0000 [Thread-253] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:23.033+0000 [Thread-253] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:49:23.033+0000 [Thread-253] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:23.033+0000 [Thread-253] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:23.033+0000 [Thread-253] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:49:23.033+0000 [Thread-253] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:23.033+0000 [Thread-253] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:23.033+0000 [Thread-253] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:49:23.033+0000 [Thread-253] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:23.033+0000 [Thread-253] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:23.033+0000 [Thread-253] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:49:23.033+0000 [Thread-253] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:23.033+0000 [Thread-253] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:23.033+0000 [Thread-253] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:49:23.033+0000 [Thread-253] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:23.033+0000 [Thread-253] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:23.033+0000 [Thread-253] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0</msg>
<status status="PASS" starttime="20240424 19:49:22.842" endtime="20240424 19:49:32.855"/>
</kw>
<status status="PASS" starttime="20240424 19:49:22.101" endtime="20240424 19:49:32.855"/>
</kw>
<kw name="Then Disable Ruleset and Do Check Selected Again" library="checking_view_step_definitions">
<kw name="Disable Ruleset" library="checking_view_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:49:32.855" endtime="20240424 19:49:32.855"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:49:32.855" endtime="20240424 19:49:32.865"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:49:32.865" endtime="20240424 19:49:32.868"/>
</kw>
<status status="PASS" starttime="20240424 19:49:32.855" endtime="20240424 19:49:32.868"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>10</arg>
<arg>0</arg>
<arg>Disable</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 19:49:32.868" endtime="20240424 19:49:33.017"/>
</kw>
<status status="PASS" starttime="20240424 19:49:32.855" endtime="20240424 19:49:33.017"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Checking_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:49:33.017" endtime="20240424 19:49:33.017"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>Checking-Dropdown</arg>
<arg>Check Selected</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 19:49:33.017" endtime="20240424 19:49:33.620"/>
</kw>
<kw name="Dialog Should Not Be Open" library="SwingRobot">
<arg>Check Selected</arg>
<doc>Fails if the dialog is open.
You might want to set the waiting timeout with the keyword `Set Jemmy Timeout`.</doc>
<msg timestamp="20240424 19:49:43.640" level="INFO">2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock project coverage score calculation is not implemented, it will always be 1
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock rule coverage score calculation is not implemented, 
2024-04-24 19:49:33.860+0000 [Thread-262] WARN  c.s.l.mock.server.MockBackend - Mock unchecked rules count is not implemented, it will always return 0</msg>
<status status="PASS" starttime="20240424 19:49:33.620" endtime="20240424 19:49:43.640"/>
</kw>
<status status="PASS" starttime="20240424 19:49:32.855" endtime="20240424 19:49:43.640"/>
</kw>
<kw name="Then Modify Rule Parameter Again" library="checking_view_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:49:43.640" endtime="20240424 19:49:43.640"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:49:43.640" endtime="20240424 19:49:43.648"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:49:43.648" endtime="20240424 19:49:43.651"/>
</kw>
<status status="PASS" starttime="20240424 19:49:43.640" endtime="20240424 19:49:43.651"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:49:43.652" endtime="20240424 19:49:43.743"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>10</arg>
<arg>0</arg>
<arg>Rule Parameters</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 19:49:43.743" endtime="20240424 19:49:43.961"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>PARAMETERS</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:49:43.961" endtime="20240424 19:49:43.968"/>
</kw>
<kw name="Check Check Box" library="SwingRobot">
<arg>0</arg>
<doc>Uses current context to search for a checkbox and when found, checks it.</doc>
<status status="PASS" starttime="20240424 19:49:43.968" endtime="20240424 19:49:43.974"/>
</kw>
<status status="PASS" starttime="20240424 19:49:43.640" endtime="20240424 19:49:43.974"/>
</kw>
<kw name="Then Check Selected" library="checking_view_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:49:43.974" endtime="20240424 19:49:43.974"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:49:43.974" endtime="20240424 19:49:43.993"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:49:43.993" endtime="20240424 19:49:43.999"/>
</kw>
<status status="PASS" starttime="20240424 19:49:43.974" endtime="20240424 19:49:43.999"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5x</arg>
<arg>Component Should Be Visible</arg>
<arg>Checking_View</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Component Should Be Visible" library="SwingRobot">
<arg>Checking_View</arg>
<doc>Checks that component is visible.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 19:49:43.999" endtime="20240424 19:49:44.015"/>
</kw>
<status status="PASS" starttime="20240424 19:49:43.999" endtime="20240424 19:49:44.015"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Checking_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:49:44.016" endtime="20240424 19:49:44.083"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>Checking-Dropdown</arg>
<arg>Check Selected</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 19:49:44.083" endtime="20240424 19:49:44.670"/>
</kw>
<status status="PASS" starttime="20240424 19:49:43.974" endtime="20240424 19:49:44.670"/>
</kw>
<kw name="Then Enable Ruleset Again and Do Check Selected" library="checking_view_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:49:44.670" endtime="20240424 19:49:44.715"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:49:44.716" endtime="20240424 19:49:44.719"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:49:44.719" endtime="20240424 19:49:44.722"/>
</kw>
<status status="PASS" starttime="20240424 19:49:44.670" endtime="20240424 19:49:44.722"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>10</arg>
<arg>0</arg>
<arg>Enable</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 19:49:44.723" endtime="20240424 19:49:45.153"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Checking_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:49:45.153" endtime="20240424 19:49:45.178"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>Checking-Dropdown</arg>
<arg>Check Selected</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 19:49:45.178" endtime="20240424 19:49:45.907"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Check Selected</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:49:45.907" endtime="20240424 19:49:45.922"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Check Selected</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:49:45.922" endtime="20240424 19:49:45.926"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Cancel</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:49:45.926" endtime="20240424 19:49:45.935"/>
</kw>
<status status="PASS" starttime="20240424 19:49:44.670" endtime="20240424 19:49:45.935"/>
</kw>
<kw name="Then Close Model Without Saving">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:49:45.935" endtime="20240424 19:49:45.967"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:49:45.967" endtime="20240424 19:49:45.970"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:49:45.970" endtime="20240424 19:49:45.975"/>
</kw>
<status status="PASS" starttime="20240424 19:49:45.935" endtime="20240424 19:49:45.975"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${close_button_is_enabled}</var>
<arg>Button Should Be Enabled</arg>
<arg>${button_close_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if button is disabled.</doc>
<msg timestamp="20240424 19:49:55.994" level="FAIL">org.netbeans.jemmy.TimeoutExpiredException: Wait for "Close" subcomponent to be displayed</msg>
<status status="FAIL" starttime="20240424 19:49:45.975" endtime="20240424 19:49:55.994"/>
</kw>
<msg timestamp="20240424 19:49:55.994" level="INFO">${close_button_is_enabled} = False</msg>
<status status="PASS" starttime="20240424 19:49:45.975" endtime="20240424 19:49:55.994"/>
</kw>
<if>
<branch type="IF" condition="${close_button_is_enabled}">
<kw name="Push Button" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:49:55.994" endtime="20240424 19:49:55.994"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:49:55.994" endtime="20240424 19:49:55.994"/>
</branch>
<status status="PASS" starttime="20240424 19:49:55.994" endtime="20240424 19:49:55.994"/>
</if>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:50:06.004" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:49:55.994" endtime="20240424 19:50:06.004"/>
</kw>
<msg timestamp="20240424 19:50:06.004" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20240424 19:49:55.994" endtime="20240424 19:50:06.004"/>
</kw>
<if>
<branch type="IF" condition="${status}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:50:06.004" endtime="20240424 19:50:06.004"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:50:06.004" endtime="20240424 19:50:06.004"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:50:06.004" endtime="20240424 19:50:06.004"/>
</branch>
<status status="PASS" starttime="20240424 19:50:06.004" endtime="20240424 19:50:06.004"/>
</if>
<status status="PASS" starttime="20240424 19:49:45.935" endtime="20240424 19:50:06.004"/>
</kw>
<status status="PASS" starttime="20240424 19:47:41.389" endtime="20240424 19:50:06.004"/>
</test>
<doc>To check the functionality of the checking view
Open the model and Role
Verify correct rulesets are loaded in checking view</doc>
<meta name="Feature">Checking_view</meta>
<meta name="Generated by">_gherkin2robotframework on 2022-12-01T14:11:30.142501_</meta>
<status status="FAIL" starttime="20240424 19:46:17.426" endtime="20240424 19:50:06.004"/>
</suite>
<suite id="s1-s4" name="04 Settings" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\04_settings.robot">
<kw name="Launch Solibri And Login To SSC" type="SETUP">
<doc>Launch Solibri And Login To SSC</doc>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:50:06.061" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:50:06.061" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:50:06 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:50:06.050" endtime="20240424 19:50:06.061"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:50:06.061" endtime="20240424 19:50:06.061"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:06.061" endtime="20240424 19:50:06.066"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:50:06.066" level="INFO">${context} = Solibri Office - Solibri Building</msg>
<status status="PASS" starttime="20240424 19:50:06.066" endtime="20240424 19:50:06.066"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:50:06.066" endtime="20240424 19:50:06.066"/>
</kw>
<status status="PASS" starttime="20240424 19:50:06.066" endtime="20240424 19:50:06.066"/>
</kw>
<status status="PASS" starttime="20240424 19:50:06.050" endtime="20240424 19:50:06.066"/>
</kw>
<kw name="When User Logs In To SSC" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Logged in to SSC</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:50:06.066" endtime="20240424 19:50:06.066"/>
</kw>
<status status="PASS" starttime="20240424 19:50:06.066" endtime="20240424 19:50:06.066"/>
</kw>
<kw name="Then Solibri Office Is Opened" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Solibri Office Is Opened</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:50:06.066" endtime="20240424 19:50:06.066"/>
</kw>
<status status="PASS" starttime="20240424 19:50:06.066" endtime="20240424 19:50:06.066"/>
</kw>
<status status="PASS" starttime="20240424 19:50:06.050" endtime="20240424 19:50:06.066"/>
</kw>
<test id="s1-s4-t1" name="Verify Default Form of Settings View Components" line="18">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:06.082" endtime="20240424 19:50:06.082"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:50:06.082" endtime="20240424 19:50:06.195"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:06.195" endtime="20240424 19:50:06.199"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:06.199" endtime="20240424 19:50:06.204"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:06.204" endtime="20240424 19:50:06.273"/>
</kw>
<status status="PASS" starttime="20240424 19:50:06.195" endtime="20240424 19:50:06.273"/>
</kw>
<status status="PASS" starttime="20240424 19:50:06.066" endtime="20240424 19:50:06.273"/>
</kw>
<status status="PASS" starttime="20240424 19:50:06.066" endtime="20240424 19:50:06.273"/>
</kw>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:50:06.287" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:50:06.287" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:50:06 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:50:06.273" endtime="20240424 19:50:06.287"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:50:06.287" endtime="20240424 19:50:06.287"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:06.287" endtime="20240424 19:50:06.287"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:50:06.287" level="INFO">${context} = Solibri Office - Solibri Building</msg>
<status status="PASS" starttime="20240424 19:50:06.287" endtime="20240424 19:50:06.287"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:50:06.287" endtime="20240424 19:50:06.303"/>
</kw>
<status status="PASS" starttime="20240424 19:50:06.287" endtime="20240424 19:50:06.303"/>
</kw>
<status status="PASS" starttime="20240424 19:50:06.273" endtime="20240424 19:50:06.303"/>
</kw>
<kw name="And No Existing Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:06.303" endtime="20240424 19:50:06.303"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:06.303" endtime="20240424 19:50:06.310"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:06.310" endtime="20240424 19:50:06.381"/>
</kw>
<status status="PASS" starttime="20240424 19:50:06.303" endtime="20240424 19:50:06.381"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:50:06.381" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:50:06.381" endtime="20240424 19:50:06.381"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:50:11.389" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:50:11.382" endtime="20240424 19:50:11.389"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:50:16.395" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:50:16.391" endtime="20240424 19:50:16.395"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:50:21.408" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:50:21.396" endtime="20240424 19:50:21.408"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:50:26.416" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:50:26.410" endtime="20240424 19:50:26.416"/>
</kw>
<msg timestamp="20240424 19:50:26.416" level="FAIL">Keyword 'Label Should Be Enabled' failed after retrying 5 times. The last error was: Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:50:06.381" endtime="20240424 19:50:26.416"/>
</kw>
<msg timestamp="20240424 19:50:26.416" level="INFO">${model_open} = False</msg>
<status status="PASS" starttime="20240424 19:50:06.381" endtime="20240424 19:50:26.416"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:50:26.416" endtime="20240424 19:50:26.529"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:26.529" endtime="20240424 19:50:26.529"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:26.529" endtime="20240424 19:50:26.529"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:26.529" endtime="20240424 19:50:26.621"/>
</kw>
<status status="PASS" starttime="20240424 19:50:26.529" endtime="20240424 19:50:26.621"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:50:26.621" endtime="20240424 19:50:26.621"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:50:26.621" endtime="20240424 19:50:26.621"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:50:26.621" endtime="20240424 19:50:26.706"/>
</kw>
<msg timestamp="20240424 19:50:26.706" level="INFO">${check_if_modidied_asked} = True</msg>
<status status="PASS" starttime="20240424 19:50:26.621" endtime="20240424 19:50:26.706"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:50:36.711" level="FAIL">Dialog 'Select' is not open</msg>
<status status="FAIL" starttime="20240424 19:50:26.706" endtime="20240424 19:50:36.711"/>
</kw>
<msg timestamp="20240424 19:50:36.711" level="INFO">${check_if_save_asked} = False</msg>
<status status="PASS" starttime="20240424 19:50:26.706" endtime="20240424 19:50:36.711"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:50:36.711" endtime="20240424 19:50:36.711"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:50:36.711" endtime="20240424 19:50:36.711"/>
</branch>
<status status="PASS" starttime="20240424 19:50:36.711" endtime="20240424 19:50:36.711"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:36.711" endtime="20240424 19:50:36.711"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:36.711" endtime="20240424 19:50:36.823"/>
</kw>
<status status="PASS" starttime="20240424 19:50:36.711" endtime="20240424 19:50:36.823"/>
</branch>
<status status="PASS" starttime="20240424 19:50:36.711" endtime="20240424 19:50:36.823"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:36.823" endtime="20240424 19:50:36.827"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:50:36.827" endtime="20240424 19:50:36.831"/>
</kw>
<status status="PASS" starttime="20240424 19:50:36.827" endtime="20240424 19:50:36.831"/>
</kw>
<status status="PASS" starttime="20240424 19:50:26.416" endtime="20240424 19:50:36.831"/>
</kw>
<status status="PASS" starttime="20240424 19:50:26.416" endtime="20240424 19:50:36.831"/>
</branch>
<status status="PASS" starttime="20240424 19:50:26.416" endtime="20240424 19:50:36.831"/>
</if>
<status status="PASS" starttime="20240424 19:50:06.303" endtime="20240424 19:50:36.831"/>
</kw>
<kw name="And Switch to the Settings View" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:36.831" endtime="20240424 19:50:36.835"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:36.835" endtime="20240424 19:50:36.838"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:36.838" endtime="20240424 19:50:36.838"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:36.838" endtime="20240424 19:50:36.844"/>
</kw>
<status status="PASS" starttime="20240424 19:50:36.835" endtime="20240424 19:50:36.844"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:50:36.844" endtime="20240424 19:50:37.350"/>
</kw>
<status status="PASS" starttime="20240424 19:50:36.831" endtime="20240424 19:50:37.351"/>
</kw>
<kw name="Then Verify Layout" library="settings_step_definitions">
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Layouts</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:37.351" endtime="20240424 19:50:37.356"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Layouts</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:37.356" endtime="20240424 19:50:37.526"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Save As...</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:37.526" endtime="20240424 19:50:38.875"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:38.875" endtime="20240424 19:50:38.896"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Cancel</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:38.896" endtime="20240424 19:50:38.982"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Layouts</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:38.982" endtime="20240424 19:50:38.982"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${text_field}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:50:38.990" level="INFO">${text_field} = </msg>
<status status="PASS" starttime="20240424 19:50:38.982" endtime="20240424 19:50:38.990"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Layouts</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:38.990" endtime="20240424 19:50:38.993"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open...</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:38.993" endtime="20240424 19:50:39.379"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open Layout Set</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:39.379" endtime="20240424 19:50:39.406"/>
</kw>
<if>
<branch type="IF" condition="'${text_field}' == 'Get Started.layout'">
<kw name="Push Button" library="SwingRobot">
<arg>Yes</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:50:39.406" endtime="20240424 19:50:39.406"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open Layout Set</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:50:39.406" endtime="20240424 19:50:39.406"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Cancel</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:50:39.406" endtime="20240424 19:50:39.406"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:50:39.406" endtime="20240424 19:50:39.406"/>
</branch>
<branch type="ELSE">
<kw name="Select Dialog" library="SwingRobot">
<arg>Open Layout Set</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:39.406" endtime="20240424 19:50:39.430"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Cancel</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:39.430" endtime="20240424 19:50:39.452"/>
</kw>
<status status="PASS" starttime="20240424 19:50:39.406" endtime="20240424 19:50:39.452"/>
</branch>
<status status="PASS" starttime="20240424 19:50:39.406" endtime="20240424 19:50:39.452"/>
</if>
<kw name="Select Dialog" library="SwingRobot">
<arg>Layouts</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:39.452" endtime="20240424 19:50:39.456"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Restore</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:39.456" endtime="20240424 19:50:39.558"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Restore</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:39.558" endtime="20240424 19:50:39.563"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:39.563" endtime="20240424 19:50:39.758"/>
</kw>
<status status="PASS" starttime="20240424 19:50:37.351" endtime="20240424 19:50:39.758"/>
</kw>
<kw name="Then Verify General" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:39.758" endtime="20240424 19:50:39.777"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>General</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:39.777" endtime="20240424 19:50:39.788"/>
</kw>
<kw name="Restore Default Settings" library="settings_step_definitions">
<arg>General</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>${settings_dialog}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:39.791" endtime="20240424 19:50:39.936"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Restore Default Settings</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:39.936" endtime="20240424 19:50:39.967"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Restore Default Settings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:39.967" endtime="20240424 19:50:39.971"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Yes</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:39.971" endtime="20240424 19:50:39.997"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${settings_dialog}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:39.997" endtime="20240424 19:50:40.027"/>
</kw>
<status status="PASS" starttime="20240424 19:50:39.788" endtime="20240424 19:50:40.027"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${language}</var>
<arg>0</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 19:50:40.285" level="INFO">${language} = English</msg>
<status status="PASS" starttime="20240424 19:50:40.027" endtime="20240424 19:50:40.285"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${language}</arg>
<arg>English</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:50:40.285" endtime="20240424 19:50:40.285"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:50:40.285" endtime="20240424 19:50:40.291"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${username}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:50:40.297" level="INFO">${username} = SolibriCI</msg>
<status status="PASS" starttime="20240424 19:50:40.291" endtime="20240424 19:50:40.297"/>
</kw>
<kw name="Convert To Lower Case" library="String">
<var>${username}</var>
<arg>${username}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20240424 19:50:40.297" level="INFO">${username} = solibrici</msg>
<status status="PASS" starttime="20240424 19:50:40.297" endtime="20240424 19:50:40.297"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${username}</arg>
<arg>solibri</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:50:40.297" endtime="20240424 19:50:40.297"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${organisation}</var>
<arg>2</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:50:40.300" level="INFO">${organisation} = Solibri CI</msg>
<status status="PASS" starttime="20240424 19:50:40.297" endtime="20240424 19:50:40.300"/>
</kw>
<kw name="Convert To Lower Case" library="String">
<var>${organisation}</var>
<arg>${organisation}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20240424 19:50:40.300" level="INFO">${organisation} = solibri ci</msg>
<status status="PASS" starttime="20240424 19:50:40.300" endtime="20240424 19:50:40.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${organisation}</arg>
<arg>solibri</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:50:40.300" endtime="20240424 19:50:40.300"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>3</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:50:40.300" endtime="20240424 19:50:40.307"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${backups}</var>
<arg>3</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:50:40.310" level="INFO">${backups} = 2</msg>
<status status="PASS" starttime="20240424 19:50:40.307" endtime="20240424 19:50:40.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${backups}</arg>
<arg>2</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20240424 19:50:40.310" endtime="20240424 19:50:40.310"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${performance}</var>
<arg>4</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:50:40.315" level="INFO">${performance} = 0</msg>
<status status="PASS" starttime="20240424 19:50:40.310" endtime="20240424 19:50:40.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${performance}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20240424 19:50:40.315" endtime="20240424 19:50:40.315"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:40.315" endtime="20240424 19:50:40.380"/>
</kw>
<status status="PASS" starttime="20240424 19:50:39.758" endtime="20240424 19:50:40.380"/>
</kw>
<kw name="And Make Changes to Verify Restore Default Settings on General" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:40.380" endtime="20240424 19:50:40.409"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>General</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:40.409" endtime="20240424 19:50:40.411"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>General</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:40.411" endtime="20240424 19:50:40.529"/>
</kw>
<kw name="Select From Combo Box" library="SwingRobot">
<arg>0</arg>
<arg>German</arg>
<doc>Selects an item from a combobox.
The item selection is verified by default and can be disabled using the optional ``verifySelection`` parameter with any value.</doc>
<status status="PASS" starttime="20240424 19:50:40.529" endtime="20240424 19:50:41.075"/>
</kw>
<kw name="Uncheck Check Box" library="SwingRobot">
<arg>0</arg>
<doc>Uses current context to search for a checkbox and when found, unchecks it.</doc>
<status status="PASS" starttime="20240424 19:50:41.075" endtime="20240424 19:50:41.082"/>
</kw>
<kw name="Uncheck Check Box" library="SwingRobot">
<arg>1</arg>
<doc>Uses current context to search for a checkbox and when found, unchecks it.</doc>
<status status="PASS" starttime="20240424 19:50:41.082" endtime="20240424 19:50:41.099"/>
</kw>
<kw name="Check Check Box" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a checkbox and when found, checks it.</doc>
<status status="PASS" starttime="20240424 19:50:41.099" endtime="20240424 19:50:41.118"/>
</kw>
<kw name="Uncheck Check Box" library="SwingRobot">
<arg>3</arg>
<doc>Uses current context to search for a checkbox and when found, unchecks it.</doc>
<status status="PASS" starttime="20240424 19:50:41.118" endtime="20240424 19:50:41.130"/>
</kw>
<kw name="Uncheck Check Box" library="SwingRobot">
<arg>4</arg>
<doc>Uses current context to search for a checkbox and when found, unchecks it.</doc>
<status status="PASS" starttime="20240424 19:50:41.130" endtime="20240424 19:50:41.140"/>
</kw>
<kw name="Clear Text Field" library="SwingRobot">
<arg>3</arg>
<doc>Clears contents of text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:50:41.140" endtime="20240424 19:50:41.176"/>
</kw>
<kw name="Insert Into Text Field" library="SwingRobot">
<arg>4</arg>
<arg>2</arg>
<doc>Inserts text into a text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:50:41.176" endtime="20240424 19:50:41.176"/>
</kw>
<kw name="Restore Default Settings" library="settings_step_definitions">
<arg>General</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>${settings_dialog}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:41.176" endtime="20240424 19:50:41.185"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Restore Default Settings</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:41.185" endtime="20240424 19:50:41.229"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Restore Default Settings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:41.229" endtime="20240424 19:50:41.229"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Yes</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:41.229" endtime="20240424 19:50:41.261"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${settings_dialog}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:41.261" endtime="20240424 19:50:41.267"/>
</kw>
<status status="PASS" starttime="20240424 19:50:41.176" endtime="20240424 19:50:41.267"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:41.267" endtime="20240424 19:50:41.310"/>
</kw>
<status status="PASS" starttime="20240424 19:50:40.380" endtime="20240424 19:50:41.310"/>
</kw>
<kw name="Then Verify General After Click Restore Default Settings" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:41.310" endtime="20240424 19:50:41.315"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>General</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:41.315" endtime="20240424 19:50:41.316"/>
</kw>
<kw name="Restore Default Settings" library="settings_step_definitions">
<arg>General</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>${settings_dialog}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:41.316" endtime="20240424 19:50:41.506"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Restore Default Settings</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:41.506" endtime="20240424 19:50:41.521"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Restore Default Settings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:41.521" endtime="20240424 19:50:41.545"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Yes</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:41.545" endtime="20240424 19:50:41.605"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${settings_dialog}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:41.605" endtime="20240424 19:50:41.625"/>
</kw>
<status status="PASS" starttime="20240424 19:50:41.316" endtime="20240424 19:50:41.625"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${language}</var>
<arg>0</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 19:50:41.856" level="INFO">${language} = English</msg>
<status status="PASS" starttime="20240424 19:50:41.625" endtime="20240424 19:50:41.856"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${language}</arg>
<arg>English</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:50:41.856" endtime="20240424 19:50:41.856"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:50:41.856" endtime="20240424 19:50:41.861"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>1</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:50:41.861" endtime="20240424 19:50:41.863"/>
</kw>
<kw name="Check Box Should Be Unchecked" library="SwingRobot">
<arg>2</arg>
<doc>Fails if checkbox is checked.</doc>
<status status="PASS" starttime="20240424 19:50:41.863" endtime="20240424 19:50:41.863"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${username}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:50:41.863" level="INFO">${username} = SolibriCI</msg>
<status status="PASS" starttime="20240424 19:50:41.863" endtime="20240424 19:50:41.863"/>
</kw>
<kw name="Convert To Lower Case" library="String">
<var>${username}</var>
<arg>${username}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20240424 19:50:41.863" level="INFO">${username} = solibrici</msg>
<status status="PASS" starttime="20240424 19:50:41.863" endtime="20240424 19:50:41.863"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${username}</arg>
<arg>solibri</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:50:41.863" endtime="20240424 19:50:41.863"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${organisation}</var>
<arg>2</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:50:41.863" level="INFO">${organisation} = Solibri CI</msg>
<status status="PASS" starttime="20240424 19:50:41.863" endtime="20240424 19:50:41.863"/>
</kw>
<kw name="Convert To Lower Case" library="String">
<var>${organisation}</var>
<arg>${organisation}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20240424 19:50:41.863" level="INFO">${organisation} = solibri ci</msg>
<status status="PASS" starttime="20240424 19:50:41.863" endtime="20240424 19:50:41.863"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${organisation}</arg>
<arg>solibri</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:50:41.863" endtime="20240424 19:50:41.863"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${update}</var>
<arg>1</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 19:50:42.150" level="INFO">${update} = Weekly</msg>
<status status="PASS" starttime="20240424 19:50:41.863" endtime="20240424 19:50:42.150"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${update}</arg>
<arg>Weekly</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:50:42.150" endtime="20240424 19:50:42.150"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>3</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:50:42.153" endtime="20240424 19:50:42.161"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>4</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:50:42.161" endtime="20240424 19:50:42.161"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${backups}</var>
<arg>3</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:50:42.167" level="INFO">${backups} = 2</msg>
<status status="PASS" starttime="20240424 19:50:42.161" endtime="20240424 19:50:42.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${backups}</arg>
<arg>2</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20240424 19:50:42.167" endtime="20240424 19:50:42.167"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${performance}</var>
<arg>4</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:50:42.170" level="INFO">${performance} = 0</msg>
<status status="PASS" starttime="20240424 19:50:42.167" endtime="20240424 19:50:42.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${performance}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20240424 19:50:42.170" endtime="20240424 19:50:42.170"/>
</kw>
<status status="PASS" starttime="20240424 19:50:41.310" endtime="20240424 19:50:42.170"/>
</kw>
<kw name="Then Revert Update Schedule to Never" library="settings_step_definitions">
<kw name="List Components In Context" library="SwingRobot">
<doc>Prints components (their types and their internal names) from the selected context.</doc>
<msg timestamp="20240424 19:50:42.170" level="INFO">Level: 0 Component: com.solibri.saf.core.settings.ui.SettingsDialog Index: null Name: dialog21
    Level: 1 Component: javax.swing.JRootPane Index: 0 Name: null
       Level: 2 Component: javax.swing.JPanel Index: 0 Name: null.glassPane
       Level: 2 Component: javax.swing.JLayeredPane Index: 0 Name: null.layeredPane
          Level: 3 Component: com.solibri.saf.core.ui.SafPanel Index: 1 Name: null
             Level: 4 Component: javax.swing.JScrollPane Index: 0 Name: null
                Level: 5 Component: javax.swing.JViewport Index: 0 Name: null
                   Level: 6 Component: javax.swing.JPanel Index: 2 Name: null
                      Level: 7 Component: com.solibri.saf.core.settings.ui.SettingsPanel Index: 3 Name: User Interface
                         Level: 8 Component: javax.swing.JPanel Index: 4 Name: null
                            Level: 9 Component: javax.swing.JLabel Index: 0 Name: null
                            Level: 9 Component: com.solibri.saf.core.settings.ui.SettingsPanel$EnumSettingUI Index: 0 Name: null
                               Level: 10 Component: com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboBoxButton Index: 0 Name: null
                               Level: 10 Component: javax.swing.CellRendererPane Index: 0 Name: null
                            Level: 9 Component: javax.swing.JLabel Index: 1 Name: null
                            Level: 9 Component: com.solibri.saf.core.settings.ui.SettingsPanel$BooleanSettingUI Index: 0 Name: null
                            Level: 9 Component: javax.swing.JLabel Index: 2 Name: null
                            Level: 9 Component: com.solibri.saf.core.settings.ui.SettingsPanel$BooleanSettingUI Index: 1 Name: null
                            Level: 9 Component: javax.swing.JLabel Index: 3 Name: null
                            Level: 9 Component: com.solibri.saf.core.settings.ui.SettingsPanel$BooleanSettingUI Index: 2 Name: null
                         Level: 8 Component: com.solibri.saf.core.ui.SafPanel Index: 5 Name: null
                         Level: 8 Component: javax.swing.JLabel Index: 4 Name: null
                      Level: 7 Component: com.solibri.saf.core.settings.ui.SettingsPanel Index: 6 Name: User
                         Level: 8 Component: javax.swing.JPanel Index: 7 Name: null
                            Level: 9 Component: javax.swing.JLabel Index: 5 Name: null
                            Level: 9 Component: com.solibri.saf.core.settings.ui.SettingsPanel$StringSettingUI Index: 0 Name: null
                            Level: 9 Component: javax.swing.JLabel Index: 6 Name: null
                            Level: 9 Component: com.solibri.saf.core.settings.ui.SettingsPanel$StringSettingUI Index: 1 Name: null
                            Level: 9 Component: javax.swing.JLabel Index: 7 Name: null
                            Level: 9 Component: com.solibri.saf.core.settings.ui.SettingsPanel$StringSettingUI Index: 2 Name: null
                         Level: 8 Component: com.solibri.saf.core.ui.SafPanel Index: 8 Name: null
                      Level: 7 Component: com.solibri.saf.core.settings.ui.SettingsPanel Index: 9 Name: Update
                         Level: 8 Component: javax.swing.JPanel Index: 10 Name: null
                            Level: 9 Component: javax.swing.JLabel Index: 8 Name: null
                            Level: 9 Component: com.solibri.saf.core.settings.ui.SettingsPanel$EnumSettingUI Index: 1 Name: null
                               Level: 10 Component: com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboBoxButton Index: 1 Name: null
                               Level: 10 Component: javax.swing.CellRendererPane Index: 1 Name: null
                         Level: 8 Component: com.solibri.saf.core.ui.SafPanel Index: 11 Name: null
                         Level: 8 Component: javax.swing.JLabel Index: 9 Name: null
                      Level: 7 Component: com.solibri.saf.core.settings.ui.SettingsPanel Index: 12 Name: Remember My Registration and Product
                         Level: 8 Component: javax.swing.JPanel Index: 13 Name: null
                            Level: 9 Component: javax.swing.JLabel Index: 10 Name: null
                            Level: 9 Component: com.solibri.saf.core.settings.ui.SettingsPanel$BooleanSettingUI Index: 3 Name: null
                            Level: 9 Component: javax.swing.JLabel Index: 11 Name: null
                            Level: 9 Component: com.solibri.saf.core.settings.ui.SettingsPanel$BooleanSettingUI Index: 4 Name: null
                         Level: 8 Component: com.solibri.saf.core.ui.SafPanel Index: 14 Name: null
                      Level: 7 Component: com.solibri.saf.core.settings.ui.SettingsPanel Index: 15 Name: Backups
                         Level: 8 Component: javax.swing.JPanel Index: 16 Name: null
                            Level: 9 Component: javax.swing.JLabel Index: 12 Name: null
                            Level: 9 Component: com.solibri.saf.core.settings.ui.SettingsPanel$IntSettingUI Index: 3 Name: null
                         Level: 8 Component: com.solibri.saf.core.ui.SafPanel Index: 17 Name: null
                      Level: 7 Component: com.solibri.saf.core.settings.ui.SettingsPanel Index: 18 Name: Performance
                         Level: 8 Component: javax.swing.JPanel Index: 19 Name: null
                            Level: 9 Component: javax.swing.JLabel Index: 13 Name: null
                            Level: 9 Component: com.solibri.saf.core.settings.ui.SettingsPanel$IntSettingUI Index: 4 Name: null
                         Level: 8 Component: com.solibri.saf.core.ui.SafPanel Index: 20 Name: null
                      Level: 7 Component: com.solibri.saf.core.settings.JavaScriptSettingsPanel Index: 21 Name: JavaScript
                         Level: 8 Component: javax.swing.JPanel Index: 22 Name: null
                         Level: 8 Component: com.solibri.saf.core.ui.SafPanel Index: 23 Name: null
                         Level: 8 Component: javax.swing.JLabel Index: 14 Name: null
                         Level: 8 Component: javax.swing.JButton Index: 2 Name: null
                      Level: 7 Component: com.solibri.saf.core.ui.SafPanel Index: 24 Name: null
                Level: 5 Component: javax.swing.JScrollPane$ScrollBar Index: 0 Name: null
                   Level: 6 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 3 Name: null
                   Level: 6 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 4 Name: null
                Level: 5 Component: javax.swing.JScrollPane$ScrollBar Index: 1 Name: null
                   Level: 6 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 5 Name: null
                   Level: 6 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 6 Name: null
             Level: 4 Component: com.solibri.saf.core.ui.SafPanel Index: 25 Name: null
                Level: 5 Component: com.solibri.saf.core.ui.SafPanel Index: 26 Name: null
                Level: 5 Component: javax.swing.JButton Index: 7 Name: null
                Level: 5 Component: com.solibri.saf.core.ui.SafPanel Index: 27 Name: null
                   Level: 6 Component: javax.swing.JButton Index: 8 Name: null
                   Level: 6 Component: javax.swing.JButton Index: 9 Name: Cancel
          Level: 3 Component: com.formdev.flatlaf.ui.FlatTitlePane Index: null Name: null
             Level: 4 Component: javax.swing.JPanel Index: 28 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 15 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$2 Index: null Name: null
             Level: 4 Component: com.formdev.flatlaf.ui.FlatTitlePane$1 Index: 16 Name: null
             Level: 4 Component: com.formdev.flatlaf.ui.FlatTitlePane$4 Index: 29 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 10 Name: null</msg>
<status status="PASS" starttime="20240424 19:50:42.170" endtime="20240424 19:50:42.170"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${update}</var>
<arg>1</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 19:50:42.461" level="INFO">${update} = Weekly</msg>
<status status="PASS" starttime="20240424 19:50:42.170" endtime="20240424 19:50:42.461"/>
</kw>
<kw name="Select From Combo Box" library="SwingRobot">
<arg>1</arg>
<arg>Never</arg>
<doc>Selects an item from a combobox.
The item selection is verified by default and can be disabled using the optional ``verifySelection`` parameter with any value.</doc>
<status status="PASS" starttime="20240424 19:50:42.461" endtime="20240424 19:50:43.053"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:43.053" endtime="20240424 19:50:43.069"/>
</kw>
<status status="PASS" starttime="20240424 19:50:42.170" endtime="20240424 19:50:43.069"/>
</kw>
<status status="PASS" starttime="20240424 19:50:06.066" endtime="20240424 19:50:43.069"/>
</test>
<test id="s1-s4-t2" name="Verify Proxy Server Settings" line="32">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:43.069" endtime="20240424 19:50:43.100"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:50:43.100" endtime="20240424 19:50:43.210"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:43.210" endtime="20240424 19:50:43.210"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:43.210" endtime="20240424 19:50:43.210"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:43.210" endtime="20240424 19:50:43.286"/>
</kw>
<status status="PASS" starttime="20240424 19:50:43.210" endtime="20240424 19:50:43.286"/>
</kw>
<status status="PASS" starttime="20240424 19:50:43.069" endtime="20240424 19:50:43.286"/>
</kw>
<status status="PASS" starttime="20240424 19:50:43.069" endtime="20240424 19:50:43.286"/>
</kw>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:50:43.296" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:50:43.296" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:50:43 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:50:43.286" endtime="20240424 19:50:43.296"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:50:43.296" endtime="20240424 19:50:43.296"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:43.296" endtime="20240424 19:50:43.296"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:50:43.312" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:50:43.296" endtime="20240424 19:50:43.312"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:50:43.312" endtime="20240424 19:50:43.312"/>
</kw>
<status status="PASS" starttime="20240424 19:50:43.296" endtime="20240424 19:50:43.312"/>
</kw>
<status status="PASS" starttime="20240424 19:50:43.286" endtime="20240424 19:50:43.312"/>
</kw>
<kw name="And Switch to the Settings View" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:43.312" endtime="20240424 19:50:43.359"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:43.359" endtime="20240424 19:50:43.363"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:43.363" endtime="20240424 19:50:43.364"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:43.364" endtime="20240424 19:50:43.368"/>
</kw>
<status status="PASS" starttime="20240424 19:50:43.359" endtime="20240424 19:50:43.368"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:50:43.368" endtime="20240424 19:50:43.745"/>
</kw>
<status status="PASS" starttime="20240424 19:50:43.312" endtime="20240424 19:50:43.745"/>
</kw>
<kw name="Then Verify Default Proxy Server Settings" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:43.746" endtime="20240424 19:50:43.832"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Proxy Server Settings...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:43.832" endtime="20240424 19:50:43.835"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Proxy Server Settings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:43.835" endtime="20240424 19:50:43.936"/>
</kw>
<kw name="Check Box Should Be Unchecked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is checked.</doc>
<status status="PASS" starttime="20240424 19:50:43.936" endtime="20240424 19:50:43.939"/>
</kw>
<kw name="Combo Box Should Be Disabled" library="SwingRobot">
<arg>0</arg>
<doc>Fails if combobox is enabled.</doc>
<status status="PASS" starttime="20240424 19:50:43.939" endtime="20240424 19:50:43.943"/>
</kw>
<kw name="Text Field Should Be Disabled" library="SwingRobot">
<arg>1</arg>
<doc>Fails if text component (e.g. text field, password field, text area) is enabled.</doc>
<status status="PASS" starttime="20240424 19:50:43.943" endtime="20240424 19:50:43.946"/>
</kw>
<kw name="Check Check Box" library="SwingRobot">
<arg>0</arg>
<doc>Uses current context to search for a checkbox and when found, checks it.</doc>
<status status="PASS" starttime="20240424 19:50:43.946" endtime="20240424 19:50:44.013"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${type_a}</var>
<arg>0</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 19:50:44.346" level="INFO">${type_a} = HTTP(S) Connect</msg>
<status status="PASS" starttime="20240424 19:50:44.013" endtime="20240424 19:50:44.346"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${type_a}</arg>
<arg>HTTP(S) Connect</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:50:44.346" endtime="20240424 19:50:44.346"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${port}</var>
<arg>1</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:50:44.346" level="INFO">${port} = 80</msg>
<status status="PASS" starttime="20240424 19:50:44.346" endtime="20240424 19:50:44.346"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${port}</arg>
<arg>80</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:50:44.346" endtime="20240424 19:50:44.346"/>
</kw>
<kw name="Check Box Should Be Unchecked" library="SwingRobot">
<arg>1</arg>
<doc>Fails if checkbox is checked.</doc>
<status status="PASS" starttime="20240424 19:50:44.346" endtime="20240424 19:50:44.352"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:44.352" endtime="20240424 19:50:44.356"/>
</kw>
<status status="PASS" starttime="20240424 19:50:43.745" endtime="20240424 19:50:44.356"/>
</kw>
<status status="PASS" starttime="20240424 19:50:43.069" endtime="20240424 19:50:44.356"/>
</test>
<test id="s1-s4-t3" name="Verify Discipline and Color Map" line="38">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:44.356" endtime="20240424 19:50:44.356"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:50:44.356" endtime="20240424 19:50:44.466"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:44.466" endtime="20240424 19:50:44.501"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:44.501" endtime="20240424 19:50:44.505"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:44.505" endtime="20240424 19:50:44.511"/>
</kw>
<status status="PASS" starttime="20240424 19:50:44.466" endtime="20240424 19:50:44.511"/>
</kw>
<status status="PASS" starttime="20240424 19:50:44.356" endtime="20240424 19:50:44.511"/>
</kw>
<status status="PASS" starttime="20240424 19:50:44.356" endtime="20240424 19:50:44.511"/>
</kw>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:50:44.528" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:50:44.528" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:50:44 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:50:44.511" endtime="20240424 19:50:44.528"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:50:44.529" endtime="20240424 19:50:44.529"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:44.529" endtime="20240424 19:50:44.592"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:50:44.592" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:50:44.592" endtime="20240424 19:50:44.592"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:50:44.592" endtime="20240424 19:50:44.592"/>
</kw>
<status status="PASS" starttime="20240424 19:50:44.592" endtime="20240424 19:50:44.592"/>
</kw>
<status status="PASS" starttime="20240424 19:50:44.511" endtime="20240424 19:50:44.592"/>
</kw>
<kw name="And Switch to the Settings View" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:44.592" endtime="20240424 19:50:44.599"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:44.599" endtime="20240424 19:50:44.599"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:44.599" endtime="20240424 19:50:44.599"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:44.599" endtime="20240424 19:50:44.607"/>
</kw>
<status status="PASS" starttime="20240424 19:50:44.599" endtime="20240424 19:50:44.607"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:50:44.607" endtime="20240424 19:50:45.009"/>
</kw>
<status status="PASS" starttime="20240424 19:50:44.592" endtime="20240424 19:50:45.009"/>
</kw>
<kw name="Then Verify Default Discipline and Color Map" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:45.009" endtime="20240424 19:50:45.034"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Discipline and Color Map...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:45.034" endtime="20240424 19:50:45.034"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Discipline and Color Map</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:45.034" endtime="20240424 19:50:45.251"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Discipline Mapping</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:50:45.251" endtime="20240424 19:50:45.347"/>
</kw>
<kw name="Validate Table Row String" library="settings_step_definitions">
<arg>*Allplan*</arg>
<arg>0</arg>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${method_value}</var>
<arg>0</arg>
<arg>${row_number}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:50:45.354" level="INFO">${method_value} = *Allplan*</msg>
<status status="PASS" starttime="20240424 19:50:45.347" endtime="20240424 19:50:45.354"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${method_value}</arg>
<arg>${row_string}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:50:45.354" endtime="20240424 19:50:45.354"/>
</kw>
<status status="PASS" starttime="20240424 19:50:45.347" endtime="20240424 19:50:45.354"/>
</kw>
<kw name="Validate Table Row String" library="settings_step_definitions">
<arg>*ArchiCAD*</arg>
<arg>1</arg>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${method_value}</var>
<arg>0</arg>
<arg>${row_number}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:50:45.364" level="INFO">${method_value} = *ArchiCAD*</msg>
<status status="PASS" starttime="20240424 19:50:45.354" endtime="20240424 19:50:45.364"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${method_value}</arg>
<arg>${row_string}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:50:45.364" endtime="20240424 19:50:45.364"/>
</kw>
<status status="PASS" starttime="20240424 19:50:45.354" endtime="20240424 19:50:45.364"/>
</kw>
<kw name="Validate Table Row String" library="settings_step_definitions">
<arg>*AutoCAD Civil*</arg>
<arg>4</arg>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${method_value}</var>
<arg>0</arg>
<arg>${row_number}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:50:45.426" level="INFO">${method_value} = *AutoCAD Civil*</msg>
<status status="PASS" starttime="20240424 19:50:45.364" endtime="20240424 19:50:45.426"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${method_value}</arg>
<arg>${row_string}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:50:45.426" endtime="20240424 19:50:45.426"/>
</kw>
<status status="PASS" starttime="20240424 19:50:45.364" endtime="20240424 19:50:45.426"/>
</kw>
<kw name="Validate Table Row String" library="settings_step_definitions">
<arg>*bocad*</arg>
<arg>6</arg>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${method_value}</var>
<arg>0</arg>
<arg>${row_number}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:50:45.436" level="INFO">${method_value} = *bocad*</msg>
<status status="PASS" starttime="20240424 19:50:45.426" endtime="20240424 19:50:45.436"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${method_value}</arg>
<arg>${row_string}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:50:45.436" endtime="20240424 19:50:45.436"/>
</kw>
<status status="PASS" starttime="20240424 19:50:45.426" endtime="20240424 19:50:45.436"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:50:45.488" level="INFO">${row_count} = 43</msg>
<status status="PASS" starttime="20240424 19:50:45.436" endtime="20240424 19:50:45.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>43</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 19:50:45.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:50:45.488" endtime="20240424 19:50:45.488"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Insert Row</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:45.488" endtime="20240424 19:50:45.506"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:50:45.510" level="INFO">${row_count} = 44</msg>
<status status="PASS" starttime="20240424 19:50:45.506" endtime="20240424 19:50:45.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>44</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 19:50:45.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:50:45.510" endtime="20240424 19:50:45.510"/>
</kw>
<kw name="Select Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>43</arg>
<arg>0</arg>
<doc>Selects a cell in a table.</doc>
<status status="PASS" starttime="20240424 19:50:45.510" endtime="20240424 19:50:45.520"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Delete Row</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:45.520" endtime="20240424 19:50:45.587"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:50:45.625" level="INFO">${row_count} = 43</msg>
<status status="PASS" starttime="20240424 19:50:45.587" endtime="20240424 19:50:45.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>43</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 19:50:45.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:50:45.625" endtime="20240424 19:50:45.625"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Discipline to Color Mapping</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:50:45.625" endtime="20240424 19:50:45.676"/>
</kw>
<kw name="All Checkboxes Should Be Checked" library="SwingRobot">
<doc>Fails if any checkbox in current context is not checked.</doc>
<status status="PASS" starttime="20240424 19:50:45.676" endtime="20240424 19:50:45.678"/>
</kw>
<kw name="Validate Table Row String" library="settings_step_definitions">
<arg>Architectural</arg>
<arg>0</arg>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${method_value}</var>
<arg>0</arg>
<arg>${row_number}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:50:45.685" level="INFO">${method_value} = Architectural</msg>
<status status="PASS" starttime="20240424 19:50:45.678" endtime="20240424 19:50:45.685"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${method_value}</arg>
<arg>${row_string}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:50:45.685" endtime="20240424 19:50:45.685"/>
</kw>
<status status="PASS" starttime="20240424 19:50:45.678" endtime="20240424 19:50:45.685"/>
</kw>
<kw name="Validate Table Row String" library="settings_step_definitions">
<arg>Building Services</arg>
<arg>2</arg>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${method_value}</var>
<arg>0</arg>
<arg>${row_number}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:50:45.749" level="INFO">${method_value} = Building Services</msg>
<status status="PASS" starttime="20240424 19:50:45.685" endtime="20240424 19:50:45.749"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${method_value}</arg>
<arg>${row_string}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:50:45.749" endtime="20240424 19:50:45.749"/>
</kw>
<status status="PASS" starttime="20240424 19:50:45.685" endtime="20240424 19:50:45.749"/>
</kw>
<kw name="Validate Table Row String" library="settings_step_definitions">
<arg>Heat</arg>
<arg>4</arg>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${method_value}</var>
<arg>0</arg>
<arg>${row_number}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:50:45.755" level="INFO">${method_value} = Heat</msg>
<status status="PASS" starttime="20240424 19:50:45.749" endtime="20240424 19:50:45.755"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${method_value}</arg>
<arg>${row_string}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:50:45.755" endtime="20240424 19:50:45.755"/>
</kw>
<status status="PASS" starttime="20240424 19:50:45.749" endtime="20240424 19:50:45.755"/>
</kw>
<kw name="Validate Table Row String" library="settings_step_definitions">
<arg>Ventilation</arg>
<arg>6</arg>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${method_value}</var>
<arg>0</arg>
<arg>${row_number}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:50:45.812" level="INFO">${method_value} = Ventilation</msg>
<status status="PASS" starttime="20240424 19:50:45.755" endtime="20240424 19:50:45.812"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${method_value}</arg>
<arg>${row_string}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:50:45.812" endtime="20240424 19:50:45.812"/>
</kw>
<status status="PASS" starttime="20240424 19:50:45.755" endtime="20240424 19:50:45.812"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open Color Map Editor</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:45.812" endtime="20240424 19:50:45.963"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Color Map Editor</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:45.963" endtime="20240424 19:50:45.973"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:45.973" endtime="20240424 19:50:45.986"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Discipline and Color Map</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:45.986" endtime="20240424 19:50:46.000"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:46.000" endtime="20240424 19:50:46.025"/>
</kw>
<status status="PASS" starttime="20240424 19:50:45.009" endtime="20240424 19:50:46.025"/>
</kw>
<status status="PASS" starttime="20240424 19:50:44.356" endtime="20240424 19:50:46.025"/>
</test>
<test id="s1-s4-t4" name="Verify Report Settings" line="44">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:46.025" endtime="20240424 19:50:46.025"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:50:46.025" endtime="20240424 19:50:46.139"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:46.139" endtime="20240424 19:50:46.145"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:46.145" endtime="20240424 19:50:46.148"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:46.148" endtime="20240424 19:50:46.154"/>
</kw>
<status status="PASS" starttime="20240424 19:50:46.139" endtime="20240424 19:50:46.154"/>
</kw>
<status status="PASS" starttime="20240424 19:50:46.025" endtime="20240424 19:50:46.154"/>
</kw>
<status status="PASS" starttime="20240424 19:50:46.025" endtime="20240424 19:50:46.154"/>
</kw>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:50:46.159" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:50:46.159" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:50:46 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:50:46.154" endtime="20240424 19:50:46.160"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:50:46.160" endtime="20240424 19:50:46.160"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:46.160" endtime="20240424 19:50:46.223"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:50:46.228" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:50:46.228" endtime="20240424 19:50:46.228"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:50:46.228" endtime="20240424 19:50:46.228"/>
</kw>
<status status="PASS" starttime="20240424 19:50:46.223" endtime="20240424 19:50:46.228"/>
</kw>
<status status="PASS" starttime="20240424 19:50:46.154" endtime="20240424 19:50:46.228"/>
</kw>
<kw name="And Switch to the Settings View" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:46.228" endtime="20240424 19:50:46.228"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:46.228" endtime="20240424 19:50:46.228"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:46.228" endtime="20240424 19:50:46.239"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:46.239" endtime="20240424 19:50:46.310"/>
</kw>
<status status="PASS" starttime="20240424 19:50:46.228" endtime="20240424 19:50:46.310"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:50:46.310" endtime="20240424 19:50:46.717"/>
</kw>
<status status="PASS" starttime="20240424 19:50:46.228" endtime="20240424 19:50:46.717"/>
</kw>
<kw name="Then Verify Default Report Settings" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:46.717" endtime="20240424 19:50:46.747"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Report Settings...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:46.747" endtime="20240424 19:50:46.749"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Report Settings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:46.749" endtime="20240424 19:50:46.850"/>
</kw>
<kw name="Get Label Content" library="SwingRobot">
<var>${sample}</var>
<arg>2</arg>
<doc>Returns the text displayed on a label.
Assumes that the label exists in the current context.</doc>
<msg timestamp="20240424 19:50:46.875" level="INFO">${sample} = Arial</msg>
<status status="PASS" starttime="20240424 19:50:46.850" endtime="20240424 19:50:46.875"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${sample}</arg>
<arg>Arial</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:50:46.875" endtime="20240424 19:50:46.875"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>1</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:46.875" endtime="20240424 19:50:47.018"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:47.018" endtime="20240424 19:50:47.020"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Cancel</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:47.020" endtime="20240424 19:50:47.039"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Report Settings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:47.039" endtime="20240424 19:50:47.047"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${character_set}</var>
<arg>0</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 19:50:47.326" level="INFO">${character_set} = (Default) windows-1252 (Europa)</msg>
<status status="PASS" starttime="20240424 19:50:47.047" endtime="20240424 19:50:47.326"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${character_set}</arg>
<arg>(Default) windows-1252 (Europa)</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:50:47.326" endtime="20240424 19:50:47.326"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:47.326" endtime="20240424 19:50:47.352"/>
</kw>
<status status="PASS" starttime="20240424 19:50:46.717" endtime="20240424 19:50:47.352"/>
</kw>
<status status="PASS" starttime="20240424 19:50:46.025" endtime="20240424 19:50:47.352"/>
</test>
<test id="s1-s4-t5" name="Verify Checking Settings" line="50">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:47.352" endtime="20240424 19:50:47.421"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:50:47.421" endtime="20240424 19:50:47.532"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:47.532" endtime="20240424 19:50:47.532"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:47.532" endtime="20240424 19:50:47.532"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:47.532" endtime="20240424 19:50:47.546"/>
</kw>
<status status="PASS" starttime="20240424 19:50:47.532" endtime="20240424 19:50:47.546"/>
</kw>
<status status="PASS" starttime="20240424 19:50:47.352" endtime="20240424 19:50:47.546"/>
</kw>
<status status="PASS" starttime="20240424 19:50:47.352" endtime="20240424 19:50:47.546"/>
</kw>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:50:47.553" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:50:47.553" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:50:47 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:50:47.546" endtime="20240424 19:50:47.553"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:50:47.553" endtime="20240424 19:50:47.553"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:47.553" endtime="20240424 19:50:47.553"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:50:47.560" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:50:47.553" endtime="20240424 19:50:47.560"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:50:47.560" endtime="20240424 19:50:47.560"/>
</kw>
<status status="PASS" starttime="20240424 19:50:47.553" endtime="20240424 19:50:47.560"/>
</kw>
<status status="PASS" starttime="20240424 19:50:47.546" endtime="20240424 19:50:47.560"/>
</kw>
<kw name="And No Existing Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:47.561" endtime="20240424 19:50:47.629"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:47.629" endtime="20240424 19:50:47.633"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:47.633" endtime="20240424 19:50:47.705"/>
</kw>
<status status="PASS" starttime="20240424 19:50:47.561" endtime="20240424 19:50:47.705"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:50:47.705" endtime="20240424 19:50:47.705"/>
</kw>
<status status="PASS" starttime="20240424 19:50:47.705" endtime="20240424 19:50:47.705"/>
</kw>
<msg timestamp="20240424 19:50:47.705" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 19:50:47.705" endtime="20240424 19:50:47.705"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:50:47.705" endtime="20240424 19:50:47.705"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:50:47.705" endtime="20240424 19:50:47.705"/>
</branch>
<status status="PASS" starttime="20240424 19:50:47.705" endtime="20240424 19:50:47.705"/>
</if>
<status status="PASS" starttime="20240424 19:50:47.561" endtime="20240424 19:50:47.705"/>
</kw>
<kw name="And Switch to the Settings View" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:47.705" endtime="20240424 19:50:47.705"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:47.705" endtime="20240424 19:50:47.705"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:47.705" endtime="20240424 19:50:47.721"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:47.721" endtime="20240424 19:50:47.726"/>
</kw>
<status status="PASS" starttime="20240424 19:50:47.705" endtime="20240424 19:50:47.726"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:50:47.726" endtime="20240424 19:50:48.092"/>
</kw>
<status status="PASS" starttime="20240424 19:50:47.705" endtime="20240424 19:50:48.092"/>
</kw>
<kw name="Then Verify the Checking Default Settings" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:48.092" endtime="20240424 19:50:48.114"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Checking...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:48.114" endtime="20240424 19:50:48.116"/>
</kw>
<kw name="Restore Default Settings" library="settings_step_definitions">
<arg>Checking</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>${settings_dialog}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:48.116" endtime="20240424 19:50:48.203"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Restore Default Settings</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:48.203" endtime="20240424 19:50:48.237"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Restore Default Settings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:48.237" endtime="20240424 19:50:48.294"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Yes</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:48.294" endtime="20240424 19:50:48.311"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${settings_dialog}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:48.311" endtime="20240424 19:50:48.344"/>
</kw>
<status status="PASS" starttime="20240424 19:50:48.116" endtime="20240424 19:50:48.344"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:50:48.344" endtime="20240424 19:50:48.372"/>
</kw>
<kw name="Check Box Should Be Unchecked" library="SwingRobot">
<arg>1</arg>
<doc>Fails if checkbox is checked.</doc>
<status status="PASS" starttime="20240424 19:50:48.372" endtime="20240424 19:50:48.375"/>
</kw>
<kw name="Check Box Should Be Unchecked" library="SwingRobot">
<arg>2</arg>
<doc>Fails if checkbox is checked.</doc>
<status status="PASS" starttime="20240424 19:50:48.375" endtime="20240424 19:50:48.375"/>
</kw>
<kw name="Check Box Should Be Unchecked" library="SwingRobot">
<arg>3</arg>
<doc>Fails if checkbox is checked.</doc>
<status status="PASS" starttime="20240424 19:50:48.375" endtime="20240424 19:50:48.380"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>4</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:50:48.380" endtime="20240424 19:50:48.381"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>5</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:50:48.381" endtime="20240424 19:50:48.385"/>
</kw>
<status status="PASS" starttime="20240424 19:50:48.092" endtime="20240424 19:50:48.385"/>
</kw>
<kw name="Then Verify Rule Name, Issue Description" library="settings_step_definitions">
<kw name="Uncheck All Checkboxes" library="SwingRobot">
<doc>Unchecks all checkboxes in current context.</doc>
<status status="PASS" starttime="20240424 19:50:48.385" endtime="20240424 19:50:48.415"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:48.415" endtime="20240424 19:50:48.425"/>
</kw>
<kw name="File Is Open From File Chooser" library="ModelHandlingResource">
<arg>smc</arg>
<if>
<branch type="IF" condition="'${filetype}' == 'ifc'">
<kw name="Join Path" library="OperatingSystem">
<var>${filename}</var>
<arg>${ifc_folder}</arg>
<arg>Solibri Building.ifc</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<status status="NOT RUN" starttime="20240424 19:50:48.425" endtime="20240424 19:50:48.425"/>
</kw>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${filename}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:50:48.425" endtime="20240424 19:50:48.425"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${modelname}</var>
<arg>Solibri Building</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240424 19:50:48.425" endtime="20240424 19:50:48.425"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:50:48.425" endtime="20240424 19:50:48.425"/>
</branch>
<branch type="ELSE IF" condition="'${filetype}' == 'pdf'">
<kw name="Join Path" library="OperatingSystem">
<var>${filename}</var>
<arg>${pdf_folder}</arg>
<arg>Floor Plan-Ground Floor_100.pdf</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<status status="NOT RUN" starttime="20240424 19:50:48.425" endtime="20240424 19:50:48.425"/>
</kw>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${filename}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:50:48.425" endtime="20240424 19:50:48.425"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${modelname}</var>
<arg>Floor Plan-Ground Floor_100</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240424 19:50:48.425" endtime="20240424 19:50:48.425"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:50:48.425" endtime="20240424 19:50:48.425"/>
</branch>
<branch type="ELSE IF" condition="'${filetype}' == 'smc'">
<kw name="Join Path" library="OperatingSystem">
<var>${filename}</var>
<arg>${models_folder}</arg>
<arg>Solibri Building.smc</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:50:48.425" level="INFO">${filename} = C:\users\public\Solibri\SOLIBRI\Samples\models\Solibri Building.smc</msg>
<status status="PASS" starttime="20240424 19:50:48.425" endtime="20240424 19:50:48.425"/>
</kw>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${filename}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:48.425" endtime="20240424 19:50:48.425"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:50:48.425" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:50:48.425" endtime="20240424 19:50:48.425"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:50:48.425" endtime="20240424 19:50:48.425"/>
</kw>
<status status="PASS" starttime="20240424 19:50:48.425" endtime="20240424 19:50:48.425"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:48.425" endtime="20240424 19:50:48.425"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:48.425" endtime="20240424 19:50:48.443"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:48.443" endtime="20240424 19:50:48.447"/>
</kw>
<status status="PASS" starttime="20240424 19:50:48.425" endtime="20240424 19:50:48.447"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:50:48.449" endtime="20240424 19:50:48.518"/>
</kw>
<status status="PASS" starttime="20240424 19:50:48.447" endtime="20240424 19:50:48.518"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:50:48.518" endtime="20240424 19:50:48.537"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:48.537" endtime="20240424 19:50:48.540"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:48.540" endtime="20240424 19:50:49.887"/>
</kw>
<status status="PASS" starttime="20240424 19:50:48.540" endtime="20240424 19:50:49.887"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:50:49.887" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:50:49.887" endtime="20240424 19:50:49.887"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:50:49.887" endtime="20240424 19:50:49.887"/>
</return>
<msg timestamp="20240424 19:50:49.887" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:50:49.887" endtime="20240424 19:50:49.887"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:50:49.887" endtime="20240424 19:50:50.288"/>
</kw>
<status status="PASS" starttime="20240424 19:50:49.887" endtime="20240424 19:50:50.288"/>
</kw>
<status status="PASS" starttime="20240424 19:50:49.887" endtime="20240424 19:50:50.288"/>
</branch>
<status status="PASS" starttime="20240424 19:50:49.887" endtime="20240424 19:50:50.288"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:50:50.288" endtime="20240424 19:50:50.288"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:50:50.288" endtime="20240424 19:50:50.288"/>
</branch>
<status status="PASS" starttime="20240424 19:50:50.288" endtime="20240424 19:50:50.288"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:50:50.288" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\models</msg>
<msg timestamp="20240424 19:50:50.288" level="INFO">${filename} = Solibri Building.smc</msg>
<status status="PASS" starttime="20240424 19:50:50.288" endtime="20240424 19:50:50.288"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:50:50.288" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 19:50:50.288" level="INFO">${ext} = smc</msg>
<status status="PASS" starttime="20240424 19:50:50.288" endtime="20240424 19:50:50.288"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:50.288" endtime="20240424 19:50:50.295"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:50.295" endtime="20240424 19:50:50.295"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:50.300" endtime="20240424 19:50:50.557"/>
</kw>
<status status="PASS" starttime="20240424 19:50:50.288" endtime="20240424 19:50:50.557"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<msg timestamp="20240424 19:50:52.251" level="INFO">Deleted 14 Visualizations</msg>
<status status="PASS" starttime="20240424 19:50:50.557" endtime="20240424 19:50:52.282"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${COMPONENT_HIERARCHY_PANEL}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:50:52.282" endtime="20240424 19:50:52.309"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>ContainmentTree</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:50:52.365" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:50:52.309" endtime="20240424 19:50:52.365"/>
</kw>
<if>
<branch type="IF" condition="${row_count} &gt; ${0}">
<kw name="Evaluate" library="BuiltIn">
<var>${row_count}</var>
<arg>${row_count}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:50:52.365" level="INFO">${row_count} = 0</msg>
<status status="PASS" starttime="20240424 19:50:52.365" endtime="20240424 19:50:52.365"/>
</kw>
<status status="PASS" starttime="20240424 19:50:52.365" endtime="20240424 19:50:52.365"/>
</branch>
<status status="PASS" starttime="20240424 19:50:52.365" endtime="20240424 19:50:52.365"/>
</if>
<status status="PASS" starttime="20240424 19:50:50.288" endtime="20240424 19:50:52.365"/>
</kw>
<status status="PASS" starttime="20240424 19:50:50.288" endtime="20240424 19:50:52.365"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<status status="NOT RUN" starttime="20240424 19:50:52.365" endtime="20240424 19:50:52.365"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:50:52.365" endtime="20240424 19:50:52.365"/>
</branch>
<status status="PASS" starttime="20240424 19:50:50.288" endtime="20240424 19:50:52.365"/>
</if>
<status status="PASS" starttime="20240424 19:50:48.425" endtime="20240424 19:50:52.365"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${modelname}</var>
<arg>(ARC) Solibri Building</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240424 19:50:52.371" level="INFO">${modelname} = (ARC) Solibri Building</msg>
<status status="PASS" starttime="20240424 19:50:52.371" endtime="20240424 19:50:52.371"/>
</kw>
<status status="PASS" starttime="20240424 19:50:48.425" endtime="20240424 19:50:52.371"/>
</branch>
<status status="PASS" starttime="20240424 19:50:48.425" endtime="20240424 19:50:52.371"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${modelname}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240424 19:50:52.371" level="INFO">${modelname} = (ARC) Solibri Building</msg>
<status status="PASS" starttime="20240424 19:50:52.371" endtime="20240424 19:50:52.371"/>
</kw>
<status status="PASS" starttime="20240424 19:50:48.425" endtime="20240424 19:50:52.371"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:52.371" endtime="20240424 19:50:52.382"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:52.382" endtime="20240424 19:50:52.384"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:52.384" endtime="20240424 19:50:52.389"/>
</kw>
<status status="PASS" starttime="20240424 19:50:52.371" endtime="20240424 19:50:52.389"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Component Should Be Visible</arg>
<arg>Checking_View</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Component Should Be Visible" library="SwingRobot">
<arg>Checking_View</arg>
<doc>Checks that component is visible.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 19:50:52.389" endtime="20240424 19:50:52.583"/>
</kw>
<status status="PASS" starttime="20240424 19:50:52.389" endtime="20240424 19:50:52.583"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<msg timestamp="20240424 19:50:52.695" level="INFO">Closed dialog 'To-Do'.</msg>
<status status="PASS" starttime="20240424 19:50:52.583" endtime="20240424 19:50:52.695"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>4</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:50:52.695" endtime="20240424 19:50:52.770"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>5</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:50:52.770" endtime="20240424 19:50:53.258"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>2</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:50:53.258" endtime="20240424 19:50:53.508"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>2</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:50:53.508" endtime="20240424 19:50:53.607"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>2</arg>
<arg>2</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:50:53.607" endtime="20240424 19:50:53.719"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>2</arg>
<arg>2</arg>
<arg>2</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:50:53.719" endtime="20240424 19:50:53.864"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>ISSUE DETAILS</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:53.864" endtime="20240424 19:50:54.182"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${description_0_checked}</var>
<arg>1</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:50:54.262" level="INFO">${description_0_checked} = </msg>
<status status="PASS" starttime="20240424 19:50:54.182" endtime="20240424 19:50:54.262"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${description_0_checked}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20240424 19:50:54.262" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20240424 19:50:54.262" endtime="20240424 19:50:54.262"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:54.262" endtime="20240424 19:50:54.265"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:54.265" endtime="20240424 19:50:54.281"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:54.281" endtime="20240424 19:50:54.286"/>
</kw>
<status status="PASS" starttime="20240424 19:50:54.262" endtime="20240424 19:50:54.286"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:54.286" endtime="20240424 19:50:54.291"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Checking...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:54.291" endtime="20240424 19:50:54.292"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Checking</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:54.292" endtime="20240424 19:50:54.525"/>
</kw>
<kw name="Check Check Box" library="SwingRobot">
<arg>0</arg>
<doc>Uses current context to search for a checkbox and when found, checks it.</doc>
<status status="PASS" starttime="20240424 19:50:54.525" endtime="20240424 19:50:54.528"/>
</kw>
<kw name="Check Check Box" library="SwingRobot">
<arg>4</arg>
<doc>Uses current context to search for a checkbox and when found, checks it.</doc>
<status status="PASS" starttime="20240424 19:50:54.528" endtime="20240424 19:50:54.546"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:54.546" endtime="20240424 19:50:54.558"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:54.558" endtime="20240424 19:50:54.558"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:54.558" endtime="20240424 19:50:54.558"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:54.558" endtime="20240424 19:50:54.558"/>
</kw>
<status status="PASS" starttime="20240424 19:50:54.558" endtime="20240424 19:50:54.558"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>ISSUE DETAILS</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:54.558" endtime="20240424 19:50:54.784"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>1</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:54.784" endtime="20240424 19:50:54.784"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${description_rule_name_checked}</var>
<arg>1</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:50:54.801" level="INFO">${description_rule_name_checked} = Required Components
(ARC) Solibri Building doesn't  contain any Beam components
</msg>
<status status="PASS" starttime="20240424 19:50:54.784" endtime="20240424 19:50:54.801"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${description_rule_name_checked}</arg>
<arg>Required Components</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:50:54.801" endtime="20240424 19:50:54.801"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${description_issue_description_checked}</var>
<arg>1</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:50:54.805" level="INFO">${description_issue_description_checked} = Required Components
(ARC) Solibri Building doesn't  contain any Beam components
</msg>
<status status="PASS" starttime="20240424 19:50:54.801" endtime="20240424 19:50:54.805"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${description_issue_description_checked}</arg>
<arg>(ARC) Solibri Building doesn't</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:50:54.805" endtime="20240424 19:50:54.805"/>
</kw>
<status status="PASS" starttime="20240424 19:50:48.385" endtime="20240424 19:50:54.805"/>
</kw>
<kw name="Then Verify Rule Description, Categories, Issue Name" library="settings_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:54.805" endtime="20240424 19:50:54.816"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:54.816" endtime="20240424 19:50:54.827"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:54.827" endtime="20240424 19:50:54.830"/>
</kw>
<status status="PASS" starttime="20240424 19:50:54.805" endtime="20240424 19:50:54.830"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:54.830" endtime="20240424 19:50:54.847"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Checking...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:54.847" endtime="20240424 19:50:54.847"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Checking</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:54.847" endtime="20240424 19:50:55.067"/>
</kw>
<kw name="Check All Checkboxes" library="SwingRobot">
<doc>Checks all checkboxes in current context.</doc>
<status status="PASS" starttime="20240424 19:50:55.067" endtime="20240424 19:50:55.187"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:55.187" endtime="20240424 19:50:55.317"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:55.317" endtime="20240424 19:50:55.322"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:50:55.322" endtime="20240424 19:50:55.323"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:50:55.323" endtime="20240424 19:50:55.363"/>
</kw>
<status status="PASS" starttime="20240424 19:50:55.317" endtime="20240424 19:50:55.363"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>ISSUE DETAILS</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:50:55.363" endtime="20240424 19:50:55.651"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>1</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:50:55.651" endtime="20240424 19:50:55.661"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${description_rule_description_checked}</var>
<arg>1</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:50:55.665" level="INFO">${description_rule_description_checked} = Required Components
This rule checks that the model contains components of a selected types and they all have a construction type defined.
No Components
No Beam Components in (ARC) Solibri Building
(A...</msg>
<status status="PASS" starttime="20240424 19:50:55.661" endtime="20240424 19:50:55.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${description_rule_description_checked}</arg>
<arg>This rule checks that the model contains components of a selected types and they all have a construction type defined.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:50:55.665" endtime="20240424 19:50:55.665"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${description_categories_checked}</var>
<arg>1</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:50:55.669" level="INFO">${description_categories_checked} = Required Components
This rule checks that the model contains components of a selected types and they all have a construction type defined.
No Components
No Beam Components in (ARC) Solibri Building
(A...</msg>
<status status="PASS" starttime="20240424 19:50:55.665" endtime="20240424 19:50:55.669"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${description_categories_checked}</arg>
<arg>No Components</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:50:55.669" endtime="20240424 19:50:55.669"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${description_issue_name_checked}</var>
<arg>1</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:50:55.673" level="INFO">${description_issue_name_checked} = Required Components
This rule checks that the model contains components of a selected types and they all have a construction type defined.
No Components
No Beam Components in (ARC) Solibri Building
(A...</msg>
<status status="PASS" starttime="20240424 19:50:55.669" endtime="20240424 19:50:55.673"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${description_issue_name_checked}</arg>
<arg>No Beam Components in (ARC) Solibri Building</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:50:55.673" endtime="20240424 19:50:55.673"/>
</kw>
<status status="PASS" starttime="20240424 19:50:54.805" endtime="20240424 19:50:55.673"/>
</kw>
<kw name="And Restart Solibri Again" library="settings_step_definitions">
<kw name="Restart Solibri" library="CommonUtils">
<arg>${SOLIBRI_HOME}</arg>
<doc>Restarts Solibri</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>message=Solibri directory is ${SOLIBRI_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:50:55.673" endtime="20240424 19:50:55.673"/>
</kw>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:50:55.673" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 19:50:55.673" endtime="20240424 19:50:55.673"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>condition=${is_running}</arg>
<arg>msg=Solibri is not running</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240424 19:50:55.673" endtime="20240424 19:50:55.673"/>
</kw>
<kw name="Close Solibri" library="SolibriLibrary">
<msg timestamp="20240424 19:50:55.673" level="INFO">The SMC application is still alive and need to be killed! 

The SMC application had to be killed from CMD!</msg>
<status status="PASS" starttime="20240424 19:50:55.673" endtime="20240424 19:50:55.673"/>
</kw>
<kw name="Wait For Process To Close" library="CommonUtils">
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<arg>time_out=${timeout_for_loops}</arg>
<doc>Waits for process to close</doc>
<kw name="Get Time" library="BuiltIn">
<var>${start_time}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 19:50:55.673" level="INFO">${start_time} = 2024-04-24 19:50:55</msg>
<status status="PASS" starttime="20240424 19:50:55.673" endtime="20240424 19:50:55.673"/>
</kw>
<while condition="${True}">
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:50:55.688" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 19:50:55.673" endtime="20240424 19:50:55.688"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240424 19:50:56.689" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240424 19:50:55.688" endtime="20240424 19:50:56.689"/>
</kw>
<status status="PASS" starttime="20240424 19:50:55.688" endtime="20240424 19:50:56.689"/>
</branch>
<status status="PASS" starttime="20240424 19:50:55.688" endtime="20240424 19:50:56.689"/>
</if>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Exit For Loop</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 19:50:56.689" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<status status="PASS" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.689"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 19:50:56.689" level="INFO">${now} = 2024-04-24 19:50:56</msg>
<status status="PASS" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.689"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20240424 19:50:56.689" level="INFO">${elapsed_time} = 1.0</msg>
<status status="PASS" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.689"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not close in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.689"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.689"/>
</break>
<status status="NOT RUN" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.689"/>
</branch>
<status status="PASS" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.689"/>
</if>
<status status="PASS" starttime="20240424 19:50:55.673" endtime="20240424 19:50:56.689"/>
</iter>
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:50:56.689" level="INFO">${is_running} = None</msg>
<status status="PASS" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.689"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.689"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.689"/>
</branch>
<status status="PASS" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.689"/>
</if>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Exit For Loop</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 19:50:56.689" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing FOR loop.</doc>
<msg timestamp="20240424 19:50:56.689" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.689"/>
</kw>
<status status="PASS" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.689"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<status status="NOT RUN" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.689"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<status status="NOT RUN" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.689"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not close in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.689"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.689"/>
</break>
<status status="NOT RUN" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.689"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.689"/>
</if>
<status status="PASS" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.689"/>
</iter>
<status status="PASS" starttime="20240424 19:50:55.673" endtime="20240424 19:50:56.689"/>
</while>
<status status="PASS" starttime="20240424 19:50:55.673" endtime="20240424 19:50:56.689"/>
</kw>
<kw name="Open Solibri" library="SolibriLibrary">
<arg>${SOLIBRI_DIR}</arg>
<msg timestamp="20240424 19:50:56.689" level="INFO">Solibri Installation folder: D:\a\desktop-main\desktop-main\temp\installers\temporary-installation-folder\
Solibri Executable: D:\a\desktop-main\desktop-main\temp\installers\temporary-installation-folder\temporary-installation-folder\Solibri.exe</msg>
<status status="PASS" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.689"/>
</kw>
<kw name="Wait For Process To Open" library="CommonUtils">
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<arg>time_out=${timeout_for_loops}</arg>
<doc>Waits for process to open</doc>
<kw name="Get Time" library="BuiltIn">
<var>${start_time}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 19:50:56.689" level="INFO">${start_time} = 2024-04-24 19:50:56</msg>
<status status="PASS" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.689"/>
</kw>
<while condition="${True}">
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:50:56.704" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.704"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Sleep</arg>
<arg>1</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 19:50:56.704" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<status status="PASS" starttime="20240424 19:50:56.704" endtime="20240424 19:50:56.704"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<break>
<status status="PASS" starttime="20240424 19:50:56.704" endtime="20240424 19:50:56.704"/>
</break>
<status status="PASS" starttime="20240424 19:50:56.704" endtime="20240424 19:50:56.704"/>
</branch>
<status status="PASS" starttime="20240424 19:50:56.704" endtime="20240424 19:50:56.704"/>
</if>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<status status="NOT RUN" starttime="20240424 19:50:56.704" endtime="20240424 19:50:56.704"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<status status="NOT RUN" starttime="20240424 19:50:56.704" endtime="20240424 19:50:56.704"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not open in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 19:50:56.704" endtime="20240424 19:50:56.704"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 19:50:56.704" endtime="20240424 19:50:56.704"/>
</break>
<status status="NOT RUN" starttime="20240424 19:50:56.704" endtime="20240424 19:50:56.704"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:50:56.704" endtime="20240424 19:50:56.704"/>
</if>
<status status="PASS" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.704"/>
</iter>
<status status="PASS" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.704"/>
</while>
<status status="PASS" starttime="20240424 19:50:56.689" endtime="20240424 19:50:56.704"/>
</kw>
<kw name="Wait For Solibri Window to Appear" library="CommonUtils">
<arg>Solibri Office</arg>
<doc>Wait until Solibri is started</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>18</arg>
<arg>18</arg>
<arg>Window Should Be Open</arg>
<arg>${solibri_office}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>18</arg>
<arg>18</arg>
<arg>Window Should Be Open</arg>
<arg>${solibri_office}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Window Should Be Open" library="SwingRobot">
<arg>${solibri_office}</arg>
<doc>Fails if the window is not open.</doc>
<msg timestamp="20240424 19:50:59.143" level="FAIL">Connection to remote server broken: [WinError 10061] No connection could be made because the target machine actively refused it</msg>
<status status="FAIL" starttime="20240424 19:50:56.704" endtime="20240424 19:50:59.143"/>
</kw>
<kw name="Window Should Be Open" library="SwingRobot">
<arg>${solibri_office}</arg>
<doc>Fails if the window is not open.</doc>
<status status="PASS" starttime="20240424 19:51:17.146" endtime="20240424 19:51:17.452"/>
</kw>
<status status="PASS" starttime="20240424 19:50:56.704" endtime="20240424 19:51:17.452"/>
</kw>
<msg timestamp="20240424 19:51:17.452" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:50:56.704" endtime="20240424 19:51:17.452"/>
</kw>
<status status="PASS" starttime="20240424 19:50:56.704" endtime="20240424 19:51:17.452"/>
</kw>
<status status="PASS" starttime="20240424 19:50:55.673" endtime="20240424 19:51:17.452"/>
</kw>
<status status="PASS" starttime="20240424 19:50:55.673" endtime="20240424 19:51:17.452"/>
</kw>
<kw name="Then Verify If Settings Persisted" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:17.452" endtime="20240424 19:51:17.605"/>
</kw>
<kw name="Switch to the Settings View" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:17.605" endtime="20240424 19:51:17.644"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:17.644" endtime="20240424 19:51:17.678"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:51:17.678" endtime="20240424 19:51:17.686"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:17.686" endtime="20240424 19:51:17.730"/>
</kw>
<status status="PASS" starttime="20240424 19:51:17.644" endtime="20240424 19:51:17.730"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:51:17.730" endtime="20240424 19:51:18.306"/>
</kw>
<status status="PASS" starttime="20240424 19:51:17.605" endtime="20240424 19:51:18.306"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Checking...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:51:18.306" endtime="20240424 19:51:18.313"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Checking</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:51:18.313" endtime="20240424 19:51:18.555"/>
</kw>
<kw name="All Checkboxes Should Be Checked" library="SwingRobot">
<doc>Fails if any checkbox in current context is not checked.</doc>
<status status="PASS" starttime="20240424 19:51:18.555" endtime="20240424 19:51:18.589"/>
</kw>
<status status="PASS" starttime="20240424 19:51:17.452" endtime="20240424 19:51:18.589"/>
</kw>
<kw name="And Restore Default Settings on Checking" library="settings_step_definitions">
<kw name="Restore Default Settings" library="settings_step_definitions">
<arg>Checking</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>${settings_dialog}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:51:18.589" endtime="20240424 19:51:18.623"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Restore Default Settings</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:51:18.623" endtime="20240424 19:51:18.750"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Restore Default Settings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:51:18.750" endtime="20240424 19:51:18.769"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Yes</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:51:18.769" endtime="20240424 19:51:18.812"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${settings_dialog}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:51:18.812" endtime="20240424 19:51:18.837"/>
</kw>
<status status="PASS" starttime="20240424 19:51:18.589" endtime="20240424 19:51:18.837"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:51:18.837" endtime="20240424 19:51:18.863"/>
</kw>
<status status="PASS" starttime="20240424 19:51:18.589" endtime="20240424 19:51:18.863"/>
</kw>
<kw name="Then Verify the Checking Default Settings" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:18.863" endtime="20240424 19:51:18.870"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Checking...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:51:18.870" endtime="20240424 19:51:18.877"/>
</kw>
<kw name="Restore Default Settings" library="settings_step_definitions">
<arg>Checking</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>${settings_dialog}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:51:18.877" endtime="20240424 19:51:18.989"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Restore Default Settings</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:51:18.989" endtime="20240424 19:51:19.110"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Restore Default Settings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:51:19.110" endtime="20240424 19:51:19.113"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Yes</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:51:19.113" endtime="20240424 19:51:19.214"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${settings_dialog}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:51:19.214" endtime="20240424 19:51:19.247"/>
</kw>
<status status="PASS" starttime="20240424 19:51:18.877" endtime="20240424 19:51:19.247"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:51:19.247" endtime="20240424 19:51:19.255"/>
</kw>
<kw name="Check Box Should Be Unchecked" library="SwingRobot">
<arg>1</arg>
<doc>Fails if checkbox is checked.</doc>
<status status="PASS" starttime="20240424 19:51:19.255" endtime="20240424 19:51:19.260"/>
</kw>
<kw name="Check Box Should Be Unchecked" library="SwingRobot">
<arg>2</arg>
<doc>Fails if checkbox is checked.</doc>
<status status="PASS" starttime="20240424 19:51:19.260" endtime="20240424 19:51:19.265"/>
</kw>
<kw name="Check Box Should Be Unchecked" library="SwingRobot">
<arg>3</arg>
<doc>Fails if checkbox is checked.</doc>
<status status="PASS" starttime="20240424 19:51:19.265" endtime="20240424 19:51:19.311"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>4</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:51:19.311" endtime="20240424 19:51:19.326"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>5</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:51:19.326" endtime="20240424 19:51:19.351"/>
</kw>
<status status="PASS" starttime="20240424 19:51:18.863" endtime="20240424 19:51:19.351"/>
</kw>
<kw name="Then Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<msg timestamp="20240424 19:51:19.507" level="INFO">Closed dialog 'Checking'.</msg>
<status status="PASS" starttime="20240424 19:51:19.351" endtime="20240424 19:51:19.507"/>
</kw>
<status status="PASS" starttime="20240424 19:50:47.352" endtime="20240424 19:51:19.507"/>
</test>
<test id="s1-s4-t6" name="Verify Info" line="64">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:19.507" endtime="20240424 19:51:19.507"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:51:19.507" endtime="20240424 19:51:19.616"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:19.616" endtime="20240424 19:51:19.623"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:51:19.623" endtime="20240424 19:51:19.623"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:19.623" endtime="20240424 19:51:19.661"/>
</kw>
<status status="PASS" starttime="20240424 19:51:19.616" endtime="20240424 19:51:19.661"/>
</kw>
<status status="PASS" starttime="20240424 19:51:19.507" endtime="20240424 19:51:19.661"/>
</kw>
<status status="PASS" starttime="20240424 19:51:19.507" endtime="20240424 19:51:19.661"/>
</kw>
<kw name="Given Solibri is running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:51:19.870" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:51:19.871" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:51:19 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:51:19.661" endtime="20240424 19:51:19.871"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:51:19.871" endtime="20240424 19:51:19.871"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:19.872" endtime="20240424 19:51:19.906"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:51:19.910" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:51:19.906" endtime="20240424 19:51:19.910"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:51:19.910" endtime="20240424 19:51:19.910"/>
</kw>
<status status="PASS" starttime="20240424 19:51:19.906" endtime="20240424 19:51:19.910"/>
</kw>
<status status="PASS" starttime="20240424 19:51:19.661" endtime="20240424 19:51:19.910"/>
</kw>
<kw name="And Switch to the Settings View" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:19.910" endtime="20240424 19:51:19.921"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:19.921" endtime="20240424 19:51:19.931"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:51:19.931" endtime="20240424 19:51:19.934"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:19.934" endtime="20240424 19:51:19.970"/>
</kw>
<status status="PASS" starttime="20240424 19:51:19.921" endtime="20240424 19:51:19.970"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:51:19.970" endtime="20240424 19:51:20.422"/>
</kw>
<status status="PASS" starttime="20240424 19:51:19.910" endtime="20240424 19:51:20.422"/>
</kw>
<kw name="Then Verify Default Info" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:20.422" endtime="20240424 19:51:20.445"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Info...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:51:20.445" endtime="20240424 19:51:20.448"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Info</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:51:20.448" endtime="20240424 19:51:20.621"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:51:20.621" endtime="20240424 19:51:20.660"/>
</kw>
<kw name="Check Box Should Be Unchecked" library="SwingRobot">
<arg>1</arg>
<doc>Fails if checkbox is checked.</doc>
<status status="PASS" starttime="20240424 19:51:20.660" endtime="20240424 19:51:20.668"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:51:20.668" endtime="20240424 19:51:20.767"/>
</kw>
<status status="PASS" starttime="20240424 19:51:20.422" endtime="20240424 19:51:20.767"/>
</kw>
<status status="PASS" starttime="20240424 19:51:19.507" endtime="20240424 19:51:20.767"/>
</test>
<test id="s1-s4-t7" name="Verify IFC Import Settings" line="70">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:20.767" endtime="20240424 19:51:20.774"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:51:20.774" endtime="20240424 19:51:20.885"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:20.885" endtime="20240424 19:51:20.923"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:51:20.923" endtime="20240424 19:51:20.929"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:20.929" endtime="20240424 19:51:20.969"/>
</kw>
<status status="PASS" starttime="20240424 19:51:20.885" endtime="20240424 19:51:20.969"/>
</kw>
<status status="PASS" starttime="20240424 19:51:20.767" endtime="20240424 19:51:20.969"/>
</kw>
<status status="PASS" starttime="20240424 19:51:20.767" endtime="20240424 19:51:20.969"/>
</kw>
<kw name="Given Solibri is running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:51:20.978" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:51:20.978" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:51:20 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:51:20.969" endtime="20240424 19:51:20.978"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:51:20.978" endtime="20240424 19:51:20.978"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:20.978" endtime="20240424 19:51:20.996"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:51:20.996" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:51:20.996" endtime="20240424 19:51:20.996"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:51:20.996" endtime="20240424 19:51:20.996"/>
</kw>
<status status="PASS" starttime="20240424 19:51:20.996" endtime="20240424 19:51:20.996"/>
</kw>
<status status="PASS" starttime="20240424 19:51:20.969" endtime="20240424 19:51:20.996"/>
</kw>
<kw name="And Switch to the Settings View" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:20.996" endtime="20240424 19:51:21.011"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:21.011" endtime="20240424 19:51:21.084"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:51:21.084" endtime="20240424 19:51:21.084"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:21.084" endtime="20240424 19:51:21.127"/>
</kw>
<status status="PASS" starttime="20240424 19:51:21.011" endtime="20240424 19:51:21.127"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:51:21.127" endtime="20240424 19:51:21.489"/>
</kw>
<status status="PASS" starttime="20240424 19:51:20.996" endtime="20240424 19:51:21.489"/>
</kw>
<kw name="Then Verify Default IFC Import Settings" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:21.489" endtime="20240424 19:51:21.493"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>IFC Import Settings...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:51:21.493" endtime="20240424 19:51:21.507"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>IFC Import Settings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:51:21.507" endtime="20240424 19:51:21.850"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:51:21.850" endtime="20240424 19:51:21.877"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Insert Row</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:51:21.877" endtime="20240424 19:51:21.890"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Delete Row</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:51:21.890" endtime="20240424 19:51:21.896"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>0</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:51:21.896" endtime="20240424 19:51:21.899"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${character_set}</var>
<arg>0</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 19:51:21.931" level="INFO">${character_set} = windows-1252</msg>
<status status="PASS" starttime="20240424 19:51:21.899" endtime="20240424 19:51:21.931"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${character_set}</arg>
<arg>windows-1252</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:51:21.931" endtime="20240424 19:51:21.931"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${ignored_property_set}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:51:22.021" level="INFO">${ignored_property_set} = PSet_Draughting</msg>
<status status="PASS" starttime="20240424 19:51:21.931" endtime="20240424 19:51:22.021"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ignored_property_set}</arg>
<arg>PSet_Draughting</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:51:22.021" endtime="20240424 19:51:22.021"/>
</kw>
<kw name="Uncheck Check Box" library="SwingRobot">
<arg>0</arg>
<doc>Uses current context to search for a checkbox and when found, unchecks it.</doc>
<status status="PASS" starttime="20240424 19:51:22.021" endtime="20240424 19:51:22.097"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Insert Row</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:51:22.097" endtime="20240424 19:51:22.107"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Delete Row</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:51:22.107" endtime="20240424 19:51:22.169"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>0</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:51:22.169" endtime="20240424 19:51:22.174"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${character_set}</var>
<arg>0</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 19:51:22.537" level="INFO">${character_set} = (Default) windows-1252 (Europa)</msg>
<status status="PASS" starttime="20240424 19:51:22.174" endtime="20240424 19:51:22.537"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${character_set}</arg>
<arg>(Default) windows-1252 (Europa)</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:51:22.537" endtime="20240424 19:51:22.537"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Insert Row</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:51:22.537" endtime="20240424 19:51:22.537"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Delete Row</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:51:22.537" endtime="20240424 19:51:22.552"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:51:22.552" endtime="20240424 19:51:22.577"/>
</kw>
<status status="PASS" starttime="20240424 19:51:21.489" endtime="20240424 19:51:22.577"/>
</kw>
<status status="PASS" starttime="20240424 19:51:20.767" endtime="20240424 19:51:22.577"/>
</test>
<test id="s1-s4-t8" name="Verify Presentation Settings" line="76">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:22.577" endtime="20240424 19:51:22.577"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:51:22.577" endtime="20240424 19:51:22.693"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:22.693" endtime="20240424 19:51:22.693"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:51:22.693" endtime="20240424 19:51:22.704"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:22.704" endtime="20240424 19:51:22.705"/>
</kw>
<status status="PASS" starttime="20240424 19:51:22.693" endtime="20240424 19:51:22.705"/>
</kw>
<status status="PASS" starttime="20240424 19:51:22.577" endtime="20240424 19:51:22.705"/>
</kw>
<status status="PASS" starttime="20240424 19:51:22.577" endtime="20240424 19:51:22.705"/>
</kw>
<kw name="Given Solibri is running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:51:22.714" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:51:22.714" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:51:22 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:51:22.709" endtime="20240424 19:51:22.714"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:51:22.715" endtime="20240424 19:51:22.715"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:22.715" endtime="20240424 19:51:22.782"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:51:22.782" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:51:22.782" endtime="20240424 19:51:22.782"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:51:22.782" endtime="20240424 19:51:22.782"/>
</kw>
<status status="PASS" starttime="20240424 19:51:22.782" endtime="20240424 19:51:22.782"/>
</kw>
<status status="PASS" starttime="20240424 19:51:22.705" endtime="20240424 19:51:22.782"/>
</kw>
<kw name="And No Existing Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:22.782" endtime="20240424 19:51:22.782"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:51:22.782" endtime="20240424 19:51:22.795"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:22.795" endtime="20240424 19:51:22.795"/>
</kw>
<status status="PASS" starttime="20240424 19:51:22.782" endtime="20240424 19:51:22.795"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:51:22.795" endtime="20240424 19:51:22.881"/>
</kw>
<status status="PASS" starttime="20240424 19:51:22.795" endtime="20240424 19:51:22.881"/>
</kw>
<msg timestamp="20240424 19:51:22.881" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 19:51:22.795" endtime="20240424 19:51:22.881"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:51:22.881" endtime="20240424 19:51:22.881"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:51:22.881" endtime="20240424 19:51:22.881"/>
</branch>
<status status="PASS" starttime="20240424 19:51:22.881" endtime="20240424 19:51:22.881"/>
</if>
<status status="PASS" starttime="20240424 19:51:22.782" endtime="20240424 19:51:22.881"/>
</kw>
<kw name="And Switch to the Settings View" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:22.881" endtime="20240424 19:51:22.884"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:22.884" endtime="20240424 19:51:22.884"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:51:22.884" endtime="20240424 19:51:22.894"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:22.894" endtime="20240424 19:51:22.963"/>
</kw>
<status status="PASS" starttime="20240424 19:51:22.884" endtime="20240424 19:51:22.963"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:51:22.963" endtime="20240424 19:51:23.346"/>
</kw>
<status status="PASS" starttime="20240424 19:51:22.881" endtime="20240424 19:51:23.346"/>
</kw>
<kw name="Then Verify the Presentation Default Settings" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:23.346" endtime="20240424 19:51:23.376"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Presentation...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:51:23.376" endtime="20240424 19:51:23.378"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Presentation</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:51:23.378" endtime="20240424 19:51:23.523"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Presentation</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:51:23.523" endtime="20240424 19:51:23.600"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:51:23.600" endtime="20240424 19:51:23.605"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>1</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:51:23.605" endtime="20240424 19:51:23.608"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${Slide_thumbnail_size}</var>
<arg>0</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 19:51:23.939" level="INFO">${Slide_thumbnail_size} = M</msg>
<status status="PASS" starttime="20240424 19:51:23.608" endtime="20240424 19:51:23.939"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Slide_thumbnail_size}</arg>
<arg>M</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:51:23.939" endtime="20240424 19:51:23.939"/>
</kw>
<kw name="Check Box Should Be Unchecked" library="SwingRobot">
<arg>2</arg>
<doc>Fails if checkbox is checked.</doc>
<status status="PASS" starttime="20240424 19:51:23.939" endtime="20240424 19:51:23.939"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Report</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:51:23.939" endtime="20240424 19:51:23.982"/>
</kw>
<kw name="All Checkboxes Should Be Checked" library="SwingRobot">
<doc>Fails if any checkbox in current context is not checked.</doc>
<status status="PASS" starttime="20240424 19:51:23.982" endtime="20240424 19:51:24.000"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Component</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:51:24.000" endtime="20240424 19:51:24.129"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count_component}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:51:24.167" level="INFO">${row_count_component} = 0</msg>
<status status="PASS" starttime="20240424 19:51:24.129" endtime="20240424 19:51:24.167"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${row_count_component}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:51:24.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:51:24.167" endtime="20240424 19:51:24.167"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:51:24.167" endtime="20240424 19:51:24.223"/>
</kw>
<status status="PASS" starttime="20240424 19:51:23.346" endtime="20240424 19:51:24.223"/>
</kw>
<kw name="Then Verify Show User Name in Presentations, Show Date in Presentations and Component" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:24.223" endtime="20240424 19:51:24.254"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Presentation...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:51:24.254" endtime="20240424 19:51:24.254"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Presentation</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:51:24.254" endtime="20240424 19:51:24.435"/>
</kw>
<kw name="Uncheck Check Box" library="SwingRobot">
<arg>0</arg>
<doc>Uses current context to search for a checkbox and when found, unchecks it.</doc>
<status status="PASS" starttime="20240424 19:51:24.435" endtime="20240424 19:51:24.451"/>
</kw>
<kw name="Uncheck Check Box" library="SwingRobot">
<arg>1</arg>
<doc>Uses current context to search for a checkbox and when found, unchecks it.</doc>
<status status="PASS" starttime="20240424 19:51:24.451" endtime="20240424 19:51:24.536"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Component</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:51:24.538" endtime="20240424 19:51:24.560"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Add Row</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:51:24.560" endtime="20240424 19:51:24.562"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Add Row</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:51:24.562" endtime="20240424 19:51:24.573"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:51:24.573" endtime="20240424 19:51:24.711"/>
</kw>
<kw name="Select From Combo Box" library="SwingRobot">
<arg>0</arg>
<arg>Building</arg>
<arg>don't verify</arg>
<doc>Selects an item from a combobox.
The item selection is verified by default and can be disabled using the optional ``verifySelection`` parameter with any value.</doc>
<status status="PASS" starttime="20240424 19:51:24.711" endtime="20240424 19:51:25.138"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:51:25.138" endtime="20240424 19:51:25.223"/>
</kw>
<kw name="Select From Combo Box" library="SwingRobot">
<arg>0</arg>
<arg>Building</arg>
<arg>don't verify</arg>
<doc>Selects an item from a combobox.
The item selection is verified by default and can be disabled using the optional ``verifySelection`` parameter with any value.</doc>
<status status="PASS" starttime="20240424 19:51:25.223" endtime="20240424 19:51:25.723"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:51:25.723" endtime="20240424 19:51:25.742"/>
</kw>
<kw name="Insert Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>12</arg>
<doc>Inserts text into a text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:51:25.742" endtime="20240424 19:51:25.795"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>1</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:51:25.795" endtime="20240424 19:51:25.872"/>
</kw>
<kw name="Insert Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>34</arg>
<doc>Inserts text into a text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:51:25.872" endtime="20240424 19:51:25.883"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:51:25.883" endtime="20240424 19:51:25.904"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:51:25.904" endtime="20240424 19:51:25.967"/>
</kw>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${solibri_building_smc}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:25.967" endtime="20240424 19:51:26.019"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:51:26.022" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:51:26.019" endtime="20240424 19:51:26.022"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:51:26.022" endtime="20240424 19:51:26.022"/>
</kw>
<status status="PASS" starttime="20240424 19:51:26.019" endtime="20240424 19:51:26.022"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:26.022" endtime="20240424 19:51:26.028"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:51:26.028" endtime="20240424 19:51:26.031"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:26.031" endtime="20240424 19:51:26.040"/>
</kw>
<status status="PASS" starttime="20240424 19:51:26.022" endtime="20240424 19:51:26.040"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:51:26.041" endtime="20240424 19:51:26.110"/>
</kw>
<status status="PASS" starttime="20240424 19:51:26.040" endtime="20240424 19:51:26.110"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:51:26.110" endtime="20240424 19:51:26.110"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:51:26.110" endtime="20240424 19:51:26.118"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:51:26.118" endtime="20240424 19:51:27.751"/>
</kw>
<status status="PASS" starttime="20240424 19:51:26.118" endtime="20240424 19:51:27.751"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:51:27.751" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:51:27.751" endtime="20240424 19:51:27.751"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:51:27.751" endtime="20240424 19:51:27.751"/>
</return>
<msg timestamp="20240424 19:51:27.751" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:51:27.751" endtime="20240424 19:51:27.751"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:51:27.751" endtime="20240424 19:51:28.263"/>
</kw>
<status status="PASS" starttime="20240424 19:51:27.751" endtime="20240424 19:51:28.263"/>
</kw>
<status status="PASS" starttime="20240424 19:51:27.751" endtime="20240424 19:51:28.263"/>
</branch>
<status status="PASS" starttime="20240424 19:51:27.751" endtime="20240424 19:51:28.263"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:51:28.263" endtime="20240424 19:51:28.263"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:51:28.263" endtime="20240424 19:51:28.263"/>
</branch>
<status status="PASS" starttime="20240424 19:51:28.263" endtime="20240424 19:51:28.263"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:51:28.263" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\models</msg>
<msg timestamp="20240424 19:51:28.263" level="INFO">${filename} = Solibri Building.smc</msg>
<status status="PASS" starttime="20240424 19:51:28.263" endtime="20240424 19:51:28.263"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:51:28.263" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 19:51:28.263" level="INFO">${ext} = smc</msg>
<status status="PASS" starttime="20240424 19:51:28.263" endtime="20240424 19:51:28.263"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:28.263" endtime="20240424 19:51:28.294"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:51:28.294" endtime="20240424 19:51:28.310"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:28.310" endtime="20240424 19:51:28.953"/>
</kw>
<status status="PASS" starttime="20240424 19:51:28.263" endtime="20240424 19:51:28.953"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<msg timestamp="20240424 19:51:32.022" level="INFO">Deleted 14 Visualizations</msg>
<status status="PASS" starttime="20240424 19:51:28.953" endtime="20240424 19:51:32.022"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${COMPONENT_HIERARCHY_PANEL}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:51:32.022" endtime="20240424 19:51:32.040"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>ContainmentTree</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:51:32.046" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:51:32.040" endtime="20240424 19:51:32.046"/>
</kw>
<if>
<branch type="IF" condition="${row_count} &gt; ${0}">
<kw name="Evaluate" library="BuiltIn">
<var>${row_count}</var>
<arg>${row_count}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:51:32.046" level="INFO">${row_count} = 0</msg>
<status status="PASS" starttime="20240424 19:51:32.046" endtime="20240424 19:51:32.046"/>
</kw>
<status status="PASS" starttime="20240424 19:51:32.046" endtime="20240424 19:51:32.046"/>
</branch>
<status status="PASS" starttime="20240424 19:51:32.046" endtime="20240424 19:51:32.046"/>
</if>
<status status="PASS" starttime="20240424 19:51:28.263" endtime="20240424 19:51:32.046"/>
</kw>
<status status="PASS" starttime="20240424 19:51:28.263" endtime="20240424 19:51:32.046"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<status status="NOT RUN" starttime="20240424 19:51:32.046" endtime="20240424 19:51:32.046"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:51:32.046" endtime="20240424 19:51:32.046"/>
</branch>
<status status="PASS" starttime="20240424 19:51:28.263" endtime="20240424 19:51:32.046"/>
</if>
<status status="PASS" starttime="20240424 19:51:25.967" endtime="20240424 19:51:32.046"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${COMMUNICATION_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:32.046" endtime="20240424 19:51:32.052"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:51:32.052" endtime="20240424 19:51:32.052"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:32.052" endtime="20240424 19:51:32.060"/>
</kw>
<status status="PASS" starttime="20240424 19:51:32.046" endtime="20240424 19:51:32.060"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>IssuesPanel</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:51:32.060" endtime="20240424 19:51:32.822"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>IssueListTable</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:51:32.822" endtime="20240424 19:51:41.984"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:41.985" endtime="20240424 19:51:42.383"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>3DPanel</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:51:42.384" endtime="20240424 19:51:42.637"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${3D_text}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:51:43.155" level="INFO">${3D_text} = &lt;html&gt;
  &lt;head&gt;
    
  &lt;/head&gt;
  &lt;body&gt;
    &lt;font size="5" color="#000000" face="Dialog"&gt;&lt;b&gt;Wrong value of Property - 
    Height: 310 mm&lt;/b&gt;&lt;/font&gt;&lt;br&gt;&lt;font size="5" color="#303030" face="Dialog"&gt;&lt;br...</msg>
<status status="PASS" starttime="20240424 19:51:42.637" endtime="20240424 19:51:43.155"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${3D_text}</arg>
<arg>PIN</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:51:43.155" endtime="20240424 19:51:43.155"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${3D_text}</arg>
<arg>2021-11-30</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:51:43.156" endtime="20240424 19:51:43.156"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:43.156" endtime="20240424 19:51:43.551"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Issue DetailsPanel</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:51:43.551" endtime="20240424 19:51:43.764"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Components</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:51:43.764" endtime="20240424 19:51:44.054"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${Issue_detail_component_table_values}</var>
<arg>ComponentsTable</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:51:44.915" level="INFO">${Issue_detail_component_table_values} = Building Name12Building Name34</msg>
<status status="PASS" starttime="20240424 19:51:44.054" endtime="20240424 19:51:44.915"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${Issue_detail_component_table_values}</arg>
<arg>12</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:51:44.916" endtime="20240424 19:51:44.916"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${Issue_detail_component_table_values}</arg>
<arg>34</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:51:44.916" endtime="20240424 19:51:44.917"/>
</kw>
<status status="PASS" starttime="20240424 19:51:24.223" endtime="20240424 19:51:44.917"/>
</kw>
<kw name="When I Restore Default Settings in Presentation" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:44.918" endtime="20240424 19:51:45.215"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:45.216" endtime="20240424 19:51:45.693"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:51:45.693" endtime="20240424 19:51:45.698"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:45.698" endtime="20240424 19:51:45.934"/>
</kw>
<status status="PASS" starttime="20240424 19:51:45.215" endtime="20240424 19:51:45.934"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Presentation...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:51:45.934" endtime="20240424 19:51:45.938"/>
</kw>
<kw name="Restore Default Settings" library="settings_step_definitions">
<arg>Presentation</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>${settings_dialog}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:51:45.939" endtime="20240424 19:51:46.790"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Restore Default Settings</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:51:46.790" endtime="20240424 19:51:46.919"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Restore Default Settings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:51:46.919" endtime="20240424 19:51:46.924"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Yes</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:51:46.924" endtime="20240424 19:51:46.989"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${settings_dialog}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:51:46.989" endtime="20240424 19:51:46.997"/>
</kw>
<status status="PASS" starttime="20240424 19:51:45.938" endtime="20240424 19:51:46.997"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:51:46.997" endtime="20240424 19:51:47.047"/>
</kw>
<status status="PASS" starttime="20240424 19:51:44.917" endtime="20240424 19:51:47.047"/>
</kw>
<kw name="Then Verify the Presentation Default Settings" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:51:47.047" endtime="20240424 19:51:47.065"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Presentation...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:51:47.065" endtime="20240424 19:51:47.069"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Presentation</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:51:47.069" endtime="20240424 19:51:47.160"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Presentation</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:51:47.160" endtime="20240424 19:51:47.245"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:51:47.245" endtime="20240424 19:51:47.254"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>1</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:51:47.254" endtime="20240424 19:51:47.257"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${Slide_thumbnail_size}</var>
<arg>0</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 19:51:47.535" level="INFO">${Slide_thumbnail_size} = M</msg>
<status status="PASS" starttime="20240424 19:51:47.257" endtime="20240424 19:51:47.535"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Slide_thumbnail_size}</arg>
<arg>M</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:51:47.535" endtime="20240424 19:51:47.535"/>
</kw>
<kw name="Check Box Should Be Unchecked" library="SwingRobot">
<arg>2</arg>
<doc>Fails if checkbox is checked.</doc>
<status status="PASS" starttime="20240424 19:51:47.535" endtime="20240424 19:51:47.539"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Report</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:51:47.539" endtime="20240424 19:51:47.586"/>
</kw>
<kw name="All Checkboxes Should Be Checked" library="SwingRobot">
<doc>Fails if any checkbox in current context is not checked.</doc>
<status status="PASS" starttime="20240424 19:51:47.586" endtime="20240424 19:51:47.589"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Component</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:51:47.589" endtime="20240424 19:51:47.671"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count_component}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:51:47.686" level="INFO">${row_count_component} = 0</msg>
<status status="PASS" starttime="20240424 19:51:47.671" endtime="20240424 19:51:47.686"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${row_count_component}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:51:47.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:51:47.686" endtime="20240424 19:51:47.686"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:51:47.686" endtime="20240424 19:51:47.724"/>
</kw>
<status status="PASS" starttime="20240424 19:51:47.047" endtime="20240424 19:51:47.724"/>
</kw>
<kw name="And Restart Solibri Again" library="settings_step_definitions">
<kw name="Restart Solibri" library="CommonUtils">
<arg>${SOLIBRI_HOME}</arg>
<doc>Restarts Solibri</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>message=Solibri directory is ${SOLIBRI_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:51:47.724" endtime="20240424 19:51:47.724"/>
</kw>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:51:47.724" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 19:51:47.724" endtime="20240424 19:51:47.724"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>condition=${is_running}</arg>
<arg>msg=Solibri is not running</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240424 19:51:47.724" endtime="20240424 19:51:47.724"/>
</kw>
<kw name="Close Solibri" library="SolibriLibrary">
<msg timestamp="20240424 19:51:47.724" level="INFO">The SMC application is still alive and need to be killed! 

The SMC application had to be killed from CMD!</msg>
<status status="PASS" starttime="20240424 19:51:47.724" endtime="20240424 19:51:47.724"/>
</kw>
<kw name="Wait For Process To Close" library="CommonUtils">
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<arg>time_out=${timeout_for_loops}</arg>
<doc>Waits for process to close</doc>
<kw name="Get Time" library="BuiltIn">
<var>${start_time}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 19:51:47.724" level="INFO">${start_time} = 2024-04-24 19:51:47</msg>
<status status="PASS" starttime="20240424 19:51:47.724" endtime="20240424 19:51:47.724"/>
</kw>
<while condition="${True}">
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:51:47.739" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 19:51:47.724" endtime="20240424 19:51:47.739"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240424 19:51:48.755" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240424 19:51:47.739" endtime="20240424 19:51:48.755"/>
</kw>
<status status="PASS" starttime="20240424 19:51:47.739" endtime="20240424 19:51:48.755"/>
</branch>
<status status="PASS" starttime="20240424 19:51:47.739" endtime="20240424 19:51:48.755"/>
</if>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Exit For Loop</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 19:51:48.755" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<status status="PASS" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 19:51:48.755" level="INFO">${now} = 2024-04-24 19:51:48</msg>
<status status="PASS" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20240424 19:51:48.755" level="INFO">${elapsed_time} = 1.0</msg>
<status status="PASS" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not close in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</break>
<status status="NOT RUN" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</branch>
<status status="PASS" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</if>
<status status="PASS" starttime="20240424 19:51:47.724" endtime="20240424 19:51:48.755"/>
</iter>
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:51:48.755" level="INFO">${is_running} = None</msg>
<status status="PASS" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</branch>
<status status="PASS" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</if>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Exit For Loop</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 19:51:48.755" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing FOR loop.</doc>
<msg timestamp="20240424 19:51:48.755" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</kw>
<status status="PASS" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<status status="NOT RUN" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<status status="NOT RUN" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not close in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</break>
<status status="NOT RUN" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</if>
<status status="PASS" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</iter>
<status status="PASS" starttime="20240424 19:51:47.724" endtime="20240424 19:51:48.755"/>
</while>
<status status="PASS" starttime="20240424 19:51:47.724" endtime="20240424 19:51:48.755"/>
</kw>
<kw name="Open Solibri" library="SolibriLibrary">
<arg>${SOLIBRI_DIR}</arg>
<msg timestamp="20240424 19:51:48.755" level="INFO">Solibri Installation folder: D:\a\desktop-main\desktop-main\temp\installers\temporary-installation-folder\
Solibri Executable: D:\a\desktop-main\desktop-main\temp\installers\temporary-installation-folder\temporary-installation-folder\Solibri.exe</msg>
<status status="PASS" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</kw>
<kw name="Wait For Process To Open" library="CommonUtils">
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<arg>time_out=${timeout_for_loops}</arg>
<doc>Waits for process to open</doc>
<kw name="Get Time" library="BuiltIn">
<var>${start_time}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 19:51:48.755" level="INFO">${start_time} = 2024-04-24 19:51:48</msg>
<status status="PASS" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</kw>
<while condition="${True}">
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:51:48.755" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.755"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Sleep</arg>
<arg>1</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 19:51:48.770" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<status status="PASS" starttime="20240424 19:51:48.770" endtime="20240424 19:51:48.770"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<break>
<status status="PASS" starttime="20240424 19:51:48.770" endtime="20240424 19:51:48.770"/>
</break>
<status status="PASS" starttime="20240424 19:51:48.770" endtime="20240424 19:51:48.770"/>
</branch>
<status status="PASS" starttime="20240424 19:51:48.770" endtime="20240424 19:51:48.770"/>
</if>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<status status="NOT RUN" starttime="20240424 19:51:48.770" endtime="20240424 19:51:48.770"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<status status="NOT RUN" starttime="20240424 19:51:48.770" endtime="20240424 19:51:48.770"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not open in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 19:51:48.770" endtime="20240424 19:51:48.770"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 19:51:48.770" endtime="20240424 19:51:48.770"/>
</break>
<status status="NOT RUN" starttime="20240424 19:51:48.770" endtime="20240424 19:51:48.770"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:51:48.770" endtime="20240424 19:51:48.770"/>
</if>
<status status="PASS" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.770"/>
</iter>
<status status="PASS" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.770"/>
</while>
<status status="PASS" starttime="20240424 19:51:48.755" endtime="20240424 19:51:48.770"/>
</kw>
<kw name="Wait For Solibri Window to Appear" library="CommonUtils">
<arg>Solibri Office</arg>
<doc>Wait until Solibri is started</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>18</arg>
<arg>18</arg>
<arg>Window Should Be Open</arg>
<arg>${solibri_office}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>18</arg>
<arg>18</arg>
<arg>Window Should Be Open</arg>
<arg>${solibri_office}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Window Should Be Open" library="SwingRobot">
<arg>${solibri_office}</arg>
<doc>Fails if the window is not open.</doc>
<msg timestamp="20240424 19:51:50.850" level="FAIL">Connection to remote server broken: [WinError 10061] No connection could be made because the target machine actively refused it</msg>
<status status="FAIL" starttime="20240424 19:51:48.770" endtime="20240424 19:51:50.850"/>
</kw>
<kw name="Window Should Be Open" library="SwingRobot">
<arg>${solibri_office}</arg>
<doc>Fails if the window is not open.</doc>
<status status="PASS" starttime="20240424 19:52:08.853" endtime="20240424 19:52:09.214"/>
</kw>
<status status="PASS" starttime="20240424 19:51:48.770" endtime="20240424 19:52:09.214"/>
</kw>
<msg timestamp="20240424 19:52:09.214" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:51:48.770" endtime="20240424 19:52:09.214"/>
</kw>
<status status="PASS" starttime="20240424 19:51:48.770" endtime="20240424 19:52:09.214"/>
</kw>
<status status="PASS" starttime="20240424 19:51:47.724" endtime="20240424 19:52:09.214"/>
</kw>
<status status="PASS" starttime="20240424 19:51:47.724" endtime="20240424 19:52:09.214"/>
</kw>
<kw name="Then Verify the Presentation Default Settings" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:09.214" endtime="20240424 19:52:09.513"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Presentation...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:09.513" endtime="20240424 19:52:09.517"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Presentation</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:09.517" endtime="20240424 19:52:09.825"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Presentation</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:09.825" endtime="20240424 19:52:09.990"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:09.990" endtime="20240424 19:52:10.062"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>1</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:10.062" endtime="20240424 19:52:10.106"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${Slide_thumbnail_size}</var>
<arg>0</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 19:52:10.530" level="INFO">${Slide_thumbnail_size} = M</msg>
<status status="PASS" starttime="20240424 19:52:10.106" endtime="20240424 19:52:10.530"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Slide_thumbnail_size}</arg>
<arg>M</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:10.530" endtime="20240424 19:52:10.530"/>
</kw>
<kw name="Check Box Should Be Unchecked" library="SwingRobot">
<arg>2</arg>
<doc>Fails if checkbox is checked.</doc>
<status status="PASS" starttime="20240424 19:52:10.530" endtime="20240424 19:52:10.549"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Report</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:10.549" endtime="20240424 19:52:10.607"/>
</kw>
<kw name="All Checkboxes Should Be Checked" library="SwingRobot">
<doc>Fails if any checkbox in current context is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:10.607" endtime="20240424 19:52:10.609"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Component</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:10.609" endtime="20240424 19:52:10.760"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count_component}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:52:10.828" level="INFO">${row_count_component} = 0</msg>
<status status="PASS" starttime="20240424 19:52:10.760" endtime="20240424 19:52:10.828"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${row_count_component}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:52:10.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:10.828" endtime="20240424 19:52:10.828"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:10.828" endtime="20240424 19:52:10.924"/>
</kw>
<status status="PASS" starttime="20240424 19:52:09.214" endtime="20240424 19:52:10.924"/>
</kw>
<status status="PASS" starttime="20240424 19:51:22.577" endtime="20240424 19:52:10.924"/>
</test>
<test id="s1-s4-t9" name="Verify 3D Settings" line="88">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:10.924" endtime="20240424 19:52:10.968"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:52:10.968" endtime="20240424 19:52:11.080"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:11.080" endtime="20240424 19:52:11.086"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:11.086" endtime="20240424 19:52:11.089"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:11.089" endtime="20240424 19:52:11.102"/>
</kw>
<status status="PASS" starttime="20240424 19:52:11.080" endtime="20240424 19:52:11.102"/>
</kw>
<status status="PASS" starttime="20240424 19:52:10.924" endtime="20240424 19:52:11.102"/>
</kw>
<status status="PASS" starttime="20240424 19:52:10.924" endtime="20240424 19:52:11.102"/>
</kw>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:52:11.284" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:52:11.284" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:52:11 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:52:11.102" endtime="20240424 19:52:11.284"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:52:11.284" endtime="20240424 19:52:11.284"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:11.284" endtime="20240424 19:52:11.292"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:52:11.294" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:52:11.292" endtime="20240424 19:52:11.294"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:11.294" endtime="20240424 19:52:11.294"/>
</kw>
<status status="PASS" starttime="20240424 19:52:11.292" endtime="20240424 19:52:11.294"/>
</kw>
<status status="PASS" starttime="20240424 19:52:11.102" endtime="20240424 19:52:11.294"/>
</kw>
<kw name="And Switch to the Settings View" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:11.294" endtime="20240424 19:52:11.309"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:11.309" endtime="20240424 19:52:11.314"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:11.314" endtime="20240424 19:52:11.314"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:11.314" endtime="20240424 19:52:11.326"/>
</kw>
<status status="PASS" starttime="20240424 19:52:11.309" endtime="20240424 19:52:11.326"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:52:11.326" endtime="20240424 19:52:11.978"/>
</kw>
<status status="PASS" starttime="20240424 19:52:11.294" endtime="20240424 19:52:11.978"/>
</kw>
<kw name="Then Verify the 3D Default Settings" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:11.979" endtime="20240424 19:52:12.090"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>3D...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:12.090" endtime="20240424 19:52:12.096"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Select Dialog</arg>
<arg>3D</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>3D</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:12.097" endtime="20240424 19:52:12.383"/>
</kw>
<status status="PASS" starttime="20240424 19:52:12.096" endtime="20240424 19:52:12.384"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Rendering</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:12.384" endtime="20240424 19:52:12.438"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${Polygon_mode}</var>
<arg>0</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 19:52:12.977" level="INFO">${Polygon_mode} = Shaded</msg>
<status status="PASS" starttime="20240424 19:52:12.438" endtime="20240424 19:52:12.977"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Polygon_mode}</arg>
<arg>Shaded</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:12.977" endtime="20240424 19:52:12.978"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${Light_mode}</var>
<arg>1</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 19:52:13.302" level="INFO">${Light_mode} = Point Light</msg>
<status status="PASS" starttime="20240424 19:52:12.978" endtime="20240424 19:52:13.303"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Light_mode}</arg>
<arg>Point Light</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:13.303" endtime="20240424 19:52:13.303"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${Light_intensity}</var>
<arg>0</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:13.332" level="INFO">${Light_intensity} = 50</msg>
<status status="PASS" starttime="20240424 19:52:13.303" endtime="20240424 19:52:13.332"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Light_intensity}</arg>
<arg>50</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:52:13.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:13.332" endtime="20240424 19:52:13.333"/>
</kw>
<kw name="Check Box Should Be Unchecked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is checked.</doc>
<status status="PASS" starttime="20240424 19:52:13.333" endtime="20240424 19:52:13.338"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>1</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:13.339" endtime="20240424 19:52:13.342"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>2</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:13.342" endtime="20240424 19:52:13.403"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${Default_transparency}</var>
<arg>1</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:13.419" level="INFO">${Default_transparency} = 85</msg>
<status status="PASS" starttime="20240424 19:52:13.404" endtime="20240424 19:52:13.419"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Default_transparency}</arg>
<arg>85</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:52:13.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:13.419" endtime="20240424 19:52:13.420"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>3</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:13.420" endtime="20240424 19:52:13.458"/>
</kw>
<kw name="Call Component Method" library="SwingRobot">
<var>${Component_edge_line_color}</var>
<arg>Component Edge Line Color</arg>
<arg>getBackground</arg>
<doc>Calls a method from specified component.</doc>
<msg timestamp="20240424 19:52:13.465" level="INFO">${Component_edge_line_color} = java.awt.Color[r=0,g=0,b=0]</msg>
<status status="PASS" starttime="20240424 19:52:13.459" endtime="20240424 19:52:13.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${Component_edge_line_color}</arg>
<arg>[r=0,g=0,b=0]</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:13.465" endtime="20240424 19:52:13.465"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${Component_edge_line_thickness}</var>
<arg>2</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:13.469" level="INFO">${Component_edge_line_thickness} = 1</msg>
<status status="PASS" starttime="20240424 19:52:13.465" endtime="20240424 19:52:13.469"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Component_edge_line_thickness}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:52:13.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:13.469" endtime="20240424 19:52:13.469"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${Component_edge_line_transparency}</var>
<arg>3</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:13.504" level="INFO">${Component_edge_line_transparency} = 50</msg>
<status status="PASS" starttime="20240424 19:52:13.469" endtime="20240424 19:52:13.504"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Component_edge_line_transparency}</arg>
<arg>50</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:52:13.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:13.505" endtime="20240424 19:52:13.505"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Camera</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:13.505" endtime="20240424 19:52:13.574"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${Front_clip_distance}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:13.621" level="INFO">${Front_clip_distance} = 3 15/16"</msg>
<status status="PASS" starttime="20240424 19:52:13.575" endtime="20240424 19:52:13.621"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Front_clip_distance}</arg>
<arg>3 15/16"</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:52:13.621" endtime="20240424 19:52:13.622"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${Back_clip_distance}</var>
<arg>1</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:13.626" level="INFO">${Back_clip_distance} = 6,561'-8 3/16"</msg>
<status status="PASS" starttime="20240424 19:52:13.622" endtime="20240424 19:52:13.626"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Back_clip_distance}</arg>
<arg>6,561'-8 3/16"</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:52:13.627" endtime="20240424 19:52:13.627"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${Eye_height}</var>
<arg>2</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:13.642" level="INFO">${Eye_height} = 4'-11 1/16"</msg>
<status status="PASS" starttime="20240424 19:52:13.627" endtime="20240424 19:52:13.642"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Eye_height}</arg>
<arg>4'-11 1/16"</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:52:13.642" endtime="20240424 19:52:13.643"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${Field_of_view}</var>
<arg>0</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:13.646" level="INFO">${Field_of_view} = 60</msg>
<status status="PASS" starttime="20240424 19:52:13.643" endtime="20240424 19:52:13.647"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Field_of_view}</arg>
<arg>60</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:52:13.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:13.647" endtime="20240424 19:52:13.647"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Background</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:13.647" endtime="20240424 19:52:13.675"/>
</kw>
<kw name="Call Component Method" library="SwingRobot">
<var>${Background_top_color}</var>
<arg>Background Top Color</arg>
<arg>getBackground</arg>
<doc>Calls a method from specified component.</doc>
<msg timestamp="20240424 19:52:13.681" level="INFO">${Background_top_color} = java.awt.Color[r=245,g=245,b=245]</msg>
<status status="PASS" starttime="20240424 19:52:13.676" endtime="20240424 19:52:13.681"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${Background_top_color}</arg>
<arg>[r=245,g=245,b=245]</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:13.681" endtime="20240424 19:52:13.682"/>
</kw>
<kw name="Call Component Method" library="SwingRobot">
<var>${Background_bottom_color}</var>
<arg>Background Bottom Color</arg>
<arg>getBackground</arg>
<doc>Calls a method from specified component.</doc>
<msg timestamp="20240424 19:52:13.687" level="INFO">${Background_bottom_color} = java.awt.Color[r=204,g=204,b=204]</msg>
<status status="PASS" starttime="20240424 19:52:13.682" endtime="20240424 19:52:13.687"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${Background_bottom_color}</arg>
<arg>[r=204,g=204,b=204]</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:13.687" endtime="20240424 19:52:13.687"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Info</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:13.687" endtime="20240424 19:52:13.764"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:13.764" endtime="20240424 19:52:13.772"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:52:13.866" level="INFO">${row_count} = 2</msg>
<status status="PASS" starttime="20240424 19:52:13.772" endtime="20240424 19:52:13.866"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${row_count}</arg>
<arg>2</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:52:13.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:13.866" endtime="20240424 19:52:13.867"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${Presentation_time_in_seconds}</var>
<arg>0</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:13.913" level="INFO">${Presentation_time_in_seconds} = 3</msg>
<status status="PASS" starttime="20240424 19:52:13.867" endtime="20240424 19:52:13.913"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Presentation_time_in_seconds}</arg>
<arg>3</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:52:13.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:13.914" endtime="20240424 19:52:13.914"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Performance</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:13.914" endtime="20240424 19:52:14.092"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${Anti-aliasing}</var>
<arg>0</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 19:52:14.498" level="INFO">${Anti-aliasing} = 8 Samples</msg>
<status status="PASS" starttime="20240424 19:52:14.092" endtime="20240424 19:52:14.498"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Anti-aliasing}</arg>
<arg>8 Samples</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:52:14.499" endtime="20240424 19:52:14.499"/>
</kw>
<kw name="All Checkboxes Should Be Checked" library="SwingRobot">
<doc>Fails if any checkbox in current context is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:14.499" endtime="20240424 19:52:14.518"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${Objects_drawn_in_navigation}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:14.532" level="INFO">${Objects_drawn_in_navigation} = 2000</msg>
<status status="PASS" starttime="20240424 19:52:14.518" endtime="20240424 19:52:14.532"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Objects_drawn_in_navigation}</arg>
<arg>2000</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:52:14.532" endtime="20240424 19:52:14.533"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${Objects_drawn}</var>
<arg>1</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:14.538" level="INFO">${Objects_drawn} = 50000</msg>
<status status="PASS" starttime="20240424 19:52:14.533" endtime="20240424 19:52:14.538"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Objects_drawn}</arg>
<arg>50000</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:52:14.538" endtime="20240424 19:52:14.539"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:14.539" endtime="20240424 19:52:14.637"/>
</kw>
<status status="PASS" starttime="20240424 19:52:11.979" endtime="20240424 19:52:14.637"/>
</kw>
<kw name="And I Modify the 3D Settings" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:14.638" endtime="20240424 19:52:14.646"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>3D...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:14.647" endtime="20240424 19:52:14.657"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>3D</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:14.658" endtime="20240424 19:52:14.904"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Rendering</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:14.904" endtime="20240424 19:52:14.922"/>
</kw>
<kw name="Select From Combo Box" library="SwingRobot">
<arg>0</arg>
<arg>Flat</arg>
<doc>Selects an item from a combobox.
The item selection is verified by default and can be disabled using the optional ``verifySelection`` parameter with any value.</doc>
<status status="PASS" starttime="20240424 19:52:14.922" endtime="20240424 19:52:15.819"/>
</kw>
<kw name="Set Slider Value" library="SwingRobot">
<arg>0</arg>
<arg>25</arg>
<doc>Sets the value for the slider found from the current context.</doc>
<status status="PASS" starttime="20240424 19:52:15.819" endtime="20240424 19:52:15.819"/>
</kw>
<kw name="Uncheck All Checkboxes" library="SwingRobot">
<doc>Unchecks all checkboxes in current context.</doc>
<status status="PASS" starttime="20240424 19:52:15.819" endtime="20240424 19:52:15.871"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Camera</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:15.871" endtime="20240424 19:52:15.933"/>
</kw>
<kw name="Clear Text Field" library="SwingRobot">
<arg>0</arg>
<doc>Clears contents of text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:52:15.933" endtime="20240424 19:52:16.016"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>1</arg>
<arg>text</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:52:16.032" endtime="20240424 19:52:16.092"/>
</kw>
<kw name="Set Slider Value" library="SwingRobot">
<arg>0</arg>
<arg>150</arg>
<doc>Sets the value for the slider found from the current context.</doc>
<status status="PASS" starttime="20240424 19:52:16.092" endtime="20240424 19:52:16.097"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Camera</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:16.097" endtime="20240424 19:52:16.120"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Add Row</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:16.120" endtime="20240424 19:52:16.128"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Add Row</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:16.128" endtime="20240424 19:52:16.134"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Remove Rows</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:16.134" endtime="20240424 19:52:16.137"/>
</kw>
<kw name="Set Slider Value" library="SwingRobot">
<arg>0</arg>
<arg>9</arg>
<doc>Sets the value for the slider found from the current context.</doc>
<status status="PASS" starttime="20240424 19:52:16.137" endtime="20240424 19:52:16.147"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Performance</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:16.147" endtime="20240424 19:52:16.160"/>
</kw>
<kw name="Select From Combo Box" library="SwingRobot">
<arg>0</arg>
<arg>2 Samples</arg>
<doc>Selects an item from a combobox.
The item selection is verified by default and can be disabled using the optional ``verifySelection`` parameter with any value.</doc>
<status status="PASS" starttime="20240424 19:52:16.160" endtime="20240424 19:52:16.719"/>
</kw>
<kw name="Uncheck All Checkboxes" library="SwingRobot">
<doc>Unchecks all checkboxes in current context.</doc>
<status status="PASS" starttime="20240424 19:52:16.719" endtime="20240424 19:52:16.814"/>
</kw>
<kw name="Clear Text Field" library="SwingRobot">
<arg>0</arg>
<doc>Clears contents of text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:52:16.814" endtime="20240424 19:52:16.893"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>1</arg>
<arg>text</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:52:16.893" endtime="20240424 19:52:16.957"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:16.957" endtime="20240424 19:52:17.036"/>
</kw>
<status status="PASS" starttime="20240424 19:52:14.638" endtime="20240424 19:52:17.036"/>
</kw>
<kw name="When I Restore Default Settings in 3D" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:17.036" endtime="20240424 19:52:17.068"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>3D...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:17.068" endtime="20240424 19:52:17.071"/>
</kw>
<kw name="Restore Default Settings" library="settings_step_definitions">
<arg>3D</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>${settings_dialog}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:17.071" endtime="20240424 19:52:17.305"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Restore Default Settings</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:17.305" endtime="20240424 19:52:17.444"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Restore Default Settings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:17.444" endtime="20240424 19:52:17.501"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Yes</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:17.501" endtime="20240424 19:52:17.587"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${settings_dialog}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:17.587" endtime="20240424 19:52:17.649"/>
</kw>
<status status="PASS" starttime="20240424 19:52:17.071" endtime="20240424 19:52:17.649"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:17.649" endtime="20240424 19:52:17.699"/>
</kw>
<status status="PASS" starttime="20240424 19:52:17.036" endtime="20240424 19:52:17.699"/>
</kw>
<kw name="Then Verify the 3D Default Settings" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:17.699" endtime="20240424 19:52:17.718"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>3D...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:17.718" endtime="20240424 19:52:17.718"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Select Dialog</arg>
<arg>3D</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>3D</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:17.718" endtime="20240424 19:52:17.932"/>
</kw>
<status status="PASS" starttime="20240424 19:52:17.718" endtime="20240424 19:52:17.932"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Rendering</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:17.932" endtime="20240424 19:52:18.013"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${Polygon_mode}</var>
<arg>0</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 19:52:18.287" level="INFO">${Polygon_mode} = Shaded</msg>
<status status="PASS" starttime="20240424 19:52:18.013" endtime="20240424 19:52:18.287"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Polygon_mode}</arg>
<arg>Shaded</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:18.287" endtime="20240424 19:52:18.287"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${Light_mode}</var>
<arg>1</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 19:52:18.531" level="INFO">${Light_mode} = Point Light</msg>
<status status="PASS" starttime="20240424 19:52:18.287" endtime="20240424 19:52:18.531"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Light_mode}</arg>
<arg>Point Light</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:18.531" endtime="20240424 19:52:18.532"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${Light_intensity}</var>
<arg>0</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:18.533" level="INFO">${Light_intensity} = 50</msg>
<status status="PASS" starttime="20240424 19:52:18.532" endtime="20240424 19:52:18.533"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Light_intensity}</arg>
<arg>50</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:52:18.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:18.533" endtime="20240424 19:52:18.533"/>
</kw>
<kw name="Check Box Should Be Unchecked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is checked.</doc>
<status status="PASS" starttime="20240424 19:52:18.533" endtime="20240424 19:52:18.541"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>1</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:18.541" endtime="20240424 19:52:18.543"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>2</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:18.543" endtime="20240424 19:52:18.549"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${Default_transparency}</var>
<arg>1</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:18.551" level="INFO">${Default_transparency} = 85</msg>
<status status="PASS" starttime="20240424 19:52:18.549" endtime="20240424 19:52:18.551"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Default_transparency}</arg>
<arg>85</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:52:18.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:18.551" endtime="20240424 19:52:18.551"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>3</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:18.551" endtime="20240424 19:52:18.551"/>
</kw>
<kw name="Call Component Method" library="SwingRobot">
<var>${Component_edge_line_color}</var>
<arg>Component Edge Line Color</arg>
<arg>getBackground</arg>
<doc>Calls a method from specified component.</doc>
<msg timestamp="20240424 19:52:18.569" level="INFO">${Component_edge_line_color} = java.awt.Color[r=0,g=0,b=0]</msg>
<status status="PASS" starttime="20240424 19:52:18.551" endtime="20240424 19:52:18.569"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${Component_edge_line_color}</arg>
<arg>[r=0,g=0,b=0]</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:18.569" endtime="20240424 19:52:18.569"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${Component_edge_line_thickness}</var>
<arg>2</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:18.573" level="INFO">${Component_edge_line_thickness} = 1</msg>
<status status="PASS" starttime="20240424 19:52:18.569" endtime="20240424 19:52:18.573"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Component_edge_line_thickness}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:52:18.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:18.573" endtime="20240424 19:52:18.573"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${Component_edge_line_transparency}</var>
<arg>3</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:18.577" level="INFO">${Component_edge_line_transparency} = 50</msg>
<status status="PASS" starttime="20240424 19:52:18.573" endtime="20240424 19:52:18.577"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Component_edge_line_transparency}</arg>
<arg>50</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:52:18.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:18.577" endtime="20240424 19:52:18.577"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Camera</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:18.577" endtime="20240424 19:52:18.627"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${Front_clip_distance}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:18.632" level="INFO">${Front_clip_distance} = 3 15/16"</msg>
<status status="PASS" starttime="20240424 19:52:18.627" endtime="20240424 19:52:18.632"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Front_clip_distance}</arg>
<arg>3 15/16"</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:52:18.632" endtime="20240424 19:52:18.632"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${Back_clip_distance}</var>
<arg>1</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:18.641" level="INFO">${Back_clip_distance} = 6,561'-8 3/16"</msg>
<status status="PASS" starttime="20240424 19:52:18.632" endtime="20240424 19:52:18.641"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Back_clip_distance}</arg>
<arg>6,561'-8 3/16"</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:52:18.641" endtime="20240424 19:52:18.641"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${Eye_height}</var>
<arg>2</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:18.649" level="INFO">${Eye_height} = 4'-11 1/16"</msg>
<status status="PASS" starttime="20240424 19:52:18.641" endtime="20240424 19:52:18.649"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Eye_height}</arg>
<arg>4'-11 1/16"</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:52:18.649" endtime="20240424 19:52:18.649"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${Field_of_view}</var>
<arg>0</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:18.652" level="INFO">${Field_of_view} = 60</msg>
<status status="PASS" starttime="20240424 19:52:18.649" endtime="20240424 19:52:18.652"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Field_of_view}</arg>
<arg>60</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:52:18.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:18.652" endtime="20240424 19:52:18.652"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Background</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:18.652" endtime="20240424 19:52:18.674"/>
</kw>
<kw name="Call Component Method" library="SwingRobot">
<var>${Background_top_color}</var>
<arg>Background Top Color</arg>
<arg>getBackground</arg>
<doc>Calls a method from specified component.</doc>
<msg timestamp="20240424 19:52:18.677" level="INFO">${Background_top_color} = java.awt.Color[r=245,g=245,b=245]</msg>
<status status="PASS" starttime="20240424 19:52:18.674" endtime="20240424 19:52:18.677"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${Background_top_color}</arg>
<arg>[r=245,g=245,b=245]</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:18.677" endtime="20240424 19:52:18.677"/>
</kw>
<kw name="Call Component Method" library="SwingRobot">
<var>${Background_bottom_color}</var>
<arg>Background Bottom Color</arg>
<arg>getBackground</arg>
<doc>Calls a method from specified component.</doc>
<msg timestamp="20240424 19:52:18.727" level="INFO">${Background_bottom_color} = java.awt.Color[r=204,g=204,b=204]</msg>
<status status="PASS" starttime="20240424 19:52:18.677" endtime="20240424 19:52:18.727"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${Background_bottom_color}</arg>
<arg>[r=204,g=204,b=204]</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:18.727" endtime="20240424 19:52:18.727"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Info</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:18.727" endtime="20240424 19:52:18.797"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:18.797" endtime="20240424 19:52:18.799"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:52:18.799" level="INFO">${row_count} = 2</msg>
<status status="PASS" starttime="20240424 19:52:18.799" endtime="20240424 19:52:18.799"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${row_count}</arg>
<arg>2</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:52:18.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:18.799" endtime="20240424 19:52:18.799"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${Presentation_time_in_seconds}</var>
<arg>0</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:18.812" level="INFO">${Presentation_time_in_seconds} = 3</msg>
<status status="PASS" starttime="20240424 19:52:18.799" endtime="20240424 19:52:18.812"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Presentation_time_in_seconds}</arg>
<arg>3</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:52:18.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:18.812" endtime="20240424 19:52:18.812"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Performance</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:18.812" endtime="20240424 19:52:18.876"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${Anti-aliasing}</var>
<arg>0</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 19:52:19.124" level="INFO">${Anti-aliasing} = 8 Samples</msg>
<status status="PASS" starttime="20240424 19:52:18.876" endtime="20240424 19:52:19.124"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Anti-aliasing}</arg>
<arg>8 Samples</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:52:19.124" endtime="20240424 19:52:19.124"/>
</kw>
<kw name="All Checkboxes Should Be Checked" library="SwingRobot">
<doc>Fails if any checkbox in current context is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:19.124" endtime="20240424 19:52:19.124"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${Objects_drawn_in_navigation}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:19.124" level="INFO">${Objects_drawn_in_navigation} = 2000</msg>
<status status="PASS" starttime="20240424 19:52:19.124" endtime="20240424 19:52:19.124"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Objects_drawn_in_navigation}</arg>
<arg>2000</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:52:19.124" endtime="20240424 19:52:19.124"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${Objects_drawn}</var>
<arg>1</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:19.144" level="INFO">${Objects_drawn} = 50000</msg>
<status status="PASS" starttime="20240424 19:52:19.124" endtime="20240424 19:52:19.144"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Objects_drawn}</arg>
<arg>50000</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:52:19.144" endtime="20240424 19:52:19.144"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:19.144" endtime="20240424 19:52:19.194"/>
</kw>
<status status="PASS" starttime="20240424 19:52:17.699" endtime="20240424 19:52:19.194"/>
</kw>
<kw name="And Restart Solibri Again" library="settings_step_definitions">
<kw name="Restart Solibri" library="CommonUtils">
<arg>${SOLIBRI_HOME}</arg>
<doc>Restarts Solibri</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>message=Solibri directory is ${SOLIBRI_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:52:19.194" endtime="20240424 19:52:19.194"/>
</kw>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:52:19.194" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 19:52:19.194" endtime="20240424 19:52:19.194"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>condition=${is_running}</arg>
<arg>msg=Solibri is not running</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240424 19:52:19.194" endtime="20240424 19:52:19.194"/>
</kw>
<kw name="Close Solibri" library="SolibriLibrary">
<msg timestamp="20240424 19:52:19.194" level="INFO">The SMC application is still alive and need to be killed! 

The SMC application had to be killed from CMD!</msg>
<status status="PASS" starttime="20240424 19:52:19.194" endtime="20240424 19:52:19.194"/>
</kw>
<kw name="Wait For Process To Close" library="CommonUtils">
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<arg>time_out=${timeout_for_loops}</arg>
<doc>Waits for process to close</doc>
<kw name="Get Time" library="BuiltIn">
<var>${start_time}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 19:52:19.194" level="INFO">${start_time} = 2024-04-24 19:52:19</msg>
<status status="PASS" starttime="20240424 19:52:19.194" endtime="20240424 19:52:19.194"/>
</kw>
<while condition="${True}">
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:52:19.210" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 19:52:19.194" endtime="20240424 19:52:19.210"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240424 19:52:20.211" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240424 19:52:19.210" endtime="20240424 19:52:20.211"/>
</kw>
<status status="PASS" starttime="20240424 19:52:19.210" endtime="20240424 19:52:20.211"/>
</branch>
<status status="PASS" starttime="20240424 19:52:19.210" endtime="20240424 19:52:20.211"/>
</if>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Exit For Loop</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 19:52:20.211" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<status status="PASS" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.211"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 19:52:20.211" level="INFO">${now} = 2024-04-24 19:52:20</msg>
<status status="PASS" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.211"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20240424 19:52:20.211" level="INFO">${elapsed_time} = 1.0</msg>
<status status="PASS" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.211"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not close in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.211"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.211"/>
</break>
<status status="NOT RUN" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.211"/>
</branch>
<status status="PASS" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.211"/>
</if>
<status status="PASS" starttime="20240424 19:52:19.194" endtime="20240424 19:52:20.211"/>
</iter>
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:52:20.211" level="INFO">${is_running} = None</msg>
<status status="PASS" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.211"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.211"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.211"/>
</branch>
<status status="PASS" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.211"/>
</if>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Exit For Loop</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 19:52:20.211" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing FOR loop.</doc>
<msg timestamp="20240424 19:52:20.211" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.211"/>
</kw>
<status status="PASS" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.211"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<status status="NOT RUN" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.211"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<status status="NOT RUN" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.211"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not close in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.211"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.211"/>
</break>
<status status="NOT RUN" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.211"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.211"/>
</if>
<status status="PASS" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.211"/>
</iter>
<status status="PASS" starttime="20240424 19:52:19.194" endtime="20240424 19:52:20.211"/>
</while>
<status status="PASS" starttime="20240424 19:52:19.194" endtime="20240424 19:52:20.211"/>
</kw>
<kw name="Open Solibri" library="SolibriLibrary">
<arg>${SOLIBRI_DIR}</arg>
<msg timestamp="20240424 19:52:20.211" level="INFO">Solibri Installation folder: D:\a\desktop-main\desktop-main\temp\installers\temporary-installation-folder\
Solibri Executable: D:\a\desktop-main\desktop-main\temp\installers\temporary-installation-folder\temporary-installation-folder\Solibri.exe</msg>
<status status="PASS" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.211"/>
</kw>
<kw name="Wait For Process To Open" library="CommonUtils">
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<arg>time_out=${timeout_for_loops}</arg>
<doc>Waits for process to open</doc>
<kw name="Get Time" library="BuiltIn">
<var>${start_time}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 19:52:20.211" level="INFO">${start_time} = 2024-04-24 19:52:20</msg>
<status status="PASS" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.211"/>
</kw>
<while condition="${True}">
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:52:20.211" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.226"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Sleep</arg>
<arg>1</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 19:52:20.226" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<status status="PASS" starttime="20240424 19:52:20.226" endtime="20240424 19:52:20.226"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<break>
<status status="PASS" starttime="20240424 19:52:20.226" endtime="20240424 19:52:20.226"/>
</break>
<status status="PASS" starttime="20240424 19:52:20.226" endtime="20240424 19:52:20.226"/>
</branch>
<status status="PASS" starttime="20240424 19:52:20.226" endtime="20240424 19:52:20.226"/>
</if>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<status status="NOT RUN" starttime="20240424 19:52:20.226" endtime="20240424 19:52:20.226"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<status status="NOT RUN" starttime="20240424 19:52:20.226" endtime="20240424 19:52:20.226"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not open in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 19:52:20.226" endtime="20240424 19:52:20.226"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 19:52:20.226" endtime="20240424 19:52:20.226"/>
</break>
<status status="NOT RUN" starttime="20240424 19:52:20.226" endtime="20240424 19:52:20.226"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:52:20.226" endtime="20240424 19:52:20.226"/>
</if>
<status status="PASS" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.226"/>
</iter>
<status status="PASS" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.226"/>
</while>
<status status="PASS" starttime="20240424 19:52:20.211" endtime="20240424 19:52:20.226"/>
</kw>
<kw name="Wait For Solibri Window to Appear" library="CommonUtils">
<arg>Solibri Office</arg>
<doc>Wait until Solibri is started</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>18</arg>
<arg>18</arg>
<arg>Window Should Be Open</arg>
<arg>${solibri_office}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>18</arg>
<arg>18</arg>
<arg>Window Should Be Open</arg>
<arg>${solibri_office}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Window Should Be Open" library="SwingRobot">
<arg>${solibri_office}</arg>
<doc>Fails if the window is not open.</doc>
<msg timestamp="20240424 19:52:22.289" level="FAIL">Connection to remote server broken: [WinError 10061] No connection could be made because the target machine actively refused it</msg>
<status status="FAIL" starttime="20240424 19:52:20.226" endtime="20240424 19:52:22.289"/>
</kw>
<kw name="Window Should Be Open" library="SwingRobot">
<arg>${solibri_office}</arg>
<doc>Fails if the window is not open.</doc>
<status status="PASS" starttime="20240424 19:52:40.291" endtime="20240424 19:52:40.574"/>
</kw>
<status status="PASS" starttime="20240424 19:52:20.226" endtime="20240424 19:52:40.574"/>
</kw>
<msg timestamp="20240424 19:52:40.574" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:52:20.226" endtime="20240424 19:52:40.574"/>
</kw>
<status status="PASS" starttime="20240424 19:52:20.226" endtime="20240424 19:52:40.574"/>
</kw>
<status status="PASS" starttime="20240424 19:52:19.194" endtime="20240424 19:52:40.574"/>
</kw>
<status status="PASS" starttime="20240424 19:52:19.194" endtime="20240424 19:52:40.574"/>
</kw>
<kw name="Then Verify the 3D Default Settings" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:40.574" endtime="20240424 19:52:40.702"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>3D...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:40.702" endtime="20240424 19:52:40.705"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Select Dialog</arg>
<arg>3D</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>3D</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:40.705" endtime="20240424 19:52:41.144"/>
</kw>
<status status="PASS" starttime="20240424 19:52:40.705" endtime="20240424 19:52:41.144"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Rendering</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:41.144" endtime="20240424 19:52:41.281"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${Polygon_mode}</var>
<arg>0</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 19:52:41.913" level="INFO">${Polygon_mode} = Shaded</msg>
<status status="PASS" starttime="20240424 19:52:41.281" endtime="20240424 19:52:41.913"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Polygon_mode}</arg>
<arg>Shaded</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:41.913" endtime="20240424 19:52:41.913"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${Light_mode}</var>
<arg>1</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 19:52:42.238" level="INFO">${Light_mode} = Point Light</msg>
<status status="PASS" starttime="20240424 19:52:41.913" endtime="20240424 19:52:42.238"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Light_mode}</arg>
<arg>Point Light</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:42.238" endtime="20240424 19:52:42.238"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${Light_intensity}</var>
<arg>0</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:42.277" level="INFO">${Light_intensity} = 50</msg>
<status status="PASS" starttime="20240424 19:52:42.238" endtime="20240424 19:52:42.277"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Light_intensity}</arg>
<arg>50</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:52:42.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:42.277" endtime="20240424 19:52:42.277"/>
</kw>
<kw name="Check Box Should Be Unchecked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is checked.</doc>
<status status="PASS" starttime="20240424 19:52:42.277" endtime="20240424 19:52:42.285"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>1</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:42.285" endtime="20240424 19:52:42.295"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>2</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:42.295" endtime="20240424 19:52:42.309"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${Default_transparency}</var>
<arg>1</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:42.309" level="INFO">${Default_transparency} = 85</msg>
<status status="PASS" starttime="20240424 19:52:42.309" endtime="20240424 19:52:42.309"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Default_transparency}</arg>
<arg>85</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:52:42.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:42.309" endtime="20240424 19:52:42.309"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>3</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:42.309" endtime="20240424 19:52:42.321"/>
</kw>
<kw name="Call Component Method" library="SwingRobot">
<var>${Component_edge_line_color}</var>
<arg>Component Edge Line Color</arg>
<arg>getBackground</arg>
<doc>Calls a method from specified component.</doc>
<msg timestamp="20240424 19:52:42.322" level="INFO">${Component_edge_line_color} = java.awt.Color[r=0,g=0,b=0]</msg>
<status status="PASS" starttime="20240424 19:52:42.321" endtime="20240424 19:52:42.322"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${Component_edge_line_color}</arg>
<arg>[r=0,g=0,b=0]</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:42.322" endtime="20240424 19:52:42.338"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${Component_edge_line_thickness}</var>
<arg>2</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:42.343" level="INFO">${Component_edge_line_thickness} = 1</msg>
<status status="PASS" starttime="20240424 19:52:42.338" endtime="20240424 19:52:42.343"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Component_edge_line_thickness}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:52:42.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:42.343" endtime="20240424 19:52:42.343"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${Component_edge_line_transparency}</var>
<arg>3</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:42.346" level="INFO">${Component_edge_line_transparency} = 50</msg>
<status status="PASS" starttime="20240424 19:52:42.343" endtime="20240424 19:52:42.346"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Component_edge_line_transparency}</arg>
<arg>50</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:52:42.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:42.346" endtime="20240424 19:52:42.346"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Camera</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:42.346" endtime="20240424 19:52:42.392"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${Front_clip_distance}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:42.447" level="INFO">${Front_clip_distance} = 3 15/16"</msg>
<status status="PASS" starttime="20240424 19:52:42.392" endtime="20240424 19:52:42.447"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Front_clip_distance}</arg>
<arg>3 15/16"</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:52:42.447" endtime="20240424 19:52:42.447"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${Back_clip_distance}</var>
<arg>1</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:42.480" level="INFO">${Back_clip_distance} = 6,561'-8 3/16"</msg>
<status status="PASS" starttime="20240424 19:52:42.447" endtime="20240424 19:52:42.480"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Back_clip_distance}</arg>
<arg>6,561'-8 3/16"</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:52:42.480" endtime="20240424 19:52:42.480"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${Eye_height}</var>
<arg>2</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:42.489" level="INFO">${Eye_height} = 4'-11 1/16"</msg>
<status status="PASS" starttime="20240424 19:52:42.480" endtime="20240424 19:52:42.489"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Eye_height}</arg>
<arg>4'-11 1/16"</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:52:42.489" endtime="20240424 19:52:42.489"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${Field_of_view}</var>
<arg>0</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:42.501" level="INFO">${Field_of_view} = 60</msg>
<status status="PASS" starttime="20240424 19:52:42.489" endtime="20240424 19:52:42.501"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Field_of_view}</arg>
<arg>60</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:52:42.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:42.501" endtime="20240424 19:52:42.501"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Background</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:42.501" endtime="20240424 19:52:42.571"/>
</kw>
<kw name="Call Component Method" library="SwingRobot">
<var>${Background_top_color}</var>
<arg>Background Top Color</arg>
<arg>getBackground</arg>
<doc>Calls a method from specified component.</doc>
<msg timestamp="20240424 19:52:42.575" level="INFO">${Background_top_color} = java.awt.Color[r=245,g=245,b=245]</msg>
<status status="PASS" starttime="20240424 19:52:42.571" endtime="20240424 19:52:42.575"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${Background_top_color}</arg>
<arg>[r=245,g=245,b=245]</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:42.575" endtime="20240424 19:52:42.575"/>
</kw>
<kw name="Call Component Method" library="SwingRobot">
<var>${Background_bottom_color}</var>
<arg>Background Bottom Color</arg>
<arg>getBackground</arg>
<doc>Calls a method from specified component.</doc>
<msg timestamp="20240424 19:52:42.581" level="INFO">${Background_bottom_color} = java.awt.Color[r=204,g=204,b=204]</msg>
<status status="PASS" starttime="20240424 19:52:42.575" endtime="20240424 19:52:42.581"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${Background_bottom_color}</arg>
<arg>[r=204,g=204,b=204]</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:42.581" endtime="20240424 19:52:42.581"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Info</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:42.581" endtime="20240424 19:52:42.648"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:42.648" endtime="20240424 19:52:42.655"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:52:42.748" level="INFO">${row_count} = 2</msg>
<status status="PASS" starttime="20240424 19:52:42.655" endtime="20240424 19:52:42.748"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${row_count}</arg>
<arg>2</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:52:42.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:42.748" endtime="20240424 19:52:42.748"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${Presentation_time_in_seconds}</var>
<arg>0</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:42.761" level="INFO">${Presentation_time_in_seconds} = 3</msg>
<status status="PASS" starttime="20240424 19:52:42.748" endtime="20240424 19:52:42.761"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Presentation_time_in_seconds}</arg>
<arg>3</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 19:52:42.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:42.761" endtime="20240424 19:52:42.761"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Performance</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:42.761" endtime="20240424 19:52:42.857"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${Anti-aliasing}</var>
<arg>0</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 19:52:43.157" level="INFO">${Anti-aliasing} = 8 Samples</msg>
<status status="PASS" starttime="20240424 19:52:42.857" endtime="20240424 19:52:43.157"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Anti-aliasing}</arg>
<arg>8 Samples</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:52:43.157" endtime="20240424 19:52:43.157"/>
</kw>
<kw name="All Checkboxes Should Be Checked" library="SwingRobot">
<doc>Fails if any checkbox in current context is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:43.157" endtime="20240424 19:52:43.157"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${Objects_drawn_in_navigation}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:43.177" level="INFO">${Objects_drawn_in_navigation} = 2000</msg>
<status status="PASS" starttime="20240424 19:52:43.157" endtime="20240424 19:52:43.177"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Objects_drawn_in_navigation}</arg>
<arg>2000</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:52:43.177" endtime="20240424 19:52:43.177"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${Objects_drawn}</var>
<arg>1</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:43.183" level="INFO">${Objects_drawn} = 50000</msg>
<status status="PASS" starttime="20240424 19:52:43.177" endtime="20240424 19:52:43.183"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Objects_drawn}</arg>
<arg>50000</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:52:43.183" endtime="20240424 19:52:43.183"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:43.183" endtime="20240424 19:52:43.326"/>
</kw>
<status status="PASS" starttime="20240424 19:52:40.574" endtime="20240424 19:52:43.326"/>
</kw>
<status status="PASS" starttime="20240424 19:52:10.924" endtime="20240424 19:52:43.326"/>
</test>
<test id="s1-s4-t10" name="Verify Dimension" line="99">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:43.326" endtime="20240424 19:52:43.330"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:52:43.330" endtime="20240424 19:52:43.432"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:43.432" endtime="20240424 19:52:43.436"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:43.436" endtime="20240424 19:52:43.436"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:43.436" endtime="20240424 19:52:43.448"/>
</kw>
<status status="PASS" starttime="20240424 19:52:43.432" endtime="20240424 19:52:43.448"/>
</kw>
<status status="PASS" starttime="20240424 19:52:43.326" endtime="20240424 19:52:43.448"/>
</kw>
<status status="PASS" starttime="20240424 19:52:43.326" endtime="20240424 19:52:43.448"/>
</kw>
<kw name="Given Solibri is running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:52:43.627" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:52:43.627" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:52:43 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:52:43.448" endtime="20240424 19:52:43.627"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:52:43.627" endtime="20240424 19:52:43.627"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:43.627" endtime="20240424 19:52:43.644"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:52:43.647" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:52:43.644" endtime="20240424 19:52:43.647"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:43.647" endtime="20240424 19:52:43.647"/>
</kw>
<status status="PASS" starttime="20240424 19:52:43.644" endtime="20240424 19:52:43.647"/>
</kw>
<status status="PASS" starttime="20240424 19:52:43.448" endtime="20240424 19:52:43.647"/>
</kw>
<kw name="And Switch to the Settings View" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:43.647" endtime="20240424 19:52:43.736"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:43.736" endtime="20240424 19:52:43.782"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:43.782" endtime="20240424 19:52:43.784"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:43.784" endtime="20240424 19:52:43.834"/>
</kw>
<status status="PASS" starttime="20240424 19:52:43.736" endtime="20240424 19:52:43.834"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:52:43.834" endtime="20240424 19:52:44.431"/>
</kw>
<status status="PASS" starttime="20240424 19:52:43.647" endtime="20240424 19:52:44.431"/>
</kw>
<kw name="Then Verify Default Dimension" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:44.431" endtime="20240424 19:52:44.444"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Dimension...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:44.444" endtime="20240424 19:52:44.446"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Dimension</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:44.446" endtime="20240424 19:52:44.657"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${minimum_text_size}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:44.713" level="INFO">${minimum_text_size} = 13/16"</msg>
<status status="PASS" starttime="20240424 19:52:44.657" endtime="20240424 19:52:44.713"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${minimum_text_size}</arg>
<arg>13/16"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:44.713" endtime="20240424 19:52:44.713"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${maximum_text_size}</var>
<arg>1</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:44.720" level="INFO">${maximum_text_size} = 3'-3 3/8"</msg>
<status status="PASS" starttime="20240424 19:52:44.713" endtime="20240424 19:52:44.720"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${maximum_text_size}</arg>
<arg>3'-3 3/8"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:44.720" endtime="20240424 19:52:44.720"/>
</kw>
<kw name="Call Component Method" library="SwingRobot">
<var>${text_color}</var>
<arg>Text Color</arg>
<arg>getBackground</arg>
<doc>Calls a method from specified component.</doc>
<msg timestamp="20240424 19:52:44.722" level="INFO">${text_color} = java.awt.Color[r=192,g=0,b=192]</msg>
<status status="PASS" starttime="20240424 19:52:44.720" endtime="20240424 19:52:44.722"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${text_color}</arg>
<arg>[r=192,g=0,b=192]</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:44.722" endtime="20240424 19:52:44.722"/>
</kw>
<kw name="Call Component Method" library="SwingRobot">
<var>${line_color}</var>
<arg>Line Color</arg>
<arg>getBackground</arg>
<doc>Calls a method from specified component.</doc>
<msg timestamp="20240424 19:52:44.722" level="INFO">${line_color} = java.awt.Color[r=192,g=0,b=192]</msg>
<status status="PASS" starttime="20240424 19:52:44.722" endtime="20240424 19:52:44.722"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${line_color}</arg>
<arg>[r=192,g=0,b=192]</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:44.722" endtime="20240424 19:52:44.722"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${line_thickness}</var>
<arg>0</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:44.782" level="INFO">${line_thickness} = 2</msg>
<status status="PASS" starttime="20240424 19:52:44.722" endtime="20240424 19:52:44.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${line_thickness}</arg>
<arg>2</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 19:52:44.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:44.782" endtime="20240424 19:52:44.782"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:44.782" endtime="20240424 19:52:44.795"/>
</kw>
<kw name="Check Box Should Be Unchecked" library="SwingRobot">
<arg>1</arg>
<doc>Fails if checkbox is checked.</doc>
<status status="PASS" starttime="20240424 19:52:44.795" endtime="20240424 19:52:44.798"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:44.798" endtime="20240424 19:52:44.820"/>
</kw>
<status status="PASS" starttime="20240424 19:52:44.431" endtime="20240424 19:52:44.820"/>
</kw>
<status status="PASS" starttime="20240424 19:52:43.326" endtime="20240424 19:52:44.820"/>
</test>
<test id="s1-s4-t11" name="Verify Markup" line="105">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:44.820" endtime="20240424 19:52:44.820"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:52:44.820" endtime="20240424 19:52:44.935"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:44.935" endtime="20240424 19:52:44.935"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:44.935" endtime="20240424 19:52:44.946"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:44.946" endtime="20240424 19:52:44.959"/>
</kw>
<status status="PASS" starttime="20240424 19:52:44.935" endtime="20240424 19:52:44.959"/>
</kw>
<status status="PASS" starttime="20240424 19:52:44.820" endtime="20240424 19:52:44.959"/>
</kw>
<status status="PASS" starttime="20240424 19:52:44.820" endtime="20240424 19:52:44.959"/>
</kw>
<kw name="Given Solibri is running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:52:44.976" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:52:44.976" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:52:44 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:52:44.959" endtime="20240424 19:52:44.976"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:52:44.976" endtime="20240424 19:52:44.976"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:44.976" endtime="20240424 19:52:44.985"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:52:44.987" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:52:44.985" endtime="20240424 19:52:44.987"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:44.987" endtime="20240424 19:52:44.987"/>
</kw>
<status status="PASS" starttime="20240424 19:52:44.985" endtime="20240424 19:52:44.987"/>
</kw>
<status status="PASS" starttime="20240424 19:52:44.959" endtime="20240424 19:52:44.987"/>
</kw>
<kw name="And Switch to the Settings View" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:44.987" endtime="20240424 19:52:44.998"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:44.998" endtime="20240424 19:52:45.026"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:45.026" endtime="20240424 19:52:45.028"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:45.028" endtime="20240424 19:52:45.041"/>
</kw>
<status status="PASS" starttime="20240424 19:52:44.998" endtime="20240424 19:52:45.041"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:52:45.041" endtime="20240424 19:52:45.495"/>
</kw>
<status status="PASS" starttime="20240424 19:52:44.987" endtime="20240424 19:52:45.495"/>
</kw>
<kw name="Then Verify Default Markup" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:45.496" endtime="20240424 19:52:45.571"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Markup...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:45.571" endtime="20240424 19:52:45.574"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Markup</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:45.574" endtime="20240424 19:52:45.805"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Markup</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:45.805" endtime="20240424 19:52:45.879"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${minimum_text_size}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:45.887" level="INFO">${minimum_text_size} = 7 7/8"</msg>
<status status="PASS" starttime="20240424 19:52:45.879" endtime="20240424 19:52:45.887"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${minimum_text_size}</arg>
<arg>7 7/8"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:45.887" endtime="20240424 19:52:45.887"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${maximum_text_size}</var>
<arg>1</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:45.939" level="INFO">${maximum_text_size} = 3'-3 3/8"</msg>
<status status="PASS" starttime="20240424 19:52:45.887" endtime="20240424 19:52:45.939"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${maximum_text_size}</arg>
<arg>3'-3 3/8"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:45.939" endtime="20240424 19:52:45.939"/>
</kw>
<kw name="Call Component Method" library="SwingRobot">
<var>${Component_edge_line_color}</var>
<arg>Color</arg>
<arg>getBackground</arg>
<doc>Calls a method from specified component.</doc>
<msg timestamp="20240424 19:52:45.942" level="INFO">${Component_edge_line_color} = java.awt.Color[r=255,g=0,b=0]</msg>
<status status="PASS" starttime="20240424 19:52:45.939" endtime="20240424 19:52:45.942"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${Component_edge_line_color}</arg>
<arg>[r=255,g=0,b=0]</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:45.942" endtime="20240424 19:52:45.942"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${line_thickness}</var>
<arg>0</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:45.971" level="INFO">${line_thickness} = 3</msg>
<status status="PASS" starttime="20240424 19:52:45.942" endtime="20240424 19:52:45.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${line_thickness}</arg>
<arg>3</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 19:52:45.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:45.971" endtime="20240424 19:52:45.971"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Component Stamp</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:45.971" endtime="20240424 19:52:46.020"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Add Row</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:46.020" endtime="20240424 19:52:46.046"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Remove Rows</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:46.046" endtime="20240424 19:52:46.062"/>
</kw>
<kw name="Select Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Selects a cell in a table.</doc>
<status status="PASS" starttime="20240424 19:52:46.062" endtime="20240424 19:52:46.062"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Move Rows Down</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:46.062" endtime="20240424 19:52:46.112"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Move Rows Up</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:46.112" endtime="20240424 19:52:46.122"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${table_row_0_property}</var>
<arg>0</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:52:46.134" level="INFO">${table_row_0_property} = Type</msg>
<status status="PASS" starttime="20240424 19:52:46.122" endtime="20240424 19:52:46.134"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${table_row_0_property}</arg>
<arg>Type</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:46.134" endtime="20240424 19:52:46.134"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${table_row_0_display_name}</var>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:52:46.141" level="INFO">${table_row_0_display_name} = Type</msg>
<status status="PASS" starttime="20240424 19:52:46.134" endtime="20240424 19:52:46.141"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${table_row_0_display_name}</arg>
<arg>Type</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:46.141" endtime="20240424 19:52:46.141"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${table_row_1_property}</var>
<arg>0</arg>
<arg>1</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:52:46.151" level="INFO">${table_row_1_property} = Name</msg>
<status status="PASS" starttime="20240424 19:52:46.141" endtime="20240424 19:52:46.151"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${table_row_1_property}</arg>
<arg>Name</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:46.151" endtime="20240424 19:52:46.151"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${table_row_1_display_name}</var>
<arg>0</arg>
<arg>1</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:52:46.157" level="INFO">${table_row_1_display_name} = Name</msg>
<status status="PASS" starttime="20240424 19:52:46.151" endtime="20240424 19:52:46.157"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${table_row_1_display_name}</arg>
<arg>Name</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:46.157" endtime="20240424 19:52:46.157"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Coordinate Stamp</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:46.157" endtime="20240424 19:52:46.232"/>
</kw>
<kw name="Radio Button Should Be Selected" library="SwingRobot">
<arg>0</arg>
<doc>Fails if radiobutton is not selected.</doc>
<status status="PASS" starttime="20240424 19:52:46.232" endtime="20240424 19:52:46.241"/>
</kw>
<kw name="Radio Button Should Not Be Selected" library="SwingRobot">
<arg>1</arg>
<doc>Fails if radiobutton is selected.</doc>
<status status="PASS" starttime="20240424 19:52:46.241" endtime="20240424 19:52:46.276"/>
</kw>
<kw name="Push Radio Button" library="SwingRobot">
<arg>1</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:46.276" endtime="20240424 19:52:46.314"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${move_x}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:46.332" level="INFO">${move_x} = 0'</msg>
<status status="PASS" starttime="20240424 19:52:46.314" endtime="20240424 19:52:46.332"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${move_x}</arg>
<arg>0'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:46.332" endtime="20240424 19:52:46.332"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${move_y}</var>
<arg>1</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:46.338" level="INFO">${move_y} = 0'</msg>
<status status="PASS" starttime="20240424 19:52:46.332" endtime="20240424 19:52:46.338"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${move_y}</arg>
<arg>0'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:46.338" endtime="20240424 19:52:46.338"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${move_z}</var>
<arg>2</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:46.344" level="INFO">${move_z} = 0'</msg>
<status status="PASS" starttime="20240424 19:52:46.338" endtime="20240424 19:52:46.344"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${move_z}</arg>
<arg>0'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:46.344" endtime="20240424 19:52:46.344"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${rotation}</var>
<arg>3</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:46.347" level="INFO">${rotation} = 0 °</msg>
<status status="PASS" starttime="20240424 19:52:46.344" endtime="20240424 19:52:46.347"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${rotation}</arg>
<arg>0 °</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:46.347" endtime="20240424 19:52:46.347"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${pivot_piont_x}</var>
<arg>4</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:46.351" level="INFO">${pivot_piont_x} = 0'</msg>
<status status="PASS" starttime="20240424 19:52:46.347" endtime="20240424 19:52:46.351"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${pivot_piont_x}</arg>
<arg>0'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:46.351" endtime="20240424 19:52:46.351"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${pivot_piont_y}</var>
<arg>5</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:46.353" level="INFO">${pivot_piont_y} = 0'</msg>
<status status="PASS" starttime="20240424 19:52:46.351" endtime="20240424 19:52:46.353"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${pivot_piont_y}</arg>
<arg>0'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:46.353" endtime="20240424 19:52:46.353"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:46.353" endtime="20240424 19:52:46.380"/>
</kw>
<status status="PASS" starttime="20240424 19:52:45.495" endtime="20240424 19:52:46.380"/>
</kw>
<status status="PASS" starttime="20240424 19:52:44.820" endtime="20240424 19:52:46.380"/>
</test>
<test id="s1-s4-t12" name="Verify Sectioning" line="111">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:46.380" endtime="20240424 19:52:46.384"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:52:46.384" endtime="20240424 19:52:46.493"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:46.493" endtime="20240424 19:52:46.493"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:46.493" endtime="20240424 19:52:46.493"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:46.493" endtime="20240424 19:52:46.522"/>
</kw>
<status status="PASS" starttime="20240424 19:52:46.493" endtime="20240424 19:52:46.522"/>
</kw>
<status status="PASS" starttime="20240424 19:52:46.380" endtime="20240424 19:52:46.522"/>
</kw>
<status status="PASS" starttime="20240424 19:52:46.380" endtime="20240424 19:52:46.522"/>
</kw>
<kw name="Given Solibri is running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:52:46.541" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:52:46.541" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:52:46 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:52:46.522" endtime="20240424 19:52:46.541"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:52:46.541" endtime="20240424 19:52:46.541"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:46.541" endtime="20240424 19:52:46.547"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:52:46.550" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:52:46.548" endtime="20240424 19:52:46.550"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:46.550" endtime="20240424 19:52:46.551"/>
</kw>
<status status="PASS" starttime="20240424 19:52:46.547" endtime="20240424 19:52:46.551"/>
</kw>
<status status="PASS" starttime="20240424 19:52:46.522" endtime="20240424 19:52:46.551"/>
</kw>
<kw name="And Switch to the Settings View" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:46.551" endtime="20240424 19:52:46.617"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:46.617" endtime="20240424 19:52:46.633"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:46.633" endtime="20240424 19:52:46.649"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:46.649" endtime="20240424 19:52:46.651"/>
</kw>
<status status="PASS" starttime="20240424 19:52:46.617" endtime="20240424 19:52:46.651"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:52:46.651" endtime="20240424 19:52:47.070"/>
</kw>
<status status="PASS" starttime="20240424 19:52:46.551" endtime="20240424 19:52:47.070"/>
</kw>
<kw name="Then Verify Default Sectioning" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:47.070" endtime="20240424 19:52:47.088"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Sectioning...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:47.088" endtime="20240424 19:52:47.091"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Sectioning</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:47.091" endtime="20240424 19:52:47.426"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:47.426" endtime="20240424 19:52:47.434"/>
</kw>
<kw name="Call Component Method" library="SwingRobot">
<var>${line_color}</var>
<arg>Line Color</arg>
<arg>getBackground</arg>
<doc>Calls a method from specified component.</doc>
<msg timestamp="20240424 19:52:47.498" level="INFO">${line_color} = java.awt.Color[r=255,g=255,b=0]</msg>
<status status="PASS" starttime="20240424 19:52:47.434" endtime="20240424 19:52:47.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${line_color}</arg>
<arg>[r=255,g=255,b=0]</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:47.498" endtime="20240424 19:52:47.498"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${line_thickness}</var>
<arg>0</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:47.570" level="INFO">${line_thickness} = 3</msg>
<status status="PASS" starttime="20240424 19:52:47.498" endtime="20240424 19:52:47.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${line_thickness}</arg>
<arg>3</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 19:52:47.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:47.570" endtime="20240424 19:52:47.570"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>1</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:47.570" endtime="20240424 19:52:47.620"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${fill_option}</var>
<arg>0</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 19:52:47.882" level="INFO">${fill_option} = Fill sections with component's color</msg>
<status status="PASS" starttime="20240424 19:52:47.620" endtime="20240424 19:52:47.882"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${fill_option}</arg>
<arg>Fill sections with component's color</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:47.882" endtime="20240424 19:52:47.882"/>
</kw>
<kw name="Call Component Method" library="SwingRobot">
<var>${fill_color}</var>
<arg>Fill Color</arg>
<arg>getBackground</arg>
<doc>Calls a method from specified component.</doc>
<msg timestamp="20240424 19:52:47.897" level="INFO">${fill_color} = java.awt.Color[r=23,g=39,b=81]</msg>
<status status="PASS" starttime="20240424 19:52:47.882" endtime="20240424 19:52:47.897"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${fill_color}</arg>
<arg>[r=23,g=39,b=81]</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:47.897" endtime="20240424 19:52:47.897"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${fill_transparency}</var>
<arg>1</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:47.915" level="INFO">${fill_transparency} = 50</msg>
<status status="PASS" starttime="20240424 19:52:47.897" endtime="20240424 19:52:47.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${fill_transparency}</arg>
<arg>50</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 19:52:47.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:47.915" endtime="20240424 19:52:47.916"/>
</kw>
<kw name="Check Box Should Not Be Checked" library="SwingRobot">
<arg>2</arg>
<doc>Alias for `Check Box Should Be Unchecked` keyword.</doc>
<status status="PASS" starttime="20240424 19:52:47.916" endtime="20240424 19:52:47.921"/>
</kw>
<kw name="Check Check Box" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a checkbox and when found, checks it.</doc>
<status status="PASS" starttime="20240424 19:52:47.921" endtime="20240424 19:52:47.947"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Add Row</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:47.947" endtime="20240424 19:52:47.987"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Remove Rows</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:47.987" endtime="20240424 19:52:48.003"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:48.003" endtime="20240424 19:52:48.033"/>
</kw>
<status status="PASS" starttime="20240424 19:52:47.070" endtime="20240424 19:52:48.033"/>
</kw>
<status status="PASS" starttime="20240424 19:52:46.380" endtime="20240424 19:52:48.033"/>
</test>
<test id="s1-s4-t13" name="Verify Footprints" line="117">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:48.033" endtime="20240424 19:52:48.038"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:52:48.038" endtime="20240424 19:52:48.152"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:48.152" endtime="20240424 19:52:48.162"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:48.162" endtime="20240424 19:52:48.167"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:48.167" endtime="20240424 19:52:48.171"/>
</kw>
<status status="PASS" starttime="20240424 19:52:48.152" endtime="20240424 19:52:48.171"/>
</kw>
<status status="PASS" starttime="20240424 19:52:48.033" endtime="20240424 19:52:48.171"/>
</kw>
<status status="PASS" starttime="20240424 19:52:48.033" endtime="20240424 19:52:48.171"/>
</kw>
<kw name="Given Solibri is running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:52:48.179" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:52:48.179" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:52:48 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:52:48.171" endtime="20240424 19:52:48.179"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:52:48.179" endtime="20240424 19:52:48.179"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:48.179" endtime="20240424 19:52:48.185"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:52:48.185" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:52:48.185" endtime="20240424 19:52:48.185"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:48.185" endtime="20240424 19:52:48.185"/>
</kw>
<status status="PASS" starttime="20240424 19:52:48.185" endtime="20240424 19:52:48.185"/>
</kw>
<status status="PASS" starttime="20240424 19:52:48.171" endtime="20240424 19:52:48.185"/>
</kw>
<kw name="And Switch to the Settings View" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:48.190" endtime="20240424 19:52:48.259"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:48.259" endtime="20240424 19:52:48.259"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:48.259" endtime="20240424 19:52:48.259"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:48.259" endtime="20240424 19:52:48.346"/>
</kw>
<status status="PASS" starttime="20240424 19:52:48.259" endtime="20240424 19:52:48.346"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:52:48.346" endtime="20240424 19:52:48.752"/>
</kw>
<status status="PASS" starttime="20240424 19:52:48.190" endtime="20240424 19:52:48.752"/>
</kw>
<kw name="Then Verify Default Footprints" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:48.752" endtime="20240424 19:52:48.775"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Footprints...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:48.775" endtime="20240424 19:52:48.790"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Footprints</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:48.790" endtime="20240424 19:52:48.991"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Space Info</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:48.991" endtime="20240424 19:52:49.007"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:49.007" endtime="20240424 19:52:49.011"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>1</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:49.011" endtime="20240424 19:52:49.016"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>2</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:49.016" endtime="20240424 19:52:49.021"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${minimum_text_size}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:49.026" level="INFO">${minimum_text_size} = 1 15/16"</msg>
<status status="PASS" starttime="20240424 19:52:49.021" endtime="20240424 19:52:49.026"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${minimum_text_size}</arg>
<arg>1 15/16"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:49.026" endtime="20240424 19:52:49.026"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${maximum_text_size}</var>
<arg>1</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:49.029" level="INFO">${maximum_text_size} = 3'-3 3/8"</msg>
<status status="PASS" starttime="20240424 19:52:49.026" endtime="20240424 19:52:49.029"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${maximum_text_size}</arg>
<arg>3'-3 3/8"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:49.029" endtime="20240424 19:52:49.029"/>
</kw>
<kw name="Call Component Method" library="SwingRobot">
<var>${Component_edge_line_color}</var>
<arg>Text Color</arg>
<arg>getBackground</arg>
<doc>Calls a method from specified component.</doc>
<msg timestamp="20240424 19:52:49.031" level="INFO">${Component_edge_line_color} = java.awt.Color[r=0,g=0,b=0]</msg>
<status status="PASS" starttime="20240424 19:52:49.029" endtime="20240424 19:52:49.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${Component_edge_line_color}</arg>
<arg>[r=0,g=0,b=0]</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:49.031" endtime="20240424 19:52:49.031"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>0</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:49.031" endtime="20240424 19:52:49.254"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Select Property</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:49.254" endtime="20240424 19:52:49.295"/>
</kw>
<kw name="Radio Button Should Be Selected" library="SwingRobot">
<arg>0</arg>
<doc>Fails if radiobutton is not selected.</doc>
<status status="PASS" starttime="20240424 19:52:49.295" endtime="20240424 19:52:49.299"/>
</kw>
<kw name="Get Selected Item From Dropdown Menu" library="SwingRobot">
<var>${property}</var>
<arg>0</arg>
<doc>Alias for `Get Selected Item From Combobox` keyword.</doc>
<msg timestamp="20240424 19:52:49.613" level="INFO">${property} = Name</msg>
<status status="PASS" starttime="20240424 19:52:49.299" endtime="20240424 19:52:49.613"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${property}</arg>
<arg>Name</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:49.613" endtime="20240424 19:52:49.613"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:49.613" endtime="20240424 19:52:49.640"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Footprints</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:49.640" endtime="20240424 19:52:49.653"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>1</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:49.653" endtime="20240424 19:52:49.755"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Select Property</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:49.755" endtime="20240424 19:52:49.788"/>
</kw>
<kw name="Radio Button Should Be Selected" library="SwingRobot">
<arg>0</arg>
<doc>Fails if radiobutton is not selected.</doc>
<status status="PASS" starttime="20240424 19:52:49.788" endtime="20240424 19:52:49.794"/>
</kw>
<kw name="Get Selected Item From Dropdown Menu" library="SwingRobot">
<var>${property}</var>
<arg>0</arg>
<doc>Alias for `Get Selected Item From Combobox` keyword.</doc>
<msg timestamp="20240424 19:52:50.074" level="INFO">${property} = Number</msg>
<status status="PASS" starttime="20240424 19:52:49.794" endtime="20240424 19:52:50.074"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${property}</arg>
<arg>Number</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:50.074" endtime="20240424 19:52:50.074"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:50.074" endtime="20240424 19:52:50.146"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Footprints</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:50.146" endtime="20240424 19:52:50.160"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Grid</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:50.160" endtime="20240424 19:52:50.191"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:50.191" endtime="20240424 19:52:50.207"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${text_size}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:50.207" level="INFO">${text_size} = 1'-7 11/16"</msg>
<status status="PASS" starttime="20240424 19:52:50.207" endtime="20240424 19:52:50.207"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${text_size}</arg>
<arg>1'-7 11/16"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:50.207" endtime="20240424 19:52:50.207"/>
</kw>
<kw name="Call Component Method" library="SwingRobot">
<var>${text_color}</var>
<arg>Text Color</arg>
<arg>getBackground</arg>
<doc>Calls a method from specified component.</doc>
<msg timestamp="20240424 19:52:50.216" level="INFO">${text_color} = java.awt.Color[r=0,g=0,b=0]</msg>
<status status="PASS" starttime="20240424 19:52:50.207" endtime="20240424 19:52:50.216"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${text_color}</arg>
<arg>[r=0,g=0,b=0]</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:50.216" endtime="20240424 19:52:50.216"/>
</kw>
<kw name="Call Component Method" library="SwingRobot">
<var>${line_color}</var>
<arg>Text Color</arg>
<arg>getBackground</arg>
<doc>Calls a method from specified component.</doc>
<msg timestamp="20240424 19:52:50.216" level="INFO">${line_color} = java.awt.Color[r=0,g=0,b=0]</msg>
<status status="PASS" starttime="20240424 19:52:50.216" endtime="20240424 19:52:50.216"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${line_color}</arg>
<arg>[r=0,g=0,b=0]</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:50.216" endtime="20240424 19:52:50.216"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${line_thickness}</var>
<arg>0</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:50.216" level="INFO">${line_thickness} = 1</msg>
<status status="PASS" starttime="20240424 19:52:50.216" endtime="20240424 19:52:50.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${line_thickness}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 19:52:50.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:50.216" endtime="20240424 19:52:50.216"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${line_transparency}</var>
<arg>1</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:50.216" level="INFO">${line_transparency} = 60</msg>
<status status="PASS" starttime="20240424 19:52:50.216" endtime="20240424 19:52:50.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${line_transparency}</arg>
<arg>60</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 19:52:50.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:50.216" endtime="20240424 19:52:50.216"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Lines</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:50.216" endtime="20240424 19:52:50.236"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:50.236" endtime="20240424 19:52:50.241"/>
</kw>
<kw name="Call Component Method" library="SwingRobot">
<var>${line_color}</var>
<arg>Text Color</arg>
<arg>getBackground</arg>
<doc>Calls a method from specified component.</doc>
<msg timestamp="20240424 19:52:50.241" level="INFO">${line_color} = java.awt.Color[r=0,g=0,b=0]</msg>
<status status="PASS" starttime="20240424 19:52:50.241" endtime="20240424 19:52:50.241"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${line_color}</arg>
<arg>[r=0,g=0,b=0]</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:50.241" endtime="20240424 19:52:50.241"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${line_thickness}</var>
<arg>0</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:50.248" level="INFO">${line_thickness} = 1</msg>
<status status="PASS" starttime="20240424 19:52:50.241" endtime="20240424 19:52:50.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${line_thickness}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 19:52:50.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:50.248" endtime="20240424 19:52:50.248"/>
</kw>
<kw name="Get Slider Value" library="SwingRobot">
<var>${line_transparency}</var>
<arg>1</arg>
<doc>Uses current context to search for a slider and when found, returns its current value.</doc>
<msg timestamp="20240424 19:52:50.253" level="INFO">${line_transparency} = 60</msg>
<status status="PASS" starttime="20240424 19:52:50.248" endtime="20240424 19:52:50.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${line_transparency}</arg>
<arg>60</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 19:52:50.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:52:50.253" endtime="20240424 19:52:50.253"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Drawings</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:50.253" endtime="20240424 19:52:50.262"/>
</kw>
<kw name="Check Box Should Be Unchecked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is checked.</doc>
<status status="PASS" starttime="20240424 19:52:50.262" endtime="20240424 19:52:50.279"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:50.279" endtime="20240424 19:52:50.316"/>
</kw>
<status status="PASS" starttime="20240424 19:52:48.752" endtime="20240424 19:52:50.316"/>
</kw>
<status status="PASS" starttime="20240424 19:52:48.033" endtime="20240424 19:52:50.316"/>
</test>
<test id="s1-s4-t14" name="Verify Navigation Map" line="123">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:50.316" endtime="20240424 19:52:50.330"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:52:50.330" endtime="20240424 19:52:50.442"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:50.442" endtime="20240424 19:52:50.487"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:50.487" endtime="20240424 19:52:50.491"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:50.491" endtime="20240424 19:52:50.537"/>
</kw>
<status status="PASS" starttime="20240424 19:52:50.442" endtime="20240424 19:52:50.537"/>
</kw>
<status status="PASS" starttime="20240424 19:52:50.316" endtime="20240424 19:52:50.537"/>
</kw>
<status status="PASS" starttime="20240424 19:52:50.316" endtime="20240424 19:52:50.537"/>
</kw>
<kw name="Given Solibri is running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:52:50.545" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:52:50.545" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:52:50 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:52:50.537" endtime="20240424 19:52:50.545"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:52:50.545" endtime="20240424 19:52:50.545"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:50.545" endtime="20240424 19:52:50.581"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:52:50.583" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:52:50.581" endtime="20240424 19:52:50.583"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:50.583" endtime="20240424 19:52:50.583"/>
</kw>
<status status="PASS" starttime="20240424 19:52:50.581" endtime="20240424 19:52:50.583"/>
</kw>
<status status="PASS" starttime="20240424 19:52:50.537" endtime="20240424 19:52:50.583"/>
</kw>
<kw name="And Switch to the Settings View" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:50.583" endtime="20240424 19:52:50.590"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:50.590" endtime="20240424 19:52:50.590"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:50.590" endtime="20240424 19:52:50.590"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:50.590" endtime="20240424 19:52:50.607"/>
</kw>
<status status="PASS" starttime="20240424 19:52:50.590" endtime="20240424 19:52:50.607"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:52:50.607" endtime="20240424 19:52:51.107"/>
</kw>
<status status="PASS" starttime="20240424 19:52:50.583" endtime="20240424 19:52:51.107"/>
</kw>
<kw name="Then Verify Default Navigation Map" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:51.108" endtime="20240424 19:52:51.178"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:51.178" endtime="20240424 19:52:51.216"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:51.216" endtime="20240424 19:52:51.218"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:51.218" endtime="20240424 19:52:51.255"/>
</kw>
<status status="PASS" starttime="20240424 19:52:51.178" endtime="20240424 19:52:51.255"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Navigation Map...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:51.255" endtime="20240424 19:52:51.262"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Navigation Map</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:51.262" endtime="20240424 19:52:51.470"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Space Info</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:51.470" endtime="20240424 19:52:51.538"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:51.538" endtime="20240424 19:52:51.542"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>1</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:51.542" endtime="20240424 19:52:51.579"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>2</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:51.579" endtime="20240424 19:52:51.627"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${minimum_text_size}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:51.662" level="INFO">${minimum_text_size} = 1 15/16"</msg>
<status status="PASS" starttime="20240424 19:52:51.627" endtime="20240424 19:52:51.662"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${minimum_text_size}</arg>
<arg>1 15/16"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:51.662" endtime="20240424 19:52:51.662"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${maximum_text_size}</var>
<arg>1</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:52:51.670" level="INFO">${maximum_text_size} = 3'-3 3/8"</msg>
<status status="PASS" starttime="20240424 19:52:51.662" endtime="20240424 19:52:51.670"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${maximum_text_size}</arg>
<arg>3'-3 3/8"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:51.670" endtime="20240424 19:52:51.670"/>
</kw>
<kw name="Call Component Method" library="SwingRobot">
<var>${Component_edge_line_color}</var>
<arg>Text Color</arg>
<arg>getBackground</arg>
<doc>Calls a method from specified component.</doc>
<msg timestamp="20240424 19:52:51.672" level="INFO">${Component_edge_line_color} = java.awt.Color[r=0,g=0,b=0]</msg>
<status status="PASS" starttime="20240424 19:52:51.670" endtime="20240424 19:52:51.672"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${Component_edge_line_color}</arg>
<arg>[r=0,g=0,b=0]</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:51.672" endtime="20240424 19:52:51.672"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>0</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:51.672" endtime="20240424 19:52:51.782"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Select Property</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:51.782" endtime="20240424 19:52:51.782"/>
</kw>
<kw name="Radio Button Should Be Selected" library="SwingRobot">
<arg>0</arg>
<doc>Fails if radiobutton is not selected.</doc>
<status status="PASS" starttime="20240424 19:52:51.782" endtime="20240424 19:52:51.790"/>
</kw>
<kw name="Get Selected Item From Dropdown Menu" library="SwingRobot">
<var>${property}</var>
<arg>0</arg>
<doc>Alias for `Get Selected Item From Combobox` keyword.</doc>
<msg timestamp="20240424 19:52:52.047" level="INFO">${property} = Name</msg>
<status status="PASS" starttime="20240424 19:52:51.790" endtime="20240424 19:52:52.047"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${property}</arg>
<arg>Name</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:52.047" endtime="20240424 19:52:52.047"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:52.047" endtime="20240424 19:52:52.109"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Navigation Map</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:52.109" endtime="20240424 19:52:52.114"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>1</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:52.114" endtime="20240424 19:52:52.255"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Select Property</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:52.255" endtime="20240424 19:52:52.292"/>
</kw>
<kw name="Radio Button Should Be Selected" library="SwingRobot">
<arg>0</arg>
<doc>Fails if radiobutton is not selected.</doc>
<status status="PASS" starttime="20240424 19:52:52.292" endtime="20240424 19:52:52.295"/>
</kw>
<kw name="Get Selected Item From Dropdown Menu" library="SwingRobot">
<var>${property}</var>
<arg>0</arg>
<doc>Alias for `Get Selected Item From Combobox` keyword.</doc>
<msg timestamp="20240424 19:52:52.568" level="INFO">${property} = Number</msg>
<status status="PASS" starttime="20240424 19:52:52.295" endtime="20240424 19:52:52.568"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${property}</arg>
<arg>Number</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:52.568" endtime="20240424 19:52:52.568"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:52.568" endtime="20240424 19:52:52.603"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Navigation Map</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:52.603" endtime="20240424 19:52:52.609"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Lines</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:52:52.609" endtime="20240424 19:52:52.635"/>
</kw>
<kw name="Call Component Method" library="SwingRobot">
<var>${Component_edge_line_color}</var>
<arg>Line Color</arg>
<arg>getBackground</arg>
<doc>Calls a method from specified component.</doc>
<msg timestamp="20240424 19:52:52.638" level="INFO">${Component_edge_line_color} = java.awt.Color[r=0,g=0,b=0]</msg>
<status status="PASS" starttime="20240424 19:52:52.635" endtime="20240424 19:52:52.638"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${Component_edge_line_color}</arg>
<arg>[r=0,g=0,b=0]</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:52.638" endtime="20240424 19:52:52.638"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:52.638" endtime="20240424 19:52:52.779"/>
</kw>
<status status="PASS" starttime="20240424 19:52:51.108" endtime="20240424 19:52:52.779"/>
</kw>
<status status="PASS" starttime="20240424 19:52:50.316" endtime="20240424 19:52:52.779"/>
</test>
<test id="s1-s4-t15" name="Verify DWG Settings" line="129">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:52.779" endtime="20240424 19:52:52.791"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:52:52.791" endtime="20240424 19:52:52.903"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:52.903" endtime="20240424 19:52:52.903"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:52.903" endtime="20240424 19:52:52.912"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:52.912" endtime="20240424 19:52:52.984"/>
</kw>
<status status="PASS" starttime="20240424 19:52:52.903" endtime="20240424 19:52:52.984"/>
</kw>
<status status="PASS" starttime="20240424 19:52:52.779" endtime="20240424 19:52:52.984"/>
</kw>
<status status="PASS" starttime="20240424 19:52:52.779" endtime="20240424 19:52:52.984"/>
</kw>
<kw name="Given Solibri is running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:52:52.984" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:52:52.984" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:52:52 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:52:52.984" endtime="20240424 19:52:52.984"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:52:52.984" endtime="20240424 19:52:52.984"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:52.984" endtime="20240424 19:52:52.999"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:52:52.999" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:52:52.999" endtime="20240424 19:52:52.999"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:52.999" endtime="20240424 19:52:52.999"/>
</kw>
<status status="PASS" starttime="20240424 19:52:52.999" endtime="20240424 19:52:52.999"/>
</kw>
<status status="PASS" starttime="20240424 19:52:52.984" endtime="20240424 19:52:52.999"/>
</kw>
<kw name="And Switch to the Settings View" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:52.999" endtime="20240424 19:52:53.008"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:53.008" endtime="20240424 19:52:53.011"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:53.011" endtime="20240424 19:52:53.013"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:53.013" endtime="20240424 19:52:53.020"/>
</kw>
<status status="PASS" starttime="20240424 19:52:53.008" endtime="20240424 19:52:53.020"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:52:53.020" endtime="20240424 19:52:53.455"/>
</kw>
<status status="PASS" starttime="20240424 19:52:52.999" endtime="20240424 19:52:53.455"/>
</kw>
<kw name="Then Verify Default DWG Settings" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:53.455" endtime="20240424 19:52:53.455"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:53.455" endtime="20240424 19:52:53.468"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:53.468" endtime="20240424 19:52:53.471"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:53.471" endtime="20240424 19:52:53.474"/>
</kw>
<status status="PASS" starttime="20240424 19:52:53.455" endtime="20240424 19:52:53.474"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>DWG Settings...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:53.474" endtime="20240424 19:52:53.488"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>DWG Settings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:53.488" endtime="20240424 19:52:53.756"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Add</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:53.756" endtime="20240424 19:52:53.806"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Add New Application</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:53.806" endtime="20240424 19:52:53.817"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>abc</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:52:53.817" endtime="20240424 19:52:53.844"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:53.844" endtime="20240424 19:52:53.947"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>DWG Settings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:53.947" endtime="20240424 19:52:53.962"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Remove</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:53.962" endtime="20240424 19:52:53.993"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Remove Selected Application</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:53.993" endtime="20240424 19:52:54.006"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Yes</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:54.006" endtime="20240424 19:52:54.031"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>DWG Settings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:54.031" endtime="20240424 19:52:54.072"/>
</kw>
<kw name="Validate Table Row String" library="settings_step_definitions">
<arg>Default Settings</arg>
<arg>0</arg>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${method_value}</var>
<arg>0</arg>
<arg>${row_number}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:52:54.072" level="INFO">${method_value} = Default Settings</msg>
<status status="PASS" starttime="20240424 19:52:54.072" endtime="20240424 19:52:54.072"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${method_value}</arg>
<arg>${row_string}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:54.072" endtime="20240424 19:52:54.072"/>
</kw>
<status status="PASS" starttime="20240424 19:52:54.072" endtime="20240424 19:52:54.072"/>
</kw>
<kw name="Validate Table Row String" library="settings_step_definitions">
<arg>CadDuct</arg>
<arg>1</arg>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${method_value}</var>
<arg>0</arg>
<arg>${row_number}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:52:54.090" level="INFO">${method_value} = CadDuct</msg>
<status status="PASS" starttime="20240424 19:52:54.072" endtime="20240424 19:52:54.090"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${method_value}</arg>
<arg>${row_string}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:54.090" endtime="20240424 19:52:54.090"/>
</kw>
<status status="PASS" starttime="20240424 19:52:54.072" endtime="20240424 19:52:54.090"/>
</kw>
<kw name="Validate Table Row String" library="settings_step_definitions">
<arg>QuickPen</arg>
<arg>2</arg>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${method_value}</var>
<arg>0</arg>
<arg>${row_number}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:52:54.099" level="INFO">${method_value} = QuickPen</msg>
<status status="PASS" starttime="20240424 19:52:54.090" endtime="20240424 19:52:54.099"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${method_value}</arg>
<arg>${row_string}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:54.099" endtime="20240424 19:52:54.099"/>
</kw>
<status status="PASS" starttime="20240424 19:52:54.090" endtime="20240424 19:52:54.099"/>
</kw>
<kw name="Validate Table Row String" library="settings_step_definitions">
<arg>Autodesk</arg>
<arg>3</arg>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${method_value}</var>
<arg>0</arg>
<arg>${row_number}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:52:54.102" level="INFO">${method_value} = Autodesk</msg>
<status status="PASS" starttime="20240424 19:52:54.099" endtime="20240424 19:52:54.102"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${method_value}</arg>
<arg>${row_string}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:54.102" endtime="20240424 19:52:54.102"/>
</kw>
<status status="PASS" starttime="20240424 19:52:54.099" endtime="20240424 19:52:54.102"/>
</kw>
<kw name="Validate Table Row String" library="settings_step_definitions">
<arg>MagiCAD</arg>
<arg>4</arg>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${method_value}</var>
<arg>0</arg>
<arg>${row_number}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:52:54.141" level="INFO">${method_value} = MagiCAD</msg>
<status status="PASS" starttime="20240424 19:52:54.102" endtime="20240424 19:52:54.141"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${method_value}</arg>
<arg>${row_string}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:54.141" endtime="20240424 19:52:54.141"/>
</kw>
<status status="PASS" starttime="20240424 19:52:54.102" endtime="20240424 19:52:54.141"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:52:54.141" endtime="20240424 19:52:54.177"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${units}</var>
<arg>0</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 19:52:54.462" level="INFO">${units} = Use Model Units</msg>
<status status="PASS" starttime="20240424 19:52:54.177" endtime="20240424 19:52:54.462"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${units}</arg>
<arg>Use Model Units</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:54.462" endtime="20240424 19:52:54.464"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Cancel</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:54.464" endtime="20240424 19:52:54.466"/>
</kw>
<status status="PASS" starttime="20240424 19:52:53.455" endtime="20240424 19:52:54.466"/>
</kw>
<status status="PASS" starttime="20240424 19:52:52.779" endtime="20240424 19:52:54.466"/>
</test>
<test id="s1-s4-t16" name="Verify Hyperlink Templates" line="135">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:54.482" endtime="20240424 19:52:54.489"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:52:54.489" endtime="20240424 19:52:54.598"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:54.598" endtime="20240424 19:52:54.630"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:54.630" endtime="20240424 19:52:54.632"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:54.632" endtime="20240424 19:52:54.644"/>
</kw>
<status status="PASS" starttime="20240424 19:52:54.598" endtime="20240424 19:52:54.644"/>
</kw>
<status status="PASS" starttime="20240424 19:52:54.482" endtime="20240424 19:52:54.644"/>
</kw>
<status status="PASS" starttime="20240424 19:52:54.482" endtime="20240424 19:52:54.644"/>
</kw>
<kw name="Given Solibri is running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:52:54.650" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:52:54.650" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:52:54 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:52:54.644" endtime="20240424 19:52:54.650"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:52:54.651" endtime="20240424 19:52:54.652"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:54.652" endtime="20240424 19:52:54.724"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:52:54.727" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:52:54.724" endtime="20240424 19:52:54.727"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:54.727" endtime="20240424 19:52:54.727"/>
</kw>
<status status="PASS" starttime="20240424 19:52:54.724" endtime="20240424 19:52:54.727"/>
</kw>
<status status="PASS" starttime="20240424 19:52:54.644" endtime="20240424 19:52:54.727"/>
</kw>
<kw name="And Switch to the Settings View" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:54.727" endtime="20240424 19:52:54.732"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:54.732" endtime="20240424 19:52:54.732"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:54.732" endtime="20240424 19:52:54.732"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:54.732" endtime="20240424 19:52:54.797"/>
</kw>
<status status="PASS" starttime="20240424 19:52:54.732" endtime="20240424 19:52:54.797"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:52:54.797" endtime="20240424 19:52:55.154"/>
</kw>
<status status="PASS" starttime="20240424 19:52:54.727" endtime="20240424 19:52:55.154"/>
</kw>
<kw name="Then Verify Default Hyperlink Templates" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:55.154" endtime="20240424 19:52:55.159"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:55.159" endtime="20240424 19:52:55.164"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:55.164" endtime="20240424 19:52:55.166"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:55.166" endtime="20240424 19:52:55.171"/>
</kw>
<status status="PASS" starttime="20240424 19:52:55.159" endtime="20240424 19:52:55.171"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Hyperlink Templates...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:55.171" endtime="20240424 19:52:55.171"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Hyperlink Templates</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:55.171" endtime="20240424 19:52:55.392"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Add a New Row</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:52:55.392" endtime="20240424 19:52:55.443"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Remove Selected Rows or Last Row</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:52:55.443" endtime="20240424 19:52:55.493"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Add a New Row</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:55.493" endtime="20240424 19:52:57.214"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open Hyperlink Templates</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:57.214" endtime="20240424 19:52:57.233"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>IFC Documentation.hyperlink</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:52:57.233" endtime="20240424 19:52:57.342"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Hyperlink Templates</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:57.342" endtime="20240424 19:52:57.342"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${default templates}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:52:57.363" level="INFO">${default templates} = IFC Documentation.hyperlink</msg>
<status status="PASS" starttime="20240424 19:52:57.342" endtime="20240424 19:52:57.363"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${default templates}</arg>
<arg>IFC Documentation.hyperlink</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:57.363" endtime="20240424 19:52:57.363"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:52:57.363" endtime="20240424 19:52:57.363"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Remove Selected Rows or Last Row</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:57.363" endtime="20240424 19:52:57.379"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:57.379" endtime="20240424 19:52:57.379"/>
</kw>
<status status="PASS" starttime="20240424 19:52:55.154" endtime="20240424 19:52:57.379"/>
</kw>
<status status="PASS" starttime="20240424 19:52:54.466" endtime="20240424 19:52:57.395"/>
</test>
<test id="s1-s4-t17" name="Verify BCF Live Connector Settings" line="141">
<kw name="Prepare Solibri For New Test" type="SETUP">
<kw name="Close All Dialogs And Switch To File Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:57.395" endtime="20240424 19:52:57.399"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:52:57.399" endtime="20240424 19:52:57.508"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:57.508" endtime="20240424 19:52:57.530"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:57.530" endtime="20240424 19:52:57.532"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:57.532" endtime="20240424 19:52:57.540"/>
</kw>
<status status="PASS" starttime="20240424 19:52:57.508" endtime="20240424 19:52:57.540"/>
</kw>
<status status="PASS" starttime="20240424 19:52:57.395" endtime="20240424 19:52:57.540"/>
</kw>
<status status="PASS" starttime="20240424 19:52:57.395" endtime="20240424 19:52:57.540"/>
</kw>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:52:57.559" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:52:57.559" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:52:57 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:52:57.540" endtime="20240424 19:52:57.559"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:52:57.559" endtime="20240424 19:52:57.559"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:57.559" endtime="20240424 19:52:57.578"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:52:57.578" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:52:57.578" endtime="20240424 19:52:57.578"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:57.578" endtime="20240424 19:52:57.578"/>
</kw>
<status status="PASS" starttime="20240424 19:52:57.578" endtime="20240424 19:52:57.578"/>
</kw>
<status status="PASS" starttime="20240424 19:52:57.540" endtime="20240424 19:52:57.578"/>
</kw>
<kw name="And Switch to the Settings View" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:57.578" endtime="20240424 19:52:57.595"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:57.595" endtime="20240424 19:52:57.601"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:57.601" endtime="20240424 19:52:57.604"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:57.604" endtime="20240424 19:52:57.674"/>
</kw>
<status status="PASS" starttime="20240424 19:52:57.595" endtime="20240424 19:52:57.674"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:52:57.674" endtime="20240424 19:52:58.125"/>
</kw>
<status status="PASS" starttime="20240424 19:52:57.578" endtime="20240424 19:52:58.125"/>
</kw>
<kw name="Then Verify BCF Live Connector" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:58.125" endtime="20240424 19:52:58.129"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>BCF Live Connector...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:58.129" endtime="20240424 19:52:58.196"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>BCF Live Connector</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:58.196" endtime="20240424 19:52:58.230"/>
</kw>
<kw name="All Checkboxes Should Be Checked" library="SwingRobot">
<doc>Fails if any checkbox in current context is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:58.230" endtime="20240424 19:52:58.230"/>
</kw>
<kw name="Uncheck All Checkboxes" library="SwingRobot">
<doc>Unchecks all checkboxes in current context.</doc>
<status status="PASS" starttime="20240424 19:52:58.230" endtime="20240424 19:52:58.245"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:58.245" endtime="20240424 19:52:58.276"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:58.276" endtime="20240424 19:52:58.276"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>BCF Live Connector...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:58.276" endtime="20240424 19:52:58.285"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>BCF Live Connector</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:58.285" endtime="20240424 19:52:58.320"/>
</kw>
<kw name="All Checkboxes Should Be Unchecked" library="SwingRobot">
<doc>Fails if any checkbox in current context is checked.</doc>
<status status="PASS" starttime="20240424 19:52:58.320" endtime="20240424 19:52:58.329"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Restore Default Settings</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:58.329" endtime="20240424 19:52:58.401"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Restore Default Settings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:58.401" endtime="20240424 19:52:58.450"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Yes</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:58.450" endtime="20240424 19:52:58.527"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>BCF Live Connector</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:52:58.527" endtime="20240424 19:52:58.534"/>
</kw>
<kw name="All Checkboxes Should Be Checked" library="SwingRobot">
<doc>Fails if any checkbox in current context is not checked.</doc>
<status status="PASS" starttime="20240424 19:52:58.534" endtime="20240424 19:52:58.534"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:58.534" endtime="20240424 19:52:58.553"/>
</kw>
<status status="PASS" starttime="20240424 19:52:58.125" endtime="20240424 19:52:58.553"/>
</kw>
<status status="PASS" starttime="20240424 19:52:57.395" endtime="20240424 19:52:58.553"/>
</test>
<doc>To check the functionality of the Solibri Settings
Verify General, Layaouts, and Units</doc>
<meta name="Feature">Settings</meta>
<status status="PASS" starttime="20240424 19:50:06.004" endtime="20240424 19:52:58.553"/>
</suite>
<suite id="s1-s5" name="05 Integrations View" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\05_integrations_view.robot">
<test id="s1-s5-t1" name="Verify Integrtions View Components" line="12">
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:52:58.611" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:52:58.611" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:52:58 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:52:58.590" endtime="20240424 19:52:58.611"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:52:58.611" endtime="20240424 19:52:58.611"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:58.611" endtime="20240424 19:52:58.611"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:52:58.619" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:52:58.611" endtime="20240424 19:52:58.619"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:58.619" endtime="20240424 19:52:58.619"/>
</kw>
<status status="PASS" starttime="20240424 19:52:58.611" endtime="20240424 19:52:58.619"/>
</kw>
<status status="PASS" starttime="20240424 19:52:58.590" endtime="20240424 19:52:58.619"/>
</kw>
<kw name="Then Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:52:58.619" endtime="20240424 19:52:58.732"/>
</kw>
<kw name="Then Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:58.732" endtime="20240424 19:52:58.732"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:58.732" endtime="20240424 19:52:58.732"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:58.732" endtime="20240424 19:52:58.756"/>
</kw>
<status status="PASS" starttime="20240424 19:52:58.732" endtime="20240424 19:52:58.756"/>
</kw>
<kw name="Then Switch to the Integrations View" library="integrations_view_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:58.756" endtime="20240424 19:52:58.796"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:58.796" endtime="20240424 19:52:58.830"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:58.830" endtime="20240424 19:52:58.830"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:58.830" endtime="20240424 19:52:58.840"/>
</kw>
<status status="PASS" starttime="20240424 19:52:58.796" endtime="20240424 19:52:58.840"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Integraions_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:52:58.840" endtime="20240424 19:52:58.854"/>
</kw>
<status status="PASS" starttime="20240424 19:52:58.756" endtime="20240424 19:52:58.854"/>
</kw>
<kw name="Then Verify CDE and BIM360 Components" library="integrations_view_step_definitions">
<kw name="Get Label Content" library="SwingRobot">
<var>${labelText}</var>
<arg>Documents API</arg>
<doc>Returns the text displayed on a label.
Assumes that the label exists in the current context.</doc>
<msg timestamp="20240424 19:52:58.969" level="INFO">${labelText} = Documents API</msg>
<status status="PASS" starttime="20240424 19:52:58.854" endtime="20240424 19:52:58.969"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>Documents API</arg>
<arg>${labelText}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:58.969" endtime="20240424 19:52:58.969"/>
</kw>
<kw name="Get Label Content" library="SwingRobot">
<var>${labelText}</var>
<arg>BIM 360</arg>
<doc>Returns the text displayed on a label.
Assumes that the label exists in the current context.</doc>
<msg timestamp="20240424 19:52:58.976" level="INFO">${labelText} = BIM 360</msg>
<status status="PASS" starttime="20240424 19:52:58.969" endtime="20240424 19:52:58.976"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>BIM 360</arg>
<arg>${labelText}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:58.976" endtime="20240424 19:52:58.976"/>
</kw>
<kw name="Get Label Content" library="SwingRobot">
<var>${labelText}</var>
<arg>Trimble Connect</arg>
<doc>Returns the text displayed on a label.
Assumes that the label exists in the current context.</doc>
<msg timestamp="20240424 19:52:58.991" level="INFO">${labelText} = Trimble Connect</msg>
<status status="PASS" starttime="20240424 19:52:58.976" endtime="20240424 19:52:58.991"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>Trimble Connect</arg>
<arg>${labelText}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:52:58.991" endtime="20240424 19:52:58.991"/>
</kw>
<status status="PASS" starttime="20240424 19:52:58.854" endtime="20240424 19:52:58.991"/>
</kw>
<kw name="Then Verify CDE Server List" library="integrations_view_step_definitions">
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Push Button</arg>
<arg>Connect</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:58.991" endtime="20240424 19:52:58.994"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>120</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Select Server</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Select Server</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:52:59.265" level="INFO">2024-04-24 19:52:59.190+0000 [SwingWorker-pool-6-thread-1] WARN  c.s.l.mock.server.MockBackend - External BCF servers are not implemented in mock licensing.</msg>
<status status="PASS" starttime="20240424 19:52:58.994" endtime="20240424 19:52:59.265"/>
</kw>
<status status="PASS" starttime="20240424 19:52:58.994" endtime="20240424 19:52:59.265"/>
</kw>
<kw name="Get Combobox Values" library="SwingRobot">
<var>${values}</var>
<arg>0</arg>
<doc>Returns a list containing all the values of a combobox.</doc>
<msg timestamp="20240424 19:52:59.503" level="INFO">${values} = []</msg>
<status status="PASS" starttime="20240424 19:52:59.265" endtime="20240424 19:52:59.503"/>
</kw>
<kw name="Verify Server List" library="integrations_view_step_definitions">
<arg>${values}</arg>
<for flavor="IN">
<var>${each_server_name}</var>
<value>${default_server_list}</value>
<iter>
<var name="${each_server_name}">['Aconex-Americas', 'Aconex-Australia/NZ', 'Aconex-Europe', 'Aconex-Mainland China', 'Aconex-Rest of Africa', 'Aconex-Rest of Asia', 'Aconex-Rest of the Middle East', 'Aconex-Saudi Arabia', 'Aconex-UK...</var>
<kw name="Should Contain" library="BuiltIn">
<arg>${each_server_name}</arg>
<arg>in</arg>
<arg>${solibri_server_list}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:59.503" endtime="20240424 19:52:59.503"/>
</kw>
<status status="PASS" starttime="20240424 19:52:59.503" endtime="20240424 19:52:59.503"/>
</iter>
<status status="PASS" starttime="20240424 19:52:59.503" endtime="20240424 19:52:59.503"/>
</for>
<status status="PASS" starttime="20240424 19:52:59.503" endtime="20240424 19:52:59.503"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Cancel</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:52:59.503" endtime="20240424 19:52:59.536"/>
</kw>
<status status="PASS" starttime="20240424 19:52:58.991" endtime="20240424 19:52:59.536"/>
</kw>
<status status="PASS" starttime="20240424 19:52:58.590" endtime="20240424 19:52:59.536"/>
</test>
<doc>Verify Integrations view
Verify CDE and BIM360 Components
Verify CDE Server list</doc>
<meta name="Feature">Integrations view</meta>
<meta name="Generated by">_gherkin2robotframework on 2023-07-19T22:05:01.733530_</meta>
<status status="PASS" starttime="20240424 19:52:58.553" endtime="20240424 19:52:59.536"/>
</suite>
<suite id="s1-s6" name="06 Security Settings" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\06_security_settings.robot">
<test id="s1-s6-t1" name="Verify Security Settings View" line="12">
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:52:59.592" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:52:59.592" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:52:58 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:52:59.583" endtime="20240424 19:52:59.592"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:52:59.592" endtime="20240424 19:52:59.592"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:59.592" endtime="20240424 19:52:59.597"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:52:59.597" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:52:59.597" endtime="20240424 19:52:59.597"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:52:59.597" endtime="20240424 19:52:59.597"/>
</kw>
<status status="PASS" starttime="20240424 19:52:59.597" endtime="20240424 19:52:59.597"/>
</kw>
<status status="PASS" starttime="20240424 19:52:59.583" endtime="20240424 19:52:59.597"/>
</kw>
<kw name="And Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:52:59.597" endtime="20240424 19:52:59.709"/>
</kw>
<kw name="And Open IFC model if No Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:59.709" endtime="20240424 19:52:59.709"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:59.709" endtime="20240424 19:52:59.716"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:59.716" endtime="20240424 19:52:59.736"/>
</kw>
<status status="PASS" starttime="20240424 19:52:59.709" endtime="20240424 19:52:59.736"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:59.736" endtime="20240424 19:52:59.743"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:52:59.743" endtime="20240424 19:52:59.749"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:52:59.749" endtime="20240424 19:52:59.820"/>
</kw>
<status status="PASS" starttime="20240424 19:52:59.736" endtime="20240424 19:52:59.820"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${info_button_disabled}</var>
<arg>Button Should Be Disabled</arg>
<arg>Info</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Info</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:52:59.820" endtime="20240424 19:53:00.167"/>
</kw>
<msg timestamp="20240424 19:53:00.167" level="INFO">${info_button_disabled} = True</msg>
<status status="PASS" starttime="20240424 19:52:59.820" endtime="20240424 19:53:00.167"/>
</kw>
<kw name="Take Screenshot" library="ScreenCapLibrary">
<doc>Takes a screenshot in the specified format at library import and
embeds it into the log file (PNG by default).</doc>
<msg timestamp="20240424 19:53:00.230" level="INFO" html="true">&lt;a href="screenshot_4.png"&gt;&lt;img src="screenshot_4.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240424 19:53:00.167" endtime="20240424 19:53:00.230"/>
</kw>
<if>
<branch type="IF" condition="${info_button_disabled} == True">
<kw name="IFC File Is Open" library="ModelHandlingResource">
<arg>${solibri_building_ifc}</arg>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${file_name_with_path}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:00.230" endtime="20240424 19:53:00.230"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:53:00.245" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:53:00.230" endtime="20240424 19:53:00.245"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:53:00.245" endtime="20240424 19:53:00.245"/>
</kw>
<status status="PASS" starttime="20240424 19:53:00.230" endtime="20240424 19:53:00.245"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:00.245" endtime="20240424 19:53:00.245"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:53:00.245" endtime="20240424 19:53:00.257"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:00.257" endtime="20240424 19:53:00.260"/>
</kw>
<status status="PASS" starttime="20240424 19:53:00.245" endtime="20240424 19:53:00.260"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:53:00.260" endtime="20240424 19:53:00.464"/>
</kw>
<status status="PASS" starttime="20240424 19:53:00.260" endtime="20240424 19:53:00.464"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:53:00.464" endtime="20240424 19:53:00.470"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:53:00.470" endtime="20240424 19:53:00.470"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:53:00.470" endtime="20240424 19:53:00.920"/>
</kw>
<status status="PASS" starttime="20240424 19:53:00.470" endtime="20240424 19:53:00.920"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:53:00.920" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:53:00.920" endtime="20240424 19:53:00.920"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:53:00.920" endtime="20240424 19:53:00.920"/>
</return>
<msg timestamp="20240424 19:53:00.920" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:53:00.920" endtime="20240424 19:53:00.920"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:53:00.920" endtime="20240424 19:53:01.290"/>
</kw>
<status status="PASS" starttime="20240424 19:53:00.920" endtime="20240424 19:53:01.290"/>
</kw>
<status status="PASS" starttime="20240424 19:53:00.920" endtime="20240424 19:53:01.290"/>
</branch>
<status status="PASS" starttime="20240424 19:53:00.920" endtime="20240424 19:53:01.290"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:53:01.290" endtime="20240424 19:53:01.290"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:53:01.290" endtime="20240424 19:53:01.290"/>
</branch>
<status status="PASS" starttime="20240424 19:53:01.290" endtime="20240424 19:53:01.290"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:53:01.290" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\ifc</msg>
<msg timestamp="20240424 19:53:01.290" level="INFO">${filename} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:53:01.290" endtime="20240424 19:53:01.290"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:53:01.290" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 19:53:01.290" level="INFO">${ext} = ifc</msg>
<status status="PASS" starttime="20240424 19:53:01.290" endtime="20240424 19:53:01.290"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<status status="NOT RUN" starttime="20240424 19:53:01.290" endtime="20240424 19:53:01.290"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:53:01.290" endtime="20240424 19:53:01.290"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:53:01.290" endtime="20240424 19:53:01.439"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:01.471" endtime="20240424 19:53:01.750"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:53:01.750" endtime="20240424 19:53:01.932"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:01.932" endtime="20240424 19:53:02.007"/>
</kw>
<status status="PASS" starttime="20240424 19:53:01.471" endtime="20240424 19:53:02.007"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:53:07.114" level="INFO">2024-04-24 19:53:04.483+0000 [Thread-100] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 47 ms.
2024-04-24 19:53:04.483+0000 [Thread-100] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 2822 ms (using 1 threads)
2024-04-24 19:53:04.643+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 125 ms
2024-04-24 19:53:06.674+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 2191 ms.</msg>
<status status="PASS" starttime="20240424 19:53:02.007" endtime="20240424 19:53:07.114"/>
</kw>
<status status="PASS" starttime="20240424 19:53:02.007" endtime="20240424 19:53:07.114"/>
</kw>
<msg timestamp="20240424 19:53:07.114" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:53:02.007" endtime="20240424 19:53:07.114"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:53:07.114" endtime="20240424 19:53:07.519"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:53:07.519" endtime="20240424 19:53:08.146"/>
</kw>
<status status="PASS" starttime="20240424 19:53:07.114" endtime="20240424 19:53:08.146"/>
</branch>
<status status="PASS" starttime="20240424 19:53:07.114" endtime="20240424 19:53:08.146"/>
</if>
<status status="PASS" starttime="20240424 19:53:01.290" endtime="20240424 19:53:08.146"/>
</kw>
<status status="PASS" starttime="20240424 19:53:01.290" endtime="20240424 19:53:08.146"/>
</branch>
<status status="PASS" starttime="20240424 19:53:01.290" endtime="20240424 19:53:08.146"/>
</if>
<status status="PASS" starttime="20240424 19:53:00.230" endtime="20240424 19:53:08.146"/>
</kw>
<status status="PASS" starttime="20240424 19:53:00.230" endtime="20240424 19:53:08.146"/>
</kw>
<status status="PASS" starttime="20240424 19:53:00.230" endtime="20240424 19:53:08.146"/>
</branch>
<status status="PASS" starttime="20240424 19:53:00.230" endtime="20240424 19:53:08.146"/>
</if>
<status status="PASS" starttime="20240424 19:52:59.709" endtime="20240424 19:53:08.146"/>
</kw>
<kw name="Then File Layout Is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:08.146" endtime="20240424 19:53:08.162"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:53:08.162" endtime="20240424 19:53:08.165"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:08.165" endtime="20240424 19:53:08.219"/>
</kw>
<status status="PASS" starttime="20240424 19:53:08.146" endtime="20240424 19:53:08.219"/>
</kw>
<status status="PASS" starttime="20240424 19:53:08.146" endtime="20240424 19:53:08.219"/>
</kw>
<kw name="Then Open the Security Settings" library="security_settings_step_definitions">
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click on Component</arg>
<arg>Security Settings</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:53:08.219" endtime="20240424 19:53:08.219"/>
</kw>
<status status="PASS" starttime="20240424 19:53:08.219" endtime="20240424 19:53:08.219"/>
</kw>
<kw name="Then Verify Default state" library="security_settings_step_definitions">
<kw name="Select Dialog" library="SwingRobot">
<arg>Security Settings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:53:08.219" endtime="20240424 19:53:08.509"/>
</kw>
<kw name="All Checkboxes Should Be Unchecked" library="SwingRobot">
<doc>Fails if any checkbox in current context is checked.</doc>
<status status="PASS" starttime="20240424 19:53:08.509" endtime="20240424 19:53:08.514"/>
</kw>
<kw name="Text Field Should Be Disabled" library="SwingRobot">
<arg>0</arg>
<doc>Fails if text component (e.g. text field, password field, text area) is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:08.514" endtime="20240424 19:53:08.514"/>
</kw>
<kw name="Text Field Should Be Disabled" library="SwingRobot">
<arg>1</arg>
<doc>Fails if text component (e.g. text field, password field, text area) is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:08.514" endtime="20240424 19:53:08.524"/>
</kw>
<kw name="Text Field Should Be Disabled" library="SwingRobot">
<arg>2</arg>
<doc>Fails if text component (e.g. text field, password field, text area) is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:08.524" endtime="20240424 19:53:08.524"/>
</kw>
<kw name="Text Field Should Be Disabled" library="SwingRobot">
<arg>3</arg>
<doc>Fails if text component (e.g. text field, password field, text area) is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:08.524" endtime="20240424 19:53:08.534"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:08.534" endtime="20240424 19:53:08.540"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:08.540" endtime="20240424 19:53:08.543"/>
</kw>
<status status="PASS" starttime="20240424 19:53:08.219" endtime="20240424 19:53:08.543"/>
</kw>
<kw name="Then Verify Master Password" library="security_settings_step_definitions">
<kw name="Uncheck All Checkboxes" library="SwingRobot">
<doc>Unchecks all checkboxes in current context.</doc>
<status status="PASS" starttime="20240424 19:53:08.543" endtime="20240424 19:53:08.561"/>
</kw>
<kw name="Check Check Box" library="SwingRobot">
<arg>0</arg>
<doc>Uses current context to search for a checkbox and when found, checks it.</doc>
<status status="PASS" starttime="20240424 19:53:08.561" endtime="20240424 19:53:08.585"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:08.585" endtime="20240424 19:53:08.585"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:08.585" endtime="20240424 19:53:08.585"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>Solibri</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:53:08.585" endtime="20240424 19:53:08.609"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:08.609" endtime="20240424 19:53:08.615"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>1</arg>
<arg>Solibri1</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:53:08.615" endtime="20240424 19:53:08.679"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:08.679" endtime="20240424 19:53:08.688"/>
</kw>
<kw name="Clear Text Field" library="SwingRobot">
<arg>1</arg>
<doc>Clears contents of text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:53:08.688" endtime="20240424 19:53:08.744"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>1</arg>
<arg>Solibri</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:53:08.744" endtime="20240424 19:53:08.779"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:08.779" endtime="20240424 19:53:08.808"/>
</kw>
<status status="PASS" starttime="20240424 19:53:08.543" endtime="20240424 19:53:08.808"/>
</kw>
<kw name="Then Verify Open Password" library="security_settings_step_definitions">
<kw name="Check Check Box" library="SwingRobot">
<arg>1</arg>
<doc>Uses current context to search for a checkbox and when found, checks it.</doc>
<status status="PASS" starttime="20240424 19:53:08.808" endtime="20240424 19:53:08.828"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:08.828" endtime="20240424 19:53:08.835"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:08.835" endtime="20240424 19:53:08.840"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>2</arg>
<arg>Solibri</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:53:08.840" endtime="20240424 19:53:08.881"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:08.881" endtime="20240424 19:53:08.890"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>3</arg>
<arg>Solibri1</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:53:08.890" endtime="20240424 19:53:08.950"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:08.950" endtime="20240424 19:53:08.956"/>
</kw>
<kw name="Clear Text Field" library="SwingRobot">
<arg>3</arg>
<doc>Clears contents of text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:53:08.956" endtime="20240424 19:53:08.976"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>3</arg>
<arg>Solibri</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:53:08.976" endtime="20240424 19:53:08.995"/>
</kw>
<status status="PASS" starttime="20240424 19:53:08.808" endtime="20240424 19:53:08.995"/>
</kw>
<kw name="Teardown" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Take Screenshot</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20240424 19:53:08.995" endtime="20240424 19:53:08.995"/>
</kw>
<kw name="Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<msg timestamp="20240424 19:53:09.111" level="INFO">Closed dialog 'Security Settings'.</msg>
<status status="PASS" starttime="20240424 19:53:08.995" endtime="20240424 19:53:09.111"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:09.114" endtime="20240424 19:53:09.122"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:53:09.122" endtime="20240424 19:53:09.125"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:09.125" endtime="20240424 19:53:09.130"/>
</kw>
<status status="PASS" starttime="20240424 19:53:09.114" endtime="20240424 19:53:09.130"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:53:09.130" endtime="20240424 19:53:09.142"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:53:09.142" endtime="20240424 19:53:09.164"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:53:19.182" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:53:09.164" endtime="20240424 19:53:19.182"/>
</kw>
<msg timestamp="20240424 19:53:19.182" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:53:09.164" endtime="20240424 19:53:19.182"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:53:19.182" endtime="20240424 19:53:19.191"/>
</kw>
<msg timestamp="20240424 19:53:19.191" level="INFO">${check_if_save_asked} = True</msg>
<status status="PASS" starttime="20240424 19:53:19.182" endtime="20240424 19:53:19.191"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:53:19.191" endtime="20240424 19:53:19.191"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:53:19.191" endtime="20240424 19:53:19.313"/>
</kw>
<status status="PASS" starttime="20240424 19:53:19.191" endtime="20240424 19:53:19.313"/>
</kw>
<status status="PASS" starttime="20240424 19:53:19.191" endtime="20240424 19:53:19.313"/>
</branch>
<status status="PASS" starttime="20240424 19:53:19.191" endtime="20240424 19:53:19.313"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:53:19.313" endtime="20240424 19:53:19.313"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:53:19.313" endtime="20240424 19:53:19.313"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:53:19.313" endtime="20240424 19:53:19.313"/>
</branch>
<status status="PASS" starttime="20240424 19:53:19.313" endtime="20240424 19:53:19.313"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:19.313" endtime="20240424 19:53:19.385"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:53:19.391" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:53:19.385" endtime="20240424 19:53:19.391"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:53:22.403" endtime="20240424 19:53:22.408"/>
</kw>
<status status="PASS" starttime="20240424 19:53:19.385" endtime="20240424 19:53:22.408"/>
</kw>
<status status="PASS" starttime="20240424 19:53:08.995" endtime="20240424 19:53:22.408"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:53:22.408" endtime="20240424 19:53:22.517"/>
</kw>
<status status="PASS" starttime="20240424 19:53:08.995" endtime="20240424 19:53:22.517"/>
</kw>
<status status="PASS" starttime="20240424 19:52:59.583" endtime="20240424 19:53:22.517"/>
</test>
<doc>Verify default form of Security Settings</doc>
<meta name="Feature">Security Settings</meta>
<meta name="Generated by">_gherkin2robotframework on 2023-07-21T11:48:46.650319_</meta>
<status status="PASS" starttime="20240424 19:52:59.536" endtime="20240424 19:53:22.517"/>
</suite>
<suite id="s1-s7" name="07 3D Toolbar" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\07_3d_toolbar.robot">
<test id="s1-s7-t1" name="Verify 3D Toolbar" line="13">
<kw name="Given Solibri is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:53:22.548" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:53:22.548" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:53:22 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:53:22.548" endtime="20240424 19:53:22.548"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:53:22.548" endtime="20240424 19:53:22.548"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:22.548" endtime="20240424 19:53:22.569"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:53:22.572" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:53:22.569" endtime="20240424 19:53:22.572"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:53:22.572" endtime="20240424 19:53:22.572"/>
</kw>
<status status="PASS" starttime="20240424 19:53:22.569" endtime="20240424 19:53:22.572"/>
</kw>
<status status="PASS" starttime="20240424 19:53:22.548" endtime="20240424 19:53:22.572"/>
</kw>
<kw name="And I Switch Model View" library="3d_toolbar_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:22.572" endtime="20240424 19:53:22.572"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:53:22.572" endtime="20240424 19:53:22.587"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:22.587" endtime="20240424 19:53:22.607"/>
</kw>
<status status="PASS" starttime="20240424 19:53:22.572" endtime="20240424 19:53:22.607"/>
</kw>
<status status="PASS" starttime="20240424 19:53:22.572" endtime="20240424 19:53:22.607"/>
</kw>
<kw name="Then Verify 3D Toolbar Status Without Model" library="3d_toolbar_step_definitions">
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Undo</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:22.607" endtime="20240424 19:53:22.612"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Redo</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:22.612" endtime="20240424 19:53:22.615"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Spin</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:22.615" endtime="20240424 19:53:22.768"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Info</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:22.768" endtime="20240424 19:53:22.768"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Show All</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:22.768" endtime="20240424 19:53:22.768"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Show Unselected Transparent</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:22.768" endtime="20240424 19:53:22.768"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Show Selected</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:22.768" endtime="20240424 19:53:22.784"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Paint Visible With Current Color</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:22.784" endtime="20240424 19:53:22.787"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Show / Hide Space</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:22.787" endtime="20240424 19:53:22.787"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Zoom Extents</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:22.787" endtime="20240424 19:53:22.792"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Zoom In</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:22.792" endtime="20240424 19:53:22.797"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Zoom Out</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:22.797" endtime="20240424 19:53:22.801"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Zoom Selected</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:22.801" endtime="20240424 19:53:22.927"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Top Front Right</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:22.927" endtime="20240424 19:53:22.933"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Change Camera Projection</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:22.933" endtime="20240424 19:53:22.938"/>
</kw>
<status status="PASS" starttime="20240424 19:53:22.607" endtime="20240424 19:53:22.938"/>
</kw>
<kw name="When IFC File is Open" library="ModelHandlingResource">
<arg>${solibri_building_ifc}</arg>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${file_name_with_path}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:22.938" endtime="20240424 19:53:22.943"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:53:22.944" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:53:22.943" endtime="20240424 19:53:22.944"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:53:22.944" endtime="20240424 19:53:22.944"/>
</kw>
<status status="PASS" starttime="20240424 19:53:22.943" endtime="20240424 19:53:22.944"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:22.944" endtime="20240424 19:53:22.948"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:53:22.948" endtime="20240424 19:53:22.948"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:22.948" endtime="20240424 19:53:22.996"/>
</kw>
<status status="PASS" starttime="20240424 19:53:22.944" endtime="20240424 19:53:22.996"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:53:22.996" endtime="20240424 19:53:23.131"/>
</kw>
<status status="PASS" starttime="20240424 19:53:22.996" endtime="20240424 19:53:23.131"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:53:23.131" endtime="20240424 19:53:23.131"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:53:23.131" endtime="20240424 19:53:23.138"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:53:23.138" endtime="20240424 19:53:24.479"/>
</kw>
<status status="PASS" starttime="20240424 19:53:23.138" endtime="20240424 19:53:24.479"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:53:24.479" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:53:24.479" endtime="20240424 19:53:24.479"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:53:24.479" endtime="20240424 19:53:24.479"/>
</return>
<msg timestamp="20240424 19:53:24.479" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:53:24.479" endtime="20240424 19:53:24.479"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:53:24.479" endtime="20240424 19:53:24.684"/>
</kw>
<status status="PASS" starttime="20240424 19:53:24.479" endtime="20240424 19:53:24.684"/>
</kw>
<status status="PASS" starttime="20240424 19:53:24.479" endtime="20240424 19:53:24.684"/>
</branch>
<status status="PASS" starttime="20240424 19:53:24.479" endtime="20240424 19:53:24.684"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:53:24.684" endtime="20240424 19:53:24.684"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:53:24.684" endtime="20240424 19:53:24.684"/>
</branch>
<status status="PASS" starttime="20240424 19:53:24.684" endtime="20240424 19:53:24.684"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:53:24.687" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\ifc</msg>
<msg timestamp="20240424 19:53:24.687" level="INFO">${filename} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:53:24.687" endtime="20240424 19:53:24.687"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:53:24.687" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 19:53:24.687" level="INFO">${ext} = ifc</msg>
<status status="PASS" starttime="20240424 19:53:24.687" endtime="20240424 19:53:24.687"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<status status="NOT RUN" starttime="20240424 19:53:24.687" endtime="20240424 19:53:24.687"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:53:24.687" endtime="20240424 19:53:24.687"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:53:24.690" endtime="20240424 19:53:24.899"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:24.899" endtime="20240424 19:53:25.155"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:53:25.155" endtime="20240424 19:53:25.161"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:25.161" endtime="20240424 19:53:25.336"/>
</kw>
<status status="PASS" starttime="20240424 19:53:24.899" endtime="20240424 19:53:25.336"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:53:27.613" level="INFO">2024-04-24 19:53:25.641+0000 [Thread-128] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 0 ms.
2024-04-24 19:53:25.641+0000 [Thread-128] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 946 ms (using 1 threads)
2024-04-24 19:53:25.703+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 47 ms
2024-04-24 19:53:27.013+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 1372 ms.</msg>
<status status="PASS" starttime="20240424 19:53:25.336" endtime="20240424 19:53:27.613"/>
</kw>
<status status="PASS" starttime="20240424 19:53:25.336" endtime="20240424 19:53:27.613"/>
</kw>
<msg timestamp="20240424 19:53:27.613" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:53:25.336" endtime="20240424 19:53:27.613"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:53:27.613" endtime="20240424 19:53:27.617"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:53:27.617" endtime="20240424 19:53:27.650"/>
</kw>
<status status="PASS" starttime="20240424 19:53:27.613" endtime="20240424 19:53:27.650"/>
</branch>
<status status="PASS" starttime="20240424 19:53:27.613" endtime="20240424 19:53:27.650"/>
</if>
<status status="PASS" starttime="20240424 19:53:24.687" endtime="20240424 19:53:27.650"/>
</kw>
<status status="PASS" starttime="20240424 19:53:24.687" endtime="20240424 19:53:27.650"/>
</branch>
<status status="PASS" starttime="20240424 19:53:24.687" endtime="20240424 19:53:27.650"/>
</if>
<status status="PASS" starttime="20240424 19:53:22.938" endtime="20240424 19:53:27.650"/>
</kw>
<status status="PASS" starttime="20240424 19:53:22.938" endtime="20240424 19:53:27.650"/>
</kw>
<kw name="Then Verify 3D Toolbar Status With Model" library="3d_toolbar_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:27.650" endtime="20240424 19:53:27.716"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240424 19:53:32.718" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240424 19:53:27.716" endtime="20240424 19:53:32.718"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Undo</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:32.718" endtime="20240424 19:53:32.729"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Redo</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:32.729" endtime="20240424 19:53:32.729"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Spin</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:32.729" endtime="20240424 19:53:32.729"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Info</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:32.729" endtime="20240424 19:53:32.738"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Show All</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:32.738" endtime="20240424 19:53:32.738"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Show Unselected Transparent</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:32.738" endtime="20240424 19:53:32.738"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Show Selected</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:32.738" endtime="20240424 19:53:32.738"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Paint Visible With Current Color</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:32.738" endtime="20240424 19:53:32.751"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Show / Hide Space</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:32.751" endtime="20240424 19:53:32.758"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Zoom Extents</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:32.758" endtime="20240424 19:53:32.786"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Zoom In</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:32.786" endtime="20240424 19:53:32.792"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Zoom Out</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:32.792" endtime="20240424 19:53:32.798"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Zoom Selected</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:32.798" endtime="20240424 19:53:32.802"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Top Front Right</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:32.802" endtime="20240424 19:53:32.809"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Change Camera Projection</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:32.809" endtime="20240424 19:53:32.818"/>
</kw>
<status status="PASS" starttime="20240424 19:53:27.650" endtime="20240424 19:53:32.818"/>
</kw>
<kw name="Teardown" type="TEARDOWN">
<kw name="Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:53:32.818" endtime="20240424 19:53:32.928"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:32.928" endtime="20240424 19:53:32.932"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:53:32.932" endtime="20240424 19:53:32.936"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:32.936" endtime="20240424 19:53:33.053"/>
</kw>
<status status="PASS" starttime="20240424 19:53:32.928" endtime="20240424 19:53:33.053"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:53:33.053" endtime="20240424 19:53:33.068"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:53:33.068" endtime="20240424 19:53:33.072"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:53:43.073" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:53:33.072" endtime="20240424 19:53:43.073"/>
</kw>
<msg timestamp="20240424 19:53:43.073" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:53:33.072" endtime="20240424 19:53:43.073"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:53:43.073" endtime="20240424 19:53:43.084"/>
</kw>
<msg timestamp="20240424 19:53:43.084" level="INFO">${check_if_save_asked} = True</msg>
<status status="PASS" starttime="20240424 19:53:43.073" endtime="20240424 19:53:43.084"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:53:43.084" endtime="20240424 19:53:43.084"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:53:43.084" endtime="20240424 19:53:43.112"/>
</kw>
<status status="PASS" starttime="20240424 19:53:43.084" endtime="20240424 19:53:43.112"/>
</kw>
<status status="PASS" starttime="20240424 19:53:43.084" endtime="20240424 19:53:43.112"/>
</branch>
<status status="PASS" starttime="20240424 19:53:43.084" endtime="20240424 19:53:43.112"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:53:43.112" endtime="20240424 19:53:43.112"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:53:43.143" endtime="20240424 19:53:43.143"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:53:43.112" endtime="20240424 19:53:43.143"/>
</branch>
<status status="PASS" starttime="20240424 19:53:43.112" endtime="20240424 19:53:43.143"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:43.143" endtime="20240424 19:53:43.178"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:53:43.178" endtime="20240424 19:53:43.183"/>
</kw>
<status status="PASS" starttime="20240424 19:53:43.178" endtime="20240424 19:53:43.183"/>
</kw>
<status status="PASS" starttime="20240424 19:53:32.818" endtime="20240424 19:53:43.183"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:53:43.183" endtime="20240424 19:53:43.283"/>
</kw>
<status status="PASS" starttime="20240424 19:53:32.818" endtime="20240424 19:53:43.283"/>
</kw>
<status status="PASS" starttime="20240424 19:53:22.548" endtime="20240424 19:53:43.283"/>
</test>
<doc>Verifying 3D Toolbar</doc>
<meta name="Feature">3D Toolbar</meta>
<meta name="Generated by">_gherkin2robotframework on 2023-07-29T15:17:34.572546_</meta>
<status status="PASS" starttime="20240424 19:53:22.517" endtime="20240424 19:53:43.283"/>
</suite>
<suite id="s1-s8" name="08 Classification" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\08_classification.robot">
<test id="s1-s8-t1" name="Verify Classification View" line="10">
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:53:43.346" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:53:43.346" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:53:43 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:53:43.346" endtime="20240424 19:53:43.346"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:53:43.346" endtime="20240424 19:53:43.346"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:43.346" endtime="20240424 19:53:43.346"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:53:43.346" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:53:43.346" endtime="20240424 19:53:43.346"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:53:43.346" endtime="20240424 19:53:43.346"/>
</kw>
<status status="PASS" starttime="20240424 19:53:43.346" endtime="20240424 19:53:43.346"/>
</kw>
<status status="PASS" starttime="20240424 19:53:43.346" endtime="20240424 19:53:43.346"/>
</kw>
<kw name="Then Open BIM Validation Role" library="information_take_off_step_definitions">
<kw name="Open &quot;BIM Validation - Architectural.xml&quot; Role" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:43.346" endtime="20240424 19:53:43.361"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Roles_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:53:43.361" endtime="20240424 19:53:43.361"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open Role</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:53:43.361" endtime="20240424 19:53:44.768"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Dialog Should Be Open</arg>
<arg>Open Role</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Open Role</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:53:44.768" endtime="20240424 19:53:44.771"/>
</kw>
<status status="PASS" starttime="20240424 19:53:44.768" endtime="20240424 19:53:44.771"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open Role</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:53:44.771" endtime="20240424 19:53:44.790"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Files</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:53:44.790" endtime="20240424 19:53:44.836"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${role_with_path}</var>
<arg>${roles_folder}</arg>
<arg>BIM Validation - Architectural.xml</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:53:44.836" level="INFO">${role_with_path} = C:\users\public\Solibri\SOLIBRI\Roles\BIM Validation - Architectural.xml</msg>
<status status="PASS" starttime="20240424 19:53:44.836" endtime="20240424 19:53:44.836"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${role_with_path}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:53:44.836" endtime="20240424 19:53:44.958"/>
</kw>
<status status="PASS" starttime="20240424 19:53:43.346" endtime="20240424 19:53:44.958"/>
</kw>
<status status="PASS" starttime="20240424 19:53:43.346" endtime="20240424 19:53:44.958"/>
</kw>
<kw name="Then Switch to Information Takeoff Layout" library="classification_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${ITO_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:44.958" endtime="20240424 19:53:44.966"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:53:44.966" endtime="20240424 19:53:44.970"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:44.970" endtime="20240424 19:53:45.143"/>
</kw>
<status status="PASS" starttime="20240424 19:53:44.958" endtime="20240424 19:53:45.143"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:53:45.143" endtime="20240424 19:53:45.252"/>
</kw>
<status status="PASS" starttime="20240424 19:53:44.958" endtime="20240424 19:53:45.252"/>
</kw>
<kw name="Then Verify Classification View without Model" library="classification_step_definitions">
<kw name="Select Context" library="SwingRobot">
<arg>${CLASSIFICATION_VIEW_NAME}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:53:45.252" endtime="20240424 19:53:45.252"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>New</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:45.252" endtime="20240424 19:53:45.260"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Duplicate...</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:45.260" endtime="20240424 19:53:45.262"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Manual Classification...</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:45.262" endtime="20240424 19:53:45.262"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Add to Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:45.262" endtime="20240424 19:53:45.270"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Remove from Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:45.270" endtime="20240424 19:53:45.272"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:45.272" endtime="20240424 19:53:45.272"/>
</kw>
<status status="PASS" starttime="20240424 19:53:45.252" endtime="20240424 19:53:45.272"/>
</kw>
<kw name="Then Verify Classfication View with Model" library="classification_step_definitions">
<kw name="Open ifc Model" library="Common">
<arg>Solibri Building.ifc</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:45.272" endtime="20240424 19:53:45.272"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:53:45.284" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:53:45.272" endtime="20240424 19:53:45.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:53:45.284" endtime="20240424 19:53:45.284"/>
</kw>
<status status="PASS" starttime="20240424 19:53:45.272" endtime="20240424 19:53:45.284"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:45.284" endtime="20240424 19:53:45.287"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:53:45.287" endtime="20240424 19:53:45.287"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:45.292" endtime="20240424 19:53:45.426"/>
</kw>
<status status="PASS" starttime="20240424 19:53:45.284" endtime="20240424 19:53:45.426"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:53:45.426" endtime="20240424 19:53:45.448"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:53:45.448" endtime="20240424 19:53:45.450"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:53:45.450" endtime="20240424 19:53:45.794"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${ifc_filename}</var>
<arg>${ifc_folder}</arg>
<arg>${ifc_filename}</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:53:45.794" level="INFO">${ifc_filename} = C:\users\public\Solibri\SOLIBRI\Samples\ifc\Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:53:45.794" endtime="20240424 19:53:45.794"/>
</kw>
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:53:45.794" endtime="20240424 19:53:45.999"/>
</kw>
<status status="PASS" starttime="20240424 19:53:45.794" endtime="20240424 19:53:45.999"/>
</kw>
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:53:46.006" endtime="20240424 19:53:46.123"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:46.123" endtime="20240424 19:53:46.123"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:53:46.123" endtime="20240424 19:53:46.130"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:46.130" endtime="20240424 19:53:46.134"/>
</kw>
<status status="PASS" starttime="20240424 19:53:46.123" endtime="20240424 19:53:46.134"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:53:48.352" level="INFO">2024-04-24 19:53:46.855+0000 [Thread-147] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 65 ms.
2024-04-24 19:53:46.855+0000 [Thread-147] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 842 ms (using 1 threads)
2024-04-24 19:53:46.886+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 31 ms
2024-04-24 19:53:47.973+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 1118 ms.</msg>
<status status="PASS" starttime="20240424 19:53:46.134" endtime="20240424 19:53:48.352"/>
</kw>
<status status="PASS" starttime="20240424 19:53:46.134" endtime="20240424 19:53:48.352"/>
</kw>
<msg timestamp="20240424 19:53:48.352" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:53:46.134" endtime="20240424 19:53:48.352"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:53:48.352" endtime="20240424 19:53:48.808"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:53:48.809" endtime="20240424 19:53:50.050"/>
</kw>
<status status="PASS" starttime="20240424 19:53:48.352" endtime="20240424 19:53:50.050"/>
</branch>
<status status="PASS" starttime="20240424 19:53:48.352" endtime="20240424 19:53:50.050"/>
</if>
<status status="PASS" starttime="20240424 19:53:46.005" endtime="20240424 19:53:50.050"/>
</kw>
<status status="PASS" starttime="20240424 19:53:45.272" endtime="20240424 19:53:50.050"/>
</kw>
<kw name="Switch to Information Takeoff Layout" library="classification_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${ITO_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:50.050" endtime="20240424 19:53:50.095"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:53:50.095" endtime="20240424 19:53:50.099"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:50.099" endtime="20240424 19:53:50.102"/>
</kw>
<status status="PASS" starttime="20240424 19:53:50.050" endtime="20240424 19:53:50.102"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:53:50.102" endtime="20240424 19:53:50.224"/>
</kw>
<status status="PASS" starttime="20240424 19:53:50.050" endtime="20240424 19:53:50.224"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${CLASSIFICATION_VIEW_NAME}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:53:50.239" endtime="20240424 19:53:50.386"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>New</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:50.386" endtime="20240424 19:53:50.450"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Duplicate...</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:50.450" endtime="20240424 19:53:50.533"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Close</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:50.533" endtime="20240424 19:53:50.588"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Settings...</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:50.588" endtime="20240424 19:53:50.660"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Manual Classification...</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:50.660" endtime="20240424 19:53:50.664"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Add to Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:50.664" endtime="20240424 19:53:50.667"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Remove from Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:50.667" endtime="20240424 19:53:50.669"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:50.669" endtime="20240424 19:53:50.671"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:50.671" endtime="20240424 19:53:50.693"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${number_of_rows_in_classification_view}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:53:50.701" level="INFO">${number_of_rows_in_classification_view} = 7</msg>
<status status="PASS" starttime="20240424 19:53:50.693" endtime="20240424 19:53:50.701"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${number_of_rows_in_classification_view}'</arg>
<arg>'7'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:53:50.701" endtime="20240424 19:53:50.701"/>
</kw>
<kw name="Get Table Column Values" library="SwingRobot">
<var>${loaded_ifc_classifications}</var>
<arg>1</arg>
<arg>0</arg>
<doc>Returns a list containing all the values of a table column.</doc>
<msg timestamp="20240424 19:53:50.751" level="INFO">${loaded_ifc_classifications} = ['AC Zone Category', 'ARCHICAD Classification', 'Building Elements - General', 'COBie', 'Space Grouping', 'Space Usage', 'Uniclass2']</msg>
<status status="PASS" starttime="20240424 19:53:50.701" endtime="20240424 19:53:50.751"/>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<arg>${loaded_ifc_classifications}</arg>
<arg>${default_ifc_classifications}</arg>
<doc>Fails if given lists are unequal.</doc>
<status status="PASS" starttime="20240424 19:53:50.751" endtime="20240424 19:53:50.751"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:50.751" endtime="20240424 19:53:50.751"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:53:50.751" endtime="20240424 19:53:51.334"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${CLASSIFICATION_VIEW_NAME}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:53:51.334" endtime="20240424 19:53:51.352"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Duplicate...</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:51.352" endtime="20240424 19:53:51.360"/>
</kw>
<status status="PASS" starttime="20240424 19:53:45.272" endtime="20240424 19:53:51.360"/>
</kw>
<kw name="Then Verify New Classification Settings Dialog" library="classification_step_definitions">
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>New</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:53:51.360" endtime="20240424 19:53:51.360"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Classification Settings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:53:51.360" endtime="20240424 19:53:51.693"/>
</kw>
<kw name="Text Field Should Be Enabled" library="SwingRobot">
<arg>0</arg>
<doc>Fails if text component (e.g. text field, password field, text area) is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:51.693" endtime="20240424 19:53:51.764"/>
</kw>
<kw name="All Checkboxes Should Be Unchecked" library="SwingRobot">
<doc>Fails if any checkbox in current context is checked.</doc>
<status status="PASS" starttime="20240424 19:53:51.764" endtime="20240424 19:53:51.764"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Save</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:51.764" endtime="20240424 19:53:51.773"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Save As...</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:51.773" endtime="20240424 19:53:51.782"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:53:51.782" endtime="20240424 19:53:51.838"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:51.838" endtime="20240424 19:53:51.844"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>roleDescription</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:53:51.844" endtime="20240424 19:53:51.881"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>Test Classification</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:53:51.881" endtime="20240424 19:53:51.918"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${description}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:53:51.934" level="INFO">${description} = Test Classification</msg>
<status status="PASS" starttime="20240424 19:53:51.918" endtime="20240424 19:53:51.934"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${description}</arg>
<arg>Test Classification</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:53:51.934" endtime="20240424 19:53:51.934"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Save</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:51.934" endtime="20240424 19:53:51.939"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Save As...</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:51.939" endtime="20240424 19:53:51.943"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:53:51.943" endtime="20240424 19:53:51.999"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>2</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:53:51.999" endtime="20240424 19:53:52.038"/>
</kw>
<status status="PASS" starttime="20240424 19:53:51.360" endtime="20240424 19:53:52.038"/>
</kw>
<kw name="Then Test Creating A New Classification" library="classification_step_definitions">
<kw name="Switch to Information Takeoff Layout" library="classification_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${ITO_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:52.038" endtime="20240424 19:53:52.038"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:53:52.038" endtime="20240424 19:53:52.053"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:52.053" endtime="20240424 19:53:52.065"/>
</kw>
<status status="PASS" starttime="20240424 19:53:52.038" endtime="20240424 19:53:52.065"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<msg timestamp="20240424 19:53:52.251" level="INFO">Closed dialog 'To-Do'.
Closed dialog 'Classification Settings'.</msg>
<status status="PASS" starttime="20240424 19:53:52.065" endtime="20240424 19:53:52.251"/>
</kw>
<status status="PASS" starttime="20240424 19:53:52.038" endtime="20240424 19:53:52.251"/>
</kw>
<kw name="New Classification Is Created" library="classification_step_definitions">
<kw name="Select Context" library="SwingRobot">
<arg>${CLASSIFICATION_VIEW_NAME}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:53:52.251" endtime="20240424 19:53:52.254"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>New</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:53:52.254" endtime="20240424 19:53:52.525"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${CLASSIFICATION_SETTINGS_DIALOG}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:53:52.525" endtime="20240424 19:53:52.624"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:53:52.624" endtime="20240424 19:53:52.638"/>
</kw>
<kw name="Insert Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>Classification1</arg>
<doc>Inserts text into a text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:53:52.638" endtime="20240424 19:53:52.687"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Add Row</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:53:52.687" endtime="20240424 19:53:52.735"/>
</kw>
<kw name="Table Cell Should Be Editable" library="SwingRobot">
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Fails if given table cell is not editable in a table.</doc>
<status status="PASS" starttime="20240424 19:53:52.735" endtime="20240424 19:53:52.739"/>
</kw>
<kw name="Select Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Selects a cell in a table.</doc>
<status status="PASS" starttime="20240424 19:53:52.739" endtime="20240424 19:53:52.746"/>
</kw>
<kw name="Table Cell Should Be Selected" library="SwingRobot">
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Fails if given table cell is not selected in a table.</doc>
<status status="PASS" starttime="20240424 19:53:52.762" endtime="20240424 19:53:52.766"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:53:52.766" endtime="20240424 19:53:52.777"/>
</kw>
<kw name="Type Into Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Column_Classifier</arg>
<doc>Types a string into a table cell.
Uses real keyboard events, this is useful when processing need to be triggered by input events.</doc>
<status status="PASS" starttime="20240424 19:53:52.777" endtime="20240424 19:53:52.829"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${CLASSIFICATION_SETTINGS_DIALOG}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:53:52.829" endtime="20240424 19:53:52.833"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>1</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:53:52.833" endtime="20240424 19:53:52.869"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Add Row</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:53:52.869" endtime="20240424 19:53:52.873"/>
</kw>
<kw name="Select Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Selects a cell in a table.</doc>
<status status="PASS" starttime="20240424 19:53:52.873" endtime="20240424 19:53:52.957"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:53:52.957" endtime="20240424 19:53:53.049"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Select From Combo Box</arg>
<arg>0</arg>
<arg>Column</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Select From Combo Box" library="SwingRobot">
<arg>0</arg>
<arg>Column</arg>
<doc>Selects an item from a combobox.
The item selection is verified by default and can be disabled using the optional ``verifySelection`` parameter with any value.</doc>
<msg timestamp="20240424 19:53:53.819" level="FAIL">java.lang.NullPointerException: Cannot invoke "Object.getClass()" because "o" is null</msg>
<status status="FAIL" starttime="20240424 19:53:53.049" endtime="20240424 19:53:53.819"/>
</kw>
<status status="PASS" starttime="20240424 19:53:53.049" endtime="20240424 19:53:53.819"/>
</kw>
<kw name="Select Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Selects a cell in a table.</doc>
<status status="PASS" starttime="20240424 19:53:53.819" endtime="20240424 19:53:53.835"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:53:53.835" endtime="20240424 19:53:53.859"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>ClassificationNames_DropDownButton</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:53:53.859" endtime="20240424 19:53:53.885"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Select From Combo Box</arg>
<arg>0</arg>
<arg>Column_Classifier</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Select From Combo Box" library="SwingRobot">
<arg>0</arg>
<arg>Column_Classifier</arg>
<doc>Selects an item from a combobox.
The item selection is verified by default and can be disabled using the optional ``verifySelection`` parameter with any value.</doc>
<msg timestamp="20240424 19:53:54.363" level="FAIL">java.lang.NullPointerException: Cannot invoke "Object.getClass()" because "o" is null</msg>
<status status="FAIL" starttime="20240424 19:53:53.885" endtime="20240424 19:53:54.363"/>
</kw>
<status status="PASS" starttime="20240424 19:53:53.885" endtime="20240424 19:53:54.363"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${CLASSIFICATION_SETTINGS_DIALOG}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:53:54.363" endtime="20240424 19:53:54.363"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>3</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:53:54.363" endtime="20240424 19:53:54.482"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${classified_components}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:53:54.514" level="INFO">${classified_components} = 31</msg>
<status status="PASS" starttime="20240424 19:53:54.482" endtime="20240424 19:53:54.514"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${CLASSIFICATION_SETTINGS_DIALOG}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:53:54.514" endtime="20240424 19:53:54.523"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:53:54.523" endtime="20240424 19:53:54.836"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${classification_name_from_settings}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:53:54.885" level="INFO">${classification_name_from_settings} = Classification1</msg>
<status status="PASS" starttime="20240424 19:53:54.836" endtime="20240424 19:53:54.885"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${CLASSIFICATION_SETTINGS_DIALOG}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:53:54.885" endtime="20240424 19:53:54.934"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:53:54.934" endtime="20240424 19:53:55.200"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:55.200" endtime="20240424 19:53:55.212"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:53:55.212" endtime="20240424 19:53:55.250"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${classification_name_from_view}</var>
<arg>1</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:53:55.260" level="INFO">${classification_name_from_view} = Classification1</msg>
<status status="PASS" starttime="20240424 19:53:55.250" endtime="20240424 19:53:55.260"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${classification_name_from_settings}</arg>
<arg>${classification_name_from_view}</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:53:55.260" endtime="20240424 19:53:55.260"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${CLASSIFICATION_VIEW_NAME}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:53:55.260" endtime="20240424 19:53:55.264"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:53:55.264" endtime="20240424 19:53:55.284"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:55.284" endtime="20240424 19:53:55.381"/>
</kw>
<kw name="Label Should Exist" library="SwingRobot">
<arg>Selected: ${classified_components}</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 19:53:55.381" endtime="20240424 19:53:55.428"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:55.428" endtime="20240424 19:53:55.435"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Model Tree_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:53:55.435" endtime="20240424 19:53:55.437"/>
</kw>
<kw name="Switch to Component Hierarchy" library="ModelTreeResource">
<doc>Opens Class tree in Component hierarchy ModelViewComponentHierarchyPanel</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:55.437" endtime="20240424 19:53:55.442"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>3</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:53:55.442" endtime="20240424 19:53:55.533"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${select_component_hierarchy}</var>
<arg>Toggle Button Should Be Selected</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Toggle Button Should Be Selected" library="SwingRobot">
<arg>3</arg>
<doc>Fails if toggle button is not selected.</doc>
<status status="PASS" starttime="20240424 19:53:55.533" endtime="20240424 19:53:55.533"/>
</kw>
<msg timestamp="20240424 19:53:55.533" level="INFO">${select_component_hierarchy} = True</msg>
<status status="PASS" starttime="20240424 19:53:55.533" endtime="20240424 19:53:55.533"/>
</kw>
<if>
<branch type="IF" condition="${select_component_hierarchy} == ${False}">
<kw name="Push Toggle Button" library="SwingRobot">
<arg>3</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:53:55.533" endtime="20240424 19:53:55.533"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:53:55.533" endtime="20240424 19:53:55.533"/>
</branch>
<status status="PASS" starttime="20240424 19:53:55.533" endtime="20240424 19:53:55.533"/>
</if>
<status status="PASS" starttime="20240424 19:53:55.437" endtime="20240424 19:53:55.533"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:55.533" endtime="20240424 19:53:55.539"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:53:55.539" endtime="20240424 19:53:55.558"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Model Tree_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:53:55.558" endtime="20240424 19:53:55.573"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:53:55.573" endtime="20240424 19:53:55.580"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:55.580" endtime="20240424 19:53:55.595"/>
</kw>
<kw name="Label Should Exist" library="SwingRobot">
<arg>Selected: ${classified_components}</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 19:53:55.595" endtime="20240424 19:53:55.614"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:53:55.614" endtime="20240424 19:53:55.733"/>
</kw>
<status status="PASS" starttime="20240424 19:53:52.251" endtime="20240424 19:53:55.733"/>
</kw>
<status status="PASS" starttime="20240424 19:53:52.038" endtime="20240424 19:53:55.733"/>
</kw>
<kw name="Then Close Model For Cleanup" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:55.733" endtime="20240424 19:53:55.733"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:53:55.733" endtime="20240424 19:53:55.733"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:53:55.733" endtime="20240424 19:53:55.744"/>
</kw>
<status status="PASS" starttime="20240424 19:53:55.733" endtime="20240424 19:53:55.744"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>3</arg>
<arg>Component Should Be Visible</arg>
<arg>${button_close_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Component Should Be Visible" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Checks that component is visible.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 19:53:55.744" endtime="20240424 19:53:55.907"/>
</kw>
<status status="PASS" starttime="20240424 19:53:55.744" endtime="20240424 19:53:55.907"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${close_button_is_enabled}</var>
<arg>Label Should Be Enabled</arg>
<arg>${button_close_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:53:55.907" endtime="20240424 19:53:55.911"/>
</kw>
<msg timestamp="20240424 19:53:55.911" level="INFO">${close_button_is_enabled} = True</msg>
<status status="PASS" starttime="20240424 19:53:55.907" endtime="20240424 19:53:55.911"/>
</kw>
<if>
<branch type="IF" condition="${close_button_is_enabled}">
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:53:55.911" endtime="20240424 19:53:55.915"/>
</kw>
<status status="PASS" starttime="20240424 19:53:55.911" endtime="20240424 19:53:55.915"/>
</branch>
<status status="PASS" starttime="20240424 19:53:55.911" endtime="20240424 19:53:55.915"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20</arg>
<arg>2</arg>
<arg>Dialog Should Be Open</arg>
<arg>regexp=^S.*</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>regexp=^S.*</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:53:55.915" endtime="20240424 19:53:56.191"/>
</kw>
<status status="PASS" starttime="20240424 19:53:55.915" endtime="20240424 19:53:56.191"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${save_modified_dialog}</var>
<arg>Dialog Should Be Open</arg>
<arg>regexp=^Save.*</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>regexp=^Save.*</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:53:56.191" endtime="20240424 19:53:56.191"/>
</kw>
<msg timestamp="20240424 19:53:56.191" level="INFO">${save_modified_dialog} = True</msg>
<status status="PASS" starttime="20240424 19:53:56.191" endtime="20240424 19:53:56.191"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${select_dialog}</var>
<arg>Dialog Should Be Open</arg>
<arg>regexp=^Select.*</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>regexp=^Select.*</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:54:06.200" level="FAIL">Dialog 'regexp=^Select.*' is not open</msg>
<status status="FAIL" starttime="20240424 19:53:56.191" endtime="20240424 19:54:06.200"/>
</kw>
<msg timestamp="20240424 19:54:06.200" level="INFO">${select_dialog} = False</msg>
<status status="PASS" starttime="20240424 19:53:56.191" endtime="20240424 19:54:06.200"/>
</kw>
<if>
<branch type="IF" condition="${select_dialog}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:54:06.200" endtime="20240424 19:54:06.200"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:54:06.200" endtime="20240424 19:54:06.200"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:54:06.200" endtime="20240424 19:54:06.200"/>
</branch>
<status status="PASS" starttime="20240424 19:54:06.200" endtime="20240424 19:54:06.200"/>
</if>
<if>
<branch type="IF" condition="${save_modified_dialog}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:54:06.200" endtime="20240424 19:54:06.200"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:54:06.200" endtime="20240424 19:54:06.220"/>
</kw>
<status status="PASS" starttime="20240424 19:54:06.200" endtime="20240424 19:54:06.220"/>
</branch>
<status status="PASS" starttime="20240424 19:54:06.200" endtime="20240424 19:54:06.220"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:06.220" endtime="20240424 19:54:06.327"/>
</kw>
<kw name="Take Screenshot" library="ScreenCapLibrary">
<doc>Takes a screenshot in the specified format at library import and
embeds it into the log file (PNG by default).</doc>
<msg timestamp="20240424 19:54:06.429" level="INFO" html="true">&lt;a href="screenshot_5.png"&gt;&lt;img src="screenshot_5.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240424 19:54:06.327" endtime="20240424 19:54:06.429"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:54:06.429" endtime="20240424 19:54:06.436"/>
</kw>
<status status="PASS" starttime="20240424 19:54:06.429" endtime="20240424 19:54:06.436"/>
</kw>
<status status="PASS" starttime="20240424 19:53:55.733" endtime="20240424 19:54:06.436"/>
</kw>
<status status="PASS" starttime="20240424 19:53:43.330" endtime="20240424 19:54:06.436"/>
</test>
<test id="s1-s8-t2" name="Verify Classification Categories" line="22">
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:54:06.444" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:54:06.444" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:54:06 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:54:06.436" endtime="20240424 19:54:06.444"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:54:06.444" endtime="20240424 19:54:06.444"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:06.444" endtime="20240424 19:54:06.503"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:54:06.506" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:54:06.503" endtime="20240424 19:54:06.506"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:54:06.506" endtime="20240424 19:54:06.506"/>
</kw>
<status status="PASS" starttime="20240424 19:54:06.503" endtime="20240424 19:54:06.506"/>
</kw>
<status status="PASS" starttime="20240424 19:54:06.436" endtime="20240424 19:54:06.506"/>
</kw>
<kw name="And No Existing Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:06.506" endtime="20240424 19:54:06.520"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:54:06.520" endtime="20240424 19:54:06.527"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:06.527" endtime="20240424 19:54:06.578"/>
</kw>
<status status="PASS" starttime="20240424 19:54:06.506" endtime="20240424 19:54:06.578"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:54:06.578" endtime="20240424 19:54:06.622"/>
</kw>
<status status="PASS" starttime="20240424 19:54:06.578" endtime="20240424 19:54:06.622"/>
</kw>
<msg timestamp="20240424 19:54:06.622" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 19:54:06.578" endtime="20240424 19:54:06.622"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:54:06.622" endtime="20240424 19:54:06.622"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:54:06.622" endtime="20240424 19:54:06.622"/>
</branch>
<status status="PASS" starttime="20240424 19:54:06.622" endtime="20240424 19:54:06.622"/>
</if>
<status status="PASS" starttime="20240424 19:54:06.506" endtime="20240424 19:54:06.622"/>
</kw>
<kw name="And Open BIM Validation Role" library="information_take_off_step_definitions">
<kw name="Open &quot;BIM Validation - Architectural.xml&quot; Role" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:06.622" endtime="20240424 19:54:06.706"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Roles_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:54:06.706" endtime="20240424 19:54:06.723"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open Role</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:54:06.723" endtime="20240424 19:54:08.131"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Dialog Should Be Open</arg>
<arg>Open Role</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Open Role</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:54:08.131" endtime="20240424 19:54:08.142"/>
</kw>
<status status="PASS" starttime="20240424 19:54:08.131" endtime="20240424 19:54:08.142"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open Role</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:54:08.142" endtime="20240424 19:54:08.147"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Files</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:54:08.147" endtime="20240424 19:54:08.169"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${role_with_path}</var>
<arg>${roles_folder}</arg>
<arg>BIM Validation - Architectural.xml</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:54:08.169" level="INFO">${role_with_path} = C:\users\public\Solibri\SOLIBRI\Roles\BIM Validation - Architectural.xml</msg>
<status status="PASS" starttime="20240424 19:54:08.169" endtime="20240424 19:54:08.169"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${role_with_path}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:54:08.169" endtime="20240424 19:54:08.254"/>
</kw>
<status status="PASS" starttime="20240424 19:54:06.622" endtime="20240424 19:54:08.254"/>
</kw>
<status status="PASS" starttime="20240424 19:54:06.622" endtime="20240424 19:54:08.254"/>
</kw>
<kw name="And Open ifc Model" library="Common">
<arg>${solibri_building_ifc}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:08.254" endtime="20240424 19:54:08.269"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:54:08.272" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:54:08.269" endtime="20240424 19:54:08.272"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:54:08.272" endtime="20240424 19:54:08.272"/>
</kw>
<status status="PASS" starttime="20240424 19:54:08.269" endtime="20240424 19:54:08.272"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:08.272" endtime="20240424 19:54:08.272"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:54:08.272" endtime="20240424 19:54:08.272"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:08.272" endtime="20240424 19:54:08.284"/>
</kw>
<status status="PASS" starttime="20240424 19:54:08.272" endtime="20240424 19:54:08.284"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:54:08.284" endtime="20240424 19:54:08.359"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:54:08.359" endtime="20240424 19:54:08.361"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:54:08.361" endtime="20240424 19:54:08.799"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${ifc_filename}</var>
<arg>${ifc_folder}</arg>
<arg>${ifc_filename}</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:54:08.799" level="INFO">${ifc_filename} = C:\users\public\Solibri\SOLIBRI\Samples\ifc\Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:54:08.799" endtime="20240424 19:54:08.799"/>
</kw>
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:54:08.799" endtime="20240424 19:54:09.027"/>
</kw>
<status status="PASS" starttime="20240424 19:54:08.799" endtime="20240424 19:54:09.027"/>
</kw>
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:54:09.027" endtime="20240424 19:54:09.140"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:09.140" endtime="20240424 19:54:09.140"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:54:09.140" endtime="20240424 19:54:09.146"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:09.146" endtime="20240424 19:54:09.146"/>
</kw>
<status status="PASS" starttime="20240424 19:54:09.140" endtime="20240424 19:54:09.146"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:54:11.525" level="INFO">2024-04-24 19:54:09.785+0000 [Thread-225] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 0 ms.
2024-04-24 19:54:09.785+0000 [Thread-225] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 763 ms (using 1 threads)
2024-04-24 19:54:09.832+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 31 ms
2024-04-24 19:54:10.864+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 1079 ms.</msg>
<status status="PASS" starttime="20240424 19:54:09.146" endtime="20240424 19:54:11.525"/>
</kw>
<status status="PASS" starttime="20240424 19:54:09.146" endtime="20240424 19:54:11.525"/>
</kw>
<msg timestamp="20240424 19:54:11.525" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:54:09.146" endtime="20240424 19:54:11.525"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:54:11.525" endtime="20240424 19:54:11.909"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:54:11.909" endtime="20240424 19:54:12.466"/>
</kw>
<status status="PASS" starttime="20240424 19:54:11.525" endtime="20240424 19:54:12.466"/>
</branch>
<status status="PASS" starttime="20240424 19:54:11.525" endtime="20240424 19:54:12.466"/>
</if>
<status status="PASS" starttime="20240424 19:54:09.027" endtime="20240424 19:54:12.466"/>
</kw>
<status status="PASS" starttime="20240424 19:54:08.254" endtime="20240424 19:54:12.466"/>
</kw>
<kw name="And Switch To Information Take Off Layout" library="classification_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${ITO_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:12.466" endtime="20240424 19:54:12.471"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:54:12.471" endtime="20240424 19:54:12.472"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:12.472" endtime="20240424 19:54:12.482"/>
</kw>
<status status="PASS" starttime="20240424 19:54:12.466" endtime="20240424 19:54:12.482"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:54:12.482" endtime="20240424 19:54:12.610"/>
</kw>
<status status="PASS" starttime="20240424 19:54:12.466" endtime="20240424 19:54:12.610"/>
</kw>
<kw name="Then Verify Classification View without Model" library="classification_step_definitions">
<kw name="Select Context" library="SwingRobot">
<arg>${CLASSIFICATION_VIEW_NAME}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:54:12.673" endtime="20240424 19:54:12.735"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>New</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:54:12.735" endtime="20240424 19:54:12.742"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Duplicate...</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:54:12.742" endtime="20240424 19:54:12.745"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Manual Classification...</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:54:12.745" endtime="20240424 19:54:12.747"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Add to Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:54:12.747" endtime="20240424 19:54:12.750"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Remove from Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:54:12.750" endtime="20240424 19:54:12.818"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:54:12.818" endtime="20240424 19:54:12.818"/>
</kw>
<status status="PASS" starttime="20240424 19:54:12.673" endtime="20240424 19:54:12.818"/>
</kw>
<kw name="Then Add New Category" library="classification_step_definitions">
<arg>From IFC</arg>
<arg>0</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:12.818" endtime="20240424 19:54:12.818"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>1</arg>
<arg>${index}</arg>
<arg>0</arg>
<arg>Categories|Choose...</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 19:54:12.818" endtime="20240424 19:54:13.931"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Choose Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:54:13.931" endtime="20240424 19:54:13.980"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Uncheck All</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:54:13.980" endtime="20240424 19:54:13.985"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Check All</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:54:13.985" endtime="20240424 19:54:13.987"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>New Category...</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:54:13.987" endtime="20240424 19:54:13.991"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:54:13.991" endtime="20240424 19:54:14.076"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:54:14.076" endtime="20240424 19:54:14.087"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>New Category...</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:54:14.087" endtime="20240424 19:54:14.130"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Add New Category</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:54:14.130" endtime="20240424 19:54:14.182"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:54:14.182" endtime="20240424 19:54:14.190"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:54:14.190" endtime="20240424 19:54:14.193"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>${category_name}</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:54:14.193" endtime="20240424 19:54:14.253"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:54:14.253" endtime="20240424 19:54:14.305"/>
</kw>
<status status="PASS" starttime="20240424 19:54:12.818" endtime="20240424 19:54:14.305"/>
</kw>
<kw name="Then Verify Category is Added in Categories List" library="classification_step_definitions">
<arg>From IFC</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>Choose Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:54:14.305" endtime="20240424 19:54:14.325"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${name}</var>
<arg>0</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:54:14.375" level="INFO">${name} = From IFC</msg>
<status status="PASS" starttime="20240424 19:54:14.325" endtime="20240424 19:54:14.375"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${name}</arg>
<arg>${category_name}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:54:14.375" endtime="20240424 19:54:14.375"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:54:14.375" endtime="20240424 19:54:14.572"/>
</kw>
<status status="PASS" starttime="20240424 19:54:14.305" endtime="20240424 19:54:14.572"/>
</kw>
<kw name="Then Add Another Classification to From IFC Category" library="classification_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:14.572" endtime="20240424 19:54:14.600"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>1</arg>
<arg>1</arg>
<arg>0</arg>
<arg>Categories|Choose...</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 19:54:14.600" endtime="20240424 19:54:16.143"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Choose Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:54:16.143" endtime="20240424 19:54:16.143"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:54:16.143" endtime="20240424 19:54:16.159"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:54:16.159" endtime="20240424 19:54:16.224"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:16.224" endtime="20240424 19:54:16.269"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:54:16.285" endtime="20240424 19:54:16.393"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${classification1_in_category}</var>
<arg>1</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:54:16.393" level="INFO">${classification1_in_category} = AC Zone Category</msg>
<status status="PASS" starttime="20240424 19:54:16.393" endtime="20240424 19:54:16.393"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${classification1_in_category}</arg>
<arg>AC Zone Category</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:54:16.393" endtime="20240424 19:54:16.393"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${classification2_in_category}</var>
<arg>1</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:54:16.402" level="INFO">${classification2_in_category} = ARCHICAD Classification</msg>
<status status="PASS" starttime="20240424 19:54:16.393" endtime="20240424 19:54:16.402"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${classification2_in_category}</arg>
<arg>ARCHICAD Classification</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:54:16.402" endtime="20240424 19:54:16.402"/>
</kw>
<status status="PASS" starttime="20240424 19:54:14.572" endtime="20240424 19:54:16.402"/>
</kw>
<kw name="Then Add New Category" library="classification_step_definitions">
<arg>From Classification Rules</arg>
<arg>3</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:16.402" endtime="20240424 19:54:16.407"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>1</arg>
<arg>${index}</arg>
<arg>0</arg>
<arg>Categories|Choose...</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 19:54:16.407" endtime="20240424 19:54:17.258"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Choose Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:54:17.258" endtime="20240424 19:54:17.262"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Uncheck All</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:54:17.262" endtime="20240424 19:54:17.269"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Check All</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:54:17.269" endtime="20240424 19:54:17.278"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>New Category...</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:54:17.278" endtime="20240424 19:54:17.292"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:54:17.292" endtime="20240424 19:54:17.342"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:54:17.342" endtime="20240424 19:54:17.347"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>New Category...</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:54:17.347" endtime="20240424 19:54:17.387"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Add New Category</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:54:17.387" endtime="20240424 19:54:17.434"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:54:17.434" endtime="20240424 19:54:17.439"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:54:17.439" endtime="20240424 19:54:17.442"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>${category_name}</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:54:17.442" endtime="20240424 19:54:17.582"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:54:17.582" endtime="20240424 19:54:17.607"/>
</kw>
<status status="PASS" starttime="20240424 19:54:16.402" endtime="20240424 19:54:17.607"/>
</kw>
<kw name="Then Verify Category is Added in Categories List" library="classification_step_definitions">
<arg>From Classification Rules</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>Choose Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:54:17.607" endtime="20240424 19:54:17.612"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${name}</var>
<arg>0</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:54:17.614" level="INFO">${name} = From Classification Rules</msg>
<status status="PASS" starttime="20240424 19:54:17.612" endtime="20240424 19:54:17.614"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${name}</arg>
<arg>${category_name}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:54:17.614" endtime="20240424 19:54:17.614"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:54:17.614" endtime="20240424 19:54:17.741"/>
</kw>
<status status="PASS" starttime="20240424 19:54:17.607" endtime="20240424 19:54:17.741"/>
</kw>
<kw name="Then Verify Category in Classification View" library="classification_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:17.741" endtime="20240424 19:54:17.752"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:54:17.752" endtime="20240424 19:54:17.845"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:54:17.845" endtime="20240424 19:54:17.973"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${category_name_in_classification}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:54:17.981" level="INFO">${category_name_in_classification} = From Classification Rules</msg>
<status status="PASS" starttime="20240424 19:54:17.973" endtime="20240424 19:54:17.981"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${category_name_in_classification}</arg>
<arg>From Classification Rules</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:54:17.981" endtime="20240424 19:54:17.981"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${classification_in_category}</var>
<arg>1</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:54:18.059" level="INFO">${classification_in_category} = Building Elements - General</msg>
<status status="PASS" starttime="20240424 19:54:17.981" endtime="20240424 19:54:18.059"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${classification_in_category}</arg>
<arg>Building Elements - General</arg>
<arg>Building Elements - General</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:54:18.059" endtime="20240424 19:54:18.059"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${category_name_in_classification}</var>
<arg>1</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:54:18.064" level="INFO">${category_name_in_classification} = From IFC</msg>
<status status="PASS" starttime="20240424 19:54:18.059" endtime="20240424 19:54:18.064"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${category_name_in_classification}</arg>
<arg>From IFC</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:54:18.064" endtime="20240424 19:54:18.064"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${classification_in_category}</var>
<arg>1</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:54:18.097" level="INFO">${classification_in_category} = AC Zone Category</msg>
<status status="PASS" starttime="20240424 19:54:18.064" endtime="20240424 19:54:18.097"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${classification_in_category}</arg>
<arg>AC Zone Category</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:54:18.097" endtime="20240424 19:54:18.097"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${classification_in_category}</var>
<arg>1</arg>
<arg>4</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:54:18.102" level="INFO">${classification_in_category} = ARCHICAD Classification</msg>
<status status="PASS" starttime="20240424 19:54:18.097" endtime="20240424 19:54:18.102"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${classification_in_category}</arg>
<arg>ARCHICAD Classification</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:54:18.102" endtime="20240424 19:54:18.102"/>
</kw>
<status status="PASS" starttime="20240424 19:54:17.741" endtime="20240424 19:54:18.102"/>
</kw>
<kw name="Then Save Model" library="ModelHandlingResource">
<arg>${Button_Save_Title}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:18.102" endtime="20240424 19:54:18.107"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<msg timestamp="20240424 19:54:18.259" level="INFO">Closed dialog 'To-Do'.</msg>
<status status="PASS" starttime="20240424 19:54:18.107" endtime="20240424 19:54:18.259"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:18.259" endtime="20240424 19:54:18.279"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:54:18.279" endtime="20240424 19:54:18.282"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:18.282" endtime="20240424 19:54:18.323"/>
</kw>
<status status="PASS" starttime="20240424 19:54:18.259" endtime="20240424 19:54:18.323"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:54:18.323" endtime="20240424 19:54:18.541"/>
</kw>
<status status="PASS" starttime="20240424 19:54:18.323" endtime="20240424 19:54:18.541"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:54:18.541" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:54:18.541" endtime="20240424 19:54:18.541"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:54:18.541" endtime="20240424 19:54:18.541"/>
</return>
<msg timestamp="20240424 19:54:18.541" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20240424 19:54:18.541" endtime="20240424 19:54:18.541"/>
</kw>
<if>
<branch type="IF" condition="'${os}' == 'Windows'">
<kw name="Check If File Already Exists" library="ModelHandlingResource">
<var>${file_exists}</var>
<arg>${test_files_folder}\\Solibri Building.smc</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${file_exist}</var>
<arg>File Should Exist</arg>
<arg>${filename_to_check}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${filename_to_check}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20240424 19:54:18.541" level="INFO" html="true">File '&lt;a href="file://C:\Users\runneradmin\Documents\RFTestFiles\Solibri Building.smc"&gt;C:\Users\runneradmin\Documents\RFTestFiles\Solibri Building.smc&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20240424 19:54:18.541" endtime="20240424 19:54:18.541"/>
</kw>
<msg timestamp="20240424 19:54:18.541" level="INFO">${file_exist} = True</msg>
<status status="PASS" starttime="20240424 19:54:18.541" endtime="20240424 19:54:18.541"/>
</kw>
<return>
<value>${file_exist}</value>
<status status="PASS" starttime="20240424 19:54:18.541" endtime="20240424 19:54:18.541"/>
</return>
<msg timestamp="20240424 19:54:18.541" level="INFO">${file_exists} = True</msg>
<status status="PASS" starttime="20240424 19:54:18.541" endtime="20240424 19:54:18.541"/>
</kw>
<if>
<branch type="IF" condition="${file_exists}">
<kw name="Over Write File" library="ModelHandlingResource">
<arg>${test_files_folder}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:18.541" endtime="20240424 19:54:18.541"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>Save Model as</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:54:18.541" endtime="20240424 19:54:18.572"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>2</arg>
<arg>Select Dialog</arg>
<arg>Save As</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:54:18.572" endtime="20240424 19:54:19.884"/>
</kw>
<status status="PASS" starttime="20240424 19:54:18.572" endtime="20240424 19:54:19.884"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${folder_to_save}\\Solibri Building.smc</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:54:19.884" endtime="20240424 19:54:20.085"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>2</arg>
<arg>Select Dialog</arg>
<arg>Confirm Save As</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Confirm Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:54:20.085" endtime="20240424 19:54:20.104"/>
</kw>
<status status="PASS" starttime="20240424 19:54:20.085" endtime="20240424 19:54:20.104"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Yes</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:54:20.104" endtime="20240424 19:54:20.139"/>
</kw>
<status status="PASS" starttime="20240424 19:54:18.541" endtime="20240424 19:54:20.139"/>
</kw>
<status status="PASS" starttime="20240424 19:54:18.541" endtime="20240424 19:54:20.139"/>
</branch>
<branch type="ELSE">
<kw name="Click On Component" library="SwingRobot">
<arg>${save_button}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="NOT RUN" starttime="20240424 19:54:20.139" endtime="20240424 19:54:20.139"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>2</arg>
<arg>Select Dialog</arg>
<arg>Save As</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20240424 19:54:20.139" endtime="20240424 19:54:20.139"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${test_files_folder}\\Solibri Building.smc</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="NOT RUN" starttime="20240424 19:54:20.139" endtime="20240424 19:54:20.139"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:54:20.139" endtime="20240424 19:54:20.139"/>
</branch>
<status status="PASS" starttime="20240424 19:54:18.541" endtime="20240424 19:54:20.139"/>
</if>
<status status="PASS" starttime="20240424 19:54:18.541" endtime="20240424 19:54:20.139"/>
</branch>
<status status="PASS" starttime="20240424 19:54:18.541" endtime="20240424 19:54:20.139"/>
</if>
<if>
<branch type="IF" condition="'${os}' == 'Darwin'">
<kw name="Get Length" library="BuiltIn">
<var>${length}</var>
<arg>${test_files_folder}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20240424 19:54:20.139" endtime="20240424 19:54:20.139"/>
</kw>
<if>
<branch type="IF" condition="${length} &gt; 0">
<kw name="Navigate To Folder" library="ModelHandlingResource">
<arg>${test_files_folder}</arg>
<tag>mac</tag>
<status status="NOT RUN" starttime="20240424 19:54:20.139" endtime="20240424 19:54:20.139"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:54:20.139" endtime="20240424 19:54:20.139"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:54:20.139" endtime="20240424 19:54:20.139"/>
</if>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${fileName}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<status status="NOT RUN" starttime="20240424 19:54:20.139" endtime="20240424 19:54:20.139"/>
</kw>
<kw name="Check If File Already Exists" library="ModelHandlingResource">
<var>${file_exists}</var>
<arg>${test_files_folder}/${fileName}</arg>
<status status="NOT RUN" starttime="20240424 19:54:20.139" endtime="20240424 19:54:20.139"/>
</kw>
<if>
<branch type="IF" condition="${file_exists}">
<kw name="Over Write File" library="ModelHandlingResource">
<arg>${test_files_folder}</arg>
<status status="NOT RUN" starttime="20240424 19:54:20.139" endtime="20240424 19:54:20.139"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:54:20.139" endtime="20240424 19:54:20.139"/>
</branch>
<branch type="ELSE">
<kw name="Click On Component" library="SwingRobot">
<arg>${save_button}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="NOT RUN" starttime="20240424 19:54:20.139" endtime="20240424 19:54:20.139"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:54:20.139" endtime="20240424 19:54:20.139"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Save As</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:54:20.139" endtime="20240424 19:54:20.139"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:54:20.139" endtime="20240424 19:54:20.139"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:54:20.139" endtime="20240424 19:54:20.139"/>
</if>
<status status="NOT RUN" starttime="20240424 19:54:20.139" endtime="20240424 19:54:20.139"/>
</branch>
<status status="PASS" starttime="20240424 19:54:20.139" endtime="20240424 19:54:20.139"/>
</if>
<kw name="Wait For Project To Save" library="ModelHandlingResource">
<kw name="Log To Console" library="BuiltIn">
<arg>Waiting For Project To Save</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:54:20.139" endtime="20240424 19:54:20.139"/>
</kw>
<kw name="Wait For Saving Progress To Complete" library="ModelHandlingResource">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:20.816" endtime="20240424 19:54:21.093"/>
</kw>
<kw name="List Components In Context" library="SwingRobot">
<arg>formatted</arg>
<doc>Prints components (their types and their internal names) from the selected context.</doc>
<msg timestamp="20240424 19:54:21.296" level="INFO">Level: 0 Component: com.solibri.saf.core.ApplicationFrame Index: 0 Name: frame0
    Level: 1 Component: javax.swing.JRootPane Index: 0 Name: null
       Level: 2 Component: javax.swing.JPanel Index: 0 Name: null.glassPane
       Level: 2 Component: javax.swing.JLayeredPane Index: 0 Name: null.layeredPane
          Level: 3 Component: com.solibri.modelchecker.ui.SmcPerspectivePanel Index: 1 Name: null
             Level: 4 Component: javax.swing.JPanel Index: 2 Name: null
                Level: 5 Component: javax.swing.JPanel Index: 3 Name: null
                   Level: 6 Component: com.solibri.saf.plugins.java3dplugin.actions.ThreeDViewToolbar Index: 4 Name: null
                      Level: 7 Component: com.solibri.saf.plugins.java3dplugin.actions.ThreeDViewToolbar$ToolbarWithThemeIconSize Index: null Name: 3D
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 0 Name: Undo
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 1 Name: Redo
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 2 Name: Spin
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 3 Name: dropDownButton
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 4 Name: Info
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 5 Name: dropDownButton
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 6 Name: Show All
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 7 Name: Show Unselected Transparent
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 8 Name: Show Selected
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 9 Name: Paint Visible With Current Color
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 10 Name: dropDownButton
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 11 Name: Show / Hide Space
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 12 Name: dropDownButton
                         Level: 8 Component: com.solibri.saf.plugins.java3dplugin.actions.FloorsVisibilityPopupMenuButton Index: 13 Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 14 Name: Zoom Extents
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 15 Name: Zoom In
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 16 Name: Zoom Out
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 17 Name: Zoom Selected
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 18 Name: Top Front Right
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 19 Name: dropDownButton
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 20 Name: Change Camera Projection
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$ToolBarToggleButton Index: 0 Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$ToolBarToggleButton Index: 1 Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 21 Name: null
                      Level: 7 Component: com.solibri.saf.core.ui.SearchField Index: 5 Name: null
                         Level: 8 Component: javax.swing.JTextField Index: 0 Name: null
                         Level: 8 Component: javax.swing.JButton Index: 22 Name: null
             Level: 4 Component: com.solibri.saf.core.ui.SafPanel Index: 6 Name: null
                Level: 5 Component: com.solibri.saf.core.ui.ViewSplitPane Index: 7 Name: null
                   Level: 6 Component: SMC_FILE Index: 8 Name: null
                      Level: 7 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel Index: 9 Name: FilePanel
                         Level: 8 Component: javax.swing.JPanel Index: 10 Name: null
                         Level: 8 Component: javax.swing.JToolBar Index: null Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$TransparentGradientPanel Index: 11 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 0 Name: Open Models
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 1 Name: Add Models
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 2 Name: Update Models
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 3 Name: Save Model
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 4 Name: Save Model as
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 5 Name: Security Settings
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 6 Name: Close
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 12 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 13 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 7 Name: Recent
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 8 Name: Integrations
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 9 Name: Roles
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 10 Name: Solution Center
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 11 Name: Settings
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 12 Name: Help
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 14 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 15 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 13 Name: Ruleset Manager
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 16 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 17 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 14 Name: Exit
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 18 Name: null
                         Level: 8 Component: com.solibri.saf.core.ui.SafPanel Index: 19 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.RecentPanel Index: 20 Name: RECENT
                               Level: 10 Component: com.solibri.saf.core.ui.ViewSplitPane Index: 21 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 22 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 15 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 0 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 0 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 23 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 24 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 1 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 25 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 26 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 0 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 0 Name: SafTable
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 0 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 1 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ViewSplitPane$Divider Index: 23 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 24 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 16 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 1 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 2 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 27 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 28 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 3 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 29 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 30 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 2 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 1 Name: SafTable
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 1 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 3 Name: null
                            Level: 9 Component: javax.swing.JPanel Index: 25 Name: REMOTE INTEGRATIONS
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 26 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 27 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 17 Name: null
                                     Level: 12 Component: javax.swing.JTextArea Index: 1 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 28 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 18 Name: null
                                     Level: 12 Component: com.solibri.saf.core.opencdedocuments.ConnectedServerLabel Index: 19 Name: null
                                     Level: 12 Component: javax.swing.JButton Index: 31 Name: null
                                     Level: 12 Component: javax.swing.JButton Index: 32 Name: null
                                     Level: 12 Component: javax.swing.JButton Index: 33 Name: null
                                     Level: 12 Component: com.solibri.saf.core.ui.SafPanel Index: 29 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 30 Name: null
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 31 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 20 Name: null
                                  Level: 11 Component: com.solibri.sae.ui.RoundedPanel Index: 32 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 2 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 4 Name: null
                                           Level: 14 Component: javax.swing.JPanel Index: 33 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 34 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 35 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 21 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 22 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 23 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 2 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 36 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 2 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 24 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 25 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 37 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 38 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 26 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 27 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 28 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 3 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 39 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 3 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 29 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 30 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 40 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 41 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 31 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 32 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 33 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 4 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 42 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 4 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 34 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 35 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 43 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 44 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 36 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 37 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 38 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 5 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 45 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 5 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 39 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 40 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 4 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 34 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 35 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 5 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 36 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 37 Name: null
                            Level: 9 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel Index: 46 Name: ROLES
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 47 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 41 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 42 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 43 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 44 Name: null
                                  Level: 11 Component: javax.swing.JTextField Index: 6 Name: roleNameText
                                  Level: 11 Component: com.solibri.saf.core.ui.HtmlEditorPanel Index: 48 Name: null
                                     Level: 12 Component: com.solibri.saf.core.DefaultViewToolBar Index: null Name: 
                                        Level: 13 Component: com.solibri.sae.ui.ToolBarButton Index: 38 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 3 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 5 Name: null
                                           Level: 14 Component: javax.swing.JTextPane Index: 7 Name: roleDescription
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 6 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 39 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 40 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 7 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 41 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 42 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$FileChooserPanel Index: 49 Name: null
                                     Level: 12 Component: javax.swing.JTextField Index: 8 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 43 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$LayoutFileChooserPanel Index: 50 Name: null
                                     Level: 12 Component: javax.swing.JTextField Index: 9 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 44 Name: null
                                  Level: 11 Component: com.solibri.sae.ui.JDefaultButton Index: 45 Name: null
                                  Level: 11 Component: com.solibri.sae.ui.ToolBarButton Index: 46 Name: Remove Default Layout Set
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 51 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.ResourceTablePanel Index: 52 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 45 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 4 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 8 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 47 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 48 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 9 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 49 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 50 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 6 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 2 Name: RULESETS
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 2 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 7 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 51 Name: Add Rulesets...
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 52 Name: Remove Rulesets
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.ResourceTablePanel Index: 53 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 46 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 5 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 10 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 53 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 54 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 11 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 55 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 56 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 8 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 3 Name: CLASSIFICATIONS
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 3 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 9 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 57 Name: Add Classifications...
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 58 Name: Remove Classifications
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.ResourceTablePanel Index: 54 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 47 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 6 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 12 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 59 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 60 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 13 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 61 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 62 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 10 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 4 Name: ITOS
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 4 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 11 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 63 Name: Add Information Takeoff Definitions...
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 64 Name: Remove Information Takeoff Definitions
                               Level: 10 Component: javax.swing.JSeparator Index: null Name: null
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 55 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$NamedActionButton Index: 65 Name: Save
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$NamedActionButton Index: 66 Name: Save As
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$NamedActionButton Index: 67 Name: Revert
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.SolutionCenterPanel Index: 56 Name: Solibri Solution Center
                               Level: 10 Component: javax.swing.JScrollPane Index: 7 Name: null
                                  Level: 11 Component: javax.swing.JViewport Index: 12 Name: null
                                     Level: 12 Component: javax.swing.JPanel Index: 57 Name: null
                                        Level: 13 Component: com.solibri.saf.core.ui.AntialisedLabel Index: 48 Name: null
                                        Level: 13 Component: com.solibri.saf.core.ui.AntialisedLabel Index: 49 Name: null
                                        Level: 13 Component: javax.swing.JPanel Index: 58 Name: null
                                        Level: 13 Component: javax.swing.JPanel Index: 59 Name: null
                                  Level: 11 Component: javax.swing.JScrollPane$ScrollBar Index: 14 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 68 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 69 Name: null
                                  Level: 11 Component: javax.swing.JScrollPane$ScrollBar Index: 15 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 70 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 71 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 60 Name: null
                                  Level: 11 Component: javax.swing.JTextPane Index: 10 Name: null
                                  Level: 11 Component: javax.swing.JButton Index: 72 Name: null
                                  Level: 11 Component: javax.swing.JPanel Index: 61 Name: null
                                     Level: 12 Component: javax.swing.JTextPane Index: 11 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 62 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.AntialisedLabel Index: 50 Name: null
                                  Level: 11 Component: javax.swing.JProgressBar Index: null Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.SettingsPanel Index: 63 Name: SETTINGS
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 51 Name: Layouts
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 52 Name: General
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 53 Name: Units
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 54 Name: Proxy Server Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 55 Name: Report Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 56 Name: Discipline and Color Map...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 57 Name: Checking...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 58 Name: Info...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 59 Name: IFC Import Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 60 Name: Presentation...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 61 Name: 3D...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 62 Name: Dimension...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 63 Name: Markup...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 64 Name: Sectioning...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 65 Name: Footprints...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 66 Name: Navigation Map...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 67 Name: DWG Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 68 Name: Hyperlink Templates...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 69 Name: BCF Live Connector...
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.HelpPanel Index: 64 Name: HELP
                               Level: 10 Component: javax.swing.JPanel Index: 65 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 70 Name: Help
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 71 Name: &lt;html&gt;&lt;u&gt;Support&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 72 Name: &lt;html&gt;&lt;u&gt;Feedback&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 73 Name: &lt;html&gt;&lt;u&gt;Tutorials&lt;/u&gt;
                                  Level: 11 Component: javax.swing.JSeparator Index: null Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 74 Name: &lt;html&gt;&lt;u&gt;Solibri Solution Center&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 75 Name: &lt;html&gt;&lt;u&gt;Solibri&lt;/u&gt;
                                  Level: 11 Component: javax.swing.JSeparator Index: null Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 76 Name: &lt;html&gt;&lt;u&gt;Check for Updates&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 77 Name: License Key...
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 78 Name: Borrow License...
                                  Level: 11 Component: javax.swing.JSeparator Index: null Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 79 Name: License Agreement...
                               Level: 10 Component: com.solibri.modelchecker.plugins.fileplugin.ui.InfoPanel Index: 66 Name: INFO
             Level: 4 Component: com.solibri.modelchecker.core.SmcPerspective$1 Index: null Name: Searchbar
                Level: 5 Component: com.solibri.modelchecker.core.SmcPerspective$ToDoToolBarButton Index: 73 Name: null
                Level: 5 Component: com.solibri.sae.ui.ToolBarButton Index: 74 Name: VIEWS
                Level: 5 Component: javax.swing.JButton Index: 75 Name: null
             Level: 4 Component: javax.swing.JPanel Index: 67 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 80 Name: null
                Level: 5 Component: javax.swing.JPanel Index: 68 Name: progressPanel
                   Level: 6 Component: javax.swing.JPanel Index: 69 Name: progressBarAndLabelPanel
                      Level: 7 Component: javax.swing.JProgressBar Index: null Name: thebar
                      Level: 7 Component: javax.swing.JLabel Index: 81 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 82 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 83 Name: Task
                Level: 5 Component: javax.swing.JLabel Index: 84 Name: null
                Level: 5 Component: javax.swing.JPanel Index: 70 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 85 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 86 Name: Selected
                Level: 5 Component: javax.swing.JLabel Index: 87 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 88 Name: SlideTrackingId
                Level: 5 Component: javax.swing.JLabel Index: 89 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 90 Name: SlideStatus
                Level: 5 Component: javax.swing.JLabel Index: 91 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 92 Name: Slide
                Level: 5 Component: javax.swing.JLabel Index: 93 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 94 Name: Coordinates
                Level: 5 Component: javax.swing.JLabel Index: 95 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 96 Name: Location
             Level: 4 Component: javax.swing.JPanel Index: 71 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 97 Name: null
             Level: 4 Component: javax.swing.JToolBar Index: null Name: Solibri Office
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 98 Name: FILE
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 99 Name: MODEL
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 100 Name: CHECKING
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 101 Name: COMMUNICATION
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 102 Name: INFORMATION TAKEOFF
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 103 Name: BCF LIVE CONNECTOR
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 104 Name: SCORE
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 105 Name: AddLayoutButton
          Level: 3 Component: com.formdev.flatlaf.ui.FlatTitlePane Index: null Name: null
             Level: 4 Component: javax.swing.JPanel Index: 72 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 106 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$2 Index: null Name: null
             Level: 4 Component: com.formdev.flatlaf.ui.FlatTitlePane$1 Index: 107 Name: null
             Level: 4 Component: com.formdev.flatlaf.ui.FlatTitlePane$4 Index: 73 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 76 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 77 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 78 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 79 Name: null</msg>
<status status="PASS" starttime="20240424 19:54:21.093" endtime="20240424 19:54:21.296"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${OS}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:54:21.296" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:54:21.296" endtime="20240424 19:54:21.296"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:54:21.296" endtime="20240424 19:54:21.296"/>
</return>
<msg timestamp="20240424 19:54:21.296" level="INFO">${OS} = Windows</msg>
<status status="PASS" starttime="20240424 19:54:21.296" endtime="20240424 19:54:21.296"/>
</kw>
<if>
<branch type="IF" condition="'${OS}' == 'Windows'">
<while condition="${True}">
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:54:31.325" level="FAIL">Dialog 'Progress...' is not open</msg>
<status status="FAIL" starttime="20240424 19:54:21.296" endtime="20240424 19:54:31.325"/>
</kw>
<msg timestamp="20240424 19:54:31.325" level="INFO">${is_progress_dialog_displayed} = False</msg>
<status status="PASS" starttime="20240424 19:54:21.296" endtime="20240424 19:54:31.325"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="PASS" starttime="20240424 19:54:31.325" endtime="20240424 19:54:31.325"/>
</break>
<status status="PASS" starttime="20240424 19:54:31.325" endtime="20240424 19:54:31.325"/>
</branch>
<status status="PASS" starttime="20240424 19:54:31.325" endtime="20240424 19:54:31.325"/>
</if>
<status status="PASS" starttime="20240424 19:54:21.296" endtime="20240424 19:54:31.325"/>
</iter>
<status status="PASS" starttime="20240424 19:54:21.296" endtime="20240424 19:54:31.325"/>
</while>
<status status="PASS" starttime="20240424 19:54:21.296" endtime="20240424 19:54:31.325"/>
</branch>
<status status="PASS" starttime="20240424 19:54:21.296" endtime="20240424 19:54:31.325"/>
</if>
<if>
<branch type="IF" condition="'${OS}' == 'Darwin'">
<while condition="${True}">
<iter>
<kw name="Call Component Method" library="SwingRobot">
<var>${value}</var>
<arg>thebar</arg>
<arg>getValue</arg>
<doc>Calls a method from specified component.</doc>
<status status="NOT RUN" starttime="20240424 19:54:31.325" endtime="20240424 19:54:31.325"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Saving progress ${value}%</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240424 19:54:31.325" endtime="20240424 19:54:31.325"/>
</kw>
<if>
<branch type="IF" condition="'${value}' == '0'">
<break>
<status status="NOT RUN" starttime="20240424 19:54:31.325" endtime="20240424 19:54:31.325"/>
</break>
<status status="NOT RUN" starttime="20240424 19:54:31.325" endtime="20240424 19:54:31.325"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:54:31.325" endtime="20240424 19:54:31.325"/>
</if>
<status status="NOT RUN" starttime="20240424 19:54:31.325" endtime="20240424 19:54:31.325"/>
</iter>
<status status="NOT RUN" starttime="20240424 19:54:31.325" endtime="20240424 19:54:31.325"/>
</while>
<status status="NOT RUN" starttime="20240424 19:54:31.325" endtime="20240424 19:54:31.325"/>
</branch>
<status status="PASS" starttime="20240424 19:54:31.325" endtime="20240424 19:54:31.325"/>
</if>
<status status="PASS" starttime="20240424 19:54:20.816" endtime="20240424 19:54:31.325"/>
</kw>
<status status="PASS" starttime="20240424 19:54:20.139" endtime="20240424 19:54:31.325"/>
</kw>
<status status="PASS" starttime="20240424 19:54:18.102" endtime="20240424 19:54:31.325"/>
</kw>
<kw name="Then Close Model Without Saving Classification" library="classification_step_definitions">
<arg>Save Modified Classifications</arg>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:31.325" endtime="20240424 19:54:31.325"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:54:31.325" endtime="20240424 19:54:31.325"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:31.325" endtime="20240424 19:54:31.340"/>
</kw>
<status status="PASS" starttime="20240424 19:54:31.325" endtime="20240424 19:54:31.340"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${close_button_is_enabled}</var>
<arg>Label Should Be Enabled</arg>
<arg>${button_close_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:54:31.340" endtime="20240424 19:54:31.357"/>
</kw>
<msg timestamp="20240424 19:54:31.357" level="INFO">${close_button_is_enabled} = True</msg>
<status status="PASS" starttime="20240424 19:54:31.340" endtime="20240424 19:54:31.357"/>
</kw>
<if>
<branch type="IF" condition="${close_button_is_enabled}">
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:54:31.358" endtime="20240424 19:54:31.440"/>
</kw>
<status status="PASS" starttime="20240424 19:54:31.357" endtime="20240424 19:54:31.440"/>
</branch>
<status status="PASS" starttime="20240424 19:54:31.357" endtime="20240424 19:54:31.440"/>
</if>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Dialog Should Be Open</arg>
<arg>${Save Modified Files}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>${Save Modified Files}</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:54:31.440" endtime="20240424 19:54:31.507"/>
</kw>
<msg timestamp="20240424 19:54:31.507" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20240424 19:54:31.440" endtime="20240424 19:54:31.507"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${Save Modified Files}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:54:31.507" endtime="20240424 19:54:31.518"/>
</kw>
<if>
<branch type="IF" condition="${status}">
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:54:31.518" endtime="20240424 19:54:31.560"/>
</kw>
<status status="PASS" starttime="20240424 19:54:31.518" endtime="20240424 19:54:31.560"/>
</branch>
<status status="PASS" starttime="20240424 19:54:31.518" endtime="20240424 19:54:31.560"/>
</if>
<status status="PASS" starttime="20240424 19:54:31.325" endtime="20240424 19:54:31.560"/>
</kw>
<kw name="Then Reopen Model and Verify Category in Classification View" library="classification_step_definitions">
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${test_files_folder}\\Solibri Building.smc</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:31.560" endtime="20240424 19:54:31.618"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:54:31.622" level="INFO">${context} = Solibri Office - Solibri Building</msg>
<status status="PASS" starttime="20240424 19:54:31.618" endtime="20240424 19:54:31.622"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:54:31.622" endtime="20240424 19:54:31.622"/>
</kw>
<status status="PASS" starttime="20240424 19:54:31.618" endtime="20240424 19:54:31.622"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:31.678" endtime="20240424 19:54:31.700"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:54:31.700" endtime="20240424 19:54:31.705"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:31.705" endtime="20240424 19:54:31.705"/>
</kw>
<status status="PASS" starttime="20240424 19:54:31.622" endtime="20240424 19:54:31.705"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:54:31.705" endtime="20240424 19:54:31.710"/>
</kw>
<status status="PASS" starttime="20240424 19:54:31.705" endtime="20240424 19:54:31.710"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:54:31.710" endtime="20240424 19:54:31.710"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:54:31.710" endtime="20240424 19:54:31.719"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:54:31.719" endtime="20240424 19:54:33.138"/>
</kw>
<status status="PASS" starttime="20240424 19:54:31.719" endtime="20240424 19:54:33.138"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:54:33.138" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:54:33.138" endtime="20240424 19:54:33.138"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:54:33.138" endtime="20240424 19:54:33.138"/>
</return>
<msg timestamp="20240424 19:54:33.138" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:54:33.138" endtime="20240424 19:54:33.138"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:54:33.138" endtime="20240424 19:54:33.327"/>
</kw>
<status status="PASS" starttime="20240424 19:54:33.138" endtime="20240424 19:54:33.327"/>
</kw>
<status status="PASS" starttime="20240424 19:54:33.138" endtime="20240424 19:54:33.327"/>
</branch>
<status status="PASS" starttime="20240424 19:54:33.138" endtime="20240424 19:54:33.327"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:54:33.327" endtime="20240424 19:54:33.327"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:54:33.327" endtime="20240424 19:54:33.327"/>
</branch>
<status status="PASS" starttime="20240424 19:54:33.327" endtime="20240424 19:54:33.327"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:54:33.327" level="INFO">${path} = C:\Users\runneradmin\Documents\RFTestFiles</msg>
<msg timestamp="20240424 19:54:33.327" level="INFO">${filename} = Solibri Building.smc</msg>
<status status="PASS" starttime="20240424 19:54:33.327" endtime="20240424 19:54:33.327"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:54:33.327" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 19:54:33.327" level="INFO">${ext} = smc</msg>
<status status="PASS" starttime="20240424 19:54:33.327" endtime="20240424 19:54:33.327"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:33.327" endtime="20240424 19:54:33.596"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:54:33.596" endtime="20240424 19:54:33.599"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:33.599" endtime="20240424 19:54:34.414"/>
</kw>
<status status="PASS" starttime="20240424 19:54:33.327" endtime="20240424 19:54:34.414"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:54:34.414" endtime="20240424 19:54:34.746"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${COMPONENT_HIERARCHY_PANEL}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:54:34.746" endtime="20240424 19:54:34.749"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>ContainmentTree</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:54:34.752" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:54:34.749" endtime="20240424 19:54:34.752"/>
</kw>
<if>
<branch type="IF" condition="${row_count} &gt; ${0}">
<kw name="Evaluate" library="BuiltIn">
<var>${row_count}</var>
<arg>${row_count}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:54:34.752" level="INFO">${row_count} = 0</msg>
<status status="PASS" starttime="20240424 19:54:34.752" endtime="20240424 19:54:34.752"/>
</kw>
<status status="PASS" starttime="20240424 19:54:34.752" endtime="20240424 19:54:34.752"/>
</branch>
<status status="PASS" starttime="20240424 19:54:34.752" endtime="20240424 19:54:34.752"/>
</if>
<status status="PASS" starttime="20240424 19:54:33.327" endtime="20240424 19:54:34.752"/>
</kw>
<status status="PASS" starttime="20240424 19:54:33.327" endtime="20240424 19:54:34.752"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<status status="NOT RUN" starttime="20240424 19:54:34.752" endtime="20240424 19:54:34.752"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:54:34.752" endtime="20240424 19:54:34.752"/>
</branch>
<status status="PASS" starttime="20240424 19:54:33.327" endtime="20240424 19:54:34.752"/>
</if>
<status status="PASS" starttime="20240424 19:54:31.560" endtime="20240424 19:54:34.752"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${ITO_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:34.752" endtime="20240424 19:54:34.761"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:54:34.761" endtime="20240424 19:54:34.761"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:34.761" endtime="20240424 19:54:34.765"/>
</kw>
<status status="PASS" starttime="20240424 19:54:34.752" endtime="20240424 19:54:34.765"/>
</kw>
<kw name="Verify Category in Classification View" library="classification_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:34.765" endtime="20240424 19:54:34.813"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:54:34.813" endtime="20240424 19:54:35.300"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:54:35.300" endtime="20240424 19:54:35.397"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${category_name_in_classification}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:54:35.471" level="INFO">${category_name_in_classification} = From Classification Rules</msg>
<status status="PASS" starttime="20240424 19:54:35.397" endtime="20240424 19:54:35.471"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${category_name_in_classification}</arg>
<arg>From Classification Rules</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:54:35.471" endtime="20240424 19:54:35.471"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${classification_in_category}</var>
<arg>1</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:54:35.482" level="INFO">${classification_in_category} = Building Elements - General</msg>
<status status="PASS" starttime="20240424 19:54:35.471" endtime="20240424 19:54:35.482"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${classification_in_category}</arg>
<arg>Building Elements - General</arg>
<arg>Building Elements - General</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:54:35.482" endtime="20240424 19:54:35.482"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${category_name_in_classification}</var>
<arg>1</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:54:35.485" level="INFO">${category_name_in_classification} = From IFC</msg>
<status status="PASS" starttime="20240424 19:54:35.482" endtime="20240424 19:54:35.485"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${category_name_in_classification}</arg>
<arg>From IFC</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:54:35.485" endtime="20240424 19:54:35.485"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${classification_in_category}</var>
<arg>1</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:54:35.485" level="INFO">${classification_in_category} = AC Zone Category</msg>
<status status="PASS" starttime="20240424 19:54:35.485" endtime="20240424 19:54:35.485"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${classification_in_category}</arg>
<arg>AC Zone Category</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:54:35.485" endtime="20240424 19:54:35.485"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${classification_in_category}</var>
<arg>1</arg>
<arg>4</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:54:35.485" level="INFO">${classification_in_category} = ARCHICAD Classification</msg>
<status status="PASS" starttime="20240424 19:54:35.485" endtime="20240424 19:54:35.485"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${classification_in_category}</arg>
<arg>ARCHICAD Classification</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:54:35.485" endtime="20240424 19:54:35.485"/>
</kw>
<status status="PASS" starttime="20240424 19:54:34.765" endtime="20240424 19:54:35.485"/>
</kw>
<status status="PASS" starttime="20240424 19:54:31.560" endtime="20240424 19:54:35.485"/>
</kw>
<kw name="Then Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<msg timestamp="20240424 19:54:35.626" level="INFO">Closed dialog 'To-Do'.
Closed dialog 'Progress...'.</msg>
<status status="PASS" starttime="20240424 19:54:35.485" endtime="20240424 19:54:35.626"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:35.626" endtime="20240424 19:54:35.629"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:54:35.629" endtime="20240424 19:54:35.634"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:35.634" endtime="20240424 19:54:35.655"/>
</kw>
<status status="PASS" starttime="20240424 19:54:35.626" endtime="20240424 19:54:35.655"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:54:35.655" endtime="20240424 19:54:35.811"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:54:35.811" endtime="20240424 19:54:35.816"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:54:45.834" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:54:35.817" endtime="20240424 19:54:45.834"/>
</kw>
<msg timestamp="20240424 19:54:45.834" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:54:35.816" endtime="20240424 19:54:45.834"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:54:55.847" level="FAIL">Dialog 'Select' is not open</msg>
<status status="FAIL" starttime="20240424 19:54:45.834" endtime="20240424 19:54:55.847"/>
</kw>
<msg timestamp="20240424 19:54:55.847" level="INFO">${check_if_save_asked} = False</msg>
<status status="PASS" starttime="20240424 19:54:45.834" endtime="20240424 19:54:55.847"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:54:55.847" endtime="20240424 19:54:55.847"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:54:55.847" endtime="20240424 19:54:55.847"/>
</branch>
<status status="PASS" starttime="20240424 19:54:55.847" endtime="20240424 19:54:55.847"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:54:55.847" endtime="20240424 19:54:55.847"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:54:55.847" endtime="20240424 19:54:55.847"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:54:55.847" endtime="20240424 19:54:55.847"/>
</branch>
<status status="PASS" starttime="20240424 19:54:55.847" endtime="20240424 19:54:55.847"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:55.847" endtime="20240424 19:54:55.847"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:54:55.847" endtime="20240424 19:54:55.847"/>
</kw>
<status status="PASS" starttime="20240424 19:54:55.847" endtime="20240424 19:54:55.847"/>
</kw>
<status status="PASS" starttime="20240424 19:54:35.485" endtime="20240424 19:54:55.847"/>
</kw>
<status status="PASS" starttime="20240424 19:54:06.436" endtime="20240424 19:54:55.847"/>
</test>
<doc>Test suite to check Classification plugin functionality</doc>
<meta name="Feature">Classification</meta>
<status status="PASS" starttime="20240424 19:53:43.283" endtime="20240424 19:54:55.847"/>
</suite>
<suite id="s1-s9" name="09 Communication" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\09_communication.robot">
<test id="s1-s9-t1" name="Test Add New Presentation" line="15">
<kw name="Given No Existing Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:55.878" endtime="20240424 19:54:55.894"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:54:55.894" endtime="20240424 19:54:55.900"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:55.900" endtime="20240424 19:54:55.969"/>
</kw>
<status status="PASS" starttime="20240424 19:54:55.878" endtime="20240424 19:54:55.969"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:54:55.969" endtime="20240424 19:54:55.969"/>
</kw>
<status status="PASS" starttime="20240424 19:54:55.969" endtime="20240424 19:54:55.969"/>
</kw>
<msg timestamp="20240424 19:54:55.969" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 19:54:55.969" endtime="20240424 19:54:55.969"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:54:55.969" endtime="20240424 19:54:55.969"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:54:55.969" endtime="20240424 19:54:55.969"/>
</branch>
<status status="PASS" starttime="20240424 19:54:55.969" endtime="20240424 19:54:55.969"/>
</if>
<status status="PASS" starttime="20240424 19:54:55.878" endtime="20240424 19:54:55.969"/>
</kw>
<kw name="And IFC File Is Open" library="ModelHandlingResource">
<arg>${solibri_building_ifc}</arg>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${file_name_with_path}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:55.969" endtime="20240424 19:54:55.969"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:54:55.980" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:54:55.969" endtime="20240424 19:54:55.980"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:54:55.980" endtime="20240424 19:54:55.980"/>
</kw>
<status status="PASS" starttime="20240424 19:54:55.969" endtime="20240424 19:54:55.980"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:55.980" endtime="20240424 19:54:55.985"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:54:55.985" endtime="20240424 19:54:55.987"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:55.987" endtime="20240424 19:54:55.991"/>
</kw>
<status status="PASS" starttime="20240424 19:54:55.980" endtime="20240424 19:54:55.991"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:54:55.991" endtime="20240424 19:54:55.999"/>
</kw>
<status status="PASS" starttime="20240424 19:54:55.991" endtime="20240424 19:54:55.999"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:54:55.999" endtime="20240424 19:54:56.031"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:54:56.031" endtime="20240424 19:54:56.037"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:54:56.037" endtime="20240424 19:54:57.454"/>
</kw>
<status status="PASS" starttime="20240424 19:54:56.037" endtime="20240424 19:54:57.454"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:54:57.454" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:54:57.454" endtime="20240424 19:54:57.454"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:54:57.454" endtime="20240424 19:54:57.454"/>
</return>
<msg timestamp="20240424 19:54:57.454" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:54:57.454" endtime="20240424 19:54:57.454"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:54:57.454" endtime="20240424 19:54:57.710"/>
</kw>
<status status="PASS" starttime="20240424 19:54:57.454" endtime="20240424 19:54:57.711"/>
</kw>
<status status="PASS" starttime="20240424 19:54:57.454" endtime="20240424 19:54:57.711"/>
</branch>
<status status="PASS" starttime="20240424 19:54:57.454" endtime="20240424 19:54:57.711"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:54:57.711" endtime="20240424 19:54:57.711"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:54:57.711" endtime="20240424 19:54:57.711"/>
</branch>
<status status="PASS" starttime="20240424 19:54:57.711" endtime="20240424 19:54:57.711"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:54:57.728" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\ifc</msg>
<msg timestamp="20240424 19:54:57.728" level="INFO">${filename} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:54:57.711" endtime="20240424 19:54:57.728"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:54:57.730" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 19:54:57.730" level="INFO">${ext} = ifc</msg>
<status status="PASS" starttime="20240424 19:54:57.728" endtime="20240424 19:54:57.730"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<status status="NOT RUN" starttime="20240424 19:54:57.730" endtime="20240424 19:54:57.730"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:54:57.730" endtime="20240424 19:54:57.730"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:54:57.730" endtime="20240424 19:54:57.844"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:57.844" endtime="20240424 19:54:57.904"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:54:57.904" endtime="20240424 19:54:57.913"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:54:57.913" endtime="20240424 19:54:57.964"/>
</kw>
<status status="PASS" starttime="20240424 19:54:57.844" endtime="20240424 19:54:57.964"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:54:59.989" level="INFO">2024-04-24 19:54:58.487+0000 [Thread-345] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 0 ms.
2024-04-24 19:54:58.487+0000 [Thread-345] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 755 ms (using 1 threads)
2024-04-24 19:54:58.517+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 30 ms
2024-04-24 19:54:59.495+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 1008 ms.</msg>
<status status="PASS" starttime="20240424 19:54:57.964" endtime="20240424 19:54:59.989"/>
</kw>
<status status="PASS" starttime="20240424 19:54:57.964" endtime="20240424 19:54:59.989"/>
</kw>
<msg timestamp="20240424 19:54:59.989" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:54:57.964" endtime="20240424 19:54:59.989"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:54:59.989" endtime="20240424 19:55:00.641"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:55:00.641" endtime="20240424 19:55:00.690"/>
</kw>
<status status="PASS" starttime="20240424 19:54:59.989" endtime="20240424 19:55:00.690"/>
</branch>
<status status="PASS" starttime="20240424 19:54:59.989" endtime="20240424 19:55:00.690"/>
</if>
<status status="PASS" starttime="20240424 19:54:57.730" endtime="20240424 19:55:00.690"/>
</kw>
<status status="PASS" starttime="20240424 19:54:57.730" endtime="20240424 19:55:00.690"/>
</branch>
<status status="PASS" starttime="20240424 19:54:57.730" endtime="20240424 19:55:00.690"/>
</if>
<status status="PASS" starttime="20240424 19:54:55.969" endtime="20240424 19:55:00.690"/>
</kw>
<status status="PASS" starttime="20240424 19:54:55.969" endtime="20240424 19:55:00.690"/>
</kw>
<kw name="Add New Presentation">
<arg>${presentation_name}</arg>
<arg>${presentation_description}</arg>
<doc>Add a new presentation</doc>
<kw name="Switch Layout" library="Common">
<arg>${COMMUNICATION_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:00.690" endtime="20240424 19:55:00.722"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:00.722" endtime="20240424 19:55:00.724"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:00.724" endtime="20240424 19:55:00.756"/>
</kw>
<status status="PASS" starttime="20240424 19:55:00.690" endtime="20240424 19:55:00.756"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${PRESENTATION_VIEW_NAME}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:55:00.756" endtime="20240424 19:55:01.062"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>identifier=${ADD_PRESENTATION_BUTTON_TITLE}</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:55:01.062" endtime="20240424 19:55:01.381"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>identifier=${ADD_PRESENTATION_DIALOG_TITLE}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:55:01.381" endtime="20240424 19:55:01.399"/>
</kw>
<kw name="Insert Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>${name}</arg>
<doc>Inserts text into a text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:55:01.399" endtime="20240424 19:55:01.460"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>identifier=${ADD_PRESENTATION_DIALOG_OK_BUTTON_TITLE}</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:55:01.460" endtime="20240424 19:55:01.576"/>
</kw>
<status status="PASS" starttime="20240424 19:55:00.690" endtime="20240424 19:55:01.576"/>
</kw>
<kw name="Add New Issue">
<arg>Issue1</arg>
<arg>Description1</arg>
<arg>Assigned</arg>
<arg>Info</arg>
<doc>Add a new issue</doc>
<kw name="Switch Layout" library="Common">
<arg>${COMMUNICATION_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:01.576" endtime="20240424 19:55:01.594"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:01.594" endtime="20240424 19:55:01.599"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:01.599" endtime="20240424 19:55:01.681"/>
</kw>
<status status="PASS" starttime="20240424 19:55:01.576" endtime="20240424 19:55:01.681"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:01.693" endtime="20240424 19:55:01.704"/>
</kw>
<kw name="Insert Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>${name}</arg>
<doc>Inserts text into a text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:55:01.704" endtime="20240424 19:55:01.834"/>
</kw>
<kw name="Insert Into Text Field" library="SwingRobot">
<arg>1</arg>
<arg>${description}</arg>
<doc>Inserts text into a text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:55:01.834" endtime="20240424 19:55:03.010"/>
</kw>
<kw name="Type Into Combobox" library="SwingRobot">
<arg>0</arg>
<arg>${status}</arg>
<doc>Types text into a combobox.</doc>
<status status="PASS" starttime="20240424 19:55:03.041" endtime="20240424 19:55:05.095"/>
</kw>
<kw name="Type Into Combobox" library="SwingRobot">
<arg>1</arg>
<arg>${IssueType}</arg>
<doc>Types text into a combobox.</doc>
<status status="PASS" starttime="20240424 19:55:05.095" endtime="20240424 19:55:11.975"/>
</kw>
<kw name="Insert Into Text Field" library="SwingRobot">
<arg>dateField</arg>
<arg>2023-09-08</arg>
<doc>Inserts text into a text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:55:11.975" endtime="20240424 19:55:12.683"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${COMMUNICATION_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:12.684" endtime="20240424 19:55:12.850"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:12.850" endtime="20240424 19:55:12.856"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:12.856" endtime="20240424 19:55:12.984"/>
</kw>
<status status="PASS" starttime="20240424 19:55:12.684" endtime="20240424 19:55:12.985"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:12.988" endtime="20240424 19:55:13.096"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>identifier=IssueListTable</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:55:13.297" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:55:13.096" endtime="20240424 19:55:13.297"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${presentation_name}</var>
<arg>IssueListTable</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:55:13.445" level="INFO">${presentation_name} = &lt;html&gt;Description1&lt;/html&gt;</msg>
<status status="PASS" starttime="20240424 19:55:13.298" endtime="20240424 19:55:13.445"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${Issue_title}</var>
<arg>IssueListTable</arg>
<arg>0</arg>
<arg>3</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:55:13.636" level="INFO">${Issue_title} = &lt;html&gt;Description1&lt;/html&gt;</msg>
<status status="PASS" starttime="20240424 19:55:13.445" endtime="20240424 19:55:13.637"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${Issue_status}</var>
<arg>IssueListTable</arg>
<arg>0</arg>
<arg>5</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:55:13.858" level="INFO">${Issue_status} = &lt;html&gt;Test Presentation&lt;/html&gt;</msg>
<status status="PASS" starttime="20240424 19:55:13.637" endtime="20240424 19:55:13.858"/>
</kw>
<status status="PASS" starttime="20240424 19:55:01.576" endtime="20240424 19:55:13.858"/>
</kw>
<kw name="Close model without Saving Presentation" type="TEARDOWN">
<kw name="Close Model For Cleanup" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:13.866" endtime="20240424 19:55:13.908"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:13.908" endtime="20240424 19:55:13.912"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:13.912" endtime="20240424 19:55:13.931"/>
</kw>
<status status="PASS" starttime="20240424 19:55:13.865" endtime="20240424 19:55:13.931"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>3</arg>
<arg>Component Should Be Visible</arg>
<arg>${button_close_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Component Should Be Visible" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Checks that component is visible.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 19:55:13.932" endtime="20240424 19:55:14.122"/>
</kw>
<status status="PASS" starttime="20240424 19:55:13.931" endtime="20240424 19:55:14.122"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${close_button_is_enabled}</var>
<arg>Label Should Be Enabled</arg>
<arg>${button_close_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:55:14.123" endtime="20240424 19:55:14.126"/>
</kw>
<msg timestamp="20240424 19:55:14.126" level="INFO">${close_button_is_enabled} = True</msg>
<status status="PASS" starttime="20240424 19:55:14.122" endtime="20240424 19:55:14.126"/>
</kw>
<if>
<branch type="IF" condition="${close_button_is_enabled}">
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:55:14.132" endtime="20240424 19:55:14.227"/>
</kw>
<status status="PASS" starttime="20240424 19:55:14.131" endtime="20240424 19:55:14.228"/>
</branch>
<status status="PASS" starttime="20240424 19:55:14.126" endtime="20240424 19:55:14.228"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20</arg>
<arg>2</arg>
<arg>Dialog Should Be Open</arg>
<arg>regexp=^S.*</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>regexp=^S.*</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:55:14.228" endtime="20240424 19:55:14.285"/>
</kw>
<status status="PASS" starttime="20240424 19:55:14.228" endtime="20240424 19:55:14.285"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${save_modified_dialog}</var>
<arg>Dialog Should Be Open</arg>
<arg>regexp=^Save.*</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>regexp=^Save.*</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:55:24.309" level="FAIL">Dialog 'regexp=^Save.*' is not open</msg>
<status status="FAIL" starttime="20240424 19:55:14.286" endtime="20240424 19:55:24.309"/>
</kw>
<msg timestamp="20240424 19:55:24.309" level="INFO">${save_modified_dialog} = False</msg>
<status status="PASS" starttime="20240424 19:55:14.286" endtime="20240424 19:55:24.309"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${select_dialog}</var>
<arg>Dialog Should Be Open</arg>
<arg>regexp=^Select.*</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>regexp=^Select.*</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:55:24.309" endtime="20240424 19:55:24.318"/>
</kw>
<msg timestamp="20240424 19:55:24.318" level="INFO">${select_dialog} = True</msg>
<status status="PASS" starttime="20240424 19:55:24.309" endtime="20240424 19:55:24.318"/>
</kw>
<if>
<branch type="IF" condition="${select_dialog}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:55:24.318" endtime="20240424 19:55:24.323"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:55:24.323" endtime="20240424 19:55:24.339"/>
</kw>
<status status="PASS" starttime="20240424 19:55:24.318" endtime="20240424 19:55:24.339"/>
</branch>
<status status="PASS" starttime="20240424 19:55:24.318" endtime="20240424 19:55:24.339"/>
</if>
<if>
<branch type="IF" condition="${save_modified_dialog}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:55:24.339" endtime="20240424 19:55:24.339"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:55:24.339" endtime="20240424 19:55:24.339"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:55:24.339" endtime="20240424 19:55:24.339"/>
</branch>
<status status="PASS" starttime="20240424 19:55:24.339" endtime="20240424 19:55:24.339"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:24.339" endtime="20240424 19:55:24.445"/>
</kw>
<kw name="Take Screenshot" library="ScreenCapLibrary">
<doc>Takes a screenshot in the specified format at library import and
embeds it into the log file (PNG by default).</doc>
<msg timestamp="20240424 19:55:24.539" level="INFO" html="true">&lt;a href="screenshot_6.png"&gt;&lt;img src="screenshot_6.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240424 19:55:24.445" endtime="20240424 19:55:24.539"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:55:24.539" endtime="20240424 19:55:24.553"/>
</kw>
<status status="PASS" starttime="20240424 19:55:24.539" endtime="20240424 19:55:24.553"/>
</kw>
<status status="PASS" starttime="20240424 19:55:13.865" endtime="20240424 19:55:24.553"/>
</kw>
<status status="PASS" starttime="20240424 19:55:13.864" endtime="20240424 19:55:24.553"/>
</kw>
<doc>Test adding a new presentation</doc>
<tag>smoke</tag>
<status status="PASS" starttime="20240424 19:54:55.878" endtime="20240424 19:55:24.553"/>
</test>
<status status="PASS" starttime="20240424 19:54:55.847" endtime="20240424 19:55:24.553"/>
</suite>
<suite id="s1-s10" name="10 Ruleset Manager" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\10_ruleset_manager.robot">
<test id="s1-s10-t1" name="Verify Ruleset Manager View" line="14">
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:55:24.615" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:55:24.615" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:55:24 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:55:24.608" endtime="20240424 19:55:24.615"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:55:24.615" endtime="20240424 19:55:24.615"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:24.615" endtime="20240424 19:55:24.615"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:55:24.627" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:55:24.615" endtime="20240424 19:55:24.627"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:55:24.627" endtime="20240424 19:55:24.627"/>
</kw>
<status status="PASS" starttime="20240424 19:55:24.615" endtime="20240424 19:55:24.627"/>
</kw>
<status status="PASS" starttime="20240424 19:55:24.608" endtime="20240424 19:55:24.627"/>
</kw>
<kw name="And No Existing Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:24.627" endtime="20240424 19:55:24.633"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:24.633" endtime="20240424 19:55:24.633"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:24.633" endtime="20240424 19:55:24.633"/>
</kw>
<status status="PASS" starttime="20240424 19:55:24.627" endtime="20240424 19:55:24.633"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:55:24.633" endtime="20240424 19:55:24.650"/>
</kw>
<status status="PASS" starttime="20240424 19:55:24.633" endtime="20240424 19:55:24.650"/>
</kw>
<msg timestamp="20240424 19:55:24.650" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 19:55:24.633" endtime="20240424 19:55:24.650"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:55:24.650" endtime="20240424 19:55:24.650"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:55:24.650" endtime="20240424 19:55:24.650"/>
</branch>
<status status="PASS" starttime="20240424 19:55:24.650" endtime="20240424 19:55:24.650"/>
</if>
<status status="PASS" starttime="20240424 19:55:24.627" endtime="20240424 19:55:24.650"/>
</kw>
<kw name="Then Switch to the Role View" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:24.650" endtime="20240424 19:55:24.653"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:24.653" endtime="20240424 19:55:24.657"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:24.657" endtime="20240424 19:55:24.661"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:24.661" endtime="20240424 19:55:24.797"/>
</kw>
<status status="PASS" starttime="20240424 19:55:24.653" endtime="20240424 19:55:24.797"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Roles_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:55:24.797" endtime="20240424 19:55:24.797"/>
</kw>
<status status="PASS" starttime="20240424 19:55:24.650" endtime="20240424 19:55:24.797"/>
</kw>
<kw name="And Open &quot;BIM Validation - Architectural.xml&quot; Role" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:24.797" endtime="20240424 19:55:24.797"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Roles_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:55:24.797" endtime="20240424 19:55:24.797"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open Role</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:55:24.797" endtime="20240424 19:55:26.124"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Dialog Should Be Open</arg>
<arg>Open Role</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Open Role</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:55:26.124" endtime="20240424 19:55:26.129"/>
</kw>
<status status="PASS" starttime="20240424 19:55:26.124" endtime="20240424 19:55:26.129"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open Role</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:55:26.129" endtime="20240424 19:55:26.138"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Files</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:55:26.138" endtime="20240424 19:55:26.146"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${role_with_path}</var>
<arg>${roles_folder}</arg>
<arg>BIM Validation - Architectural.xml</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:55:26.146" level="INFO">${role_with_path} = C:\users\public\Solibri\SOLIBRI\Roles\BIM Validation - Architectural.xml</msg>
<status status="PASS" starttime="20240424 19:55:26.146" endtime="20240424 19:55:26.146"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${role_with_path}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:55:26.146" endtime="20240424 19:55:26.228"/>
</kw>
<status status="PASS" starttime="20240424 19:55:24.797" endtime="20240424 19:55:26.228"/>
</kw>
<kw name="And Open ifc Model" library="Common">
<arg>Solibri Building.ifc</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:26.228" endtime="20240424 19:55:26.228"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:55:26.228" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:55:26.228" endtime="20240424 19:55:26.228"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:55:26.228" endtime="20240424 19:55:26.228"/>
</kw>
<status status="PASS" starttime="20240424 19:55:26.228" endtime="20240424 19:55:26.228"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:26.228" endtime="20240424 19:55:26.243"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:26.243" endtime="20240424 19:55:26.243"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:26.243" endtime="20240424 19:55:26.321"/>
</kw>
<status status="PASS" starttime="20240424 19:55:26.228" endtime="20240424 19:55:26.321"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:55:26.321" endtime="20240424 19:55:26.321"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:26.321" endtime="20240424 19:55:26.321"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:55:26.328" endtime="20240424 19:55:26.652"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${ifc_filename}</var>
<arg>${ifc_folder}</arg>
<arg>${ifc_filename}</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:55:26.652" level="INFO">${ifc_filename} = C:\users\public\Solibri\SOLIBRI\Samples\ifc\Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:55:26.652" endtime="20240424 19:55:26.652"/>
</kw>
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:55:26.652" endtime="20240424 19:55:26.808"/>
</kw>
<status status="PASS" starttime="20240424 19:55:26.652" endtime="20240424 19:55:26.816"/>
</kw>
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:55:26.816" endtime="20240424 19:55:26.928"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:26.928" endtime="20240424 19:55:26.933"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:26.933" endtime="20240424 19:55:26.934"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:26.934" endtime="20240424 19:55:26.938"/>
</kw>
<status status="PASS" starttime="20240424 19:55:26.928" endtime="20240424 19:55:26.938"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:55:29.761" level="INFO">2024-04-24 19:55:28.012+0000 [Thread-417] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 0 ms.
2024-04-24 19:55:28.012+0000 [Thread-417] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 1204 ms (using 1 threads)
2024-04-24 19:55:28.044+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 32 ms
2024-04-24 19:55:28.926+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 914 ms.</msg>
<status status="PASS" starttime="20240424 19:55:26.938" endtime="20240424 19:55:29.761"/>
</kw>
<status status="PASS" starttime="20240424 19:55:26.938" endtime="20240424 19:55:29.761"/>
</kw>
<msg timestamp="20240424 19:55:29.761" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:55:26.938" endtime="20240424 19:55:29.761"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:55:29.761" endtime="20240424 19:55:29.770"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:55:29.770" endtime="20240424 19:55:30.016"/>
</kw>
<status status="PASS" starttime="20240424 19:55:29.761" endtime="20240424 19:55:30.016"/>
</branch>
<status status="PASS" starttime="20240424 19:55:29.761" endtime="20240424 19:55:30.016"/>
</if>
<status status="PASS" starttime="20240424 19:55:26.816" endtime="20240424 19:55:30.016"/>
</kw>
<status status="PASS" starttime="20240424 19:55:26.228" endtime="20240424 19:55:30.016"/>
</kw>
<kw name="And Go To Checking Layout" library="ruleset_manager_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>FILE</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:30.016" endtime="20240424 19:55:30.070"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:30.070" endtime="20240424 19:55:30.072"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:30.072" endtime="20240424 19:55:30.117"/>
</kw>
<status status="PASS" starttime="20240424 19:55:30.016" endtime="20240424 19:55:30.117"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>CHECKING</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:30.117" endtime="20240424 19:55:30.153"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:30.153" endtime="20240424 19:55:30.155"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:30.155" endtime="20240424 19:55:30.160"/>
</kw>
<status status="PASS" starttime="20240424 19:55:30.117" endtime="20240424 19:55:30.160"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:55:30.160" endtime="20240424 19:55:30.278"/>
</kw>
<status status="PASS" starttime="20240424 19:55:30.016" endtime="20240424 19:55:30.278"/>
</kw>
<kw name="And Verify Opened Rulesets in Checking View" library="ruleset_manager_step_definitions">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${number_of_ruleset_in_checking_view_before}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240424 19:55:30.278" level="INFO">${number_of_ruleset_in_checking_view_before} = </msg>
<status status="PASS" starttime="20240424 19:55:30.278" endtime="20240424 19:55:30.278"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${number_of_ruleset_in_checking_view_before}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:55:30.298" level="INFO">${number_of_ruleset_in_checking_view_before} = 6</msg>
<status status="PASS" starttime="20240424 19:55:30.278" endtime="20240424 19:55:30.298"/>
</kw>
<status status="PASS" starttime="20240424 19:55:30.278" endtime="20240424 19:55:30.298"/>
</kw>
<kw name="Then Switch to Rulset Manager" library="ruleset_manager_step_definitions">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${ruleset_folder}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240424 19:55:30.298" level="INFO">${ruleset_folder} = C:\Users\Public\Solibri\SOLIBRI</msg>
<status status="PASS" starttime="20240424 19:55:30.298" endtime="20240424 19:55:30.298"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:30.298" endtime="20240424 19:55:30.302"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:30.302" endtime="20240424 19:55:30.304"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:30.304" endtime="20240424 19:55:30.308"/>
</kw>
<status status="PASS" starttime="20240424 19:55:30.298" endtime="20240424 19:55:30.308"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Ruleset_Manager}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:55:30.308" endtime="20240424 19:55:30.605"/>
</kw>
<status status="PASS" starttime="20240424 19:55:30.298" endtime="20240424 19:55:30.605"/>
</kw>
<kw name="Then Verify Ruleset Folder View" library="ruleset_manager_step_definitions">
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:55:31.159" level="INFO">2024-04-24 19:55:30.891+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.FreeFloorSpaceRule can't find resource string for key: cpFloorRequirements.DEFAULT_VALUE
2024-04-24 19:55:30.891+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.FreeFloorSpaceRule can't find resource string for key: cpFloorRequirements.DEFAULT_VALUE
2024-04-24 19:55:30.891+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.WindowRule can't find resource string for key: cpRequirements.DEFAULT_VALUE
2024-04-24 19:55:30.891+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.WindowRule can't find resource string for key: cpRequirements.DEFAULT_VALUE
2024-04-24 19:55:30.906+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.StairRule can't find resource string for key: cpCheckOnly.DEFAULT_VALUE
2024-04-24 19:55:30.906+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.StairRule can't find resource string for key: cpCheckOnly.DEFAULT_VALUE
2024-04-24 19:55:30.906+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.StairRule can't find resource string for key: cpCategorization.DEFAULT_VALUE
2024-04-24 19:55:30.906+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.StairRule can't find resource string for key: cpCategorization.DEFAULT_VALUE
2024-04-24 19:55:30.906+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.StairRule can't find resource string for key: cpStairClassificationNames.DEFAULT_VALUE
2024-04-24 19:55:30.906+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.StairRule can't find resource string for key: cpStairClassificationNames.DEFAULT_VALUE
2024-04-24 19:55:30.906+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.RampRule can't find resource string for key: cpRampRequirements.DEFAULT_VALUE
2024-04-24 19:55:30.906+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.RampRule can't find resource string for key: cpRampRequirements.DEFAULT_VALUE
2024-04-24 19:55:30.922+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.RampRule can't find resource string for key: cpCheckOnly.DEFAULT_VALUE
2024-04-24 19:55:30.922+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.RampRule can't find resource string for key: cpCheckOnly.DEFAULT_VALUE
2024-04-24 19:55:30.922+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.RampRule can't find resource string for key: rpVerticalAccessRampNames.DEFAULT_VALUE
2024-04-24 19:55:30.922+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.RampRule can't find resource string for key: rpVerticalAccessRampNames.DEFAULT_VALUE
2024-04-24 19:55:30.922+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.RampRule can't find resource string for key: rpVerticalAccessStairNames.DEFAULT_VALUE
2024-04-24 19:55:30.922+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.RampRule can't find resource string for key: rpVerticalAccessStairNames.DEFAULT_VALUE
2024-04-24 19:55:30.922+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.RampRule can't find resource string for key: rpGradientRequirements.DEFAULT_VALUE
2024-04-24 19:55:30.922+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.RampRule can't find resource string for key: rpGradientRequirements.DEFAULT_VALUE
2024-04-24 19:55:30.922+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.DoorRule can't find resource string for key: cpDoorRequirements.DEFAULT_VALUE
2024-04-24 19:55:30.922+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.DoorRule can't find resource string for key: cpDoorRequirements.DEFAULT_VALUE
2024-04-24 19:55:30.922+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.DoorRule can't find resource string for key: cpDoorDimensions.DEFAULT_VALUE
2024-04-24 19:55:30.922+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.DoorRule can't find resource string for key: cpDoorDimensions.DEFAULT_VALUE
2024-04-24 19:55:30.922+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.DoorRule can't find resource string for key: rpRampRequirements.DEFAULT_VALUE
2024-04-24 19:55:30.922+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.DoorRule can't find resource string for key: rpRampRequirements.DEFAULT_VALUE
2024-04-24 19:55:31.141+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.saf.plugins.checkingplugin.rule.RuleSerializedState can't find resource string for key: rpIntersectionArea.DEFAULT_VALUE
2024-04-24 19:55:31.141+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.saf.plugins.checkingplugin.rule.RuleSerializedState can't find resource string for key: rpIntersectionArea.DEFAULT_VALUE</msg>
<msg timestamp="20240424 19:55:31.159" level="INFO">${row_count} = 0</msg>
<status status="PASS" starttime="20240424 19:55:30.605" endtime="20240424 19:55:31.159"/>
</kw>
<while condition="${row_count} &lt; 1">
<iter>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:55:31.200" level="INFO">2024-04-24 19:55:31.166+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.saf.plugins.checkingplugin.rule.RuleSerializedState can't find resource string for key: rpDimensionRequirements.DEFAULT_VALUE
2024-04-24 19:55:31.166+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.saf.plugins.checkingplugin.rule.RuleSerializedState can't find resource string for key: rpDimensionRequirements.DEFAULT_VALUE
2024-04-24 19:55:31.166+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.saf.plugins.checkingplugin.rule.RuleSerializedState can't find resource string for key: rpCategorization.DEFAULT_VALUE
2024-04-24 19:55:31.166+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.saf.plugins.checkingplugin.rule.RuleSerializedState can't find resource string for key: rpCategorization.DEFAULT_VALUE
2024-04-24 19:55:31.166+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.saf.plugins.checkingplugin.rule.RuleSerializedState can't find resource string for key: rpIssueTable.DEFAULT_VALUE
2024-04-24 19:55:31.166+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.saf.plugins.checkingplugin.rule.RuleSerializedState can't find resource string for key: rpIssueTable.DEFAULT_VALUE
2024-04-24 19:55:31.166+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.saf.plugins.checkingplugin.rule.RuleSerializedState can't find resource string for key: rpCategorization.DEFAULT_VALUE
2024-04-24 19:55:31.166+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.saf.plugins.checkingplugin.rule.RuleSerializedState can't find resource string for key: rpCategorization.DEFAULT_VALUE
2024-04-24 19:55:31.184+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.RatioOfFloorWindowAreaConstraint can't find resource string for key: skippedSpaces.DEFAULT_VALUE
2024-04-24 19:55:31.184+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.RatioOfFloorWindowAreaConstraint can't find resource string for key: skippedSpaces.DEFAULT_VALUE
2024-04-24 19:55:31.184+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.RatioOfFloorWindowAreaConstraint can't find resource string for key: lightOpeningArea.DEFAULT_VALUE
2024-04-24 19:55:31.184+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.RatioOfFloorWindowAreaConstraint can't find resource string for key: lightOpeningArea.DEFAULT_VALUE</msg>
<msg timestamp="20240424 19:55:31.200" level="INFO">${row_count} = 0</msg>
<status status="PASS" starttime="20240424 19:55:31.159" endtime="20240424 19:55:31.200"/>
</kw>
<status status="PASS" starttime="20240424 19:55:31.159" endtime="20240424 19:55:31.200"/>
</iter>
<iter>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:55:31.217" level="INFO">2024-04-24 19:55:31.203+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.SpaceAreaConstraint can't find resource string for key: spaceAreaList.DEFAULT_VALUE
2024-04-24 19:55:31.203+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.SpaceAreaConstraint can't find resource string for key: spaceAreaList.DEFAULT_VALUE
2024-04-24 19:55:31.203+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.EscapeRouteConstraint can't find resource string for key: spaceUsageTable.DEFAULT_VALUE
2024-04-24 19:55:31.203+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.EscapeRouteConstraint can't find resource string for key: spaceUsageTable.DEFAULT_VALUE
2024-04-24 19:55:31.203+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.EscapeRouteConstraint can't find resource string for key: minPassagewayWidthTable.DEFAULT_VALUE
2024-04-24 19:55:31.203+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.EscapeRouteConstraint can't find resource string for key: minPassagewayWidthTable.DEFAULT_VALUE
2024-04-24 19:55:31.203+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.EscapeRouteConstraint can't find resource string for key: rpVerticalAccessStairNames.DEFAULT_VALUE
2024-04-24 19:55:31.203+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.EscapeRouteConstraint can't find resource string for key: rpVerticalAccessStairNames.DEFAULT_VALUE
2024-04-24 19:55:31.203+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.EscapeRouteConstraint can't find resource string for key: rpExitClassificationNames.DEFAULT_VALUE
2024-04-24 19:55:31.203+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.EscapeRouteConstraint can't find resource string for key: rpExitClassificationNames.DEFAULT_VALUE
2024-04-24 19:55:31.203+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.EscapeRouteConstraint can't find resource string for key: rpFireZones.DEFAULT_VALUE
2024-04-24 19:55:31.203+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.EscapeRouteConstraint can't find resource string for key: rpFireZones.DEFAULT_VALUE</msg>
<msg timestamp="20240424 19:55:31.217" level="INFO">${row_count} = 0</msg>
<status status="PASS" starttime="20240424 19:55:31.200" endtime="20240424 19:55:31.217"/>
</kw>
<status status="PASS" starttime="20240424 19:55:31.200" endtime="20240424 19:55:31.217"/>
</iter>
<iter>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:55:33.282" level="INFO">2024-04-24 19:55:31.225+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.ConstructionTypesFromAgreedListConstraint can't find resource string for key: constructionTypeList.DEFAULT_VALUE
2024-04-24 19:55:31.225+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.ConstructionTypesFromAgreedListConstraint can't find resource string for key: constructionTypeList.DEFAULT_VALUE
2024-04-24 19:55:31.227+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.LayerOfComponentFromAgreedListConstraint can't find resource string for key: LayerList.DEFAULT_VALUE
2024-04-24 19:55:31.227+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.LayerOfComponentFromAgreedListConstraint can't find resource string for key: LayerList.DEFAULT_VALUE
2024-04-24 19:55:31.238+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.238+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.238+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.238+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.238+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.238+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.239+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.239+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.239+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.239+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.239+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.240+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.240+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.241+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.241+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.241+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.242+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.242+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.242+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.242+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.242+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.242+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.242+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.242+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.243+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.244+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.244+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.244+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.244+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.244+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.244+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.244+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.244+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.244+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.244+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.244+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.AllowedProfilesRule can't find resource string for key: 
2024-04-24 19:55:31.247+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.SpacesMustBeInFireCompartments can't find resource string for key: skippedSpaces.DEFAULT_VALUE
2024-04-24 19:55:31.247+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.SpacesMustBeInFireCompartments can't find resource string for key: skippedSpaces.DEFAULT_VALUE
2024-04-24 19:55:31.250+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.SpaceCountsOnEachBuildingStoreyConstraint can't find resource string for key: requiredValues.DEFAULT_VALUE
2024-04-24 19:55:31.250+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.SpaceCountsOnEachBuildingStoreyConstraint can't find resource string for key: requiredValues.DEFAULT_VALUE
2024-04-24 19:55:31.253+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.SpaceGroupContainmentConstraint can't find resource string for key: requiredSpaces.DEFAULT_VALUE
2024-04-24 19:55:31.253+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.SpaceGroupContainmentConstraint can't find resource string for key: requiredSpaces.DEFAULT_VALUE
2024-04-24 19:55:31.264+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.NumberOfSpacesWithRequiredTypeAndSizeConstraint can't find resource string for key: requiredAmounts.DEFAULT_VALUE
2024-04-24 19:55:31.264+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.NumberOfSpacesWithRequiredTypeAndSizeConstraint can't find resource string for key: requiredAmounts.DEFAULT_VALUE
2024-04-24 19:55:31.270+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.NumberOfSpacesWithRequiredTypeAndSizeConstraint can't find resource string for key: spaceGroupTypes.DEFAULT_VALUE
2024-04-24 19:55:31.270+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.NumberOfSpacesWithRequiredTypeAndSizeConstraint can't find resource string for key: spaceGroupTypes.DEFAULT_VALUE
2024-04-24 19:55:31.273+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.DistancesBetweenSpacesConstraint can't find resource string for key: requiredLocations.DEFAULT_VALUE
2024-04-24 19:55:31.273+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.DistancesBetweenSpacesConstraint can't find resource string for key: requiredLocations.DEFAULT_VALUE
2024-04-24 19:55:31.274+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.FireCompartmentAreaConstraint can't find resource string for key: fireCompartmentAreas.DEFAULT_VALUE
2024-04-24 19:55:31.274+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.FireCompartmentAreaConstraint can't find resource string for key: fireCompartmentAreas.DEFAULT_VALUE
2024-04-24 19:55:31.280+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.ModelComparisonRule can't find resource string for key: cpComponents.DEFAULT_VALUE
2024-04-24 19:55:31.280+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.ModelComparisonRule can't find resource string for key: cpComponents.DEFAULT_VALUE
2024-04-24 19:55:31.280+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.ModelComparisonRule can't find resource string for key: cpPropertiesTable.DEFAULT_VALUE
2024-04-24 19:55:31.280+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.ModelComparisonRule can't find resource string for key: cpPropertiesTable.DEFAULT_VALUE
2024-04-24 19:55:31.280+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.ModelComparisonRule can't find resource string for key: cpReportColumns.DEFAULT_VALUE
2024-04-24 19:55:31.280+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.ModelComparisonRule can't find resource string for key: cpReportColumns.DEFAULT_VALUE
2024-04-24 19:55:31.280+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.ModelComparisonRule can't find resource string for key: cpPropertySets.DEFAULT_VALUE
2024-04-24 19:55:31.280+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.ModelComparisonRule can't find resource string for key: cpPropertySets.DEFAULT_VALUE
2024-04-24 19:55:31.281+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.BuildingMustHaveInstancesOfClassConstraint can't find resource string for key: requiredClasses.DEFAULT_VALUE
2024-04-24 19:55:31.281+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.BuildingMustHaveInstancesOfClassConstraint can't find resource string for key: requiredClasses.DEFAULT_VALUE
2024-04-24 19:55:31.282+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.ComponentDistanceRule can't find resource string for key: rpSpaceGroupTypeNames.DEFAULT_VALUE
2024-04-24 19:55:31.282+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.ComponentDistanceRule can't find resource string for key: rpSpaceGroupTypeNames.DEFAULT_VALUE
2024-04-24 19:55:31.284+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.WallValidation can't find resource string for key: cpDimensioningRequirements.DEFAULT_VALUE
2024-04-24 19:55:31.285+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.WallValidation can't find resource string for key: cpDimensioningRequirements.DEFAULT_VALUE
2024-04-24 19:55:31.285+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.WallValidation can't find resource string for key: allowedGeometryTypes.DEFAULT_VALUE
2024-04-24 19:55:31.285+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.WallValidation can't find resource string for key: allowedGeometryTypes.DEFAULT_VALUE
2024-04-24 19:55:31.289+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.RequiredPropertySets can't find resource string for key: requiredPropertySets.DEFAULT_VALUE
2024-04-24 19:55:31.289+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.RequiredPropertySets can't find resource string for key: requiredPropertySets.DEFAULT_VALUE
2024-04-24 19:55:31.289+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.NumberOfComponentsInSpace can't find resource string for key: cpRequirements.DEFAULT_VALUE
2024-04-24 19:55:31.289+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.NumberOfComponentsInSpace can't find resource string for key: cpRequirements.DEFAULT_VALUE
2024-04-24 19:55:31.304+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.SpacesMustBeInSpaceGroupsConstraint can't find resource string for key: skippedSpaces.DEFAULT_VALUE
2024-04-24 19:55:31.304+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.SpacesMustBeInSpaceGroupsConstraint can't find resource string for key: skippedSpaces.DEFAULT_VALUE
2024-04-24 19:55:31.304+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.SpacesMustBeInSpaceGroupsConstraint can't find resource string for key: spaceGroupTypes.DEFAULT_VALUE
2024-04-24 19:55:31.304+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.SpacesMustBeInSpaceGroupsConstraint can't find resource string for key: spaceGroupTypes.DEFAULT_VALUE
2024-04-24 19:55:31.304+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.FireWallsDoorsWindowsConstraint can't find resource string for key: fireComponents.DEFAULT_VALUE
2024-04-24 19:55:31.304+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.FireWallsDoorsWindowsConstraint can't find resource string for key: fireComponents.DEFAULT_VALUE
2024-04-24 19:55:31.304+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.ShelfRunningMetreRule can't find resource string for key: cpStorages.DEFAULT_VALUE
2024-04-24 19:55:31.304+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.ShelfRunningMetreRule can't find resource string for key: cpStorages.DEFAULT_VALUE
2024-04-24 19:55:31.329+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.SpaceAreasOnEachBuildingStoreyConstraint can't find resource string for key: limitValues.DEFAULT_VALUE
2024-04-24 19:55:31.329+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.SpaceAreasOnEachBuildingStoreyConstraint can't find resource string for key: limitValues.DEFAULT_VALUE
2024-04-24 19:55:31.345+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.saf.plugins.checkingplugin.rule.RuleSerializedState can't find resource string for key: rpRecessPropertiesTable.DEFAULT_VALUE
2024-04-24 19:55:31.345+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.saf.plugins.checkingplugin.rule.RuleSerializedState can't find resource string for key: rpRecessPropertiesTable.DEFAULT_VALUE
2024-04-24 19:55:31.345+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.saf.plugins.checkingplugin.rule.RuleSerializedState can't find resource string for key: rpAirwellPropertiesTable.DEFAULT_VALUE
2024-04-24 19:55:31.345+0000 [Load rule libraries] ERROR com.solibri.sae.greenox.Constraint - com.solibri.saf.plugins.checkingplugin.rule.RuleSerializedState can't find resource string for key: rpAirwellPropertiesTable.DEFAULT_VALUE
2024-04-24 19:55:32.267+0000 [AWT-EventQueue-0] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.RampRule can't find resource string for key: rpGradientRequirements.DEFAULT_VALUE
2024-04-24 19:55:32.267+0000 [AWT-EventQueue-0] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.RampRule can't find resource string for key: rpGradientRequirements.DEFAULT_VALUE
2024-04-24 19:55:32.282+0000 [AWT-EventQueue-0] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.RampRule can't find resource string for key: rpGradientRequirements.DEFAULT_VALUE
2024-04-24 19:55:32.282+0000 [AWT-EventQueue-0] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.RampRule can't find resource string for key: rpGradientRequirements.DEFAULT_VALUE
2024-04-24 19:55:32.689+0000 [AWT-EventQueue-0] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.NumberOfSpacesWithRequiredTypeAndSizeConstraint can't find resource string for key: requiredAmounts.DEFAULT_VALUE
2024-04-24 19:55:32.689+0000 [AWT-EventQueue-0] ERROR com.solibri.sae.greenox.Constraint - com.solibri.constraints.construction.NumberOfSpacesWithRequiredTypeAndSizeConstraint can't find resource string for key: requiredAmounts.DEFAULT_VALUE</msg>
<msg timestamp="20240424 19:55:33.282" level="INFO">${row_count} = 6</msg>
<status status="PASS" starttime="20240424 19:55:31.217" endtime="20240424 19:55:33.282"/>
</kw>
<status status="PASS" starttime="20240424 19:55:31.217" endtime="20240424 19:55:33.282"/>
</iter>
<status status="PASS" starttime="20240424 19:55:31.159" endtime="20240424 19:55:33.282"/>
</while>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${ruleset_folder_row_1}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:55:33.298" level="INFO">${ruleset_folder_row_1} = C:\Users\Public\Solibri\SOLIBRI\RuleSets</msg>
<status status="PASS" starttime="20240424 19:55:33.282" endtime="20240424 19:55:33.298"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${ruleset_folder_row_2}</var>
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:55:33.298" level="INFO">${ruleset_folder_row_2} = C:\Users\Public\Solibri\SOLIBRI\RuleSets\Architectural Rules</msg>
<status status="PASS" starttime="20240424 19:55:33.298" endtime="20240424 19:55:33.298"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${ruleset_folder_row_3}</var>
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:55:33.304" level="INFO">${ruleset_folder_row_3} = C:\Users\Public\Solibri\SOLIBRI\RuleSets\Example Rules</msg>
<status status="PASS" starttime="20240424 19:55:33.298" endtime="20240424 19:55:33.304"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${ruleset_folder_row_4}</var>
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:55:33.304" level="INFO">${ruleset_folder_row_4} = C:\Users\Public\Solibri\SOLIBRI\RuleSets\MEP Rules</msg>
<status status="PASS" starttime="20240424 19:55:33.304" endtime="20240424 19:55:33.304"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${ruleset_folder_row_5}</var>
<arg>0</arg>
<arg>4</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:55:33.312" level="INFO">${ruleset_folder_row_5} = C:\Users\Public\Solibri\SOLIBRI\RuleSets\Structural Rules</msg>
<status status="PASS" starttime="20240424 19:55:33.304" endtime="20240424 19:55:33.312"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${ruleset_folder_row_6}</var>
<arg>0</arg>
<arg>5</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:55:33.315" level="INFO">${ruleset_folder_row_6} = Rulesets Open in Solibri</msg>
<status status="PASS" starttime="20240424 19:55:33.312" endtime="20240424 19:55:33.315"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${ruleset_folder}\\RuleSets</arg>
<arg>${ruleset_folder_row_1}</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:55:33.315" endtime="20240424 19:55:33.315"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${ruleset_folder}\\RuleSets\\Architectural Rules</arg>
<arg>${ruleset_folder_row_2}</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:55:33.315" endtime="20240424 19:55:33.315"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${ruleset_folder}\\RuleSets\\Example Rules</arg>
<arg>${ruleset_folder_row_3}</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:55:33.315" endtime="20240424 19:55:33.315"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${ruleset_folder}\\RuleSets\\MEP Rules</arg>
<arg>${ruleset_folder_row_4}</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:55:33.315" endtime="20240424 19:55:33.315"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${ruleset_folder}\\RuleSets\\Structural Rules</arg>
<arg>${ruleset_folder_row_5}</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:55:33.315" endtime="20240424 19:55:33.315"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>Rulesets Open in Solibri</arg>
<arg>${ruleset_folder_row_6}</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:55:33.315" endtime="20240424 19:55:33.315"/>
</kw>
<status status="PASS" starttime="20240424 19:55:30.605" endtime="20240424 19:55:33.315"/>
</kw>
<kw name="Then Verify Libraries View" library="ruleset_manager_step_definitions">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Get Table Cell Value</arg>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Get Table Cell Value" library="SwingRobot">
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<status status="PASS" starttime="20240424 19:55:33.315" endtime="20240424 19:55:33.315"/>
</kw>
<status status="PASS" starttime="20240424 19:55:33.315" endtime="20240424 19:55:33.315"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:55:33.326" level="INFO">${row_count} = 2</msg>
<status status="PASS" starttime="20240424 19:55:33.315" endtime="20240424 19:55:33.326"/>
</kw>
<if>
<branch type="IF" condition="${row_count} &gt; 2">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="NOT RUN" starttime="20240424 19:55:33.326" endtime="20240424 19:55:33.326"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="NOT RUN" starttime="20240424 19:55:33.326" endtime="20240424 19:55:33.326"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:55:33.326" endtime="20240424 19:55:33.326"/>
</branch>
<status status="PASS" starttime="20240424 19:55:33.326" endtime="20240424 19:55:33.326"/>
</if>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${libraries_row_1}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:55:33.332" level="INFO">${libraries_row_1} = Solibri Accessibility Rules</msg>
<status status="PASS" starttime="20240424 19:55:33.326" endtime="20240424 19:55:33.332"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${libraries_row_2}</var>
<arg>1</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:55:33.337" level="INFO">${libraries_row_2} = Solibri Common Rules</msg>
<status status="PASS" starttime="20240424 19:55:33.332" endtime="20240424 19:55:33.337"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>Solibri Accessibility Rules</arg>
<arg>${libraries_row_1}</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:55:33.337" endtime="20240424 19:55:33.337"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>Solibri Common Rules</arg>
<arg>${libraries_row_2}</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:55:33.337" endtime="20240424 19:55:33.337"/>
</kw>
<kw name="Verify Solibri Rulesets Libraries" library="ruleset_manager_step_definitions">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:55:33.337" endtime="20240424 19:55:33.362"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:55:33.362" endtime="20240424 19:55:33.421"/>
</kw>
<kw name="Get Table Column Values" library="SwingRobot">
<var>${ruleset_names}</var>
<arg>1</arg>
<arg>0</arg>
<doc>Returns a list containing all the values of a table column.</doc>
<msg timestamp="20240424 19:55:33.460" level="INFO">${ruleset_names} = ['Solibri Accessibility Rules', 'Accessible Door Rule', 'Accessible Ramp Rule', 'Accessible Route Rule', 'Accessible Stair Rule', 'Accessible Window Rule', 'Free Floor Space', 'Solibri Common Rules', ...</msg>
<status status="PASS" starttime="20240424 19:55:33.421" endtime="20240424 19:55:33.460"/>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<arg>${ruleset_names}</arg>
<arg>${solibri_default_rulesets}</arg>
<doc>Fails if given lists are unequal.</doc>
<status status="PASS" starttime="20240424 19:55:33.460" endtime="20240424 19:55:33.460"/>
</kw>
<status status="PASS" starttime="20240424 19:55:33.337" endtime="20240424 19:55:33.460"/>
</kw>
<status status="PASS" starttime="20240424 19:55:33.315" endtime="20240424 19:55:33.460"/>
</kw>
<kw name="Then Create Ruleset in Workspace and Verify" library="ruleset_manager_step_definitions">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>5</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:55:33.460" endtime="20240424 19:55:33.507"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>New</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:55:33.507" endtime="20240424 19:55:33.540"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${new_ruleset}</var>
<arg>2</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:55:33.540" level="INFO">${new_ruleset} = New Ruleset</msg>
<status status="PASS" starttime="20240424 19:55:33.540" endtime="20240424 19:55:33.540"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>New Ruleset</arg>
<arg>${new_ruleset}</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:55:33.540" endtime="20240424 19:55:33.540"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${copied_ruleset_from_library}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240424 19:55:33.540" level="INFO">${copied_ruleset_from_library} = </msg>
<status status="PASS" starttime="20240424 19:55:33.540" endtime="20240424 19:55:33.540"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${copied_ruleset_from_library}</var>
<arg>1</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:55:33.540" level="INFO">${copied_ruleset_from_library} = Accessible Door Rule</msg>
<status status="PASS" starttime="20240424 19:55:33.540" endtime="20240424 19:55:33.540"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:55:33.540" endtime="20240424 19:55:33.580"/>
</kw>
<kw name="Send Keyboard Event" library="SwingRobot">
<arg>VK_C</arg>
<arg>CTRL_MASK</arg>
<doc>Sends keystrokes to the currently selected component.
Keystroke codes must be one of the mappings in ``abbot.tester.KeyStrokeMap`` (https://sourceforge.net/p/abbot/svn/1214/tree/trunk/abbot/src/abbot/tester/KeyStrokeMap.java#l110).
Constants from ``java.awt.event.InputEvent`` can be used as optional modifiers.</doc>
<status status="PASS" starttime="20240424 19:55:33.580" endtime="20240424 19:55:33.709"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>2</arg>
<arg>0</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:55:33.710" endtime="20240424 19:55:33.759"/>
</kw>
<kw name="Send Keyboard Event" library="SwingRobot">
<arg>VK_V</arg>
<arg>CTRL_MASK</arg>
<doc>Sends keystrokes to the currently selected component.
Keystroke codes must be one of the mappings in ``abbot.tester.KeyStrokeMap`` (https://sourceforge.net/p/abbot/svn/1214/tree/trunk/abbot/src/abbot/tester/KeyStrokeMap.java#l110).
Constants from ``java.awt.event.InputEvent`` can be used as optional modifiers.</doc>
<status status="PASS" starttime="20240424 19:55:33.759" endtime="20240424 19:55:33.773"/>
</kw>
<kw name="Verify Ruleset is Created in Workspace" library="ruleset_manager_step_definitions">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>2</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<msg timestamp="20240424 19:55:33.845" level="INFO">2024-04-24 19:55:33.792+0000 [AWT-EventQueue-0] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.DoorRule can't find resource string for key: cpDoorRequirements.DEFAULT_VALUE
2024-04-24 19:55:33.792+0000 [AWT-EventQueue-0] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.DoorRule can't find resource string for key: cpDoorRequirements.DEFAULT_VALUE
2024-04-24 19:55:33.792+0000 [AWT-EventQueue-0] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.DoorRule can't find resource string for key: cpDoorDimensions.DEFAULT_VALUE
2024-04-24 19:55:33.792+0000 [AWT-EventQueue-0] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.DoorRule can't find resource string for key: cpDoorDimensions.DEFAULT_VALUE
2024-04-24 19:55:33.792+0000 [AWT-EventQueue-0] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.DoorRule can't find resource string for key: rpRampRequirements.DEFAULT_VALUE
2024-04-24 19:55:33.792+0000 [AWT-EventQueue-0] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.DoorRule can't find resource string for key: rpRampRequirements.DEFAULT_VALUE</msg>
<status status="PASS" starttime="20240424 19:55:33.773" endtime="20240424 19:55:33.845"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>2</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:55:33.862" level="INFO">${row_count} = 2</msg>
<status status="PASS" starttime="20240424 19:55:33.845" endtime="20240424 19:55:33.862"/>
</kw>
<while condition="${row_count} &lt; 2">
<iter>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="NOT RUN" starttime="20240424 19:55:33.862" endtime="20240424 19:55:33.862"/>
</kw>
<kw name="Send Keyboard Event" library="SwingRobot">
<arg>VK_C</arg>
<arg>CTRL_MASK</arg>
<doc>Sends keystrokes to the currently selected component.
Keystroke codes must be one of the mappings in ``abbot.tester.KeyStrokeMap`` (https://sourceforge.net/p/abbot/svn/1214/tree/trunk/abbot/src/abbot/tester/KeyStrokeMap.java#l110).
Constants from ``java.awt.event.InputEvent`` can be used as optional modifiers.</doc>
<status status="NOT RUN" starttime="20240424 19:55:33.862" endtime="20240424 19:55:33.862"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>2</arg>
<arg>0</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="NOT RUN" starttime="20240424 19:55:33.862" endtime="20240424 19:55:33.862"/>
</kw>
<kw name="Send Keyboard Event" library="SwingRobot">
<arg>VK_V</arg>
<arg>CTRL_MASK</arg>
<doc>Sends keystrokes to the currently selected component.
Keystroke codes must be one of the mappings in ``abbot.tester.KeyStrokeMap`` (https://sourceforge.net/p/abbot/svn/1214/tree/trunk/abbot/src/abbot/tester/KeyStrokeMap.java#l110).
Constants from ``java.awt.event.InputEvent`` can be used as optional modifiers.</doc>
<status status="NOT RUN" starttime="20240424 19:55:33.862" endtime="20240424 19:55:33.862"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:55:33.862" endtime="20240424 19:55:33.862"/>
</iter>
<status status="NOT RUN" starttime="20240424 19:55:33.862" endtime="20240424 19:55:33.862"/>
</while>
<status status="PASS" starttime="20240424 19:55:33.773" endtime="20240424 19:55:33.862"/>
</kw>
<kw name="Verify Created Ruleset" library="ruleset_manager_step_definitions">
<arg>${copied_ruleset_from_library}</arg>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>2</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:55:33.868" level="INFO">${row_count} = 2</msg>
<status status="PASS" starttime="20240424 19:55:33.862" endtime="20240424 19:55:33.868"/>
</kw>
<if>
<branch type="IF" condition="${row_count} &lt; 2">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>2</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="NOT RUN" starttime="20240424 19:55:33.868" endtime="20240424 19:55:33.868"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:55:33.868" endtime="20240424 19:55:33.868"/>
</branch>
<status status="PASS" starttime="20240424 19:55:33.868" endtime="20240424 19:55:33.868"/>
</if>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>2</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:55:33.868" endtime="20240424 19:55:33.975"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${ruleset_created_in_workspace}</var>
<arg>2</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:55:34.009" level="INFO">${ruleset_created_in_workspace} = Accessible Door Rule</msg>
<status status="PASS" starttime="20240424 19:55:33.975" endtime="20240424 19:55:34.009"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${ruleset_created_in_workspace}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240424 19:55:34.009" level="INFO">${ruleset_created_in_workspace} = Accessible Door Rule</msg>
<status status="PASS" starttime="20240424 19:55:34.009" endtime="20240424 19:55:34.009"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${ruleset_created_in_workspace}</arg>
<arg>${copied_ruleset_from_library}</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:55:34.009" endtime="20240424 19:55:34.009"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${rule_name}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:55:34.019" level="INFO">${rule_name} = Accessible Door Rule</msg>
<status status="PASS" starttime="20240424 19:55:34.009" endtime="20240424 19:55:34.019"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${rule_name}</arg>
<arg>${ruleset_created_in_workspace}</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:55:34.019" endtime="20240424 19:55:34.019"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${rule_author_name}</var>
<arg>2</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:55:34.019" level="INFO">${rule_author_name} = Solibri, Inc.</msg>
<status status="PASS" starttime="20240424 19:55:34.019" endtime="20240424 19:55:34.019"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${rule_author_name}</arg>
<arg>Solibri, Inc.</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:55:34.019" endtime="20240424 19:55:34.019"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${rule_support_tag}</var>
<arg>5</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:55:34.026" level="INFO">${rule_support_tag} = SOL/208/4.1</msg>
<status status="PASS" starttime="20240424 19:55:34.019" endtime="20240424 19:55:34.026"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${rule_support_tag}</arg>
<arg>SOL/208/4.1</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:55:34.026" endtime="20240424 19:55:34.026"/>
</kw>
<kw name="Get Combobox Values" library="SwingRobot">
<var>${space_classification_names}</var>
<arg>0</arg>
<doc>Returns a list containing all the values of a combobox.</doc>
<msg timestamp="20240424 19:55:34.270" level="INFO">${space_classification_names} = ['&lt;Not Required&gt;', 'AC Zone Category', 'ARCHICAD Classification', 'Building Elements - General', 'COBie', 'Space Usage', 'Uniclass2', 'Space Grouping']</msg>
<status status="PASS" starttime="20240424 19:55:34.026" endtime="20240424 19:55:34.270"/>
</kw>
<kw name="Get Combobox Values" library="SwingRobot">
<var>${door_classification_names}</var>
<arg>1</arg>
<doc>Returns a list containing all the values of a combobox.</doc>
<msg timestamp="20240424 19:55:34.544" level="INFO">${door_classification_names} = ['&lt;Not Required&gt;', 'AC Zone Category', 'ARCHICAD Classification', 'Building Elements - General', 'COBie', 'Space Usage', 'Uniclass2', 'Space Grouping']</msg>
<status status="PASS" starttime="20240424 19:55:34.270" endtime="20240424 19:55:34.544"/>
</kw>
<kw name="Push Radio Button" library="SwingRobot">
<arg>0</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:55:34.544" endtime="20240424 19:55:34.554"/>
</kw>
<kw name="Get Combobox Values" library="SwingRobot">
<var>${vertical_classification_names}</var>
<arg>2</arg>
<doc>Returns a list containing all the values of a combobox.</doc>
<msg timestamp="20240424 19:55:34.841" level="INFO">${vertical_classification_names} = ['AC Zone Category', 'ARCHICAD Classification', 'Building Elements - General', 'COBie', 'Space Usage', 'Uniclass2', 'Space Grouping']</msg>
<status status="PASS" starttime="20240424 19:55:34.554" endtime="20240424 19:55:34.841"/>
</kw>
<kw name="Get Table Headers" library="SwingRobot">
<var>${door_requirements_header}</var>
<arg>3</arg>
<doc>Returns table's header names.</doc>
<msg timestamp="20240424 19:55:34.845" level="INFO">${door_requirements_header} = ['Space Classification Name 1', 'Space Classification Name 2', 'Min Width', 'Min Height', 'Max Threshold Height', 'Min Glazing Ratio', 'Requirements', 'Components', 'Space Filter 1', 'Space Filter 2']</msg>
<status status="PASS" starttime="20240424 19:55:34.841" endtime="20240424 19:55:34.845"/>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<arg>${door_requirements_header}</arg>
<arg>${door_requirements_table_headers}</arg>
<doc>Fails if given lists are unequal.</doc>
<status status="PASS" starttime="20240424 19:55:34.845" endtime="20240424 19:55:34.845"/>
</kw>
<kw name="Get Table Headers" library="SwingRobot">
<var>${ignore_components_header}</var>
<arg>4</arg>
<doc>Returns table's header names.</doc>
<msg timestamp="20240424 19:55:34.876" level="INFO">${ignore_components_header} = ['State', 'Component', 'Property', 'Operator', 'Value']</msg>
<status status="PASS" starttime="20240424 19:55:34.845" endtime="20240424 19:55:34.876"/>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<arg>${ignore_components_header}</arg>
<arg>${ignore_components_table_headers}</arg>
<doc>Fails if given lists are unequal.</doc>
<status status="PASS" starttime="20240424 19:55:34.876" endtime="20240424 19:55:34.876"/>
</kw>
<kw name="Get Table Headers" library="SwingRobot">
<var>${door_dimensions_header}</var>
<arg>5</arg>
<doc>Returns table's header names.</doc>
<msg timestamp="20240424 19:55:34.898" level="INFO">${door_dimensions_header} = ['Door Classification Name', 'Frame Thickness', 'Panel Thickness', 'Threshold Height', 'Glazing Ratio', 'Doors']</msg>
<status status="PASS" starttime="20240424 19:55:34.876" endtime="20240424 19:55:34.898"/>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<arg>${door_dimensions_header}</arg>
<arg>${door_dimensions_table_headers}</arg>
<doc>Fails if given lists are unequal.</doc>
<status status="PASS" starttime="20240424 19:55:34.898" endtime="20240424 19:55:34.898"/>
</kw>
<kw name="Get Table Headers" library="SwingRobot">
<var>${classification_table_header}</var>
<arg>6</arg>
<doc>Returns table's header names.</doc>
<msg timestamp="20240424 19:55:34.898" level="INFO">${classification_table_header} = ['Classification Name']</msg>
<status status="PASS" starttime="20240424 19:55:34.898" endtime="20240424 19:55:34.898"/>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<arg>${classification_table_header}</arg>
<arg>${classification_header}</arg>
<doc>Fails if given lists are unequal.</doc>
<status status="PASS" starttime="20240424 19:55:34.898" endtime="20240424 19:55:34.898"/>
</kw>
<kw name="Verify Ruleset in Checking View" library="ruleset_manager_step_definitions">
<arg>${number_of_ruleset_in_checking_view_before}</arg>
<arg>${ruleset_created_in_workspace}</arg>
<kw name="Switch Layout" library="Common">
<arg>FILE</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:34.898" endtime="20240424 19:55:34.923"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:34.923" endtime="20240424 19:55:34.925"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:34.925" endtime="20240424 19:55:34.961"/>
</kw>
<status status="PASS" starttime="20240424 19:55:34.898" endtime="20240424 19:55:34.961"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>CHECKING</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:34.961" endtime="20240424 19:55:34.961"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:34.961" endtime="20240424 19:55:34.977"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:34.977" endtime="20240424 19:55:34.994"/>
</kw>
<status status="PASS" starttime="20240424 19:55:34.961" endtime="20240424 19:55:34.994"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${number_of_ruleset_in_checking_view_after}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:55:34.999" level="INFO">${number_of_ruleset_in_checking_view_after} = 6</msg>
<status status="PASS" starttime="20240424 19:55:34.994" endtime="20240424 19:55:34.999"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${number_of_ruleset_in_checking_view_after}</arg>
<arg>${number_of_ruleset_in_checking_view_before}</arg>
<doc>Fails if the given objects are equal.</doc>
<msg timestamp="20240424 19:55:34.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:55:34.999" endtime="20240424 19:55:34.999"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>RuleSetsTable</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:55:35.000" endtime="20240424 19:55:35.182"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>RuleSetsTable</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:55:35.182" endtime="20240424 19:55:35.235"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>RuleSetsTable</arg>
<arg>2</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:55:35.235" endtime="20240424 19:55:35.274"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>RuleSetsTable</arg>
<arg>3</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:55:35.274" endtime="20240424 19:55:35.311"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${ruleset_visible_in_checking_view}</var>
<arg>RuleSetsTable</arg>
<arg>4</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:55:35.314" level="INFO">${ruleset_visible_in_checking_view} = Accessible Door Rule</msg>
<status status="PASS" starttime="20240424 19:55:35.311" endtime="20240424 19:55:35.314"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${ruleset_created_in_workspace}</arg>
<arg>${ruleset_visible_in_checking_view}</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:55:35.314" endtime="20240424 19:55:35.314"/>
</kw>
<status status="PASS" starttime="20240424 19:55:34.898" endtime="20240424 19:55:35.314"/>
</kw>
<status status="PASS" starttime="20240424 19:55:33.862" endtime="20240424 19:55:35.314"/>
</kw>
<status status="PASS" starttime="20240424 19:55:33.460" endtime="20240424 19:55:35.314"/>
</kw>
<kw name="Then Save and Close Ruleset" library="ruleset_manager_step_definitions">
<kw name="Save Ruleset" library="ruleset_manager_step_definitions">
<kw name="Switch to Rulset Manager" library="ruleset_manager_step_definitions">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${ruleset_folder}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240424 19:55:35.330" level="INFO">${ruleset_folder} = C:\Users\Public\Solibri\SOLIBRI</msg>
<status status="PASS" starttime="20240424 19:55:35.314" endtime="20240424 19:55:35.330"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:35.330" endtime="20240424 19:55:35.330"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:35.330" endtime="20240424 19:55:35.338"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:35.338" endtime="20240424 19:55:35.343"/>
</kw>
<status status="PASS" starttime="20240424 19:55:35.330" endtime="20240424 19:55:35.343"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Ruleset_Manager}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:55:35.343" endtime="20240424 19:55:35.547"/>
</kw>
<status status="PASS" starttime="20240424 19:55:35.314" endtime="20240424 19:55:35.547"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Save</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:55:35.547" endtime="20240424 19:55:35.587"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Push Button</arg>
<arg>Save</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:35.587" endtime="20240424 19:55:35.590"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:55:35.590" endtime="20240424 19:55:36.959"/>
</kw>
<kw name="Clear Text Field" library="SwingRobot">
<arg>0</arg>
<doc>Clears contents of text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:55:36.959" endtime="20240424 19:55:36.980"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>${test_files_folder}\\Robot_Test_Ruleset1</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:55:36.980" endtime="20240424 19:55:37.019"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Save As</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:55:37.019" endtime="20240424 19:55:37.165"/>
</kw>
<status status="PASS" starttime="20240424 19:55:35.314" endtime="20240424 19:55:37.165"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:37.165" endtime="20240424 19:55:37.183"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<msg timestamp="20240424 19:55:37.234" level="INFO">2024-04-24 19:55:37.189+0000 [Save model] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.DoorRule can't find resource string for key: cpDoorRequirements.DEFAULT_VALUE
2024-04-24 19:55:37.189+0000 [Save model] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.DoorRule can't find resource string for key: cpDoorRequirements.DEFAULT_VALUE
2024-04-24 19:55:37.189+0000 [Save model] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.DoorRule can't find resource string for key: cpDoorDimensions.DEFAULT_VALUE
2024-04-24 19:55:37.189+0000 [Save model] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.DoorRule can't find resource string for key: cpDoorDimensions.DEFAULT_VALUE
2024-04-24 19:55:37.189+0000 [Save model] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.DoorRule can't find resource string for key: rpRampRequirements.DEFAULT_VALUE
2024-04-24 19:55:37.189+0000 [Save model] ERROR com.solibri.sae.greenox.Constraint - com.solibri.rules.accessibility.DoorRule can't find resource string for key: rpRampRequirements.DEFAULT_VALUE</msg>
<status status="PASS" starttime="20240424 19:55:37.183" endtime="20240424 19:55:37.234"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>FILE</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:37.234" endtime="20240424 19:55:37.263"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:37.263" endtime="20240424 19:55:37.263"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:37.263" endtime="20240424 19:55:37.276"/>
</kw>
<status status="PASS" starttime="20240424 19:55:37.234" endtime="20240424 19:55:37.276"/>
</kw>
<status status="PASS" starttime="20240424 19:55:35.314" endtime="20240424 19:55:37.276"/>
</kw>
<kw name="Then Close model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:55:37.276" endtime="20240424 19:55:37.385"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:37.385" endtime="20240424 19:55:37.477"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:37.477" endtime="20240424 19:55:37.480"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:37.480" endtime="20240424 19:55:37.485"/>
</kw>
<status status="PASS" starttime="20240424 19:55:37.385" endtime="20240424 19:55:37.485"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:55:37.485" endtime="20240424 19:55:37.492"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:55:37.492" endtime="20240424 19:55:37.524"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:55:47.543" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:55:37.524" endtime="20240424 19:55:47.543"/>
</kw>
<msg timestamp="20240424 19:55:47.543" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:55:37.524" endtime="20240424 19:55:47.543"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:55:47.543" endtime="20240424 19:55:47.552"/>
</kw>
<msg timestamp="20240424 19:55:47.552" level="INFO">${check_if_save_asked} = True</msg>
<status status="PASS" starttime="20240424 19:55:47.543" endtime="20240424 19:55:47.552"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:55:47.552" endtime="20240424 19:55:47.555"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:55:47.555" endtime="20240424 19:55:47.639"/>
</kw>
<status status="PASS" starttime="20240424 19:55:47.552" endtime="20240424 19:55:47.639"/>
</kw>
<status status="PASS" starttime="20240424 19:55:47.552" endtime="20240424 19:55:47.639"/>
</branch>
<status status="PASS" starttime="20240424 19:55:47.552" endtime="20240424 19:55:47.639"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:55:47.639" endtime="20240424 19:55:47.639"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:55:47.639" endtime="20240424 19:55:47.639"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:55:47.639" endtime="20240424 19:55:47.639"/>
</branch>
<status status="PASS" starttime="20240424 19:55:47.639" endtime="20240424 19:55:47.639"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:47.639" endtime="20240424 19:55:47.651"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:55:47.651" endtime="20240424 19:55:47.654"/>
</kw>
<status status="PASS" starttime="20240424 19:55:47.651" endtime="20240424 19:55:47.654"/>
</kw>
<status status="PASS" starttime="20240424 19:55:37.276" endtime="20240424 19:55:47.654"/>
</kw>
<kw name="Then Open ifc Model" library="Common">
<arg>Solibri Building.ifc</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:47.654" endtime="20240424 19:55:47.663"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:55:47.665" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:55:47.663" endtime="20240424 19:55:47.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:55:47.665" endtime="20240424 19:55:47.665"/>
</kw>
<status status="PASS" starttime="20240424 19:55:47.663" endtime="20240424 19:55:47.665"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:47.665" endtime="20240424 19:55:47.670"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:47.670" endtime="20240424 19:55:47.670"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:47.670" endtime="20240424 19:55:47.675"/>
</kw>
<status status="PASS" starttime="20240424 19:55:47.665" endtime="20240424 19:55:47.675"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:55:47.675" endtime="20240424 19:55:47.709"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:47.709" endtime="20240424 19:55:47.746"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:55:47.746" endtime="20240424 19:55:49.173"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${ifc_filename}</var>
<arg>${ifc_folder}</arg>
<arg>${ifc_filename}</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:55:49.173" level="INFO">${ifc_filename} = C:\users\public\Solibri\SOLIBRI\Samples\ifc\Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:55:49.173" endtime="20240424 19:55:49.173"/>
</kw>
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:55:49.173" endtime="20240424 19:55:49.356"/>
</kw>
<status status="PASS" starttime="20240424 19:55:49.173" endtime="20240424 19:55:49.356"/>
</kw>
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:55:49.356" endtime="20240424 19:55:49.542"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:49.542" endtime="20240424 19:55:49.573"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:49.573" endtime="20240424 19:55:49.588"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:49.588" endtime="20240424 19:55:49.635"/>
</kw>
<status status="PASS" starttime="20240424 19:55:49.542" endtime="20240424 19:55:49.635"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:55:51.375" level="INFO">2024-04-24 19:55:50.064+0000 [Thread-784] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 16 ms.
2024-04-24 19:55:50.064+0000 [Thread-784] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 695 ms (using 1 threads)
2024-04-24 19:55:50.095+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 31 ms
2024-04-24 19:55:51.020+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 956 ms.</msg>
<status status="PASS" starttime="20240424 19:55:49.635" endtime="20240424 19:55:51.375"/>
</kw>
<status status="PASS" starttime="20240424 19:55:49.635" endtime="20240424 19:55:51.375"/>
</kw>
<msg timestamp="20240424 19:55:51.375" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:55:49.635" endtime="20240424 19:55:51.375"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:55:51.375" endtime="20240424 19:55:51.793"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:55:51.793" endtime="20240424 19:55:51.891"/>
</kw>
<status status="PASS" starttime="20240424 19:55:51.375" endtime="20240424 19:55:51.891"/>
</branch>
<status status="PASS" starttime="20240424 19:55:51.375" endtime="20240424 19:55:51.891"/>
</if>
<status status="PASS" starttime="20240424 19:55:49.356" endtime="20240424 19:55:51.891"/>
</kw>
<status status="PASS" starttime="20240424 19:55:47.654" endtime="20240424 19:55:51.891"/>
</kw>
<kw name="Then Open New Ruleset and Verify" library="ruleset_manager_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>CHECKING</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:51.891" endtime="20240424 19:55:51.928"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:51.928" endtime="20240424 19:55:51.931"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:51.931" endtime="20240424 19:55:51.952"/>
</kw>
<status status="PASS" starttime="20240424 19:55:51.891" endtime="20240424 19:55:51.952"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:55:51.952" endtime="20240424 19:55:52.065"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Push Button</arg>
<arg>Open Recommended</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:52.065" endtime="20240424 19:55:52.068"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Please Select Rulesets You Want to Use</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:55:52.068" endtime="20240424 19:55:52.331"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Add Rulesets</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:55:52.331" endtime="20240424 19:55:53.816"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open File</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:55:53.816" endtime="20240424 19:55:53.828"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>${test_files_folder}\\Robot_Test_Ruleset1.cset</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:55:53.828" endtime="20240424 19:55:53.916"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:55:53.916" endtime="20240424 19:55:54.110"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Please Select Rulesets You Want to Use</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:55:54.110" endtime="20240424 19:55:54.115"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:55:54.115" endtime="20240424 19:55:54.195"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:54.195" endtime="20240424 19:55:54.260"/>
</kw>
<kw name="Get Table Column Values" library="SwingRobot">
<var>${ruleset_in_checking_view}</var>
<arg>0</arg>
<arg>0</arg>
<doc>Returns a list containing all the values of a table column.</doc>
<msg timestamp="20240424 19:55:54.291" level="INFO">${ruleset_in_checking_view} = ['BIM Validation - Architectural', 'Model Structure Check', 'Component Check', 'Clearance', 'Deficiency Detection', 'General Space Check', 'The Model Should Have Spaces', 'Space Properties', 'Space Lo...</msg>
<status status="PASS" starttime="20240424 19:55:54.260" endtime="20240424 19:55:54.291"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${ruleset_in_checking_view}</arg>
<arg>${ruleset_created_in_workspace}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20240424 19:55:54.291" endtime="20240424 19:55:54.291"/>
</kw>
<status status="PASS" starttime="20240424 19:55:51.891" endtime="20240424 19:55:54.291"/>
</kw>
<kw name="Clean Up" library="ruleset_manager_step_definitions" type="TEARDOWN">
<kw name="Switch Layout" library="Common">
<arg>FILE</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:54.291" endtime="20240424 19:55:54.291"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:54.291" endtime="20240424 19:55:54.298"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:54.298" endtime="20240424 19:55:54.423"/>
</kw>
<status status="PASS" starttime="20240424 19:55:54.291" endtime="20240424 19:55:54.423"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${Button_Close_Title}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:54.423" endtime="20240424 19:55:54.426"/>
</kw>
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:55:54.426" endtime="20240424 19:55:54.475"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:55:54.475" endtime="20240424 19:55:54.489"/>
</kw>
<status status="PASS" starttime="20240424 19:55:54.426" endtime="20240424 19:55:54.489"/>
</kw>
<status status="PASS" starttime="20240424 19:55:54.291" endtime="20240424 19:55:54.489"/>
</kw>
<status status="PASS" starttime="20240424 19:55:24.608" endtime="20240424 19:55:54.489"/>
</test>
<doc>Verify Ruleset Manager view</doc>
<meta name="Feature">Ruleset Manager</meta>
<meta name="Generated by">_gherkin2robotframework on 2023-07-27T16:25:38.530591_</meta>
<status status="PASS" starttime="20240424 19:55:24.553" endtime="20240424 19:55:54.569"/>
</suite>
<suite id="s1-s11" name="11 Company Extension" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\11_company_extension.robot">
<test id="s1-s11-t1" name="Verify Create Company Extension" line="10">
<kw name="Background">
<doc>Launch Solibri And Login To SSC</doc>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:55:54.642" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:55:54.642" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:55:54 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:55:54.631" endtime="20240424 19:55:54.642"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:55:54.642" endtime="20240424 19:55:54.642"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:54.642" endtime="20240424 19:55:54.671"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:55:54.674" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:55:54.671" endtime="20240424 19:55:54.674"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:55:54.674" endtime="20240424 19:55:54.674"/>
</kw>
<status status="PASS" starttime="20240424 19:55:54.671" endtime="20240424 19:55:54.674"/>
</kw>
<status status="PASS" starttime="20240424 19:55:54.631" endtime="20240424 19:55:54.674"/>
</kw>
<kw name="When User Logs In To SSC" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Logged in to SSC</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:55:54.674" endtime="20240424 19:55:54.674"/>
</kw>
<status status="PASS" starttime="20240424 19:55:54.674" endtime="20240424 19:55:54.674"/>
</kw>
<kw name="Then Solibri Office Is Opened" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Solibri Office Is Opened</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:55:54.674" endtime="20240424 19:55:54.674"/>
</kw>
<status status="PASS" starttime="20240424 19:55:54.674" endtime="20240424 19:55:54.674"/>
</kw>
<status status="PASS" starttime="20240424 19:55:54.631" endtime="20240424 19:55:54.674"/>
</kw>
<kw name="And No Existing Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:54.674" endtime="20240424 19:55:54.674"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:54.674" endtime="20240424 19:55:54.674"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:54.674" endtime="20240424 19:55:54.685"/>
</kw>
<status status="PASS" starttime="20240424 19:55:54.674" endtime="20240424 19:55:54.685"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:55:54.685" endtime="20240424 19:55:54.689"/>
</kw>
<status status="PASS" starttime="20240424 19:55:54.685" endtime="20240424 19:55:54.689"/>
</kw>
<msg timestamp="20240424 19:55:54.689" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 19:55:54.685" endtime="20240424 19:55:54.689"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:55:54.689" endtime="20240424 19:55:54.689"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:55:54.689" endtime="20240424 19:55:54.689"/>
</branch>
<status status="PASS" starttime="20240424 19:55:54.689" endtime="20240424 19:55:54.689"/>
</if>
<status status="PASS" starttime="20240424 19:55:54.674" endtime="20240424 19:55:54.689"/>
</kw>
<kw name="Then Role is Opened" library="company_extexnsion_step_definitions">
<kw name="Switch to the Role View" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:54.689" endtime="20240424 19:55:54.689"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:54.689" endtime="20240424 19:55:54.689"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:54.689" endtime="20240424 19:55:54.699"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:54.699" endtime="20240424 19:55:54.699"/>
</kw>
<status status="PASS" starttime="20240424 19:55:54.689" endtime="20240424 19:55:54.699"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Roles_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:55:54.699" endtime="20240424 19:55:54.705"/>
</kw>
<status status="PASS" starttime="20240424 19:55:54.689" endtime="20240424 19:55:54.705"/>
</kw>
<kw name="Open &quot;BIM Validation - Architectural.xml&quot; Role" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:54.705" endtime="20240424 19:55:54.705"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Roles_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:55:54.705" endtime="20240424 19:55:54.711"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open Role</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:55:54.711" endtime="20240424 19:55:55.162"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Dialog Should Be Open</arg>
<arg>Open Role</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Open Role</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:55:55.162" endtime="20240424 19:55:55.166"/>
</kw>
<status status="PASS" starttime="20240424 19:55:55.162" endtime="20240424 19:55:55.166"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open Role</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:55:55.166" endtime="20240424 19:55:55.201"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Files</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:55:55.201" endtime="20240424 19:55:55.296"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${role_with_path}</var>
<arg>${roles_folder}</arg>
<arg>BIM Validation - Architectural.xml</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:55:55.296" level="INFO">${role_with_path} = C:\users\public\Solibri\SOLIBRI\Roles\BIM Validation - Architectural.xml</msg>
<status status="PASS" starttime="20240424 19:55:55.296" endtime="20240424 19:55:55.296"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${role_with_path}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:55:55.296" endtime="20240424 19:55:55.524"/>
</kw>
<status status="PASS" starttime="20240424 19:55:54.705" endtime="20240424 19:55:55.524"/>
</kw>
<status status="PASS" starttime="20240424 19:55:54.689" endtime="20240424 19:55:55.524"/>
</kw>
<kw name="Then Go to Rulset Manager" library="company_extexnsion_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:55.524" endtime="20240424 19:55:55.531"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:55.531" endtime="20240424 19:55:55.535"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:55.535" endtime="20240424 19:55:55.607"/>
</kw>
<status status="PASS" starttime="20240424 19:55:55.524" endtime="20240424 19:55:55.607"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Ruleset_Manager}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:55:55.607" endtime="20240424 19:55:55.622"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${RULESET_MANAGER_LAYOUT}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:55.638" endtime="20240424 19:55:55.644"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:55.644" endtime="20240424 19:55:55.660"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:55.660" endtime="20240424 19:55:55.667"/>
</kw>
<status status="PASS" starttime="20240424 19:55:55.638" endtime="20240424 19:55:55.667"/>
</kw>
<status status="PASS" starttime="20240424 19:55:55.524" endtime="20240424 19:55:55.667"/>
</kw>
<kw name="Then Switch to Extension Manager Layout" library="company_extexnsion_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${EXTENSION_MANAGER_LAYOUT}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:55.667" endtime="20240424 19:55:55.670"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:55.670" endtime="20240424 19:55:55.670"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:55.670" endtime="20240424 19:55:55.676"/>
</kw>
<status status="PASS" starttime="20240424 19:55:55.667" endtime="20240424 19:55:55.676"/>
</kw>
<kw name="Verify Default State of Account Extension Menus" library="company_extexnsion_step_definitions">
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Select Context</arg>
<arg>Account Extensions</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:55.676" endtime="20240424 19:55:55.679"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>New...</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:55:55.679" endtime="20240424 19:55:55.916"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Open...</arg>
<doc>Fails if button is disabled.</doc>
<msg timestamp="20240424 19:55:55.916" level="INFO">Exception in thread "Thread-863" java.lang.RuntimeException: Invalid context com.solibri.saf.core.DefaultViewToolBar. Should be one of (java.awt.Window javax.swing.JPanel java.awt.Panel javax.swing.JInternalFrame javax.swing.JLayer )
	at org.robotframework.javalib.library.AnnotationLibrary.retrieveInnerException(AnnotationLibrary.java:158)
	at org.robotframework.javalib.library.AnnotationLibrary.runKeyword(AnnotationLibrary.java:131)
	at org.robotframework.javalib.library.KeywordFactoryBasedLibrary.runKeyword(KeywordFactoryBasedLibrary.java:44)
	at org.robotframework.javalib.library.AnnotationLibrary.runKeyword(AnnotationLibrary.java:138)
	at org.robotframework.swing.SwingLibrary.runKeyword(SwingLibrary.java:122)
	at org.robotframework.swing.keyword.concurrent.ThreadKeywords$1.run(ThreadKeywords.java:50)
Caused by: java.lang.AssertionError: Invalid context com.solibri.saf.core.DefaultViewToolBar. Should be one of (java.awt.Window javax.swing.JPanel java.awt.Panel javax.swing.JInternalFrame javax.swing.JLayer )
	at org.junit.Assert.fail(Assert.java:89)
	at org.robotframework.swing.keyword.context.ContextKeywords.verifyContext(ContextKeywords.java:88)
	at org.robotframework.swing.keyword.context.ContextKeywords.selectContext(ContextKeywords.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.robotframework.javalib.reflection.KeywordInvoker.invoke(KeywordInvoker.java:63)
	at org.robotframework.javalib.beans.annotation.AnnotationKeywordExtractor$1.execute(AnnotationKeywordExtractor.java:66)
	at org.robotframework.javalib.library.KeywordFactoryBasedLibrary.runKeyword(KeywordFactoryBasedLibrary.java:40)
	at org.robotframework.javalib.library.AnnotationLibrary.runKeyword(AnnotationLibrary.java:129)
	... 4 more</msg>
<status status="PASS" starttime="20240424 19:55:55.916" endtime="20240424 19:55:55.916"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Close</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:55:55.916" endtime="20240424 19:55:55.922"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Save</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:55:55.922" endtime="20240424 19:55:55.934"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Save as SRE...</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:55:55.934" endtime="20240424 19:55:55.938"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Export as JAR...</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:55:55.938" endtime="20240424 19:55:55.947"/>
</kw>
<status status="PASS" starttime="20240424 19:55:55.676" endtime="20240424 19:55:55.947"/>
</kw>
<status status="PASS" starttime="20240424 19:55:55.667" endtime="20240424 19:55:55.947"/>
</kw>
<kw name="Then Create New Extension" library="company_extexnsion_step_definitions">
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Push Button</arg>
<arg>New...</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:55.947" endtime="20240424 19:55:55.949"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>New Extension</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:55:55.949" endtime="20240424 19:55:55.999"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Include</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<msg timestamp="20240424 19:55:58.659" level="INFO">2024-04-24 19:55:57.880+0000 [AWT-EventQueue-0] INFO  c.s.c.p.e.actions.NewAction - SRE is created. New Account Extension-1</msg>
<status status="PASS" starttime="20240424 19:55:55.999" endtime="20240424 19:55:58.659"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:55:58.659" endtime="20240424 19:55:58.662"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Select Context</arg>
<arg>Account Extensions</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:58.663" endtime="20240424 19:55:58.665"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>New...</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:55:58.665" endtime="20240424 19:55:58.668"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Open...</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:55:58.668" endtime="20240424 19:55:58.674"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Close</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:55:58.674" endtime="20240424 19:55:58.677"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Save</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:55:58.677" endtime="20240424 19:55:58.680"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Save as SRE...</arg>
<doc>Fails if button is disabled.</doc>
<msg timestamp="20240424 19:55:58.683" level="INFO">Exception in thread "Thread-865"</msg>
<status status="PASS" starttime="20240424 19:55:58.680" endtime="20240424 19:55:58.683"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Export as JAR...</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:55:58.683" endtime="20240424 19:55:58.686"/>
</kw>
<status status="PASS" starttime="20240424 19:55:55.947" endtime="20240424 19:55:58.687"/>
</kw>
<kw name="Then Verify Extension Created" library="company_extexnsion_step_definitions">
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${extension_name}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:55:58.690" level="INFO">${extension_name} = New Account Extension-1</msg>
<status status="PASS" starttime="20240424 19:55:58.687" endtime="20240424 19:55:58.690"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${extension_name}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240424 19:55:58.691" level="INFO">${extension_name} = New Account Extension-1</msg>
<status status="PASS" starttime="20240424 19:55:58.691" endtime="20240424 19:55:58.691"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Push Button</arg>
<arg>Save as SRE...</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:55:58.691" endtime="20240424 19:55:58.693"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:55:58.693" endtime="20240424 19:55:59.971"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${text_field_value}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:55:59.974" level="INFO">${text_field_value} = New Account Extension-1</msg>
<status status="PASS" starttime="20240424 19:55:59.971" endtime="20240424 19:55:59.974"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${text_field_value}</arg>
<arg>${extension_name}</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:55:59.974" endtime="20240424 19:55:59.975"/>
</kw>
<kw name="Clear Text Field" library="SwingRobot">
<arg>0</arg>
<doc>Clears contents of text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:55:59.975" endtime="20240424 19:56:00.013"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>${test_files_folder}\\${extension_name}</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:56:00.014" endtime="20240424 19:56:00.041"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Save As</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<msg timestamp="20240424 19:56:00.848" level="INFO">2024-04-24 19:56:00.529+0000 [AWT-EventQueue-0] INFO  c.s.c.p.e.ExtensionManagerPlugin - SRE is saved: C:\Users\runneradmin\Documents\RFTestFiles\New Account Extension-1.sre</msg>
<status status="PASS" starttime="20240424 19:56:00.042" endtime="20240424 19:56:00.848"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:00.848" endtime="20240424 19:56:00.878"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${created_extension_name}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:00.887" level="INFO">${created_extension_name} = New Account Extension-1</msg>
<status status="PASS" starttime="20240424 19:56:00.879" endtime="20240424 19:56:00.887"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${text_field_value}</arg>
<arg>${created_extension_name}</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:00.887" endtime="20240424 19:56:00.887"/>
</kw>
<status status="PASS" starttime="20240424 19:55:58.687" endtime="20240424 19:56:00.888"/>
</kw>
<kw name="Then Reload Extension and Verify" library="company_extexnsion_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:00.888" endtime="20240424 19:56:00.921"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<msg timestamp="20240424 19:56:00.959" level="INFO">2024-04-24 19:56:00.931+0000 [AWT-EventQueue-0] INFO  c.s.c.p.e.actions.CloseAction - SRE is closed: New Account Extension-1</msg>
<status status="PASS" starttime="20240424 19:56:00.922" endtime="20240424 19:56:00.959"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open...</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:56:00.959" endtime="20240424 19:56:01.319"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open Extensions</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:56:01.319" endtime="20240424 19:56:01.332"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>${test_files_folder}\\${extension_name}.sre</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:56:01.333" endtime="20240424 19:56:01.435"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<msg timestamp="20240424 19:56:03.091" level="INFO">2024-04-24 19:56:02.527+0000 [AWT-EventQueue-0] INFO  c.s.c.p.e.actions.OpenAction - Opened SRE: C:\Users\runneradmin\Documents\RFTestFiles\New Account Extension-1.sre</msg>
<status status="PASS" starttime="20240424 19:56:01.436" endtime="20240424 19:56:03.091"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:03.091" endtime="20240424 19:56:03.097"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${opened_extension_name}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:03.097" level="INFO">${opened_extension_name} = New Account Extension-1</msg>
<status status="PASS" starttime="20240424 19:56:03.097" endtime="20240424 19:56:03.097"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${opened_extension_name}</arg>
<arg>${extension_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:56:03.097" endtime="20240424 19:56:03.097"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<msg timestamp="20240424 19:56:03.119" level="INFO">2024-04-24 19:56:03.103+0000 [AWT-EventQueue-0] INFO  c.s.c.p.e.actions.CloseAction - SRE is closed: New Account Extension-1</msg>
<status status="PASS" starttime="20240424 19:56:03.097" endtime="20240424 19:56:03.119"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:03.119" endtime="20240424 19:56:03.119"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:56:03.119" endtime="20240424 19:56:03.128"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:03.128" endtime="20240424 19:56:03.163"/>
</kw>
<status status="PASS" starttime="20240424 19:56:03.119" endtime="20240424 19:56:03.163"/>
</kw>
<status status="PASS" starttime="20240424 19:56:00.888" endtime="20240424 19:56:03.163"/>
</kw>
<status status="PASS" starttime="20240424 19:55:54.631" endtime="20240424 19:56:03.163"/>
</test>
<doc>Verify Company Extension</doc>
<meta name="Feature">Company Extexnsion</meta>
<meta name="Generated by">_gherkin2robotframework on 2023-07-27T10:35:31.014477_</meta>
<status status="PASS" starttime="20240424 19:55:54.569" endtime="20240424 19:56:03.163"/>
</suite>
<suite id="s1-s12" name="12 Drawings Dialog" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\12_drawings_dialog.robot">
<test id="s1-s12-t1" name="Verify Drawings Dialog" line="13">
<kw name="Prepare Solibri For New Test" library="drawings_dialog_step_definitions" type="SETUP">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:03.195" endtime="20240424 19:56:03.212"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:56:03.212" endtime="20240424 19:56:03.323"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:03.323" endtime="20240424 19:56:03.330"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:56:03.330" endtime="20240424 19:56:03.340"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:03.340" endtime="20240424 19:56:03.342"/>
</kw>
<status status="PASS" starttime="20240424 19:56:03.323" endtime="20240424 19:56:03.342"/>
</kw>
<status status="PASS" starttime="20240424 19:56:03.195" endtime="20240424 19:56:03.343"/>
</kw>
<kw name="Background">
<doc>Launch Solibri And Login To SSC</doc>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:56:03.352" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:56:03.352" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:56:03 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:56:03.343" endtime="20240424 19:56:03.355"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:56:03.355" endtime="20240424 19:56:03.356"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:03.356" endtime="20240424 19:56:03.412"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:56:03.414" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:56:03.412" endtime="20240424 19:56:03.414"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:56:03.414" endtime="20240424 19:56:03.414"/>
</kw>
<status status="PASS" starttime="20240424 19:56:03.412" endtime="20240424 19:56:03.414"/>
</kw>
<status status="PASS" starttime="20240424 19:56:03.343" endtime="20240424 19:56:03.414"/>
</kw>
<kw name="When User Logs In To SSC" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Logged in to SSC</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:56:03.414" endtime="20240424 19:56:03.414"/>
</kw>
<status status="PASS" starttime="20240424 19:56:03.414" endtime="20240424 19:56:03.414"/>
</kw>
<kw name="Then Solibri Office Is Opened" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Solibri Office Is Opened</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:56:03.414" endtime="20240424 19:56:03.414"/>
</kw>
<status status="PASS" starttime="20240424 19:56:03.414" endtime="20240424 19:56:03.414"/>
</kw>
<status status="PASS" starttime="20240424 19:56:03.343" endtime="20240424 19:56:03.414"/>
</kw>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:56:03.426" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:56:03.426" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:56:03 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:56:03.414" endtime="20240424 19:56:03.426"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:56:03.426" endtime="20240424 19:56:03.426"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:03.426" endtime="20240424 19:56:03.430"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:56:03.430" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:56:03.430" endtime="20240424 19:56:03.430"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:56:03.430" endtime="20240424 19:56:03.430"/>
</kw>
<status status="PASS" starttime="20240424 19:56:03.430" endtime="20240424 19:56:03.430"/>
</kw>
<status status="PASS" starttime="20240424 19:56:03.414" endtime="20240424 19:56:03.430"/>
</kw>
<kw name="And No Existing Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:03.430" endtime="20240424 19:56:03.436"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:56:03.436" endtime="20240424 19:56:03.436"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:03.436" endtime="20240424 19:56:03.442"/>
</kw>
<status status="PASS" starttime="20240424 19:56:03.430" endtime="20240424 19:56:03.442"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:56:03.442" endtime="20240424 19:56:03.476"/>
</kw>
<status status="PASS" starttime="20240424 19:56:03.442" endtime="20240424 19:56:03.476"/>
</kw>
<msg timestamp="20240424 19:56:03.476" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 19:56:03.442" endtime="20240424 19:56:03.476"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:56:03.476" endtime="20240424 19:56:03.476"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:56:03.476" endtime="20240424 19:56:03.476"/>
</branch>
<status status="PASS" starttime="20240424 19:56:03.476" endtime="20240424 19:56:03.476"/>
</if>
<status status="PASS" starttime="20240424 19:56:03.430" endtime="20240424 19:56:03.476"/>
</kw>
<kw name="And File Is Open From File Chooser" library="ModelHandlingResource">
<arg>pdf</arg>
<if>
<branch type="IF" condition="'${filetype}' == 'ifc'">
<kw name="Join Path" library="OperatingSystem">
<var>${filename}</var>
<arg>${ifc_folder}</arg>
<arg>Solibri Building.ifc</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<status status="NOT RUN" starttime="20240424 19:56:03.476" endtime="20240424 19:56:03.476"/>
</kw>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${filename}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:56:03.476" endtime="20240424 19:56:03.476"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${modelname}</var>
<arg>Solibri Building</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240424 19:56:03.476" endtime="20240424 19:56:03.476"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:56:03.476" endtime="20240424 19:56:03.476"/>
</branch>
<branch type="ELSE IF" condition="'${filetype}' == 'pdf'">
<kw name="Join Path" library="OperatingSystem">
<var>${filename}</var>
<arg>${pdf_folder}</arg>
<arg>Floor Plan-Ground Floor_100.pdf</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:56:03.476" level="INFO">${filename} = C:\users\public\Solibri\SOLIBRI\Samples\pdf\Floor Plan-Ground Floor_100.pdf</msg>
<status status="PASS" starttime="20240424 19:56:03.476" endtime="20240424 19:56:03.476"/>
</kw>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${filename}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:03.476" endtime="20240424 19:56:03.490"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:56:03.497" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:56:03.490" endtime="20240424 19:56:03.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:56:03.497" endtime="20240424 19:56:03.497"/>
</kw>
<status status="PASS" starttime="20240424 19:56:03.490" endtime="20240424 19:56:03.497"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:03.497" endtime="20240424 19:56:03.529"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:56:03.529" endtime="20240424 19:56:03.531"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:03.531" endtime="20240424 19:56:03.567"/>
</kw>
<status status="PASS" starttime="20240424 19:56:03.497" endtime="20240424 19:56:03.567"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:56:03.567" endtime="20240424 19:56:03.685"/>
</kw>
<status status="PASS" starttime="20240424 19:56:03.567" endtime="20240424 19:56:03.685"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:56:03.685" endtime="20240424 19:56:03.690"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:56:03.690" endtime="20240424 19:56:03.692"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:56:03.692" endtime="20240424 19:56:04.154"/>
</kw>
<status status="PASS" starttime="20240424 19:56:03.692" endtime="20240424 19:56:04.154"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:56:04.154" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:56:04.154" endtime="20240424 19:56:04.154"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:56:04.154" endtime="20240424 19:56:04.154"/>
</return>
<msg timestamp="20240424 19:56:04.154" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:56:04.154" endtime="20240424 19:56:04.154"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:56:04.154" endtime="20240424 19:56:04.460"/>
</kw>
<status status="PASS" starttime="20240424 19:56:04.154" endtime="20240424 19:56:04.460"/>
</kw>
<status status="PASS" starttime="20240424 19:56:04.154" endtime="20240424 19:56:04.460"/>
</branch>
<status status="PASS" starttime="20240424 19:56:04.154" endtime="20240424 19:56:04.462"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:56:04.463" endtime="20240424 19:56:04.463"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:56:04.462" endtime="20240424 19:56:04.463"/>
</branch>
<status status="PASS" starttime="20240424 19:56:04.462" endtime="20240424 19:56:04.463"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:56:04.464" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\pdf</msg>
<msg timestamp="20240424 19:56:04.464" level="INFO">${filename} = Floor Plan-Ground Floor_100.pdf</msg>
<status status="PASS" starttime="20240424 19:56:04.463" endtime="20240424 19:56:04.464"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:56:04.465" level="INFO">${filename} = Floor Plan-Ground Floor_100</msg>
<msg timestamp="20240424 19:56:04.465" level="INFO">${ext} = pdf</msg>
<status status="PASS" starttime="20240424 19:56:04.465" endtime="20240424 19:56:04.465"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<status status="NOT RUN" starttime="20240424 19:56:04.466" endtime="20240424 19:56:04.466"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:56:04.466" endtime="20240424 19:56:04.467"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:56:04.468" endtime="20240424 19:56:04.579"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:04.579" endtime="20240424 19:56:04.778"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:56:04.778" endtime="20240424 19:56:04.782"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:04.782" endtime="20240424 19:56:04.794"/>
</kw>
<status status="PASS" starttime="20240424 19:56:04.579" endtime="20240424 19:56:04.794"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:56:04.794" endtime="20240424 19:56:04.887"/>
</kw>
<status status="PASS" starttime="20240424 19:56:04.794" endtime="20240424 19:56:04.888"/>
</kw>
<msg timestamp="20240424 19:56:04.888" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:56:04.794" endtime="20240424 19:56:04.888"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:56:04.889" endtime="20240424 19:56:04.909"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:56:04.909" endtime="20240424 19:56:05.135"/>
</kw>
<status status="PASS" starttime="20240424 19:56:04.889" endtime="20240424 19:56:05.135"/>
</branch>
<status status="PASS" starttime="20240424 19:56:04.888" endtime="20240424 19:56:05.135"/>
</if>
<status status="PASS" starttime="20240424 19:56:04.467" endtime="20240424 19:56:05.135"/>
</kw>
<status status="PASS" starttime="20240424 19:56:04.467" endtime="20240424 19:56:05.135"/>
</branch>
<status status="PASS" starttime="20240424 19:56:04.465" endtime="20240424 19:56:05.135"/>
</if>
<status status="PASS" starttime="20240424 19:56:03.476" endtime="20240424 19:56:05.135"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${modelname}</var>
<arg>Floor Plan-Ground Floor_100</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240424 19:56:05.135" level="INFO">${modelname} = Floor Plan-Ground Floor_100</msg>
<status status="PASS" starttime="20240424 19:56:05.135" endtime="20240424 19:56:05.135"/>
</kw>
<status status="PASS" starttime="20240424 19:56:03.476" endtime="20240424 19:56:05.135"/>
</branch>
<branch type="ELSE IF" condition="'${filetype}' == 'smc'">
<kw name="Join Path" library="OperatingSystem">
<var>${filename}</var>
<arg>${models_folder}</arg>
<arg>Solibri Building.smc</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<status status="NOT RUN" starttime="20240424 19:56:05.135" endtime="20240424 19:56:05.135"/>
</kw>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${filename}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:56:05.135" endtime="20240424 19:56:05.135"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${modelname}</var>
<arg>(ARC) Solibri Building</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240424 19:56:05.135" endtime="20240424 19:56:05.135"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:56:05.135" endtime="20240424 19:56:05.135"/>
</branch>
<status status="PASS" starttime="20240424 19:56:03.476" endtime="20240424 19:56:05.135"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${modelname}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240424 19:56:05.135" level="INFO">${modelname} = Floor Plan-Ground Floor_100</msg>
<status status="PASS" starttime="20240424 19:56:05.135" endtime="20240424 19:56:05.135"/>
</kw>
<status status="PASS" starttime="20240424 19:56:03.476" endtime="20240424 19:56:05.135"/>
</kw>
<kw name="Then Open Drawings Dialog and Verify Default Values" library="drawings_dialog_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:05.135" endtime="20240424 19:56:05.135"/>
</kw>
<kw name="Switch to Containment Hierarchy" library="ModelTreeResource">
<doc>Opens Containment tree in Component hierarchy ModelViewComponentHierarchyPanel</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:05.135" endtime="20240424 19:56:05.135"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:56:05.135" endtime="20240424 19:56:05.155"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${select_containment_hierarchy}</var>
<arg>Toggle Button Should Be Selected</arg>
<arg>2</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Toggle Button Should Be Selected" library="SwingRobot">
<arg>2</arg>
<doc>Fails if toggle button is not selected.</doc>
<status status="PASS" starttime="20240424 19:56:05.155" endtime="20240424 19:56:05.169"/>
</kw>
<msg timestamp="20240424 19:56:05.169" level="INFO">${select_containment_hierarchy} = True</msg>
<status status="PASS" starttime="20240424 19:56:05.155" endtime="20240424 19:56:05.169"/>
</kw>
<if>
<branch type="IF" condition="${select_containment_hierarchy} == ${False}">
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:56:05.169" endtime="20240424 19:56:05.169"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:56:05.169" endtime="20240424 19:56:05.169"/>
</branch>
<status status="PASS" starttime="20240424 19:56:05.169" endtime="20240424 19:56:05.169"/>
</if>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:56:05.169" endtime="20240424 19:56:05.189"/>
</kw>
<status status="PASS" starttime="20240424 19:56:05.135" endtime="20240424 19:56:05.189"/>
</kw>
<kw name="Get Table Row Values" library="SwingRobot">
<var>${model_tree_drawing_name}</var>
<arg>0</arg>
<arg>0</arg>
<doc>Returns a list containing all the values of a table row.</doc>
<msg timestamp="20240424 19:56:05.189" level="INFO">${model_tree_drawing_name} = ['Floor Plan-Ground Floor_100', '', '']</msg>
<status status="PASS" starttime="20240424 19:56:05.189" endtime="20240424 19:56:05.189"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${model_tree_drawing_name}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240424 19:56:05.189" level="INFO">${model_tree_drawing_name} = ['Floor Plan-Ground Floor_100', '', '']</msg>
<status status="PASS" starttime="20240424 19:56:05.189" endtime="20240424 19:56:05.189"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:56:05.189" endtime="20240424 19:56:05.210"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Drawings...</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 19:56:05.210" endtime="20240424 19:56:07.576"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Drawings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:56:07.576" endtime="20240424 19:56:07.600"/>
</kw>
<kw name="Combo Box Should Be Disabled" library="SwingRobot">
<arg>0</arg>
<doc>Fails if combobox is enabled.</doc>
<status status="PASS" starttime="20240424 19:56:07.600" endtime="20240424 19:56:07.689"/>
</kw>
<kw name="Combo Box Should Be Enabled" library="SwingRobot">
<arg>1</arg>
<doc>Fails if combobox is disabled.</doc>
<status status="PASS" starttime="20240424 19:56:07.689" endtime="20240424 19:56:07.692"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>0</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 19:56:07.692" endtime="20240424 19:56:07.695"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Pick Dimension</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:56:07.695" endtime="20240424 19:56:07.697"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Pick Two Dimensions</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:56:07.697" endtime="20240424 19:56:07.762"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Apply</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:56:07.762" endtime="20240424 19:56:07.767"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:56:07.767" endtime="20240424 19:56:07.770"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Close</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:56:07.770" endtime="20240424 19:56:07.774"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${drawings_dialog_drawing_name}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:07.777" level="INFO">${drawings_dialog_drawing_name} = Floor Plan-Ground Floor_100.1</msg>
<status status="PASS" starttime="20240424 19:56:07.774" endtime="20240424 19:56:07.777"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${drawings_dialog_drawing_name}</var>
<var>${ext}</var>
<arg>${drawings_dialog_drawing_name}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:56:07.777" level="INFO">${drawings_dialog_drawing_name} = Floor Plan-Ground Floor_100</msg>
<msg timestamp="20240424 19:56:07.777" level="INFO">${ext} = 1</msg>
<status status="PASS" starttime="20240424 19:56:07.777" endtime="20240424 19:56:07.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${model_tree_drawing_name}</arg>
<arg>${drawings_dialog_drawing_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:56:07.777" endtime="20240424 19:56:07.777"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${scale}</var>
<arg>0</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:07.781" level="INFO">${scale} = 1 : 100</msg>
<status status="PASS" starttime="20240424 19:56:07.777" endtime="20240424 19:56:07.781"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${scale}</arg>
<arg>1 : 100</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:07.781" endtime="20240424 19:56:07.781"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${plane}</var>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:07.851" level="INFO">${plane} = +0' Floor Plan-Ground Floor_100.1</msg>
<status status="PASS" starttime="20240424 19:56:07.781" endtime="20240424 19:56:07.851"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${plane}</arg>
<arg>+0' Floor Plan-Ground Floor_100.1</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:07.851" endtime="20240424 19:56:07.851"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${color}</var>
<arg>0</arg>
<arg>0</arg>
<arg>3</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:07.885" level="INFO">${color} = Transparency: 100%</msg>
<status status="PASS" starttime="20240424 19:56:07.851" endtime="20240424 19:56:07.885"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${color}</arg>
<arg>Transparency: 100%</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:07.885" endtime="20240424 19:56:07.885"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${visualization}</var>
<arg>0</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:07.896" level="INFO">${visualization} = On Selection</msg>
<status status="PASS" starttime="20240424 19:56:07.885" endtime="20240424 19:56:07.896"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${visualization}</arg>
<arg>On Selection</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:07.896" endtime="20240424 19:56:07.896"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${absoulte_scale}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:07.929" level="INFO">${absoulte_scale} = 100</msg>
<status status="PASS" starttime="20240424 19:56:07.896" endtime="20240424 19:56:07.929"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${relative_scale}</var>
<arg>1</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:07.971" level="INFO">${relative_scale} = 100%</msg>
<status status="PASS" starttime="20240424 19:56:07.929" endtime="20240424 19:56:07.971"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${absoulte_position_x}</var>
<arg>2</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:08.027" level="INFO">${absoulte_position_x} = 0'</msg>
<status status="PASS" starttime="20240424 19:56:07.971" endtime="20240424 19:56:08.027"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${relative_position_x}</var>
<arg>3</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:08.050" level="INFO">${relative_position_x} = 0'</msg>
<status status="PASS" starttime="20240424 19:56:08.027" endtime="20240424 19:56:08.050"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${absoulte_position_y}</var>
<arg>4</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:08.053" level="INFO">${absoulte_position_y} = 0'</msg>
<status status="PASS" starttime="20240424 19:56:08.050" endtime="20240424 19:56:08.053"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${Relative_position_y}</var>
<arg>5</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:08.053" level="INFO">${Relative_position_y} = 0'</msg>
<status status="PASS" starttime="20240424 19:56:08.053" endtime="20240424 19:56:08.053"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${absoulte_position_z}</var>
<arg>6</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:08.053" level="INFO">${absoulte_position_z} = 0'</msg>
<status status="PASS" starttime="20240424 19:56:08.053" endtime="20240424 19:56:08.053"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${relative_position_z}</var>
<arg>7</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:08.053" level="INFO">${relative_position_z} = 0'</msg>
<status status="PASS" starttime="20240424 19:56:08.053" endtime="20240424 19:56:08.053"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${absoulte_rotation}</var>
<arg>8</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:08.096" level="INFO">${absoulte_rotation} = 0 °</msg>
<status status="PASS" starttime="20240424 19:56:08.053" endtime="20240424 19:56:08.096"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${relative_rotation}</var>
<arg>9</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:08.139" level="INFO">${relative_rotation} = 0 °</msg>
<status status="PASS" starttime="20240424 19:56:08.096" endtime="20240424 19:56:08.139"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${absoulte_tilt}</var>
<arg>10</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:08.180" level="INFO">${absoulte_tilt} = 0 °</msg>
<status status="PASS" starttime="20240424 19:56:08.139" endtime="20240424 19:56:08.180"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${relative_tilt}</var>
<arg>11</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:08.199" level="INFO">${relative_tilt} = 0 °</msg>
<status status="PASS" starttime="20240424 19:56:08.180" endtime="20240424 19:56:08.199"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${absoulte_scale}</arg>
<arg>100</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:08.199" endtime="20240424 19:56:08.199"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${relative_scale}</arg>
<arg>100%</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:08.199" endtime="20240424 19:56:08.199"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${absoulte_position_x}</arg>
<arg>0'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:08.199" endtime="20240424 19:56:08.199"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${relative_position_x}</arg>
<arg>0'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:08.199" endtime="20240424 19:56:08.199"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${absoulte_position_y}</arg>
<arg>0'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:08.199" endtime="20240424 19:56:08.199"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${relative_position_y}</arg>
<arg>0'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:08.199" endtime="20240424 19:56:08.199"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${absoulte_position_z}</arg>
<arg>0'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:08.199" endtime="20240424 19:56:08.199"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${relative_position_z}</arg>
<arg>0'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:08.199" endtime="20240424 19:56:08.199"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${absoulte_rotation}</arg>
<arg>0 °</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:08.199" endtime="20240424 19:56:08.199"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${relative_rotation}</arg>
<arg>0 °</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:08.199" endtime="20240424 19:56:08.199"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${absoulte_tilt}</arg>
<arg>0 °</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:08.199" endtime="20240424 19:56:08.199"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${relative_tilt}</arg>
<arg>0 °</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:08.199" endtime="20240424 19:56:08.199"/>
</kw>
<status status="PASS" starttime="20240424 19:56:05.135" endtime="20240424 19:56:08.199"/>
</kw>
<kw name="Then Modify Values and Close Dialog" library="drawings_dialog_step_definitions">
<kw name="Switch to Containment Hierarchy" library="ModelTreeResource">
<doc>Opens Containment tree in Component hierarchy ModelViewComponentHierarchyPanel</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:08.199" endtime="20240424 19:56:08.217"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:56:08.217" endtime="20240424 19:56:08.221"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${select_containment_hierarchy}</var>
<arg>Toggle Button Should Be Selected</arg>
<arg>2</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Toggle Button Should Be Selected" library="SwingRobot">
<arg>2</arg>
<doc>Fails if toggle button is not selected.</doc>
<status status="PASS" starttime="20240424 19:56:08.221" endtime="20240424 19:56:08.231"/>
</kw>
<msg timestamp="20240424 19:56:08.231" level="INFO">${select_containment_hierarchy} = True</msg>
<status status="PASS" starttime="20240424 19:56:08.221" endtime="20240424 19:56:08.231"/>
</kw>
<if>
<branch type="IF" condition="${select_containment_hierarchy} == ${False}">
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:56:08.231" endtime="20240424 19:56:08.231"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:56:08.231" endtime="20240424 19:56:08.231"/>
</branch>
<status status="PASS" starttime="20240424 19:56:08.231" endtime="20240424 19:56:08.231"/>
</if>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:56:08.231" endtime="20240424 19:56:08.317"/>
</kw>
<status status="PASS" starttime="20240424 19:56:08.199" endtime="20240424 19:56:08.317"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${drawings_dialog_drawing_name}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:08.317" level="INFO">${drawings_dialog_drawing_name} = Floor Plan-Ground Floor_100</msg>
<status status="PASS" starttime="20240424 19:56:08.317" endtime="20240424 19:56:08.317"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${drawings_dialog_drawing_name}</var>
<var>${ext}</var>
<arg>${drawings_dialog_drawing_name}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:56:08.317" level="INFO">${drawings_dialog_drawing_name} = Floor Plan-Ground Floor_100</msg>
<msg timestamp="20240424 19:56:08.317" level="INFO">${ext} = </msg>
<status status="PASS" starttime="20240424 19:56:08.317" endtime="20240424 19:56:08.317"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${model_tree_drawing_name}</arg>
<arg>${drawings_dialog_drawing_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:56:08.317" endtime="20240424 19:56:08.317"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Drawings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:56:08.317" endtime="20240424 19:56:08.317"/>
</kw>
<kw name="Clear Text Field" library="SwingRobot">
<arg>0</arg>
<doc>Clears contents of text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:56:08.317" endtime="20240424 19:56:08.350"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>50</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:56:08.350" endtime="20240424 19:56:08.482"/>
</kw>
<kw name="Clear Text Field" library="SwingRobot">
<arg>2</arg>
<doc>Clears contents of text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:56:08.482" endtime="20240424 19:56:08.500"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>2</arg>
<arg>10'</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:56:08.500" endtime="20240424 19:56:08.523"/>
</kw>
<kw name="Clear Text Field" library="SwingRobot">
<arg>4</arg>
<doc>Clears contents of text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:56:08.523" endtime="20240424 19:56:08.544"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>4</arg>
<arg>20'</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:56:08.544" endtime="20240424 19:56:08.566"/>
</kw>
<kw name="Clear Text Field" library="SwingRobot">
<arg>6</arg>
<doc>Clears contents of text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:56:08.566" endtime="20240424 19:56:08.598"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>6</arg>
<arg>30'</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:56:08.598" endtime="20240424 19:56:08.618"/>
</kw>
<kw name="Clear Text Field" library="SwingRobot">
<arg>8</arg>
<doc>Clears contents of text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:56:08.618" endtime="20240424 19:56:08.638"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>8</arg>
<arg>40</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:56:08.638" endtime="20240424 19:56:08.664"/>
</kw>
<kw name="Clear Text Field" library="SwingRobot">
<arg>10</arg>
<doc>Clears contents of text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:56:08.664" endtime="20240424 19:56:08.683"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>10</arg>
<arg>20</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:56:08.683" endtime="20240424 19:56:08.702"/>
</kw>
<kw name="Send Keyboard Event" library="SwingRobot">
<arg>VK_TAB</arg>
<doc>Sends keystrokes to the currently selected component.
Keystroke codes must be one of the mappings in ``abbot.tester.KeyStrokeMap`` (https://sourceforge.net/p/abbot/svn/1214/tree/trunk/abbot/src/abbot/tester/KeyStrokeMap.java#l110).
Constants from ``java.awt.event.InputEvent`` can be used as optional modifiers.</doc>
<status status="PASS" starttime="20240424 19:56:08.702" endtime="20240424 19:56:08.704"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:56:08.704" endtime="20240424 19:56:08.762"/>
</kw>
<status status="PASS" starttime="20240424 19:56:08.199" endtime="20240424 19:56:08.762"/>
</kw>
<kw name="Then Open Dialog Again and Verify" library="drawings_dialog_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:08.762" endtime="20240424 19:56:08.768"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Drawings...</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 19:56:08.768" endtime="20240424 19:56:09.056"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${drawings_dialog_drawing_name}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:09.159" level="INFO">${drawings_dialog_drawing_name} = Floor Plan-Ground Floor_100</msg>
<status status="PASS" starttime="20240424 19:56:09.056" endtime="20240424 19:56:09.159"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${drawings_dialog_drawing_name}</var>
<var>${ext}</var>
<arg>${drawings_dialog_drawing_name}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:56:09.159" level="INFO">${drawings_dialog_drawing_name} = Floor Plan-Ground Floor_100</msg>
<msg timestamp="20240424 19:56:09.159" level="INFO">${ext} = </msg>
<status status="PASS" starttime="20240424 19:56:09.159" endtime="20240424 19:56:09.159"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${drawings_dialog_drawing_name}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240424 19:56:09.159" level="INFO">${drawings_dialog_drawing_name} = Floor Plan-Ground Floor_100</msg>
<status status="PASS" starttime="20240424 19:56:09.159" endtime="20240424 19:56:09.159"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${model_tree_drawing_name}</arg>
<arg>${drawings_dialog_drawing_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:56:09.159" endtime="20240424 19:56:09.159"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Drawings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:56:09.159" endtime="20240424 19:56:09.173"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${absoulte_scale}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:09.180" level="INFO">${absoulte_scale} = 50</msg>
<status status="PASS" starttime="20240424 19:56:09.173" endtime="20240424 19:56:09.180"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${relative_scale}</var>
<arg>1</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:09.183" level="INFO">${relative_scale} = 100%</msg>
<status status="PASS" starttime="20240424 19:56:09.180" endtime="20240424 19:56:09.183"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${absoulte_position_x}</var>
<arg>2</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:09.185" level="INFO">${absoulte_position_x} = 10'</msg>
<status status="PASS" starttime="20240424 19:56:09.183" endtime="20240424 19:56:09.185"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${relative_position_x}</var>
<arg>3</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:09.188" level="INFO">${relative_position_x} = 0'</msg>
<status status="PASS" starttime="20240424 19:56:09.185" endtime="20240424 19:56:09.188"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${absoulte_position_y}</var>
<arg>4</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:09.190" level="INFO">${absoulte_position_y} = 20'</msg>
<status status="PASS" starttime="20240424 19:56:09.188" endtime="20240424 19:56:09.190"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${Relative_position_y}</var>
<arg>5</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:09.192" level="INFO">${Relative_position_y} = 0'</msg>
<status status="PASS" starttime="20240424 19:56:09.190" endtime="20240424 19:56:09.192"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${absoulte_position_z}</var>
<arg>6</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:09.192" level="INFO">${absoulte_position_z} = 30'</msg>
<status status="PASS" starttime="20240424 19:56:09.192" endtime="20240424 19:56:09.192"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${relative_position_z}</var>
<arg>7</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:09.196" level="INFO">${relative_position_z} = 0'</msg>
<status status="PASS" starttime="20240424 19:56:09.192" endtime="20240424 19:56:09.196"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${absoulte_rotation}</var>
<arg>8</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:09.196" level="INFO">${absoulte_rotation} = 40 °</msg>
<status status="PASS" starttime="20240424 19:56:09.196" endtime="20240424 19:56:09.196"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${relative_rotation}</var>
<arg>9</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:09.200" level="INFO">${relative_rotation} = 0 °</msg>
<status status="PASS" starttime="20240424 19:56:09.196" endtime="20240424 19:56:09.200"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${absoulte_tilt}</var>
<arg>10</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:09.205" level="INFO">${absoulte_tilt} = 20 °</msg>
<status status="PASS" starttime="20240424 19:56:09.200" endtime="20240424 19:56:09.205"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${relative_tilt}</var>
<arg>11</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:56:09.209" level="INFO">${relative_tilt} = 0 °</msg>
<status status="PASS" starttime="20240424 19:56:09.205" endtime="20240424 19:56:09.209"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${absoulte_scale}</arg>
<arg>50</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:09.209" endtime="20240424 19:56:09.209"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${relative_scale}</arg>
<arg>100%</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:09.209" endtime="20240424 19:56:09.209"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${absoulte_position_x}</arg>
<arg>10'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:09.209" endtime="20240424 19:56:09.209"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${relative_position_x}</arg>
<arg>0'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:09.209" endtime="20240424 19:56:09.209"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${absoulte_position_y}</arg>
<arg>20'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:09.209" endtime="20240424 19:56:09.209"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${relative_position_y}</arg>
<arg>0'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:09.209" endtime="20240424 19:56:09.209"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${absoulte_position_z}</arg>
<arg>30'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:09.209" endtime="20240424 19:56:09.209"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${relative_position_z}</arg>
<arg>0'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:09.209" endtime="20240424 19:56:09.209"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${absoulte_rotation}</arg>
<arg>40 °</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:09.209" endtime="20240424 19:56:09.209"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${relative_rotation}</arg>
<arg>0 °</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:09.209" endtime="20240424 19:56:09.209"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${absoulte_tilt}</arg>
<arg>20 °</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:09.209" endtime="20240424 19:56:09.209"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${relative_tilt}</arg>
<arg>0 °</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:09.209" endtime="20240424 19:56:09.209"/>
</kw>
<status status="PASS" starttime="20240424 19:56:08.762" endtime="20240424 19:56:09.209"/>
</kw>
<kw name="Teardown" library="drawings_dialog_step_definitions" type="TEARDOWN">
<kw name="Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<msg timestamp="20240424 19:56:09.344" level="INFO">Closed dialog 'Drawings'.</msg>
<status status="PASS" starttime="20240424 19:56:09.209" endtime="20240424 19:56:09.344"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:09.347" endtime="20240424 19:56:09.348"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:56:09.348" endtime="20240424 19:56:09.348"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:09.348" endtime="20240424 19:56:09.354"/>
</kw>
<status status="PASS" starttime="20240424 19:56:09.344" endtime="20240424 19:56:09.354"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:56:09.354" endtime="20240424 19:56:09.480"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:56:09.480" endtime="20240424 19:56:09.492"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:56:19.503" level="INFO">Exception in thread "Thread-878" java.lang.RuntimeException: Wait for "MODEL" subcomponent to be displayed
	at org.robotframework.javalib.library.AnnotationLibrary.retrieveInnerException(AnnotationLibrary.java:158)
	at org.robotframework.javalib.library.AnnotationLibrary.runKeyword(AnnotationLibrary.java:131)
	at org.robotframework.javalib.library.KeywordFactoryBasedLibrary.runKeyword(KeywordFactoryBasedLibrary.java:44)
	at org.robotframework.javalib.library.AnnotationLibrary.runKeyword(AnnotationLibrary.java:138)
	at org.robotframework.swing.SwingLibrary.runKeyword(SwingLibrary.java:122)
	at org.robotframework.swing.keyword.concurrent.ThreadKeywords$1.run(ThreadKeywords.java:50)
Caused by: org.netbeans.jemmy.TimeoutExpiredException: Wait for "MODEL" subcomponent to be displayed
	at org.netbeans.jemmy.Waiter.waitAction(Waiter.java:147)
	at org.netbeans.jemmy.operators.ContainerOperator.waitSubComponent(ContainerOperator.java:298)
	at org.netbeans.jemmy.operators.JComponentOperator.&lt;init&gt;(JComponentOperator.java:110)
	at org.netbeans.jemmy.operators.JComponentOperator.&lt;init&gt;(JComponentOperator.java:122)
	at org.robotframework.swing.component.ComponentOperator.&lt;init&gt;(ComponentOperator.java:51)
	at org.robotframework.swing.component.ComponentOperator.newOperatorFor(ComponentOperator.java:47)
	at org.robotframework.swing.component.ComponentOperatorFactory.createOperatorByName(ComponentOperatorFactory.java:32)
	at org.robotframework.swing.component.ComponentOperatorFactory.createOperatorByName(ComponentOperatorFactory.java:24)
	at org.robotframework.swing.factory.IdentifierParsingOperatorFactory.nameArgument(IdentifierParsingOperatorFactory.java:33)
	at org.robotframework.swing.arguments.ArgumentParser.parseSwingArgument(ArgumentParser.java:51)
	at org.robotframework.swing.arguments.ArgumentParser.parseArgument(ArgumentParser.java:35)
	at org.robotframework.swing.factory.DefaultContextVerifyingOperatorFactory.parseArgument(DefaultContextVerifyingOperatorFactory.java:27)
	at org.robotframework.swing.factory.IdentifierParsingOperatorFactory.createOperator(IdentifierParsingOperatorFactory.java:25)
	at org.robotframework.swing.keyword.component.ComponentKeywords.operator(ComponentKeywords.java:281)
	at org.robotframework.swing.keyword.component.ComponentKeywords.clickOnComponent(ComponentKeywords.java:88)
	at jdk.internal.reflect.GeneratedMethodAccessor40.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.robotframework.javalib.reflection.KeywordInvoker.invoke(KeywordInvoker.java:63)
	at org.robotframework.javalib.beans.annotation.AnnotationKeywordExtractor$1.execute(AnnotationKeywordExtractor.java:66)
	at org.robotframework.javalib.library.KeywordFactoryBasedLibrary.runKeyword(KeywordFactoryBasedLibrary.java:40)
	at org.robotframework.javalib.library.AnnotationLibrary.runKeyword(AnnotationLibrary.java:129)
	... 4 more</msg>
<msg timestamp="20240424 19:56:19.503" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:56:09.494" endtime="20240424 19:56:19.503"/>
</kw>
<msg timestamp="20240424 19:56:19.503" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:56:09.493" endtime="20240424 19:56:19.503"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:56:19.503" endtime="20240424 19:56:19.503"/>
</kw>
<msg timestamp="20240424 19:56:19.503" level="INFO">${check_if_save_asked} = True</msg>
<status status="PASS" starttime="20240424 19:56:19.503" endtime="20240424 19:56:19.503"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:56:19.503" endtime="20240424 19:56:19.512"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:56:19.512" endtime="20240424 19:56:19.524"/>
</kw>
<status status="PASS" starttime="20240424 19:56:19.503" endtime="20240424 19:56:19.524"/>
</kw>
<status status="PASS" starttime="20240424 19:56:19.503" endtime="20240424 19:56:19.524"/>
</branch>
<status status="PASS" starttime="20240424 19:56:19.503" endtime="20240424 19:56:19.524"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:56:19.524" endtime="20240424 19:56:19.524"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:56:19.524" endtime="20240424 19:56:19.524"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:56:19.524" endtime="20240424 19:56:19.524"/>
</branch>
<status status="PASS" starttime="20240424 19:56:19.524" endtime="20240424 19:56:19.524"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:19.524" endtime="20240424 19:56:19.560"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:56:19.567" endtime="20240424 19:56:19.604"/>
</kw>
<status status="PASS" starttime="20240424 19:56:19.560" endtime="20240424 19:56:19.604"/>
</kw>
<status status="PASS" starttime="20240424 19:56:09.209" endtime="20240424 19:56:19.604"/>
</kw>
<status status="PASS" starttime="20240424 19:56:09.209" endtime="20240424 19:56:19.604"/>
</kw>
<status status="PASS" starttime="20240424 19:56:03.195" endtime="20240424 19:56:19.604"/>
</test>
<doc>Verify Drawings Dialog</doc>
<meta name="Feature">Drawings dialog feature</meta>
<meta name="Generated by">_gherkin2robotframework on 2023-08-04T23:29:08.891804_</meta>
<status status="PASS" starttime="20240424 19:56:03.163" endtime="20240424 19:56:19.604"/>
</suite>
<suite id="s1-s13" name="13 Info View" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\13_info_view.robot">
<test id="s1-s13-t1" name="Verify Info View" line="10">
<kw name="Background">
<doc>Launch Solibri And Login To SSC</doc>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:56:19.705" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:56:19.705" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:56:19 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:56:19.684" endtime="20240424 19:56:19.705"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:56:19.705" endtime="20240424 19:56:19.705"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:19.705" endtime="20240424 19:56:19.707"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:56:19.707" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:56:19.707" endtime="20240424 19:56:19.707"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:56:19.707" endtime="20240424 19:56:19.707"/>
</kw>
<status status="PASS" starttime="20240424 19:56:19.707" endtime="20240424 19:56:19.707"/>
</kw>
<status status="PASS" starttime="20240424 19:56:19.684" endtime="20240424 19:56:19.707"/>
</kw>
<kw name="When User Logs In To SSC" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Logged in to SSC</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:56:19.707" endtime="20240424 19:56:19.707"/>
</kw>
<status status="PASS" starttime="20240424 19:56:19.707" endtime="20240424 19:56:19.707"/>
</kw>
<kw name="Then Solibri Office Is Opened" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Solibri Office Is Opened</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:56:19.707" endtime="20240424 19:56:19.707"/>
</kw>
<status status="PASS" starttime="20240424 19:56:19.707" endtime="20240424 19:56:19.707"/>
</kw>
<status status="PASS" starttime="20240424 19:56:19.684" endtime="20240424 19:56:19.707"/>
</kw>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:56:19.719" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:56:19.719" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:56:19 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:56:19.707" endtime="20240424 19:56:19.719"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:56:19.719" endtime="20240424 19:56:19.719"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:19.719" endtime="20240424 19:56:19.719"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:56:19.719" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:56:19.719" endtime="20240424 19:56:19.719"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:56:19.719" endtime="20240424 19:56:19.719"/>
</kw>
<status status="PASS" starttime="20240424 19:56:19.719" endtime="20240424 19:56:19.719"/>
</kw>
<status status="PASS" starttime="20240424 19:56:19.707" endtime="20240424 19:56:19.719"/>
</kw>
<kw name="And No Existing Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:19.719" endtime="20240424 19:56:19.719"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:56:19.719" endtime="20240424 19:56:19.719"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:19.719" endtime="20240424 19:56:19.803"/>
</kw>
<status status="PASS" starttime="20240424 19:56:19.719" endtime="20240424 19:56:19.803"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:56:19.803" endtime="20240424 19:56:19.803"/>
</kw>
<status status="PASS" starttime="20240424 19:56:19.803" endtime="20240424 19:56:19.803"/>
</kw>
<msg timestamp="20240424 19:56:19.803" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 19:56:19.803" endtime="20240424 19:56:19.803"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:56:19.803" endtime="20240424 19:56:19.803"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:56:19.803" endtime="20240424 19:56:19.803"/>
</branch>
<status status="PASS" starttime="20240424 19:56:19.803" endtime="20240424 19:56:19.803"/>
</if>
<status status="PASS" starttime="20240424 19:56:19.719" endtime="20240424 19:56:19.803"/>
</kw>
<kw name="Then Modify Unit Settings" library="info_view_step_definitions">
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:56:19.803" endtime="20240424 19:56:20.068"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:20.068" endtime="20240424 19:56:20.111"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Units</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:56:20.111" endtime="20240424 19:56:20.114"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Units</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:56:20.114" endtime="20240424 19:56:20.305"/>
</kw>
<kw name="Select From Combo Box" library="SwingRobot">
<arg>0</arg>
<arg>Meter or Millimeter</arg>
<doc>Selects an item from a combobox.
The item selection is verified by default and can be disabled using the optional ``verifySelection`` parameter with any value.</doc>
<status status="PASS" starttime="20240424 19:56:20.305" endtime="20240424 19:56:20.837"/>
</kw>
<kw name="Select From Combo Box" library="SwingRobot">
<arg>3</arg>
<arg>Square Meter</arg>
<doc>Selects an item from a combobox.
The item selection is verified by default and can be disabled using the optional ``verifySelection`` parameter with any value.</doc>
<status status="PASS" starttime="20240424 19:56:20.837" endtime="20240424 19:56:21.386"/>
</kw>
<kw name="Select From Combo Box" library="SwingRobot">
<arg>5</arg>
<arg>Cubic Meter</arg>
<doc>Selects an item from a combobox.
The item selection is verified by default and can be disabled using the optional ``verifySelection`` parameter with any value.</doc>
<status status="PASS" starttime="20240424 19:56:21.386" endtime="20240424 19:56:21.984"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:56:21.984" endtime="20240424 19:56:21.999"/>
</kw>
<status status="PASS" starttime="20240424 19:56:19.803" endtime="20240424 19:56:21.999"/>
</kw>
<kw name="Then Restore Default Layout" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:21.999" endtime="20240424 19:56:22.016"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:22.016" endtime="20240424 19:56:22.016"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:56:22.016" endtime="20240424 19:56:22.016"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:22.024" endtime="20240424 19:56:22.094"/>
</kw>
<status status="PASS" starttime="20240424 19:56:22.016" endtime="20240424 19:56:22.094"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:56:22.094" endtime="20240424 19:56:22.344"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Layouts</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:56:22.344" endtime="20240424 19:56:22.351"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Layouts</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:56:22.351" endtime="20240424 19:56:22.527"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Push Button</arg>
<arg>Restore</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:56:22.527" endtime="20240424 19:56:22.529"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Restore</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:56:22.529" endtime="20240424 19:56:22.640"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:56:22.640" endtime="20240424 19:56:22.790"/>
</kw>
<status status="PASS" starttime="20240424 19:56:21.999" endtime="20240424 19:56:22.790"/>
</kw>
<kw name="Then IFC File Is Open" library="ModelHandlingResource">
<arg>${solibri_building_ifc}</arg>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${file_name_with_path}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:22.790" endtime="20240424 19:56:22.823"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:56:22.825" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:56:22.823" endtime="20240424 19:56:22.825"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:56:22.825" endtime="20240424 19:56:22.825"/>
</kw>
<status status="PASS" starttime="20240424 19:56:22.823" endtime="20240424 19:56:22.825"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:22.825" endtime="20240424 19:56:22.849"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:56:22.849" endtime="20240424 19:56:22.849"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:22.849" endtime="20240424 19:56:22.860"/>
</kw>
<status status="PASS" starttime="20240424 19:56:22.825" endtime="20240424 19:56:22.860"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:56:22.860" endtime="20240424 19:56:22.866"/>
</kw>
<status status="PASS" starttime="20240424 19:56:22.860" endtime="20240424 19:56:22.866"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:56:22.866" endtime="20240424 19:56:22.937"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:56:22.937" endtime="20240424 19:56:22.942"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:56:22.942" endtime="20240424 19:56:24.264"/>
</kw>
<status status="PASS" starttime="20240424 19:56:22.942" endtime="20240424 19:56:24.264"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:56:24.264" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:56:24.264" endtime="20240424 19:56:24.264"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:56:24.264" endtime="20240424 19:56:24.264"/>
</return>
<msg timestamp="20240424 19:56:24.264" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:56:24.264" endtime="20240424 19:56:24.264"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:56:24.264" endtime="20240424 19:56:24.551"/>
</kw>
<status status="PASS" starttime="20240424 19:56:24.264" endtime="20240424 19:56:24.551"/>
</kw>
<status status="PASS" starttime="20240424 19:56:24.264" endtime="20240424 19:56:24.551"/>
</branch>
<status status="PASS" starttime="20240424 19:56:24.264" endtime="20240424 19:56:24.551"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:56:24.552" endtime="20240424 19:56:24.552"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:56:24.551" endtime="20240424 19:56:24.552"/>
</branch>
<status status="PASS" starttime="20240424 19:56:24.551" endtime="20240424 19:56:24.552"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:56:24.552" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\ifc</msg>
<msg timestamp="20240424 19:56:24.552" level="INFO">${filename} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:56:24.552" endtime="20240424 19:56:24.552"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:56:24.552" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 19:56:24.552" level="INFO">${ext} = ifc</msg>
<status status="PASS" starttime="20240424 19:56:24.552" endtime="20240424 19:56:24.552"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<status status="NOT RUN" starttime="20240424 19:56:24.554" endtime="20240424 19:56:24.554"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:56:24.552" endtime="20240424 19:56:24.554"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:56:24.554" endtime="20240424 19:56:24.659"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:24.659" endtime="20240424 19:56:24.736"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:56:24.736" endtime="20240424 19:56:24.742"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:24.742" endtime="20240424 19:56:24.746"/>
</kw>
<status status="PASS" starttime="20240424 19:56:24.659" endtime="20240424 19:56:24.746"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:56:26.672" level="INFO">2024-04-24 19:56:25.510+0000 [Thread-932] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 0 ms.
2024-04-24 19:56:25.510+0000 [Thread-932] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 946 ms (using 1 threads)
2024-04-24 19:56:25.545+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 35 ms
2024-04-24 19:56:26.364+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 854 ms.</msg>
<status status="PASS" starttime="20240424 19:56:24.746" endtime="20240424 19:56:26.672"/>
</kw>
<status status="PASS" starttime="20240424 19:56:24.746" endtime="20240424 19:56:26.672"/>
</kw>
<msg timestamp="20240424 19:56:26.672" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:56:24.746" endtime="20240424 19:56:26.672"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:56:26.672" endtime="20240424 19:56:26.788"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:56:26.789" endtime="20240424 19:56:27.310"/>
</kw>
<status status="PASS" starttime="20240424 19:56:26.672" endtime="20240424 19:56:27.310"/>
</branch>
<status status="PASS" starttime="20240424 19:56:26.672" endtime="20240424 19:56:27.310"/>
</if>
<status status="PASS" starttime="20240424 19:56:24.554" endtime="20240424 19:56:27.310"/>
</kw>
<status status="PASS" starttime="20240424 19:56:24.554" endtime="20240424 19:56:27.310"/>
</branch>
<status status="PASS" starttime="20240424 19:56:24.552" endtime="20240424 19:56:27.310"/>
</if>
<status status="PASS" starttime="20240424 19:56:22.790" endtime="20240424 19:56:27.310"/>
</kw>
<status status="PASS" starttime="20240424 19:56:22.790" endtime="20240424 19:56:27.310"/>
</kw>
<kw name="Then Verify Solibri Building Properties" library="info_view_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:27.310" endtime="20240424 19:56:27.310"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:56:27.310" endtime="20240424 19:56:27.347"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:27.347" endtime="20240424 19:56:27.388"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:27.413" level="INFO">${row_count} = 13</msg>
<status status="PASS" starttime="20240424 19:56:27.388" endtime="20240424 19:56:27.413"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'13'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.413" endtime="20240424 19:56:27.413"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${model_attributes}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.418" level="INFO">${model_attributes} = Model Attributes</msg>
<status status="PASS" starttime="20240424 19:56:27.413" endtime="20240424 19:56:27.418"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${model_attributes}</arg>
<arg>Model Attributes</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.418" endtime="20240424 19:56:27.418"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${solibri_data}</var>
<arg>1</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.422" level="INFO">${solibri_data} = Solibri Data</msg>
<status status="PASS" starttime="20240424 19:56:27.418" endtime="20240424 19:56:27.422"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${solibri_data}</arg>
<arg>Solibri Data</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.422" endtime="20240424 19:56:27.422"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${discipline}</var>
<arg>1</arg>
<arg>4</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.425" level="INFO">${discipline} = Discipline</msg>
<status status="PASS" starttime="20240424 19:56:27.422" endtime="20240424 19:56:27.425"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${discipline}</arg>
<arg>Discipline</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.425" endtime="20240424 19:56:27.425"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${discipline_value}</var>
<arg>1</arg>
<arg>4</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.429" level="INFO">${discipline_value} = Architectural</msg>
<status status="PASS" starttime="20240424 19:56:27.425" endtime="20240424 19:56:27.429"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${discipline_value}</arg>
<arg>Architectural</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.429" endtime="20240424 19:56:27.429"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${information_cad}</var>
<arg>1</arg>
<arg>7</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.432" level="INFO">${information_cad} = Information CAD</msg>
<status status="PASS" starttime="20240424 19:56:27.429" endtime="20240424 19:56:27.432"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${information_cad}</arg>
<arg>Information CAD</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.432" endtime="20240424 19:56:27.432"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${component_attributes}</var>
<arg>1</arg>
<arg>9</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.442" level="INFO">${component_attributes} = Component Attributes</msg>
<status status="PASS" starttime="20240424 19:56:27.432" endtime="20240424 19:56:27.442"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${component_attributes}</arg>
<arg>Component Attributes</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.442" endtime="20240424 19:56:27.442"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${ifc_information}</var>
<arg>1</arg>
<arg>11</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.467" level="INFO">${ifc_information} = Ifc Information</msg>
<status status="PASS" starttime="20240424 19:56:27.442" endtime="20240424 19:56:27.467"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${ifc_information}</arg>
<arg>Ifc Information</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.467" endtime="20240424 19:56:27.467"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${ifc_schema}</var>
<arg>1</arg>
<arg>12</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.467" level="INFO">${ifc_schema} = IFC Schema</msg>
<status status="PASS" starttime="20240424 19:56:27.467" endtime="20240424 19:56:27.467"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${ifc_schema}</arg>
<arg>IFC Schema</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.467" endtime="20240424 19:56:27.467"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${ifc_information_value}</var>
<arg>1</arg>
<arg>12</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.476" level="INFO">${ifc_information_value} = IFC2X3</msg>
<status status="PASS" starttime="20240424 19:56:27.467" endtime="20240424 19:56:27.476"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${ifc_information_value}</arg>
<arg>IFC2X3</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.476" endtime="20240424 19:56:27.476"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>1</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:27.476" endtime="20240424 19:56:27.517"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:27.517" endtime="20240424 19:56:27.520"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:27.520" endtime="20240424 19:56:27.532"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${description}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.532" level="INFO">${description} = DESCRIPTION</msg>
<status status="PASS" starttime="20240424 19:56:27.532" endtime="20240424 19:56:27.532"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${description}</arg>
<arg>DESCRIPTION</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.532" endtime="20240424 19:56:27.532"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${description_value}</var>
<arg>1</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.538" level="INFO">${description_value} = &lt;html&gt;ViewDefinition [CoordinationView_V2.0, QuantityTakeOffAddOnView, SpaceBoundary2ndLevelAddOnView]&lt;br&gt;Option [Elements to export: Visible elements (on all stories)]&lt;br&gt;Option [Partial Structure Di...</msg>
<status status="PASS" starttime="20240424 19:56:27.532" endtime="20240424 19:56:27.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${description_value}</arg>
<arg>Railing export mode: Single Element</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:56:27.538" endtime="20240424 19:56:27.538"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${implementation_level}</var>
<arg>1</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.544" level="INFO">${implementation_level} = IMPLEMENTATION_LEVEL</msg>
<status status="PASS" starttime="20240424 19:56:27.538" endtime="20240424 19:56:27.544"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${implementation_level}</arg>
<arg>IMPLEMENTATION_LEVEL</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.544" endtime="20240424 19:56:27.544"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${implementation_level_value}</var>
<arg>1</arg>
<arg>1</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.562" level="INFO">${implementation_level_value} = 2;1</msg>
<status status="PASS" starttime="20240424 19:56:27.544" endtime="20240424 19:56:27.562"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${implementation_level_value}</arg>
<arg>2;1</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.562" endtime="20240424 19:56:27.562"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>1</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:27.562" endtime="20240424 19:56:27.588"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>1</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:27.588" endtime="20240424 19:56:27.597"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:27.597" endtime="20240424 19:56:27.600"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:27.603" level="INFO">${row_count} = 7</msg>
<status status="PASS" starttime="20240424 19:56:27.600" endtime="20240424 19:56:27.603"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'7'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.603" endtime="20240424 19:56:27.603"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${author}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.608" level="INFO">${author} = AUTHOR</msg>
<status status="PASS" starttime="20240424 19:56:27.603" endtime="20240424 19:56:27.608"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${author}</arg>
<arg>AUTHOR</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.608" endtime="20240424 19:56:27.608"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${author_value}</var>
<arg>1</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.613" level="INFO">${author_value} = Smith John</msg>
<status status="PASS" starttime="20240424 19:56:27.608" endtime="20240424 19:56:27.613"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${author_value}</arg>
<arg>Smith John</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.613" endtime="20240424 19:56:27.613"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${name_value}</var>
<arg>1</arg>
<arg>2</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.617" level="INFO">${name_value} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:56:27.613" endtime="20240424 19:56:27.617"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${name_value}</arg>
<arg>Solibri Building.ifc</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.617" endtime="20240424 19:56:27.617"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${time_stamp}</var>
<arg>1</arg>
<arg>6</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.664" level="INFO">${time_stamp} = TIME_STAMP</msg>
<status status="PASS" starttime="20240424 19:56:27.617" endtime="20240424 19:56:27.664"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${time_stamp}</arg>
<arg>TIME_STAMP</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.664" endtime="20240424 19:56:27.664"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${time_stamp_value}</var>
<arg>1</arg>
<arg>6</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.664" level="INFO">${time_stamp_value} = 2021-11-10 14:20:47</msg>
<status status="PASS" starttime="20240424 19:56:27.664" endtime="20240424 19:56:27.664"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${time_stamp_value}</arg>
<arg>2021-11-10 14:20:47</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.664" endtime="20240424 19:56:27.664"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>1</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:27.664" endtime="20240424 19:56:27.678"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>2</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:27.678" endtime="20240424 19:56:27.689"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:27.689" endtime="20240424 19:56:27.692"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:27.695" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:56:27.692" endtime="20240424 19:56:27.695"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'1'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.695" endtime="20240424 19:56:27.695"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${schema_name}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.698" level="INFO">${schema_name} = SCHEMA_NAME</msg>
<status status="PASS" starttime="20240424 19:56:27.695" endtime="20240424 19:56:27.698"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${schema_name}</arg>
<arg>SCHEMA_NAME</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.698" endtime="20240424 19:56:27.698"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${schema_name_value}</var>
<arg>1</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.698" level="INFO">${schema_name_value} = IFC2X3</msg>
<status status="PASS" starttime="20240424 19:56:27.698" endtime="20240424 19:56:27.698"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${schema_name_value}</arg>
<arg>IFC2X3</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.698" endtime="20240424 19:56:27.698"/>
</kw>
<status status="PASS" starttime="20240424 19:56:27.310" endtime="20240424 19:56:27.698"/>
</kw>
<kw name="Then Verify Project Name Properties" library="info_view_step_definitions">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:56:27.698" endtime="20240424 19:56:27.744"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:56:27.744" endtime="20240424 19:56:27.784"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:27.784" endtime="20240424 19:56:27.846"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Identification</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:27.846" endtime="20240424 19:56:27.860"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:27.860" endtime="20240424 19:56:27.864"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:27.867" level="INFO">${row_count} = 17</msg>
<status status="PASS" starttime="20240424 19:56:27.864" endtime="20240424 19:56:27.867"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'17'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.867" endtime="20240424 19:56:27.867"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${model_attributes}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.871" level="INFO">${model_attributes} = Model Attributes</msg>
<status status="PASS" starttime="20240424 19:56:27.867" endtime="20240424 19:56:27.871"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${model_attributes}</arg>
<arg>Model Attributes</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.871" endtime="20240424 19:56:27.871"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${model}</var>
<arg>1</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.881" level="INFO">${model} = Model</msg>
<status status="PASS" starttime="20240424 19:56:27.871" endtime="20240424 19:56:27.881"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${model}</arg>
<arg>Model</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.881" endtime="20240424 19:56:27.881"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${model_value}</var>
<arg>1</arg>
<arg>1</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.927" level="INFO">${model_value} = Solibri Building</msg>
<status status="PASS" starttime="20240424 19:56:27.881" endtime="20240424 19:56:27.927"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${model_value}</arg>
<arg>Solibri Building</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.927" endtime="20240424 19:56:27.927"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${solibri_data}</var>
<arg>1</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.932" level="INFO">${solibri_data} = Solibri Data</msg>
<status status="PASS" starttime="20240424 19:56:27.927" endtime="20240424 19:56:27.932"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${solibri_data}</arg>
<arg>Solibri Data</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.932" endtime="20240424 19:56:27.932"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${information_cad}</var>
<arg>1</arg>
<arg>6</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:27.985" level="INFO">${information_cad} = Information CAD</msg>
<status status="PASS" starttime="20240424 19:56:27.932" endtime="20240424 19:56:27.985"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${information_cad}</arg>
<arg>Information CAD</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:27.985" endtime="20240424 19:56:27.985"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${application}</var>
<arg>1</arg>
<arg>7</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.000" level="INFO">${application} = Application</msg>
<status status="PASS" starttime="20240424 19:56:27.985" endtime="20240424 19:56:28.000"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${application}</arg>
<arg>Application</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.000" endtime="20240424 19:56:28.000"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${application_value}</var>
<arg>1</arg>
<arg>7</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.000" level="INFO">${application_value} = ARCHICAD</msg>
<status status="PASS" starttime="20240424 19:56:28.000" endtime="20240424 19:56:28.000"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${application_value}</arg>
<arg>ARCHICAD</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.000" endtime="20240424 19:56:28.000"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${component_attributes}</var>
<arg>1</arg>
<arg>8</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.006" level="INFO">${component_attributes} = Component Attributes</msg>
<status status="PASS" starttime="20240424 19:56:28.000" endtime="20240424 19:56:28.006"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${component_attributes}</arg>
<arg>Component Attributes</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.006" endtime="20240424 19:56:28.006"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${guid}</var>
<arg>1</arg>
<arg>13</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.012" level="INFO">${guid} = GUID</msg>
<status status="PASS" starttime="20240424 19:56:28.006" endtime="20240424 19:56:28.012"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${guid}</arg>
<arg>GUID</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.012" endtime="20240424 19:56:28.012"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${guid_value}</var>
<arg>1</arg>
<arg>13</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.022" level="INFO">${guid_value} = 0g8GxLEzP459ZWW6_RGsez</msg>
<status status="PASS" starttime="20240424 19:56:28.012" endtime="20240424 19:56:28.022"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${guid_value}</arg>
<arg>0g8GxLEzP459ZWW6_RGsez</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.022" endtime="20240424 19:56:28.022"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.022" endtime="20240424 19:56:28.022"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Relations</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.022" endtime="20240424 19:56:28.045"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:28.045" endtime="20240424 19:56:28.050"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:56:28.050" endtime="20240424 19:56:28.068"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:28.087" level="INFO">${row_count} = 3</msg>
<status status="PASS" starttime="20240424 19:56:28.068" endtime="20240424 19:56:28.087"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'3'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.087" endtime="20240424 19:56:28.087"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${containment}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.093" level="INFO">${containment} = Containment</msg>
<status status="PASS" starttime="20240424 19:56:28.087" endtime="20240424 19:56:28.093"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${containment}</arg>
<arg>Containment</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.093" endtime="20240424 19:56:28.093"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.093" endtime="20240424 19:56:28.105"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Classification</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.105" endtime="20240424 19:56:28.114"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:28.114" endtime="20240424 19:56:28.116"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:28.120" level="INFO">${row_count} = 0</msg>
<status status="PASS" starttime="20240424 19:56:28.116" endtime="20240424 19:56:28.120"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'0'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.120" endtime="20240424 19:56:28.120"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>1</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.120" endtime="20240424 19:56:28.185"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>FILE_DESCRIPTION</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.185" endtime="20240424 19:56:28.194"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:28.194" endtime="20240424 19:56:28.197"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:28.200" level="INFO">${row_count} = 2</msg>
<status status="PASS" starttime="20240424 19:56:28.197" endtime="20240424 19:56:28.200"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'2'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.200" endtime="20240424 19:56:28.200"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>1</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.200" endtime="20240424 19:56:28.207"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>FILE_NAME</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.207" endtime="20240424 19:56:28.222"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:28.222" endtime="20240424 19:56:28.266"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:28.266" level="INFO">${row_count} = 7</msg>
<status status="PASS" starttime="20240424 19:56:28.266" endtime="20240424 19:56:28.266"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'7'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.266" endtime="20240424 19:56:28.266"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${name}</var>
<arg>1</arg>
<arg>2</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.272" level="INFO">${name} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:56:28.266" endtime="20240424 19:56:28.272"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${name}</arg>
<arg>Solibri Building.ifc</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.272" endtime="20240424 19:56:28.272"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>1</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.272" endtime="20240424 19:56:28.284"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>FILE_SCHEMA</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.284" endtime="20240424 19:56:28.301"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:28.301" endtime="20240424 19:56:28.303"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:28.306" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:56:28.303" endtime="20240424 19:56:28.306"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'1'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.306" endtime="20240424 19:56:28.306"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${schema_name}</var>
<arg>1</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.313" level="INFO">${schema_name} = IFC2X3</msg>
<status status="PASS" starttime="20240424 19:56:28.306" endtime="20240424 19:56:28.313"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${schema_name}</arg>
<arg>IFC2X3</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.313" endtime="20240424 19:56:28.313"/>
</kw>
<status status="PASS" starttime="20240424 19:56:27.698" endtime="20240424 19:56:28.313"/>
</kw>
<kw name="Then Verify Site Name Properties" library="info_view_step_definitions">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>4</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:56:28.313" endtime="20240424 19:56:28.376"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.376" endtime="20240424 19:56:28.398"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Identification</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.398" endtime="20240424 19:56:28.412"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:28.412" endtime="20240424 19:56:28.417"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:28.419" level="INFO">${row_count} = 19</msg>
<status status="PASS" starttime="20240424 19:56:28.417" endtime="20240424 19:56:28.419"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'19'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.419" endtime="20240424 19:56:28.419"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${model_attributes}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.435" level="INFO">${model_attributes} = Model Attributes</msg>
<status status="PASS" starttime="20240424 19:56:28.419" endtime="20240424 19:56:28.435"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${model_attributes}</arg>
<arg>Model Attributes</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.435" endtime="20240424 19:56:28.435"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${model}</var>
<arg>1</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.440" level="INFO">${model} = Model</msg>
<status status="PASS" starttime="20240424 19:56:28.435" endtime="20240424 19:56:28.440"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${model}</arg>
<arg>Model</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.440" endtime="20240424 19:56:28.440"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${model_value}</var>
<arg>1</arg>
<arg>1</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.440" level="INFO">${model_value} = Solibri Building</msg>
<status status="PASS" starttime="20240424 19:56:28.440" endtime="20240424 19:56:28.440"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${model_value}</arg>
<arg>Solibri Building</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.440" endtime="20240424 19:56:28.440"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${solibri_data}</var>
<arg>1</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.440" level="INFO">${solibri_data} = Solibri Data</msg>
<status status="PASS" starttime="20240424 19:56:28.440" endtime="20240424 19:56:28.440"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${solibri_data}</arg>
<arg>Solibri Data</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.440" endtime="20240424 19:56:28.440"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${information_cad}</var>
<arg>1</arg>
<arg>6</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.455" level="INFO">${information_cad} = Information CAD</msg>
<status status="PASS" starttime="20240424 19:56:28.440" endtime="20240424 19:56:28.455"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${information_cad}</arg>
<arg>Information CAD</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.455" endtime="20240424 19:56:28.455"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${application}</var>
<arg>1</arg>
<arg>7</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.455" level="INFO">${application} = Application</msg>
<status status="PASS" starttime="20240424 19:56:28.455" endtime="20240424 19:56:28.455"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${application}</arg>
<arg>Application</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.455" endtime="20240424 19:56:28.455"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${application_value}</var>
<arg>1</arg>
<arg>7</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.455" level="INFO">${application_value} = ARCHICAD</msg>
<status status="PASS" starttime="20240424 19:56:28.455" endtime="20240424 19:56:28.455"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${application_value}</arg>
<arg>ARCHICAD</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.455" endtime="20240424 19:56:28.455"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${component_attributes}</var>
<arg>1</arg>
<arg>8</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.468" level="INFO">${component_attributes} = Component Attributes</msg>
<status status="PASS" starttime="20240424 19:56:28.455" endtime="20240424 19:56:28.468"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${component_attributes}</arg>
<arg>Component Attributes</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.468" endtime="20240424 19:56:28.468"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${guid}</var>
<arg>1</arg>
<arg>15</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.468" level="INFO">${guid} = GUID</msg>
<status status="PASS" starttime="20240424 19:56:28.468" endtime="20240424 19:56:28.468"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${guid}</arg>
<arg>GUID</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.468" endtime="20240424 19:56:28.468"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${guid_value}</var>
<arg>1</arg>
<arg>15</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.473" level="INFO">${guid_value} = 0IqMRtR9DC58V2JSrAYt1A</msg>
<status status="PASS" starttime="20240424 19:56:28.468" endtime="20240424 19:56:28.473"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${guid_value}</arg>
<arg>0IqMRtR9DC58V2JSrAYt1A</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.473" endtime="20240424 19:56:28.473"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.473" endtime="20240424 19:56:28.473"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Location</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.473" endtime="20240424 19:56:28.505"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:28.505" endtime="20240424 19:56:28.507"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:28.512" level="INFO">${row_count} = 12</msg>
<status status="PASS" starttime="20240424 19:56:28.507" endtime="20240424 19:56:28.512"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'12'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.512" endtime="20240424 19:56:28.512"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${project}</var>
<arg>1</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.519" level="INFO">${project} = Project</msg>
<status status="PASS" starttime="20240424 19:56:28.512" endtime="20240424 19:56:28.519"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${project}</arg>
<arg>Project</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.519" endtime="20240424 19:56:28.519"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${project_value}</var>
<arg>1</arg>
<arg>1</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.519" level="INFO">${project_value} = Project Name</msg>
<status status="PASS" starttime="20240424 19:56:28.519" endtime="20240424 19:56:28.519"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${project_value}</arg>
<arg>Project Name</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.519" endtime="20240424 19:56:28.519"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${global_bottom_elevation}</var>
<arg>1</arg>
<arg>5</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.525" level="INFO">${global_bottom_elevation} = Global Bottom Elevation</msg>
<status status="PASS" starttime="20240424 19:56:28.519" endtime="20240424 19:56:28.525"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${global_bottom_elevation}</arg>
<arg>Global Bottom Elevation</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.525" endtime="20240424 19:56:28.525"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${global_bottom_elevation_value}</var>
<arg>1</arg>
<arg>5</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.525" level="INFO">${global_bottom_elevation_value} = 0 mm</msg>
<status status="PASS" starttime="20240424 19:56:28.525" endtime="20240424 19:56:28.525"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${global_bottom_elevation_value}</arg>
<arg>0 mm</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.525" endtime="20240424 19:56:28.525"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${globa_z}</var>
<arg>1</arg>
<arg>11</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.525" level="INFO">${globa_z} = Global Z</msg>
<status status="PASS" starttime="20240424 19:56:28.525" endtime="20240424 19:56:28.525"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${globa_z}</arg>
<arg>Global Z</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.525" endtime="20240424 19:56:28.525"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${globa_z_value}</var>
<arg>1</arg>
<arg>11</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.533" level="INFO">${globa_z_value} = 0 mm</msg>
<status status="PASS" starttime="20240424 19:56:28.525" endtime="20240424 19:56:28.533"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${globa_z_value}</arg>
<arg>0 mm</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.533" endtime="20240424 19:56:28.533"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.533" endtime="20240424 19:56:28.535"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Relations</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.535" endtime="20240424 19:56:28.558"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:28.558" endtime="20240424 19:56:28.565"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:56:28.565" endtime="20240424 19:56:28.582"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:28.586" level="INFO">${row_count} = 3</msg>
<status status="PASS" starttime="20240424 19:56:28.582" endtime="20240424 19:56:28.586"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'3'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.586" endtime="20240424 19:56:28.586"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${containment}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.590" level="INFO">${containment} = Containment</msg>
<status status="PASS" starttime="20240424 19:56:28.586" endtime="20240424 19:56:28.590"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${containment}</arg>
<arg>Containment</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.590" endtime="20240424 19:56:28.590"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.590" endtime="20240424 19:56:28.601"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Classification</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.601" endtime="20240424 19:56:28.617"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:28.617" endtime="20240424 19:56:28.623"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:28.625" level="INFO">${row_count} = 0</msg>
<status status="PASS" starttime="20240424 19:56:28.623" endtime="20240424 19:56:28.625"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'0'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.625" endtime="20240424 19:56:28.625"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>1</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.625" endtime="20240424 19:56:28.627"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>BaseQuantities</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.627" endtime="20240424 19:56:28.643"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:28.643" endtime="20240424 19:56:28.643"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:28.650" level="INFO">${row_count} = 2</msg>
<status status="PASS" starttime="20240424 19:56:28.643" endtime="20240424 19:56:28.650"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'2'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.650" endtime="20240424 19:56:28.650"/>
</kw>
<status status="PASS" starttime="20240424 19:56:28.313" endtime="20240424 19:56:28.650"/>
</kw>
<kw name="Then Verify Building Name Properties" library="info_view_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:28.650" endtime="20240424 19:56:28.653"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>5</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:56:28.653" endtime="20240424 19:56:28.655"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.655" endtime="20240424 19:56:28.731"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Identification</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.731" endtime="20240424 19:56:28.747"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:28.747" endtime="20240424 19:56:28.747"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:28.765" level="INFO">${row_count} = 18</msg>
<status status="PASS" starttime="20240424 19:56:28.762" endtime="20240424 19:56:28.765"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'18'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.765" endtime="20240424 19:56:28.765"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${model_attributes}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.765" level="INFO">${model_attributes} = Model Attributes</msg>
<status status="PASS" starttime="20240424 19:56:28.765" endtime="20240424 19:56:28.765"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${model_attributes}</arg>
<arg>Model Attributes</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.765" endtime="20240424 19:56:28.765"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${solibri_data}</var>
<arg>1</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.771" level="INFO">${solibri_data} = Solibri Data</msg>
<status status="PASS" starttime="20240424 19:56:28.765" endtime="20240424 19:56:28.771"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${solibri_data}</arg>
<arg>Solibri Data</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.771" endtime="20240424 19:56:28.772"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${information_cad}</var>
<arg>1</arg>
<arg>6</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.773" level="INFO">${information_cad} = Information CAD</msg>
<status status="PASS" starttime="20240424 19:56:28.772" endtime="20240424 19:56:28.773"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${information_cad}</arg>
<arg>Information CAD</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.773" endtime="20240424 19:56:28.773"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${component_attributes}</var>
<arg>1</arg>
<arg>8</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.775" level="INFO">${component_attributes} = Component Attributes</msg>
<status status="PASS" starttime="20240424 19:56:28.773" endtime="20240424 19:56:28.775"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${component_attributes}</arg>
<arg>Component Attributes</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.775" endtime="20240424 19:56:28.775"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${ifc_information}</var>
<arg>1</arg>
<arg>14</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.775" level="INFO">${ifc_information} = Ifc Information</msg>
<status status="PASS" starttime="20240424 19:56:28.775" endtime="20240424 19:56:28.775"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${ifc_information}</arg>
<arg>Ifc Information</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.775" endtime="20240424 19:56:28.775"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${ifc_schema}</var>
<arg>1</arg>
<arg>17</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.781" level="INFO">${ifc_schema} = IFC Schema</msg>
<status status="PASS" starttime="20240424 19:56:28.775" endtime="20240424 19:56:28.781"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${ifc_schema}</arg>
<arg>IFC Schema</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.781" endtime="20240424 19:56:28.781"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${ifc_information_value}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.781" level="INFO">${ifc_information_value} = IFC2X3</msg>
<status status="PASS" starttime="20240424 19:56:28.781" endtime="20240424 19:56:28.781"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${ifc_information_value}</arg>
<arg>IFC2X3</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.781" endtime="20240424 19:56:28.781"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.781" endtime="20240424 19:56:28.802"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Location</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.802" endtime="20240424 19:56:28.813"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:28.813" endtime="20240424 19:56:28.813"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:28.819" level="INFO">${row_count} = 10</msg>
<status status="PASS" starttime="20240424 19:56:28.813" endtime="20240424 19:56:28.819"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'10'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.819" endtime="20240424 19:56:28.819"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${hierarchy}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.819" level="INFO">${hierarchy} = Hierarchy</msg>
<status status="PASS" starttime="20240424 19:56:28.819" endtime="20240424 19:56:28.819"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${hierarchy}</arg>
<arg>Hierarchy</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.819" endtime="20240424 19:56:28.819"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${elevation}</var>
<arg>1</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.826" level="INFO">${elevation} = Elevation</msg>
<status status="PASS" starttime="20240424 19:56:28.819" endtime="20240424 19:56:28.826"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${elevation}</arg>
<arg>Elevation</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.826" endtime="20240424 19:56:28.826"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${top_elevation}</var>
<arg>1</arg>
<arg>4</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.829" level="INFO">${top_elevation} = Global Top Elevation</msg>
<status status="PASS" starttime="20240424 19:56:28.826" endtime="20240424 19:56:28.829"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${top_elevation}</arg>
<arg>Global Top Elevation</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.829" endtime="20240424 19:56:28.829"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${top_elevation_value}</var>
<arg>1</arg>
<arg>4</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.829" level="INFO">${top_elevation_value} = 0 mm</msg>
<status status="PASS" starttime="20240424 19:56:28.829" endtime="20240424 19:56:28.829"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${top_elevation_value}</arg>
<arg>0 mm</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.829" endtime="20240424 19:56:28.829"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${coordinates}</var>
<arg>1</arg>
<arg>6</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.837" level="INFO">${coordinates} = Coordinates</msg>
<status status="PASS" starttime="20240424 19:56:28.829" endtime="20240424 19:56:28.837"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${coordinates}</arg>
<arg>Coordinates</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.837" endtime="20240424 19:56:28.837"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.837" endtime="20240424 19:56:28.837"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Quantities</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.837" endtime="20240424 19:56:28.852"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:28.852" endtime="20240424 19:56:28.852"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:28.861" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:56:28.852" endtime="20240424 19:56:28.861"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${gross_area}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.864" level="INFO">${gross_area} = Gross Area</msg>
<status status="PASS" starttime="20240424 19:56:28.861" endtime="20240424 19:56:28.864"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${gross_area}</arg>
<arg>Gross Area</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.864" endtime="20240424 19:56:28.864"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${gross_area_value}</var>
<arg>1</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.866" level="INFO">${gross_area_value} = 548.13 m2</msg>
<status status="PASS" starttime="20240424 19:56:28.864" endtime="20240424 19:56:28.866"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${gross_area_value}</arg>
<arg>548.13 m2</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.866" endtime="20240424 19:56:28.866"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.866" endtime="20240424 19:56:28.884"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Relations</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.884" endtime="20240424 19:56:28.906"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:28.906" endtime="20240424 19:56:28.910"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:56:28.910" endtime="20240424 19:56:28.939"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:28.939" level="INFO">${row_count} = 6</msg>
<status status="PASS" starttime="20240424 19:56:28.939" endtime="20240424 19:56:28.939"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'6'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.939" endtime="20240424 19:56:28.939"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.939" endtime="20240424 19:56:28.955"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Classification</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.955" endtime="20240424 19:56:28.958"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:28.958" endtime="20240424 19:56:28.958"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:28.958" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:56:28.958" endtime="20240424 19:56:28.958"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'1'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.958" endtime="20240424 19:56:28.958"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${classification}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.958" level="INFO">${classification} = Uniclass2</msg>
<status status="PASS" starttime="20240424 19:56:28.958" endtime="20240424 19:56:28.958"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${classification}</arg>
<arg>Uniclass2</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.958" endtime="20240424 19:56:28.958"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${name}</var>
<arg>1</arg>
<arg>0</arg>
<arg>3</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:28.975" level="INFO">${name} = Small Single Office Buildings</msg>
<status status="PASS" starttime="20240424 19:56:28.958" endtime="20240424 19:56:28.975"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${name}</arg>
<arg>Small Single Office Buildings</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:28.976" endtime="20240424 19:56:28.976"/>
</kw>
<status status="PASS" starttime="20240424 19:56:28.650" endtime="20240424 19:56:28.976"/>
</kw>
<kw name="Then Verify Ground Floor Properties" library="info_view_step_definitions">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>6</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:56:28.976" endtime="20240424 19:56:28.994"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:28.994" endtime="20240424 19:56:29.061"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Identification</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:29.061" endtime="20240424 19:56:29.061"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:29.061" endtime="20240424 19:56:29.077"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:29.081" level="INFO">${row_count} = 18</msg>
<status status="PASS" starttime="20240424 19:56:29.077" endtime="20240424 19:56:29.081"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'18'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.082" endtime="20240424 19:56:29.082"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${model_attributes}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:29.083" level="INFO">${model_attributes} = Model Attributes</msg>
<status status="PASS" starttime="20240424 19:56:29.082" endtime="20240424 19:56:29.083"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${model_attributes}</arg>
<arg>Model Attributes</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.083" endtime="20240424 19:56:29.083"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${component_attributes_name}</var>
<arg>1</arg>
<arg>9</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:29.083" level="INFO">${component_attributes_name} = Name</msg>
<status status="PASS" starttime="20240424 19:56:29.083" endtime="20240424 19:56:29.083"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${component_attributes_name}</arg>
<arg>Name</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.083" endtime="20240424 19:56:29.083"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${component_attributes_name_value}</var>
<arg>1</arg>
<arg>9</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:29.083" level="INFO">${component_attributes_name_value} = Ground floor</msg>
<status status="PASS" starttime="20240424 19:56:29.083" endtime="20240424 19:56:29.083"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${component_attributes_name_value}</arg>
<arg>Ground floor</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.083" endtime="20240424 19:56:29.083"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${component_attributes_guid}</var>
<arg>1</arg>
<arg>14</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:29.096" level="INFO">${component_attributes_guid} = 2r6a0oqyj4yPPPei42ibMm</msg>
<status status="PASS" starttime="20240424 19:56:29.083" endtime="20240424 19:56:29.096"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${component_attributes_guid}</arg>
<arg>2r6a0oqyj4yPPPei42ibMm</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.096" endtime="20240424 19:56:29.096"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:29.096" endtime="20240424 19:56:29.106"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Location</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:29.106" endtime="20240424 19:56:29.111"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:29.111" endtime="20240424 19:56:29.111"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:29.111" level="INFO">${row_count} = 12</msg>
<status status="PASS" starttime="20240424 19:56:29.111" endtime="20240424 19:56:29.111"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'12'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.111" endtime="20240424 19:56:29.111"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${hierarchy}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:29.111" level="INFO">${hierarchy} = Hierarchy</msg>
<status status="PASS" starttime="20240424 19:56:29.111" endtime="20240424 19:56:29.111"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${hierarchy}</arg>
<arg>Hierarchy</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.111" endtime="20240424 19:56:29.111"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${top_elevation}</var>
<arg>1</arg>
<arg>4</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:29.127" level="INFO">${top_elevation} = Top Elevation</msg>
<status status="PASS" starttime="20240424 19:56:29.111" endtime="20240424 19:56:29.127"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${top_elevation}</arg>
<arg>Top Elevation</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.127" endtime="20240424 19:56:29.127"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${top_elevation}</var>
<arg>1</arg>
<arg>4</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:29.130" level="INFO">${top_elevation} = 3.70 m</msg>
<status status="PASS" starttime="20240424 19:56:29.127" endtime="20240424 19:56:29.130"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${top_elevation}</arg>
<arg>3.70 m</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.130" endtime="20240424 19:56:29.130"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${coordinates}</var>
<arg>1</arg>
<arg>8</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:29.133" level="INFO">${coordinates} = Coordinates</msg>
<status status="PASS" starttime="20240424 19:56:29.130" endtime="20240424 19:56:29.133"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${coordinates}</arg>
<arg>Coordinates</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.133" endtime="20240424 19:56:29.133"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${global_x}</var>
<arg>1</arg>
<arg>9</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:29.133" level="INFO">${global_x} = 0 mm</msg>
<status status="PASS" starttime="20240424 19:56:29.133" endtime="20240424 19:56:29.133"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${global_x}</arg>
<arg>0 mm</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.133" endtime="20240424 19:56:29.133"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:29.133" endtime="20240424 19:56:29.142"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Quantities</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:29.142" endtime="20240424 19:56:29.160"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:29.160" endtime="20240424 19:56:29.163"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:29.163" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:56:29.163" endtime="20240424 19:56:29.163"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'1'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.163" endtime="20240424 19:56:29.163"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${height}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:29.163" level="INFO">${height} = Height</msg>
<status status="PASS" starttime="20240424 19:56:29.163" endtime="20240424 19:56:29.163"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${height}</arg>
<arg>Height</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.163" endtime="20240424 19:56:29.163"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${height_value}</var>
<arg>1</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:29.172" level="INFO">${height_value} = 3.70 m</msg>
<status status="PASS" starttime="20240424 19:56:29.163" endtime="20240424 19:56:29.172"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${height_value}</arg>
<arg>3.70 m</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.172" endtime="20240424 19:56:29.172"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:29.172" endtime="20240424 19:56:29.174"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Relations</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:29.174" endtime="20240424 19:56:29.200"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:29.200" endtime="20240424 19:56:29.205"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:56:29.205" endtime="20240424 19:56:29.237"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:29.239" level="INFO">${row_count} = 48</msg>
<status status="PASS" starttime="20240424 19:56:29.237" endtime="20240424 19:56:29.239"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'48'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.239" endtime="20240424 19:56:29.239"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:29.239" endtime="20240424 19:56:29.278"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Classification</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:29.278" endtime="20240424 19:56:29.287"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:29.287" endtime="20240424 19:56:29.333"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:29.366" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:56:29.333" endtime="20240424 19:56:29.366"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'1'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.366" endtime="20240424 19:56:29.366"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${classification}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:29.368" level="INFO">${classification} = COBie</msg>
<status status="PASS" starttime="20240424 19:56:29.366" endtime="20240424 19:56:29.368"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${classification}</arg>
<arg>COBie</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.368" endtime="20240424 19:56:29.368"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${name}</var>
<arg>1</arg>
<arg>0</arg>
<arg>3</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:29.368" level="INFO">${name} = Floor</msg>
<status status="PASS" starttime="20240424 19:56:29.368" endtime="20240424 19:56:29.368"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${name}</arg>
<arg>Floor</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.368" endtime="20240424 19:56:29.368"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>1</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:29.368" endtime="20240424 19:56:29.377"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>BaseQuantities</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:29.377" endtime="20240424 19:56:29.396"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:29.397" endtime="20240424 19:56:29.397"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:29.397" level="INFO">${row_count} = 4</msg>
<status status="PASS" starttime="20240424 19:56:29.397" endtime="20240424 19:56:29.397"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'4'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.397" endtime="20240424 19:56:29.397"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${gross_area}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:29.397" level="INFO">${gross_area} = GrossFloorArea</msg>
<status status="PASS" starttime="20240424 19:56:29.397" endtime="20240424 19:56:29.397"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${gross_area}</arg>
<arg>GrossFloorArea</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.397" endtime="20240424 19:56:29.397"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${gross_area_value}</var>
<arg>1</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:29.410" level="INFO">${gross_area_value} = 561.55 m2</msg>
<status status="PASS" starttime="20240424 19:56:29.397" endtime="20240424 19:56:29.410"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${gross_area_value}</arg>
<arg>561.55 m2</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.410" endtime="20240424 19:56:29.410"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${net_height}</var>
<arg>1</arg>
<arg>3</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:29.414" level="INFO">${net_height} = 3.70 m</msg>
<status status="PASS" starttime="20240424 19:56:29.410" endtime="20240424 19:56:29.414"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${net_height}</arg>
<arg>3.70 m</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.414" endtime="20240424 19:56:29.415"/>
</kw>
<status status="PASS" starttime="20240424 19:56:28.976" endtime="20240424 19:56:29.415"/>
</kw>
<kw name="Then Verify Ground Floor Column Properties" library="info_view_step_definitions">
<kw name="Switch to Component Hierarchy" library="ModelTreeResource">
<doc>Opens Class tree in Component hierarchy ModelViewComponentHierarchyPanel</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:29.416" endtime="20240424 19:56:29.441"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>3</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:56:29.441" endtime="20240424 19:56:29.459"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${select_component_hierarchy}</var>
<arg>Toggle Button Should Be Selected</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Toggle Button Should Be Selected" library="SwingRobot">
<arg>3</arg>
<doc>Fails if toggle button is not selected.</doc>
<status status="PASS" starttime="20240424 19:56:29.459" endtime="20240424 19:56:29.469"/>
</kw>
<msg timestamp="20240424 19:56:29.469" level="INFO">${select_component_hierarchy} = True</msg>
<status status="PASS" starttime="20240424 19:56:29.459" endtime="20240424 19:56:29.469"/>
</kw>
<if>
<branch type="IF" condition="${select_component_hierarchy} == ${False}">
<kw name="Push Toggle Button" library="SwingRobot">
<arg>3</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:56:29.469" endtime="20240424 19:56:29.469"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:56:29.469" endtime="20240424 19:56:29.469"/>
</branch>
<status status="PASS" starttime="20240424 19:56:29.469" endtime="20240424 19:56:29.469"/>
</if>
<status status="PASS" starttime="20240424 19:56:29.415" endtime="20240424 19:56:29.469"/>
</kw>
<kw name="Set Window Size" library="SwingRobot">
<arg>Solibri Office - Solibri Building</arg>
<arg>1800</arg>
<arg>1500</arg>
<doc>Sets a window size.</doc>
<status status="PASS" starttime="20240424 19:56:29.469" endtime="20240424 19:56:29.528"/>
</kw>
<kw name="Get Window Size" library="SwingRobot">
<var>${size}</var>
<arg>identifier=Solibri Office - Solibri Building</arg>
<doc>Returns a list containing the width and the height of the window.</doc>
<msg timestamp="20240424 19:56:29.533" level="INFO">${size} = ['1044', '788']</msg>
<status status="PASS" starttime="20240424 19:56:29.528" endtime="20240424 19:56:29.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>message=${size}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 19:56:29.533" level="INFO">['1044', '788']</msg>
<status status="PASS" starttime="20240424 19:56:29.533" endtime="20240424 19:56:29.533"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:56:29.533" endtime="20240424 19:56:29.560"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>4</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:56:29.560" endtime="20240424 19:56:29.611"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>6</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:56:29.611" endtime="20240424 19:56:29.642"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:29.642" endtime="20240424 19:56:29.723"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Identification</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:29.723" endtime="20240424 19:56:29.816"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:29.816" endtime="20240424 19:56:29.857"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:29.860" level="INFO">${row_count} = 28</msg>
<status status="PASS" starttime="20240424 19:56:29.857" endtime="20240424 19:56:29.860"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'28'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.860" endtime="20240424 19:56:29.860"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${profile_type}</var>
<arg>1</arg>
<arg>7</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:29.864" level="INFO">${profile_type} = Circular</msg>
<status status="PASS" starttime="20240424 19:56:29.860" endtime="20240424 19:56:29.864"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${profile_type}</arg>
<arg>Circular</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.864" endtime="20240424 19:56:29.864"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${component_attributes_name}</var>
<arg>1</arg>
<arg>11</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:29.869" level="INFO">${component_attributes_name} = Column-11</msg>
<status status="PASS" starttime="20240424 19:56:29.864" endtime="20240424 19:56:29.869"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${component_attributes_name}</arg>
<arg>Column-11</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.869" endtime="20240424 19:56:29.869"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${component_attributes_guid}</var>
<arg>1</arg>
<arg>18</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:29.872" level="INFO">${component_attributes_guid} = 0_4_n6lvT5bh3lTxifK0cs</msg>
<status status="PASS" starttime="20240424 19:56:29.869" endtime="20240424 19:56:29.872"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${component_attributes_guid}</arg>
<arg>0_4_n6lvT5bh3lTxifK0cs</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:29.872" endtime="20240424 19:56:29.872"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:29.872" endtime="20240424 19:56:29.955"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Location</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:29.955" endtime="20240424 19:56:29.964"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:29.964" endtime="20240424 19:56:30.004"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:30.011" level="INFO">${row_count} = 15</msg>
<status status="PASS" starttime="20240424 19:56:30.004" endtime="20240424 19:56:30.011"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'15'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:30.011" endtime="20240424 19:56:30.011"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${top_elevation_value}</var>
<arg>1</arg>
<arg>6</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:30.011" level="INFO">${top_elevation_value} = 3.70 m</msg>
<status status="PASS" starttime="20240424 19:56:30.011" endtime="20240424 19:56:30.011"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${top_elevation_value}</arg>
<arg>3.70 m</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:30.011" endtime="20240424 19:56:30.011"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${global_x}</var>
<arg>1</arg>
<arg>12</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:30.011" level="INFO">${global_x} = 20.63 m</msg>
<status status="PASS" starttime="20240424 19:56:30.011" endtime="20240424 19:56:30.011"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${global_x}</arg>
<arg>20.63 m</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:30.026" endtime="20240424 19:56:30.026"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:30.026" endtime="20240424 19:56:30.026"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Quantities</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:30.026" endtime="20240424 19:56:30.042"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:30.042" endtime="20240424 19:56:30.042"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:30.042" level="INFO">${row_count} = 10</msg>
<status status="PASS" starttime="20240424 19:56:30.042" endtime="20240424 19:56:30.042"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'10'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:30.042" endtime="20240424 19:56:30.042"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${length_value}</var>
<arg>1</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:30.042" level="INFO">${length_value} = 3.70 m</msg>
<status status="PASS" starttime="20240424 19:56:30.042" endtime="20240424 19:56:30.042"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${length_value}</arg>
<arg>3.70 m</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:30.042" endtime="20240424 19:56:30.042"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${volume_value}</var>
<arg>1</arg>
<arg>6</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:30.060" level="INFO">${volume_value} = 0.11 m3</msg>
<status status="PASS" starttime="20240424 19:56:30.042" endtime="20240424 19:56:30.060"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${volume_value}</arg>
<arg>0.11 m3</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:30.060" endtime="20240424 19:56:30.060"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${bounding_box_width_value}</var>
<arg>1</arg>
<arg>9</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:30.063" level="INFO">${bounding_box_width_value} = 198 mm</msg>
<status status="PASS" starttime="20240424 19:56:30.060" endtime="20240424 19:56:30.063"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${bounding_box_width_value}</arg>
<arg>198 mm</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:30.063" endtime="20240424 19:56:30.063"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:30.063" endtime="20240424 19:56:30.063"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Material</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:30.063" endtime="20240424 19:56:30.084"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:30.084" endtime="20240424 19:56:30.084"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:30.084" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:56:30.084" endtime="20240424 19:56:30.084"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'1'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:30.084" endtime="20240424 19:56:30.084"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${material}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:30.084" level="INFO">${material} = C-4</msg>
<status status="PASS" starttime="20240424 19:56:30.084" endtime="20240424 19:56:30.084"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${material}</arg>
<arg>C-4</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:30.084" endtime="20240424 19:56:30.084"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:30.084" endtime="20240424 19:56:30.100"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Profile</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:30.100" endtime="20240424 19:56:30.100"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:30.100" endtime="20240424 19:56:30.117"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:30.122" level="INFO">${row_count} = 3</msg>
<status status="PASS" starttime="20240424 19:56:30.117" endtime="20240424 19:56:30.122"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'3'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:30.122" endtime="20240424 19:56:30.122"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${profile_type_value}</var>
<arg>1</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:56:30.126" level="INFO">${profile_type_value} = Circle Profile</msg>
<status status="PASS" starttime="20240424 19:56:30.122" endtime="20240424 19:56:30.126"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${profile_type_value}</arg>
<arg>Circle Profile</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:30.126" endtime="20240424 19:56:30.126"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:30.126" endtime="20240424 19:56:30.168"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Relations</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 19:56:30.168" endtime="20240424 19:56:30.214"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:56:30.214" endtime="20240424 19:56:30.218"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:56:30.274" level="INFO">${row_count} = 4</msg>
<status status="PASS" starttime="20240424 19:56:30.218" endtime="20240424 19:56:30.274"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'4'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 19:56:30.274" endtime="20240424 19:56:30.274"/>
</kw>
<kw name="Take Screenshot" library="ScreenCapLibrary">
<doc>Takes a screenshot in the specified format at library import and
embeds it into the log file (PNG by default).</doc>
<msg timestamp="20240424 19:56:30.352" level="INFO" html="true">&lt;a href="screenshot_7.png"&gt;&lt;img src="screenshot_7.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240424 19:56:30.274" endtime="20240424 19:56:30.352"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>3</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<msg timestamp="20240424 19:57:30.369" level="FAIL">org.netbeans.jemmy.TimeoutExpiredException: Scrolling</msg>
<status status="FAIL" starttime="20240424 19:56:30.352" endtime="20240424 19:57:30.369"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<status status="NOT RUN" starttime="20240424 19:57:30.369" endtime="20240424 19:57:30.369"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'5'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="NOT RUN" starttime="20240424 19:57:30.369" endtime="20240424 19:57:30.369"/>
</kw>
<kw name="Select Tab As Context" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab and sets it as the context.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="NOT RUN" starttime="20240424 19:57:30.369" endtime="20240424 19:57:30.369"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Classification</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="NOT RUN" starttime="20240424 19:57:30.369" endtime="20240424 19:57:30.369"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="NOT RUN" starttime="20240424 19:57:30.369" endtime="20240424 19:57:30.369"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<status status="NOT RUN" starttime="20240424 19:57:30.369" endtime="20240424 19:57:30.369"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'3'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="NOT RUN" starttime="20240424 19:57:30.369" endtime="20240424 19:57:30.369"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${classification_1}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<status status="NOT RUN" starttime="20240424 19:57:30.369" endtime="20240424 19:57:30.369"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${classification_1}</arg>
<arg>ARCHICAD Classification</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="NOT RUN" starttime="20240424 19:57:30.369" endtime="20240424 19:57:30.369"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${classification_2}</var>
<arg>1</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<status status="NOT RUN" starttime="20240424 19:57:30.369" endtime="20240424 19:57:30.369"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${classification_2}</arg>
<arg>Uniclass2</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="NOT RUN" starttime="20240424 19:57:30.369" endtime="20240424 19:57:30.369"/>
</kw>
<status status="FAIL" starttime="20240424 19:56:29.415" endtime="20240424 19:57:30.369"/>
</kw>
<kw name="Then Verify Ground Floor Door Properties" library="info_view_step_definitions">
<status status="NOT RUN" starttime="20240424 19:57:30.369" endtime="20240424 19:57:30.369"/>
</kw>
<kw name="Then Verify Ground Floor Slab Properties" library="info_view_step_definitions">
<status status="NOT RUN" starttime="20240424 19:57:30.369" endtime="20240424 19:57:30.369"/>
</kw>
<kw name="Then Verify Ground Floor Space Properties" library="info_view_step_definitions">
<status status="NOT RUN" starttime="20240424 19:57:30.369" endtime="20240424 19:57:30.369"/>
</kw>
<kw name="Then Verify Ground Floor Window Properties" library="info_view_step_definitions">
<status status="NOT RUN" starttime="20240424 19:57:30.369" endtime="20240424 19:57:30.369"/>
</kw>
<kw name="Then Verify Ground Floor Grid Properties" library="info_view_step_definitions">
<status status="NOT RUN" starttime="20240424 19:57:30.369" endtime="20240424 19:57:30.369"/>
</kw>
<kw name="Then Close Model without Saving">
<status status="NOT RUN" starttime="20240424 19:57:30.369" endtime="20240424 19:57:30.369"/>
</kw>
<status status="FAIL" starttime="20240424 19:56:19.684" endtime="20240424 19:57:30.369">org.netbeans.jemmy.TimeoutExpiredException: Scrolling</status>
</test>
<doc>Info view</doc>
<meta name="Feature">Info View</meta>
<meta name="Generated by">_gherkin2robotframework on 2023-08-05T23:30:35.611079_</meta>
<status status="FAIL" starttime="20240424 19:56:19.606" endtime="20240424 19:57:30.369"/>
</suite>
<suite id="s1-s14" name="14 Selection Basket View" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\14_selection_basket_view.robot">
<test id="s1-s14-t1" name="Verify Selection Basket view" line="10">
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:57:30.421" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:57:30.421" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:57:30 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:57:30.415" endtime="20240424 19:57:30.421"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:57:30.421" endtime="20240424 19:57:30.421"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:57:30.421" endtime="20240424 19:57:30.421"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:57:30.421" level="INFO">${context} = Solibri Office - Solibri Building</msg>
<status status="PASS" starttime="20240424 19:57:30.421" endtime="20240424 19:57:30.421"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:57:30.421" endtime="20240424 19:57:30.421"/>
</kw>
<status status="PASS" starttime="20240424 19:57:30.421" endtime="20240424 19:57:30.421"/>
</kw>
<status status="PASS" starttime="20240424 19:57:30.400" endtime="20240424 19:57:30.421"/>
</kw>
<kw name="And No Existing Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:57:30.421" endtime="20240424 19:57:30.421"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:57:30.421" endtime="20240424 19:57:30.421"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:57:30.434" endtime="20240424 19:57:30.544"/>
</kw>
<status status="PASS" starttime="20240424 19:57:30.421" endtime="20240424 19:57:30.544"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:57:30.548" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:57:30.544" endtime="20240424 19:57:30.548"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:57:35.554" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:57:35.550" endtime="20240424 19:57:35.554"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:57:40.555" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:57:40.555" endtime="20240424 19:57:40.555"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:57:45.562" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:57:45.558" endtime="20240424 19:57:45.562"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 19:57:50.567" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:57:50.563" endtime="20240424 19:57:50.567"/>
</kw>
<msg timestamp="20240424 19:57:50.567" level="FAIL">Keyword 'Label Should Be Enabled' failed after retrying 5 times. The last error was: Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 19:57:30.544" endtime="20240424 19:57:50.567"/>
</kw>
<msg timestamp="20240424 19:57:50.567" level="INFO">${model_open} = False</msg>
<status status="PASS" starttime="20240424 19:57:30.544" endtime="20240424 19:57:50.567"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:57:50.567" endtime="20240424 19:57:50.672"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:57:50.672" endtime="20240424 19:57:50.676"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:57:50.676" endtime="20240424 19:57:50.676"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:57:50.676" endtime="20240424 19:57:50.755"/>
</kw>
<status status="PASS" starttime="20240424 19:57:50.672" endtime="20240424 19:57:50.755"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:57:50.755" endtime="20240424 19:57:50.759"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:57:50.759" endtime="20240424 19:57:50.762"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:58:00.779" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:57:50.762" endtime="20240424 19:58:00.779"/>
</kw>
<msg timestamp="20240424 19:58:00.779" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:57:50.762" endtime="20240424 19:58:00.779"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:00.779" endtime="20240424 19:58:00.779"/>
</kw>
<msg timestamp="20240424 19:58:00.779" level="INFO">${check_if_save_asked} = True</msg>
<status status="PASS" starttime="20240424 19:58:00.779" endtime="20240424 19:58:00.779"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:58:00.779" endtime="20240424 19:58:00.779"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:58:00.779" endtime="20240424 19:58:00.805"/>
</kw>
<status status="PASS" starttime="20240424 19:58:00.779" endtime="20240424 19:58:00.805"/>
</kw>
<status status="PASS" starttime="20240424 19:58:00.779" endtime="20240424 19:58:00.805"/>
</branch>
<status status="PASS" starttime="20240424 19:58:00.779" endtime="20240424 19:58:00.805"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:58:00.805" endtime="20240424 19:58:00.805"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:58:00.805" endtime="20240424 19:58:00.805"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:58:00.805" endtime="20240424 19:58:00.805"/>
</branch>
<status status="PASS" starttime="20240424 19:58:00.805" endtime="20240424 19:58:00.805"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:00.805" endtime="20240424 19:58:00.985"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:58:00.996" endtime="20240424 19:58:01.017"/>
</kw>
<status status="PASS" starttime="20240424 19:58:00.987" endtime="20240424 19:58:01.017"/>
</kw>
<status status="PASS" starttime="20240424 19:57:50.567" endtime="20240424 19:58:01.017"/>
</kw>
<status status="PASS" starttime="20240424 19:57:50.567" endtime="20240424 19:58:01.017"/>
</branch>
<status status="PASS" starttime="20240424 19:57:50.567" endtime="20240424 19:58:01.017"/>
</if>
<status status="PASS" starttime="20240424 19:57:30.421" endtime="20240424 19:58:01.017"/>
</kw>
<kw name="Then IFC Model Is Open" library="selection_basket_view_step_definitions">
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${solibri_building_ifc}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:01.017" endtime="20240424 19:58:01.023"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:58:01.025" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:58:01.023" endtime="20240424 19:58:01.025"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:58:01.025" endtime="20240424 19:58:01.025"/>
</kw>
<status status="PASS" starttime="20240424 19:58:01.023" endtime="20240424 19:58:01.025"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:01.025" endtime="20240424 19:58:01.029"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:58:01.029" endtime="20240424 19:58:01.029"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:01.029" endtime="20240424 19:58:01.034"/>
</kw>
<status status="PASS" starttime="20240424 19:58:01.025" endtime="20240424 19:58:01.034"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:58:01.034" endtime="20240424 19:58:01.113"/>
</kw>
<status status="PASS" starttime="20240424 19:58:01.034" endtime="20240424 19:58:01.113"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:58:01.113" endtime="20240424 19:58:01.116"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:58:01.116" endtime="20240424 19:58:01.117"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:58:01.117" endtime="20240424 19:58:01.573"/>
</kw>
<status status="PASS" starttime="20240424 19:58:01.117" endtime="20240424 19:58:01.573"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:58:01.573" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:58:01.573" endtime="20240424 19:58:01.573"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:58:01.573" endtime="20240424 19:58:01.573"/>
</return>
<msg timestamp="20240424 19:58:01.573" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:58:01.573" endtime="20240424 19:58:01.573"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:58:01.573" endtime="20240424 19:58:01.658"/>
</kw>
<status status="PASS" starttime="20240424 19:58:01.573" endtime="20240424 19:58:01.658"/>
</kw>
<status status="PASS" starttime="20240424 19:58:01.573" endtime="20240424 19:58:01.658"/>
</branch>
<status status="PASS" starttime="20240424 19:58:01.573" endtime="20240424 19:58:01.658"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:58:01.658" endtime="20240424 19:58:01.658"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:58:01.658" endtime="20240424 19:58:01.658"/>
</branch>
<status status="PASS" starttime="20240424 19:58:01.658" endtime="20240424 19:58:01.658"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:58:01.658" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\ifc</msg>
<msg timestamp="20240424 19:58:01.658" level="INFO">${filename} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:58:01.658" endtime="20240424 19:58:01.658"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:58:01.658" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 19:58:01.658" level="INFO">${ext} = ifc</msg>
<status status="PASS" starttime="20240424 19:58:01.658" endtime="20240424 19:58:01.658"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<status status="NOT RUN" starttime="20240424 19:58:01.658" endtime="20240424 19:58:01.658"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:58:01.658" endtime="20240424 19:58:01.658"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:58:01.658" endtime="20240424 19:58:01.771"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:01.771" endtime="20240424 19:58:01.801"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:58:01.801" endtime="20240424 19:58:01.804"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:01.804" endtime="20240424 19:58:01.807"/>
</kw>
<status status="PASS" starttime="20240424 19:58:01.771" endtime="20240424 19:58:01.807"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:58:03.803" level="INFO">2024-04-24 19:58:02.385+0000 [Thread-1001] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 0 ms.
2024-04-24 19:58:02.385+0000 [Thread-1001] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 708 ms (using 1 threads)
2024-04-24 19:58:02.416+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 31 ms
2024-04-24 19:58:03.380+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 995 ms.</msg>
<status status="PASS" starttime="20240424 19:58:01.807" endtime="20240424 19:58:03.803"/>
</kw>
<status status="PASS" starttime="20240424 19:58:01.807" endtime="20240424 19:58:03.803"/>
</kw>
<msg timestamp="20240424 19:58:03.803" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:58:01.807" endtime="20240424 19:58:03.803"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:58:03.804" endtime="20240424 19:58:04.006"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:58:04.007" endtime="20240424 19:58:04.336"/>
</kw>
<status status="PASS" starttime="20240424 19:58:03.804" endtime="20240424 19:58:04.336"/>
</branch>
<status status="PASS" starttime="20240424 19:58:03.803" endtime="20240424 19:58:04.336"/>
</if>
<status status="PASS" starttime="20240424 19:58:01.658" endtime="20240424 19:58:04.336"/>
</kw>
<status status="PASS" starttime="20240424 19:58:01.658" endtime="20240424 19:58:04.336"/>
</branch>
<status status="PASS" starttime="20240424 19:58:01.658" endtime="20240424 19:58:04.336"/>
</if>
<status status="PASS" starttime="20240424 19:58:01.017" endtime="20240424 19:58:04.336"/>
</kw>
<status status="PASS" starttime="20240424 19:58:01.017" endtime="20240424 19:58:04.336"/>
</kw>
<kw name="Then Verify Selection Basket" library="selection_basket_view_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${ITO_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:04.336" endtime="20240424 19:58:04.336"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:58:04.336" endtime="20240424 19:58:04.336"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:04.336" endtime="20240424 19:58:04.564"/>
</kw>
<status status="PASS" starttime="20240424 19:58:04.336" endtime="20240424 19:58:04.564"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<msg timestamp="20240424 19:58:04.728" level="INFO">Closed dialog 'To-Do'.</msg>
<status status="PASS" starttime="20240424 19:58:04.564" endtime="20240424 19:58:04.728"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Selection Basket_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:58:04.728" endtime="20240424 19:58:04.732"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>No Selection Sets</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:58:04.732" endtime="20240424 19:58:04.732"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Save</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:58:04.732" endtime="20240424 19:58:04.738"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Save as...</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:58:04.738" endtime="20240424 19:58:04.738"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Remove from Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:58:04.738" endtime="20240424 19:58:04.743"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 19:58:04.743" endtime="20240424 19:58:04.743"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Empty Selection Basket</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:58:04.743" endtime="20240424 19:58:04.748"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:04.748" endtime="20240424 19:58:04.748"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>2</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:58:04.752" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:58:04.748" endtime="20240424 19:58:04.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 19:58:04.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:58:04.752" endtime="20240424 19:58:04.752"/>
</kw>
<status status="PASS" starttime="20240424 19:58:04.336" endtime="20240424 19:58:04.752"/>
</kw>
<kw name="Then Add Components To Selection Basket and Verify" library="selection_basket_view_step_definitions">
<kw name="Select Context" library="SwingRobot">
<arg>Model Tree_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:58:04.752" endtime="20240424 19:58:04.755"/>
</kw>
<kw name="Switch to Component Hierarchy" library="ModelTreeResource">
<doc>Opens Class tree in Component hierarchy ModelViewComponentHierarchyPanel</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:04.755" endtime="20240424 19:58:04.755"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>3</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:58:04.755" endtime="20240424 19:58:04.764"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${select_component_hierarchy}</var>
<arg>Toggle Button Should Be Selected</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Toggle Button Should Be Selected" library="SwingRobot">
<arg>3</arg>
<doc>Fails if toggle button is not selected.</doc>
<status status="PASS" starttime="20240424 19:58:04.764" endtime="20240424 19:58:04.768"/>
</kw>
<msg timestamp="20240424 19:58:04.768" level="INFO">${select_component_hierarchy} = True</msg>
<status status="PASS" starttime="20240424 19:58:04.764" endtime="20240424 19:58:04.768"/>
</kw>
<if>
<branch type="IF" condition="${select_component_hierarchy} == ${False}">
<kw name="Push Toggle Button" library="SwingRobot">
<arg>3</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:58:04.768" endtime="20240424 19:58:04.768"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:58:04.768" endtime="20240424 19:58:04.768"/>
</branch>
<status status="PASS" starttime="20240424 19:58:04.768" endtime="20240424 19:58:04.768"/>
</if>
<status status="PASS" starttime="20240424 19:58:04.755" endtime="20240424 19:58:04.768"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:04.768" endtime="20240424 19:58:04.768"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:58:04.768" endtime="20240424 19:58:04.798"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Model Tree_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:58:04.798" endtime="20240424 19:58:04.801"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:58:04.801" endtime="20240424 19:58:04.834"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:04.834" endtime="20240424 19:58:04.902"/>
</kw>
<kw name="Label Should Exist" library="SwingRobot">
<arg>Selected: 38</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 19:58:04.902" endtime="20240424 19:58:04.910"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${ITO_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:04.910" endtime="20240424 19:58:04.917"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:58:04.917" endtime="20240424 19:58:04.918"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:04.918" endtime="20240424 19:58:04.921"/>
</kw>
<status status="PASS" starttime="20240424 19:58:04.910" endtime="20240424 19:58:04.921"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Selection Basket_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:58:04.921" endtime="20240424 19:58:04.925"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>1</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:58:04.925" endtime="20240424 19:58:04.998"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:04.998" endtime="20240424 19:58:04.998"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>2</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:58:04.998" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:58:04.998" endtime="20240424 19:58:04.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 19:58:04.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:58:04.998" endtime="20240424 19:58:04.998"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>2</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:58:04.998" endtime="20240424 19:58:05.025"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>2</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:58:05.025" level="INFO">${row_count} = 8</msg>
<status status="PASS" starttime="20240424 19:58:05.025" endtime="20240424 19:58:05.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>8</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 19:58:05.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:58:05.025" endtime="20240424 19:58:05.025"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Selection Basket_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:58:05.025" endtime="20240424 19:58:05.025"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:58:05.025" endtime="20240424 19:58:05.025"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:05.025" endtime="20240424 19:58:05.044"/>
</kw>
<kw name="Label Should Exist" library="SwingRobot">
<arg>Selected: 38</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 19:58:05.044" endtime="20240424 19:58:05.047"/>
</kw>
<status status="PASS" starttime="20240424 19:58:04.752" endtime="20240424 19:58:05.047"/>
</kw>
<kw name="Then Save Selection Basket" library="selection_basket_view_step_definitions">
<kw name="Select Context" library="SwingRobot">
<arg>Selection Basket_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:58:05.047" endtime="20240424 19:58:05.049"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Push Button</arg>
<arg>Save</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:58:05.049" endtime="20240424 19:58:05.051"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Selection Set</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:58:05.051" endtime="20240424 19:58:05.236"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${selection_basket_name}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 19:58:05.240" level="INFO">${selection_basket_name} = Selection set 1</msg>
<status status="PASS" starttime="20240424 19:58:05.236" endtime="20240424 19:58:05.240"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${selection_basket_name}</arg>
<arg>Selection set 1</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 19:58:05.240" endtime="20240424 19:58:05.240"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:58:05.240" endtime="20240424 19:58:05.243"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 19:58:05.243" endtime="20240424 19:58:05.248"/>
</kw>
<kw name="Clear Text Field" library="SwingRobot">
<arg>0</arg>
<doc>Clears contents of text component (e.g. text field, password field, text area).</doc>
<status status="PASS" starttime="20240424 19:58:05.248" endtime="20240424 19:58:05.302"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>Test Selection Basket</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 19:58:05.302" endtime="20240424 19:58:05.322"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:58:05.322" endtime="20240424 19:58:05.340"/>
</kw>
<status status="PASS" starttime="20240424 19:58:05.047" endtime="20240424 19:58:05.340"/>
</kw>
<kw name="Then Save and Close Model" library="ModelHandlingResource">
<kw name="Save Model" library="ModelHandlingResource">
<arg>${button_save_title}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:05.340" endtime="20240424 19:58:05.340"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:58:05.340" endtime="20240424 19:58:05.441"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:05.441" endtime="20240424 19:58:05.445"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:58:05.445" endtime="20240424 19:58:05.445"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:05.445" endtime="20240424 19:58:05.535"/>
</kw>
<status status="PASS" starttime="20240424 19:58:05.441" endtime="20240424 19:58:05.535"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:58:05.535" endtime="20240424 19:58:05.550"/>
</kw>
<status status="PASS" starttime="20240424 19:58:05.535" endtime="20240424 19:58:05.550"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:58:05.550" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:58:05.550" endtime="20240424 19:58:05.550"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:58:05.550" endtime="20240424 19:58:05.550"/>
</return>
<msg timestamp="20240424 19:58:05.550" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20240424 19:58:05.550" endtime="20240424 19:58:05.550"/>
</kw>
<if>
<branch type="IF" condition="'${os}' == 'Windows'">
<kw name="Check If File Already Exists" library="ModelHandlingResource">
<var>${file_exists}</var>
<arg>${test_files_folder}\\Solibri Building.smc</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${file_exist}</var>
<arg>File Should Exist</arg>
<arg>${filename_to_check}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${filename_to_check}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20240424 19:58:05.550" level="INFO" html="true">File '&lt;a href="file://C:\Users\runneradmin\Documents\RFTestFiles\Solibri Building.smc"&gt;C:\Users\runneradmin\Documents\RFTestFiles\Solibri Building.smc&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20240424 19:58:05.550" endtime="20240424 19:58:05.550"/>
</kw>
<msg timestamp="20240424 19:58:05.550" level="INFO">${file_exist} = True</msg>
<status status="PASS" starttime="20240424 19:58:05.550" endtime="20240424 19:58:05.550"/>
</kw>
<return>
<value>${file_exist}</value>
<status status="PASS" starttime="20240424 19:58:05.550" endtime="20240424 19:58:05.550"/>
</return>
<msg timestamp="20240424 19:58:05.550" level="INFO">${file_exists} = True</msg>
<status status="PASS" starttime="20240424 19:58:05.550" endtime="20240424 19:58:05.550"/>
</kw>
<if>
<branch type="IF" condition="${file_exists}">
<kw name="Over Write File" library="ModelHandlingResource">
<arg>${test_files_folder}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:05.550" endtime="20240424 19:58:05.555"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>Save Model as</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:58:05.555" endtime="20240424 19:58:05.555"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>2</arg>
<arg>Select Dialog</arg>
<arg>Save As</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:58:05.555" endtime="20240424 19:58:06.857"/>
</kw>
<status status="PASS" starttime="20240424 19:58:05.555" endtime="20240424 19:58:06.857"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${folder_to_save}\\Solibri Building.smc</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:58:06.857" endtime="20240424 19:58:07.005"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>2</arg>
<arg>Select Dialog</arg>
<arg>Confirm Save As</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Confirm Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:58:07.005" endtime="20240424 19:58:07.011"/>
</kw>
<status status="PASS" starttime="20240424 19:58:07.005" endtime="20240424 19:58:07.011"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Yes</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:58:07.011" endtime="20240424 19:58:07.052"/>
</kw>
<status status="PASS" starttime="20240424 19:58:05.550" endtime="20240424 19:58:07.052"/>
</kw>
<status status="PASS" starttime="20240424 19:58:05.550" endtime="20240424 19:58:07.052"/>
</branch>
<branch type="ELSE">
<kw name="Click On Component" library="SwingRobot">
<arg>${save_button}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="NOT RUN" starttime="20240424 19:58:07.052" endtime="20240424 19:58:07.052"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>2</arg>
<arg>Select Dialog</arg>
<arg>Save As</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20240424 19:58:07.052" endtime="20240424 19:58:07.052"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${test_files_folder}\\Solibri Building.smc</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="NOT RUN" starttime="20240424 19:58:07.052" endtime="20240424 19:58:07.052"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:58:07.052" endtime="20240424 19:58:07.052"/>
</branch>
<status status="PASS" starttime="20240424 19:58:05.550" endtime="20240424 19:58:07.052"/>
</if>
<status status="PASS" starttime="20240424 19:58:05.550" endtime="20240424 19:58:07.052"/>
</branch>
<status status="PASS" starttime="20240424 19:58:05.550" endtime="20240424 19:58:07.052"/>
</if>
<if>
<branch type="IF" condition="'${os}' == 'Darwin'">
<kw name="Get Length" library="BuiltIn">
<var>${length}</var>
<arg>${test_files_folder}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20240424 19:58:07.052" endtime="20240424 19:58:07.052"/>
</kw>
<if>
<branch type="IF" condition="${length} &gt; 0">
<kw name="Navigate To Folder" library="ModelHandlingResource">
<arg>${test_files_folder}</arg>
<tag>mac</tag>
<status status="NOT RUN" starttime="20240424 19:58:07.052" endtime="20240424 19:58:07.052"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:58:07.052" endtime="20240424 19:58:07.052"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:58:07.052" endtime="20240424 19:58:07.052"/>
</if>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${fileName}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<status status="NOT RUN" starttime="20240424 19:58:07.052" endtime="20240424 19:58:07.052"/>
</kw>
<kw name="Check If File Already Exists" library="ModelHandlingResource">
<var>${file_exists}</var>
<arg>${test_files_folder}/${fileName}</arg>
<status status="NOT RUN" starttime="20240424 19:58:07.052" endtime="20240424 19:58:07.052"/>
</kw>
<if>
<branch type="IF" condition="${file_exists}">
<kw name="Over Write File" library="ModelHandlingResource">
<arg>${test_files_folder}</arg>
<status status="NOT RUN" starttime="20240424 19:58:07.052" endtime="20240424 19:58:07.052"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:58:07.052" endtime="20240424 19:58:07.060"/>
</branch>
<branch type="ELSE">
<kw name="Click On Component" library="SwingRobot">
<arg>${save_button}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="NOT RUN" starttime="20240424 19:58:07.060" endtime="20240424 19:58:07.061"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:58:07.061" endtime="20240424 19:58:07.061"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Save As</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:58:07.061" endtime="20240424 19:58:07.061"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:58:07.060" endtime="20240424 19:58:07.062"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:58:07.052" endtime="20240424 19:58:07.062"/>
</if>
<status status="NOT RUN" starttime="20240424 19:58:07.052" endtime="20240424 19:58:07.062"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.052" endtime="20240424 19:58:07.062"/>
</if>
<kw name="Wait For Project To Save" library="ModelHandlingResource">
<kw name="Log To Console" library="BuiltIn">
<arg>Waiting For Project To Save</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:58:07.063" endtime="20240424 19:58:07.064"/>
</kw>
<kw name="Wait For Saving Progress To Complete" library="ModelHandlingResource">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:07.129" endtime="20240424 19:58:07.178"/>
</kw>
<kw name="List Components In Context" library="SwingRobot">
<arg>formatted</arg>
<doc>Prints components (their types and their internal names) from the selected context.</doc>
<msg timestamp="20240424 19:58:07.340" level="INFO">Level: 0 Component: com.solibri.saf.core.ApplicationFrame Index: 0 Name: frame0
    Level: 1 Component: javax.swing.JRootPane Index: 0 Name: null
       Level: 2 Component: javax.swing.JPanel Index: 0 Name: null.glassPane
       Level: 2 Component: javax.swing.JLayeredPane Index: 0 Name: null.layeredPane
          Level: 3 Component: com.solibri.modelchecker.ui.SmcPerspectivePanel Index: 1 Name: null
             Level: 4 Component: javax.swing.JPanel Index: 2 Name: null
                Level: 5 Component: javax.swing.JPanel Index: 3 Name: null
                   Level: 6 Component: com.solibri.saf.plugins.java3dplugin.actions.ThreeDViewToolbar Index: 4 Name: null
                      Level: 7 Component: com.solibri.saf.plugins.java3dplugin.actions.ThreeDViewToolbar$ToolbarWithThemeIconSize Index: null Name: 3D
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 0 Name: Undo
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 1 Name: Redo
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 2 Name: Spin
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 3 Name: dropDownButton
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 4 Name: Info
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 5 Name: dropDownButton
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 6 Name: Show All
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 7 Name: Show Unselected Transparent
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 8 Name: Show Selected
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 9 Name: Paint Visible With Current Color
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 10 Name: dropDownButton
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 11 Name: Show / Hide Space
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 12 Name: dropDownButton
                         Level: 8 Component: com.solibri.saf.plugins.java3dplugin.actions.FloorsVisibilityPopupMenuButton Index: 13 Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 14 Name: Zoom Extents
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 15 Name: Zoom In
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 16 Name: Zoom Out
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 17 Name: Zoom Selected
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 18 Name: Top Front Right
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 19 Name: dropDownButton
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 20 Name: Change Camera Projection
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$ToolBarToggleButton Index: 0 Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$ToolBarToggleButton Index: 1 Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 21 Name: null
                      Level: 7 Component: com.solibri.saf.core.ui.SearchField Index: 5 Name: null
                         Level: 8 Component: javax.swing.JTextField Index: 0 Name: null
                         Level: 8 Component: javax.swing.JButton Index: 22 Name: null
             Level: 4 Component: com.solibri.saf.core.ui.SafPanel Index: 6 Name: null
                Level: 5 Component: com.solibri.saf.core.ui.ViewSplitPane Index: 7 Name: null
                   Level: 6 Component: SMC_FILE Index: 8 Name: null
                      Level: 7 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel Index: 9 Name: FilePanel
                         Level: 8 Component: javax.swing.JPanel Index: 10 Name: null
                         Level: 8 Component: javax.swing.JToolBar Index: null Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$TransparentGradientPanel Index: 11 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 0 Name: Open Models
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 1 Name: Add Models
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 2 Name: Update Models
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 3 Name: Save Model
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 4 Name: Save Model as
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 5 Name: Security Settings
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 6 Name: Close
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 12 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 13 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 7 Name: Recent
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 8 Name: Integrations
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 9 Name: Roles
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 10 Name: Solution Center
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 11 Name: Settings
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 12 Name: Help
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 14 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 15 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 13 Name: Ruleset Manager
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 16 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 17 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 14 Name: Exit
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 18 Name: null
                         Level: 8 Component: com.solibri.saf.core.ui.SafPanel Index: 19 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.RecentPanel Index: 20 Name: RECENT
                               Level: 10 Component: com.solibri.saf.core.ui.ViewSplitPane Index: 21 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 22 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 15 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 0 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 0 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 23 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 24 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 1 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 25 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 26 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 0 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 0 Name: SafTable
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 0 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 1 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ViewSplitPane$Divider Index: 23 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 24 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 16 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 1 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 2 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 27 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 28 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 3 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 29 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 30 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 2 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 1 Name: SafTable
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 1 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 3 Name: null
                            Level: 9 Component: javax.swing.JPanel Index: 25 Name: REMOTE INTEGRATIONS
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 26 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 27 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 17 Name: null
                                     Level: 12 Component: javax.swing.JTextArea Index: 1 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 28 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 18 Name: null
                                     Level: 12 Component: com.solibri.saf.core.opencdedocuments.ConnectedServerLabel Index: 19 Name: null
                                     Level: 12 Component: javax.swing.JButton Index: 31 Name: null
                                     Level: 12 Component: javax.swing.JButton Index: 32 Name: null
                                     Level: 12 Component: javax.swing.JButton Index: 33 Name: null
                                     Level: 12 Component: com.solibri.saf.core.ui.SafPanel Index: 29 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 30 Name: null
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 31 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 20 Name: null
                                  Level: 11 Component: com.solibri.sae.ui.RoundedPanel Index: 32 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 2 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 4 Name: null
                                           Level: 14 Component: javax.swing.JPanel Index: 33 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 34 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 35 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 21 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 22 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 23 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 2 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 36 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 2 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 24 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 25 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 37 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 38 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 26 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 27 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 28 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 3 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 39 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 3 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 29 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 30 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 40 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 41 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 31 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 32 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 33 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 4 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 42 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 4 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 34 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 35 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 43 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 44 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 36 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 37 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 38 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 5 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 45 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 5 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 39 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 40 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 4 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 34 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 35 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 5 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 36 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 37 Name: null
                            Level: 9 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel Index: 46 Name: ROLES
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 47 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 41 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 42 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 43 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 44 Name: null
                                  Level: 11 Component: javax.swing.JTextField Index: 6 Name: roleNameText
                                  Level: 11 Component: com.solibri.saf.core.ui.HtmlEditorPanel Index: 48 Name: null
                                     Level: 12 Component: com.solibri.saf.core.DefaultViewToolBar Index: null Name: 
                                        Level: 13 Component: com.solibri.sae.ui.ToolBarButton Index: 38 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 3 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 5 Name: null
                                           Level: 14 Component: javax.swing.JTextPane Index: 7 Name: roleDescription
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 6 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 39 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 40 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 7 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 41 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 42 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$FileChooserPanel Index: 49 Name: null
                                     Level: 12 Component: javax.swing.JTextField Index: 8 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 43 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$LayoutFileChooserPanel Index: 50 Name: null
                                     Level: 12 Component: javax.swing.JTextField Index: 9 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 44 Name: null
                                  Level: 11 Component: com.solibri.sae.ui.JDefaultButton Index: 45 Name: null
                                  Level: 11 Component: com.solibri.sae.ui.ToolBarButton Index: 46 Name: Remove Default Layout Set
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 51 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.ResourceTablePanel Index: 52 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 45 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 4 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 8 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 47 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 48 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 9 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 49 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 50 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 6 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 2 Name: RULESETS
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 2 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 7 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 51 Name: Add Rulesets...
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 52 Name: Remove Rulesets
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.ResourceTablePanel Index: 53 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 46 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 5 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 10 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 53 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 54 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 11 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 55 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 56 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 8 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 3 Name: CLASSIFICATIONS
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 3 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 9 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 57 Name: Add Classifications...
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 58 Name: Remove Classifications
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.ResourceTablePanel Index: 54 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 47 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 6 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 12 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 59 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 60 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 13 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 61 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 62 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 10 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 4 Name: ITOS
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 4 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 11 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 63 Name: Add Information Takeoff Definitions...
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 64 Name: Remove Information Takeoff Definitions
                               Level: 10 Component: javax.swing.JSeparator Index: null Name: null
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 55 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$NamedActionButton Index: 65 Name: Save
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$NamedActionButton Index: 66 Name: Save As
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$NamedActionButton Index: 67 Name: Revert
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.SolutionCenterPanel Index: 56 Name: Solibri Solution Center
                               Level: 10 Component: javax.swing.JScrollPane Index: 7 Name: null
                                  Level: 11 Component: javax.swing.JViewport Index: 12 Name: null
                                     Level: 12 Component: javax.swing.JPanel Index: 57 Name: null
                                        Level: 13 Component: com.solibri.saf.core.ui.AntialisedLabel Index: 48 Name: null
                                        Level: 13 Component: com.solibri.saf.core.ui.AntialisedLabel Index: 49 Name: null
                                        Level: 13 Component: javax.swing.JPanel Index: 58 Name: null
                                        Level: 13 Component: javax.swing.JPanel Index: 59 Name: null
                                  Level: 11 Component: javax.swing.JScrollPane$ScrollBar Index: 14 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 68 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 69 Name: null
                                  Level: 11 Component: javax.swing.JScrollPane$ScrollBar Index: 15 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 70 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 71 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 60 Name: null
                                  Level: 11 Component: javax.swing.JTextPane Index: 10 Name: null
                                  Level: 11 Component: javax.swing.JButton Index: 72 Name: null
                                  Level: 11 Component: javax.swing.JPanel Index: 61 Name: null
                                     Level: 12 Component: javax.swing.JTextPane Index: 11 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 62 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.AntialisedLabel Index: 50 Name: null
                                  Level: 11 Component: javax.swing.JProgressBar Index: null Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.SettingsPanel Index: 63 Name: SETTINGS
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 51 Name: Layouts
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 52 Name: General
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 53 Name: Units
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 54 Name: Proxy Server Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 55 Name: Report Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 56 Name: Discipline and Color Map...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 57 Name: Checking...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 58 Name: Info...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 59 Name: IFC Import Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 60 Name: Presentation...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 61 Name: 3D...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 62 Name: Dimension...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 63 Name: Markup...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 64 Name: Sectioning...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 65 Name: Footprints...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 66 Name: Navigation Map...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 67 Name: DWG Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 68 Name: Hyperlink Templates...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 69 Name: BCF Live Connector...
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.HelpPanel Index: 64 Name: HELP
                               Level: 10 Component: javax.swing.JPanel Index: 65 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 70 Name: Help
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 71 Name: &lt;html&gt;&lt;u&gt;Support&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 72 Name: &lt;html&gt;&lt;u&gt;Feedback&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 73 Name: &lt;html&gt;&lt;u&gt;Tutorials&lt;/u&gt;
                                  Level: 11 Component: javax.swing.JSeparator Index: null Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 74 Name: &lt;html&gt;&lt;u&gt;Solibri Solution Center&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 75 Name: &lt;html&gt;&lt;u&gt;Solibri&lt;/u&gt;
                                  Level: 11 Component: javax.swing.JSeparator Index: null Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 76 Name: &lt;html&gt;&lt;u&gt;Check for Updates&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 77 Name: License Key...
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 78 Name: Borrow License...
                                  Level: 11 Component: javax.swing.JSeparator Index: null Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 79 Name: License Agreement...
                               Level: 10 Component: com.solibri.modelchecker.plugins.fileplugin.ui.InfoPanel Index: 66 Name: INFO
             Level: 4 Component: com.solibri.modelchecker.core.SmcPerspective$1 Index: null Name: Searchbar
                Level: 5 Component: com.solibri.modelchecker.core.SmcPerspective$ToDoToolBarButton Index: 73 Name: null
                Level: 5 Component: com.solibri.sae.ui.ToolBarButton Index: 74 Name: VIEWS
                Level: 5 Component: javax.swing.JButton Index: 75 Name: null
             Level: 4 Component: javax.swing.JPanel Index: 67 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 80 Name: null
                Level: 5 Component: javax.swing.JPanel Index: 68 Name: progressPanel
                   Level: 6 Component: javax.swing.JPanel Index: 69 Name: progressBarAndLabelPanel
                      Level: 7 Component: javax.swing.JProgressBar Index: null Name: thebar
                      Level: 7 Component: javax.swing.JLabel Index: 81 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 82 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 83 Name: Task
                Level: 5 Component: javax.swing.JLabel Index: 84 Name: null
                Level: 5 Component: javax.swing.JPanel Index: 70 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 85 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 86 Name: Selected
                Level: 5 Component: javax.swing.JLabel Index: 87 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 88 Name: SlideTrackingId
                Level: 5 Component: javax.swing.JLabel Index: 89 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 90 Name: SlideStatus
                Level: 5 Component: javax.swing.JLabel Index: 91 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 92 Name: Slide
                Level: 5 Component: javax.swing.JLabel Index: 93 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 94 Name: Coordinates
                Level: 5 Component: javax.swing.JLabel Index: 95 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 96 Name: Location
             Level: 4 Component: javax.swing.JPanel Index: 71 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 97 Name: null
             Level: 4 Component: javax.swing.JToolBar Index: null Name: Solibri Office
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 98 Name: FILE
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 99 Name: MODEL
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 100 Name: CHECKING
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 101 Name: COMMUNICATION
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 102 Name: INFORMATION TAKEOFF
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 103 Name: BCF LIVE CONNECTOR
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 104 Name: SCORE
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 105 Name: AddLayoutButton
          Level: 3 Component: com.formdev.flatlaf.ui.FlatTitlePane Index: null Name: null
             Level: 4 Component: javax.swing.JPanel Index: 72 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 106 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$2 Index: null Name: null
             Level: 4 Component: com.formdev.flatlaf.ui.FlatTitlePane$1 Index: 107 Name: null
             Level: 4 Component: com.formdev.flatlaf.ui.FlatTitlePane$4 Index: 73 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 76 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 77 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 78 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 79 Name: null</msg>
<status status="PASS" starttime="20240424 19:58:07.178" endtime="20240424 19:58:07.340"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${OS}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:58:07.340" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:58:07.340" endtime="20240424 19:58:07.340"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:58:07.340" endtime="20240424 19:58:07.340"/>
</return>
<msg timestamp="20240424 19:58:07.340" level="INFO">${OS} = Windows</msg>
<status status="PASS" starttime="20240424 19:58:07.340" endtime="20240424 19:58:07.340"/>
</kw>
<if>
<branch type="IF" condition="'${OS}' == 'Windows'">
<while condition="${True}">
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.340" endtime="20240424 19:58:07.387"/>
</kw>
<msg timestamp="20240424 19:58:07.387" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.340" endtime="20240424 19:58:07.387"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.387" endtime="20240424 19:58:07.387"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.387" endtime="20240424 19:58:07.387"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.387" endtime="20240424 19:58:07.387"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.340" endtime="20240424 19:58:07.387"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.387" endtime="20240424 19:58:07.400"/>
</kw>
<msg timestamp="20240424 19:58:07.400" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.387" endtime="20240424 19:58:07.400"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.400" endtime="20240424 19:58:07.400"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.400" endtime="20240424 19:58:07.400"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.400" endtime="20240424 19:58:07.400"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.387" endtime="20240424 19:58:07.400"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.400" endtime="20240424 19:58:07.402"/>
</kw>
<msg timestamp="20240424 19:58:07.402" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.400" endtime="20240424 19:58:07.402"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.402" endtime="20240424 19:58:07.402"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.402" endtime="20240424 19:58:07.402"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.402" endtime="20240424 19:58:07.402"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.400" endtime="20240424 19:58:07.402"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.402" endtime="20240424 19:58:07.402"/>
</kw>
<msg timestamp="20240424 19:58:07.402" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.402" endtime="20240424 19:58:07.402"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.402" endtime="20240424 19:58:07.402"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.402" endtime="20240424 19:58:07.402"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.402" endtime="20240424 19:58:07.402"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.402" endtime="20240424 19:58:07.402"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.402" endtime="20240424 19:58:07.409"/>
</kw>
<msg timestamp="20240424 19:58:07.409" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.402" endtime="20240424 19:58:07.409"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.409" endtime="20240424 19:58:07.409"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.409" endtime="20240424 19:58:07.409"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.409" endtime="20240424 19:58:07.409"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.402" endtime="20240424 19:58:07.409"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.409" endtime="20240424 19:58:07.414"/>
</kw>
<msg timestamp="20240424 19:58:07.414" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.409" endtime="20240424 19:58:07.414"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.414" endtime="20240424 19:58:07.414"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.414" endtime="20240424 19:58:07.414"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.414" endtime="20240424 19:58:07.414"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.409" endtime="20240424 19:58:07.414"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.414" endtime="20240424 19:58:07.416"/>
</kw>
<msg timestamp="20240424 19:58:07.416" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.414" endtime="20240424 19:58:07.416"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.416" endtime="20240424 19:58:07.416"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.416" endtime="20240424 19:58:07.416"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.416" endtime="20240424 19:58:07.416"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.414" endtime="20240424 19:58:07.416"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.416" endtime="20240424 19:58:07.420"/>
</kw>
<msg timestamp="20240424 19:58:07.420" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.416" endtime="20240424 19:58:07.420"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.420" endtime="20240424 19:58:07.420"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.420" endtime="20240424 19:58:07.420"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.420" endtime="20240424 19:58:07.420"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.416" endtime="20240424 19:58:07.420"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.420" endtime="20240424 19:58:07.423"/>
</kw>
<msg timestamp="20240424 19:58:07.423" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.420" endtime="20240424 19:58:07.423"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.423" endtime="20240424 19:58:07.423"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.423" endtime="20240424 19:58:07.423"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.423" endtime="20240424 19:58:07.423"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.420" endtime="20240424 19:58:07.423"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.423" endtime="20240424 19:58:07.463"/>
</kw>
<msg timestamp="20240424 19:58:07.463" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.423" endtime="20240424 19:58:07.463"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.463" endtime="20240424 19:58:07.463"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.463" endtime="20240424 19:58:07.463"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.463" endtime="20240424 19:58:07.463"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.423" endtime="20240424 19:58:07.463"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.463" endtime="20240424 19:58:07.473"/>
</kw>
<msg timestamp="20240424 19:58:07.473" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.463" endtime="20240424 19:58:07.473"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.463" endtime="20240424 19:58:07.473"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</kw>
<msg timestamp="20240424 19:58:07.473" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</kw>
<msg timestamp="20240424 19:58:07.473" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</kw>
<msg timestamp="20240424 19:58:07.473" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</kw>
<msg timestamp="20240424 19:58:07.473" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.473"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.489"/>
</kw>
<msg timestamp="20240424 19:58:07.489" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.489"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.489" endtime="20240424 19:58:07.489"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.489" endtime="20240424 19:58:07.489"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.489" endtime="20240424 19:58:07.489"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.473" endtime="20240424 19:58:07.489"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.489" endtime="20240424 19:58:07.489"/>
</kw>
<msg timestamp="20240424 19:58:07.489" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.489" endtime="20240424 19:58:07.489"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.489" endtime="20240424 19:58:07.489"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.489" endtime="20240424 19:58:07.489"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.489" endtime="20240424 19:58:07.489"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.489" endtime="20240424 19:58:07.489"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.489" endtime="20240424 19:58:07.489"/>
</kw>
<msg timestamp="20240424 19:58:07.489" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.489" endtime="20240424 19:58:07.489"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.489" endtime="20240424 19:58:07.489"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.489" endtime="20240424 19:58:07.489"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.489" endtime="20240424 19:58:07.489"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.489" endtime="20240424 19:58:07.489"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.489" endtime="20240424 19:58:07.505"/>
</kw>
<msg timestamp="20240424 19:58:07.505" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.489" endtime="20240424 19:58:07.505"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.505" endtime="20240424 19:58:07.505"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.505" endtime="20240424 19:58:07.505"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.505" endtime="20240424 19:58:07.505"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.489" endtime="20240424 19:58:07.505"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.505" endtime="20240424 19:58:07.567"/>
</kw>
<msg timestamp="20240424 19:58:07.567" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.505" endtime="20240424 19:58:07.567"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.567" endtime="20240424 19:58:07.567"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.567" endtime="20240424 19:58:07.567"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.567" endtime="20240424 19:58:07.567"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.505" endtime="20240424 19:58:07.567"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.567" endtime="20240424 19:58:07.567"/>
</kw>
<msg timestamp="20240424 19:58:07.567" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.567" endtime="20240424 19:58:07.567"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.583" endtime="20240424 19:58:07.583"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.583" endtime="20240424 19:58:07.583"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.567" endtime="20240424 19:58:07.583"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.567" endtime="20240424 19:58:07.583"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.583" endtime="20240424 19:58:07.585"/>
</kw>
<msg timestamp="20240424 19:58:07.585" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.583" endtime="20240424 19:58:07.585"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.585" endtime="20240424 19:58:07.585"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.585" endtime="20240424 19:58:07.585"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.585" endtime="20240424 19:58:07.585"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.583" endtime="20240424 19:58:07.585"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.585" endtime="20240424 19:58:07.601"/>
</kw>
<msg timestamp="20240424 19:58:07.601" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.585" endtime="20240424 19:58:07.601"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.601" endtime="20240424 19:58:07.601"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.601" endtime="20240424 19:58:07.601"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.601" endtime="20240424 19:58:07.601"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.585" endtime="20240424 19:58:07.601"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.601" endtime="20240424 19:58:07.632"/>
</kw>
<msg timestamp="20240424 19:58:07.632" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.601" endtime="20240424 19:58:07.632"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.632" endtime="20240424 19:58:07.632"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.632" endtime="20240424 19:58:07.632"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.632" endtime="20240424 19:58:07.632"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.601" endtime="20240424 19:58:07.632"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.632" endtime="20240424 19:58:07.632"/>
</kw>
<msg timestamp="20240424 19:58:07.632" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.632" endtime="20240424 19:58:07.632"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.632" endtime="20240424 19:58:07.632"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.632" endtime="20240424 19:58:07.632"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.632" endtime="20240424 19:58:07.632"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.632" endtime="20240424 19:58:07.632"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.632" endtime="20240424 19:58:07.648"/>
</kw>
<msg timestamp="20240424 19:58:07.648" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.632" endtime="20240424 19:58:07.648"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.648" endtime="20240424 19:58:07.648"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.648" endtime="20240424 19:58:07.648"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.648" endtime="20240424 19:58:07.648"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.632" endtime="20240424 19:58:07.648"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.648" endtime="20240424 19:58:07.648"/>
</kw>
<msg timestamp="20240424 19:58:07.648" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.648" endtime="20240424 19:58:07.648"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.648" endtime="20240424 19:58:07.648"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.648" endtime="20240424 19:58:07.648"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.648" endtime="20240424 19:58:07.648"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.648" endtime="20240424 19:58:07.648"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.648" endtime="20240424 19:58:07.648"/>
</kw>
<msg timestamp="20240424 19:58:07.648" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.648" endtime="20240424 19:58:07.648"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.648" endtime="20240424 19:58:07.648"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.648" endtime="20240424 19:58:07.648"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.648" endtime="20240424 19:58:07.648"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.648" endtime="20240424 19:58:07.648"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.648" endtime="20240424 19:58:07.657"/>
</kw>
<msg timestamp="20240424 19:58:07.657" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.648" endtime="20240424 19:58:07.657"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.648" endtime="20240424 19:58:07.657"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</kw>
<msg timestamp="20240424 19:58:07.657" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</kw>
<msg timestamp="20240424 19:58:07.657" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</kw>
<msg timestamp="20240424 19:58:07.657" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</kw>
<msg timestamp="20240424 19:58:07.657" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</kw>
<msg timestamp="20240424 19:58:07.657" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.657"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.673" endtime="20240424 19:58:07.688"/>
</kw>
<msg timestamp="20240424 19:58:07.688" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.688"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.688" endtime="20240424 19:58:07.688"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.688" endtime="20240424 19:58:07.688"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.688" endtime="20240424 19:58:07.688"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.657" endtime="20240424 19:58:07.688"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.688" endtime="20240424 19:58:07.720"/>
</kw>
<msg timestamp="20240424 19:58:07.720" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.688" endtime="20240424 19:58:07.720"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.720" endtime="20240424 19:58:07.720"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.720" endtime="20240424 19:58:07.720"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.720" endtime="20240424 19:58:07.720"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.688" endtime="20240424 19:58:07.720"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.720" endtime="20240424 19:58:07.720"/>
</kw>
<msg timestamp="20240424 19:58:07.720" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.720" endtime="20240424 19:58:07.720"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.720" endtime="20240424 19:58:07.720"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.720" endtime="20240424 19:58:07.720"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.720" endtime="20240424 19:58:07.720"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.720" endtime="20240424 19:58:07.720"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.720" endtime="20240424 19:58:07.720"/>
</kw>
<msg timestamp="20240424 19:58:07.720" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.720" endtime="20240424 19:58:07.720"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.720" endtime="20240424 19:58:07.720"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.720" endtime="20240424 19:58:07.720"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.720" endtime="20240424 19:58:07.720"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.720" endtime="20240424 19:58:07.720"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:58:07.720" endtime="20240424 19:58:07.720"/>
</kw>
<msg timestamp="20240424 19:58:07.720" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 19:58:07.720" endtime="20240424 19:58:07.720"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:07.735" endtime="20240424 19:58:07.735"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:07.720" endtime="20240424 19:58:07.735"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.720" endtime="20240424 19:58:07.735"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.720" endtime="20240424 19:58:07.735"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:58:17.751" level="FAIL">Dialog 'Progress...' is not open</msg>
<status status="FAIL" starttime="20240424 19:58:07.735" endtime="20240424 19:58:17.751"/>
</kw>
<msg timestamp="20240424 19:58:17.751" level="INFO">${is_progress_dialog_displayed} = False</msg>
<status status="PASS" starttime="20240424 19:58:07.735" endtime="20240424 19:58:17.751"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="PASS" starttime="20240424 19:58:17.751" endtime="20240424 19:58:17.751"/>
</break>
<status status="PASS" starttime="20240424 19:58:17.751" endtime="20240424 19:58:17.751"/>
</branch>
<status status="PASS" starttime="20240424 19:58:17.751" endtime="20240424 19:58:17.751"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.735" endtime="20240424 19:58:17.751"/>
</iter>
<status status="PASS" starttime="20240424 19:58:07.340" endtime="20240424 19:58:17.751"/>
</while>
<status status="PASS" starttime="20240424 19:58:07.340" endtime="20240424 19:58:17.751"/>
</branch>
<status status="PASS" starttime="20240424 19:58:07.340" endtime="20240424 19:58:17.751"/>
</if>
<if>
<branch type="IF" condition="'${OS}' == 'Darwin'">
<while condition="${True}">
<iter>
<kw name="Call Component Method" library="SwingRobot">
<var>${value}</var>
<arg>thebar</arg>
<arg>getValue</arg>
<doc>Calls a method from specified component.</doc>
<status status="NOT RUN" starttime="20240424 19:58:17.751" endtime="20240424 19:58:17.751"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Saving progress ${value}%</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240424 19:58:17.751" endtime="20240424 19:58:17.751"/>
</kw>
<if>
<branch type="IF" condition="'${value}' == '0'">
<break>
<status status="NOT RUN" starttime="20240424 19:58:17.751" endtime="20240424 19:58:17.751"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:17.751" endtime="20240424 19:58:17.751"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:58:17.751" endtime="20240424 19:58:17.751"/>
</if>
<status status="NOT RUN" starttime="20240424 19:58:17.751" endtime="20240424 19:58:17.751"/>
</iter>
<status status="NOT RUN" starttime="20240424 19:58:17.751" endtime="20240424 19:58:17.751"/>
</while>
<status status="NOT RUN" starttime="20240424 19:58:17.751" endtime="20240424 19:58:17.751"/>
</branch>
<status status="PASS" starttime="20240424 19:58:17.751" endtime="20240424 19:58:17.751"/>
</if>
<status status="PASS" starttime="20240424 19:58:07.065" endtime="20240424 19:58:17.751"/>
</kw>
<status status="PASS" starttime="20240424 19:58:07.062" endtime="20240424 19:58:17.751"/>
</kw>
<status status="PASS" starttime="20240424 19:58:05.340" endtime="20240424 19:58:17.751"/>
</kw>
<kw name="Close Model Without Prompt" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:17.751" endtime="20240424 19:58:17.751"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:58:17.751" endtime="20240424 19:58:17.761"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:17.761" endtime="20240424 19:58:17.833"/>
</kw>
<status status="PASS" starttime="20240424 19:58:17.751" endtime="20240424 19:58:17.833"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:58:17.833" endtime="20240424 19:58:17.844"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Disabled</arg>
<arg>${button_close_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:58:17.848" endtime="20240424 19:58:17.875"/>
</kw>
<status status="PASS" starttime="20240424 19:58:17.847" endtime="20240424 19:58:17.875"/>
</kw>
<status status="PASS" starttime="20240424 19:58:17.751" endtime="20240424 19:58:17.875"/>
</kw>
<status status="PASS" starttime="20240424 19:58:05.340" endtime="20240424 19:58:17.875"/>
</kw>
<kw name="Then Restart Solibri and Verify Selection Basket" library="selection_basket_view_step_definitions">
<kw name="Restart Solibri" library="CommonUtils">
<arg>${SOLIBRI_HOME}</arg>
<doc>Restarts Solibri</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>message=Solibri directory is ${SOLIBRI_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:58:17.897" endtime="20240424 19:58:17.897"/>
</kw>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:58:17.913" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 19:58:17.897" endtime="20240424 19:58:17.913"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>condition=${is_running}</arg>
<arg>msg=Solibri is not running</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240424 19:58:17.913" endtime="20240424 19:58:17.913"/>
</kw>
<kw name="Close Solibri" library="SolibriLibrary">
<msg timestamp="20240424 19:58:17.913" level="INFO">The SMC application is still alive and need to be killed! 

The SMC application had to be killed from CMD!</msg>
<status status="PASS" starttime="20240424 19:58:17.913" endtime="20240424 19:58:17.913"/>
</kw>
<kw name="Wait For Process To Close" library="CommonUtils">
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<arg>time_out=${timeout_for_loops}</arg>
<doc>Waits for process to close</doc>
<kw name="Get Time" library="BuiltIn">
<var>${start_time}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 19:58:17.913" level="INFO">${start_time} = 2024-04-24 19:58:17</msg>
<status status="PASS" starttime="20240424 19:58:17.913" endtime="20240424 19:58:17.913"/>
</kw>
<while condition="${True}">
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:58:17.913" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 19:58:17.913" endtime="20240424 19:58:17.913"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240424 19:58:18.918" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240424 19:58:17.913" endtime="20240424 19:58:18.918"/>
</kw>
<status status="PASS" starttime="20240424 19:58:17.913" endtime="20240424 19:58:18.918"/>
</branch>
<status status="PASS" starttime="20240424 19:58:17.913" endtime="20240424 19:58:18.918"/>
</if>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Exit For Loop</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 19:58:18.918" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<status status="PASS" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.918"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 19:58:18.918" level="INFO">${now} = 2024-04-24 19:58:18</msg>
<status status="PASS" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.918"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20240424 19:58:18.918" level="INFO">${elapsed_time} = 1.0</msg>
<status status="PASS" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.918"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not close in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.918"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.918"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.918"/>
</branch>
<status status="PASS" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.918"/>
</if>
<status status="PASS" starttime="20240424 19:58:17.913" endtime="20240424 19:58:18.918"/>
</iter>
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:58:18.918" level="INFO">${is_running} = None</msg>
<status status="PASS" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.918"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.918"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.918"/>
</branch>
<status status="PASS" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.918"/>
</if>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Exit For Loop</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 19:58:18.918" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing FOR loop.</doc>
<msg timestamp="20240424 19:58:18.918" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.918"/>
</kw>
<status status="PASS" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.918"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<status status="NOT RUN" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.918"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<status status="NOT RUN" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.918"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not close in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.918"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.918"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.918"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.918"/>
</if>
<status status="PASS" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.918"/>
</iter>
<status status="PASS" starttime="20240424 19:58:17.913" endtime="20240424 19:58:18.918"/>
</while>
<status status="PASS" starttime="20240424 19:58:17.913" endtime="20240424 19:58:18.918"/>
</kw>
<kw name="Open Solibri" library="SolibriLibrary">
<arg>${SOLIBRI_DIR}</arg>
<msg timestamp="20240424 19:58:18.918" level="INFO">Solibri Installation folder: D:\a\desktop-main\desktop-main\temp\installers\temporary-installation-folder\
Solibri Executable: D:\a\desktop-main\desktop-main\temp\installers\temporary-installation-folder\temporary-installation-folder\Solibri.exe</msg>
<status status="PASS" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.918"/>
</kw>
<kw name="Wait For Process To Open" library="CommonUtils">
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<arg>time_out=${timeout_for_loops}</arg>
<doc>Waits for process to open</doc>
<kw name="Get Time" library="BuiltIn">
<var>${start_time}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 19:58:18.918" level="INFO">${start_time} = 2024-04-24 19:58:18</msg>
<status status="PASS" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.918"/>
</kw>
<while condition="${True}">
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:58:18.933" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.933"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Sleep</arg>
<arg>1</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 19:58:18.933" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<status status="PASS" starttime="20240424 19:58:18.933" endtime="20240424 19:58:18.933"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<break>
<status status="PASS" starttime="20240424 19:58:18.933" endtime="20240424 19:58:18.933"/>
</break>
<status status="PASS" starttime="20240424 19:58:18.933" endtime="20240424 19:58:18.933"/>
</branch>
<status status="PASS" starttime="20240424 19:58:18.933" endtime="20240424 19:58:18.933"/>
</if>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<status status="NOT RUN" starttime="20240424 19:58:18.933" endtime="20240424 19:58:18.933"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<status status="NOT RUN" starttime="20240424 19:58:18.933" endtime="20240424 19:58:18.933"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not open in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 19:58:18.933" endtime="20240424 19:58:18.933"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 19:58:18.933" endtime="20240424 19:58:18.933"/>
</break>
<status status="NOT RUN" starttime="20240424 19:58:18.933" endtime="20240424 19:58:18.933"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:58:18.933" endtime="20240424 19:58:18.933"/>
</if>
<status status="PASS" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.933"/>
</iter>
<status status="PASS" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.933"/>
</while>
<status status="PASS" starttime="20240424 19:58:18.918" endtime="20240424 19:58:18.933"/>
</kw>
<kw name="Wait For Solibri Window to Appear" library="CommonUtils">
<arg>Solibri Office</arg>
<doc>Wait until Solibri is started</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>18</arg>
<arg>18</arg>
<arg>Window Should Be Open</arg>
<arg>${solibri_office}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>18</arg>
<arg>18</arg>
<arg>Window Should Be Open</arg>
<arg>${solibri_office}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Window Should Be Open" library="SwingRobot">
<arg>${solibri_office}</arg>
<doc>Fails if the window is not open.</doc>
<msg timestamp="20240424 19:58:20.981" level="FAIL">Connection to remote server broken: [WinError 10061] No connection could be made because the target machine actively refused it</msg>
<status status="FAIL" starttime="20240424 19:58:18.933" endtime="20240424 19:58:20.981"/>
</kw>
<kw name="Window Should Be Open" library="SwingRobot">
<arg>${solibri_office}</arg>
<doc>Fails if the window is not open.</doc>
<status status="PASS" starttime="20240424 19:58:38.985" endtime="20240424 19:58:39.323"/>
</kw>
<status status="PASS" starttime="20240424 19:58:18.933" endtime="20240424 19:58:39.323"/>
</kw>
<msg timestamp="20240424 19:58:39.323" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:58:18.933" endtime="20240424 19:58:39.323"/>
</kw>
<status status="PASS" starttime="20240424 19:58:18.933" endtime="20240424 19:58:39.323"/>
</kw>
<status status="PASS" starttime="20240424 19:58:17.897" endtime="20240424 19:58:39.323"/>
</kw>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${test_files_folder}\\Solibri Building.smc</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:39.323" endtime="20240424 19:58:39.372"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:58:39.423" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:58:39.372" endtime="20240424 19:58:39.423"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:58:39.423" endtime="20240424 19:58:39.423"/>
</kw>
<status status="PASS" starttime="20240424 19:58:39.372" endtime="20240424 19:58:39.423"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:39.423" endtime="20240424 19:58:39.511"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:58:39.511" endtime="20240424 19:58:39.527"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:39.527" endtime="20240424 19:58:39.547"/>
</kw>
<status status="PASS" starttime="20240424 19:58:39.423" endtime="20240424 19:58:39.547"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:58:39.547" endtime="20240424 19:58:39.625"/>
</kw>
<status status="PASS" starttime="20240424 19:58:39.547" endtime="20240424 19:58:39.625"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:58:39.625" endtime="20240424 19:58:39.631"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:58:39.631" endtime="20240424 19:58:39.638"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:58:39.644" endtime="20240424 19:58:41.446"/>
</kw>
<status status="PASS" starttime="20240424 19:58:39.644" endtime="20240424 19:58:41.446"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:58:41.446" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 19:58:41.446" endtime="20240424 19:58:41.446"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 19:58:41.446" endtime="20240424 19:58:41.446"/>
</return>
<msg timestamp="20240424 19:58:41.446" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 19:58:41.446" endtime="20240424 19:58:41.446"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:58:41.446" endtime="20240424 19:58:42.250"/>
</kw>
<status status="PASS" starttime="20240424 19:58:41.446" endtime="20240424 19:58:42.250"/>
</kw>
<status status="PASS" starttime="20240424 19:58:41.446" endtime="20240424 19:58:42.250"/>
</branch>
<status status="PASS" starttime="20240424 19:58:41.446" endtime="20240424 19:58:42.250"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 19:58:42.250" endtime="20240424 19:58:42.250"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:58:42.250" endtime="20240424 19:58:42.250"/>
</branch>
<status status="PASS" starttime="20240424 19:58:42.250" endtime="20240424 19:58:42.250"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:58:42.250" level="INFO">${path} = C:\Users\runneradmin\Documents\RFTestFiles</msg>
<msg timestamp="20240424 19:58:42.250" level="INFO">${filename} = Solibri Building.smc</msg>
<status status="PASS" starttime="20240424 19:58:42.250" endtime="20240424 19:58:42.250"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 19:58:42.250" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 19:58:42.250" level="INFO">${ext} = smc</msg>
<status status="PASS" starttime="20240424 19:58:42.250" endtime="20240424 19:58:42.250"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:42.250" endtime="20240424 19:58:42.492"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:58:42.492" endtime="20240424 19:58:42.539"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:42.539" endtime="20240424 19:58:43.137"/>
</kw>
<status status="PASS" starttime="20240424 19:58:42.250" endtime="20240424 19:58:43.137"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:58:43.137" endtime="20240424 19:58:45.271"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${COMPONENT_HIERARCHY_PANEL}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:58:45.271" endtime="20240424 19:58:45.290"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>ContainmentTree</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:58:45.358" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 19:58:45.290" endtime="20240424 19:58:45.358"/>
</kw>
<if>
<branch type="IF" condition="${row_count} &gt; ${0}">
<kw name="Evaluate" library="BuiltIn">
<var>${row_count}</var>
<arg>${row_count}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 19:58:45.358" level="INFO">${row_count} = 0</msg>
<status status="PASS" starttime="20240424 19:58:45.358" endtime="20240424 19:58:45.358"/>
</kw>
<status status="PASS" starttime="20240424 19:58:45.358" endtime="20240424 19:58:45.358"/>
</branch>
<status status="PASS" starttime="20240424 19:58:45.358" endtime="20240424 19:58:45.358"/>
</if>
<status status="PASS" starttime="20240424 19:58:42.250" endtime="20240424 19:58:45.358"/>
</kw>
<status status="PASS" starttime="20240424 19:58:42.250" endtime="20240424 19:58:45.358"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<status status="NOT RUN" starttime="20240424 19:58:45.358" endtime="20240424 19:58:45.358"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:58:45.358" endtime="20240424 19:58:45.358"/>
</branch>
<status status="PASS" starttime="20240424 19:58:42.250" endtime="20240424 19:58:45.358"/>
</if>
<status status="PASS" starttime="20240424 19:58:39.323" endtime="20240424 19:58:45.358"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${ITO_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:45.358" endtime="20240424 19:58:45.379"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:58:45.379" endtime="20240424 19:58:45.382"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:45.382" endtime="20240424 19:58:45.408"/>
</kw>
<status status="PASS" starttime="20240424 19:58:45.358" endtime="20240424 19:58:45.408"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Selection Basket_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:58:45.408" endtime="20240424 19:58:45.854"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>0</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:58:45.854" endtime="20240424 19:58:45.896"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>1</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:58:45.896" endtime="20240424 19:58:45.934"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:45.934" endtime="20240424 19:58:45.966"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>2</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:58:45.966" endtime="20240424 19:58:46.010"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>2</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:58:46.036" level="INFO">${row_count} = 8</msg>
<status status="PASS" starttime="20240424 19:58:46.010" endtime="20240424 19:58:46.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>8</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 19:58:46.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 19:58:46.036" endtime="20240424 19:58:46.036"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Selection Basket_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 19:58:46.036" endtime="20240424 19:58:46.040"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:58:46.040" endtime="20240424 19:58:46.109"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:46.109" endtime="20240424 19:58:46.116"/>
</kw>
<kw name="Label Should Exist" library="SwingRobot">
<arg>Selected: 38</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 19:58:46.116" endtime="20240424 19:58:46.163"/>
</kw>
<status status="PASS" starttime="20240424 19:58:17.897" endtime="20240424 19:58:46.163"/>
</kw>
<kw name="Then Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<msg timestamp="20240424 19:58:46.294" level="INFO">Closed dialog 'To-Do'.</msg>
<status status="PASS" starttime="20240424 19:58:46.179" endtime="20240424 19:58:46.294"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:46.294" endtime="20240424 19:58:46.300"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:58:46.300" endtime="20240424 19:58:46.303"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:58:46.303" endtime="20240424 19:58:46.374"/>
</kw>
<status status="PASS" starttime="20240424 19:58:46.294" endtime="20240424 19:58:46.376"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:58:46.376" endtime="20240424 19:58:46.542"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:58:46.542" endtime="20240424 19:58:46.550"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:58:56.559" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:58:46.550" endtime="20240424 19:58:56.559"/>
</kw>
<msg timestamp="20240424 19:58:56.559" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:58:46.550" endtime="20240424 19:58:56.559"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:59:06.574" level="FAIL">Dialog 'Select' is not open</msg>
<status status="FAIL" starttime="20240424 19:58:56.559" endtime="20240424 19:59:06.574"/>
</kw>
<msg timestamp="20240424 19:59:06.574" level="INFO">${check_if_save_asked} = False</msg>
<status status="PASS" starttime="20240424 19:58:56.559" endtime="20240424 19:59:06.574"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:59:06.574" endtime="20240424 19:59:06.574"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:59:06.574" endtime="20240424 19:59:06.574"/>
</branch>
<status status="PASS" starttime="20240424 19:59:06.574" endtime="20240424 19:59:06.574"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:59:06.574" endtime="20240424 19:59:06.574"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:59:06.574" endtime="20240424 19:59:06.574"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:59:06.574" endtime="20240424 19:59:06.574"/>
</branch>
<status status="PASS" starttime="20240424 19:59:06.574" endtime="20240424 19:59:06.574"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:06.574" endtime="20240424 19:59:06.574"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:59:06.574" endtime="20240424 19:59:06.574"/>
</kw>
<status status="PASS" starttime="20240424 19:59:06.574" endtime="20240424 19:59:06.574"/>
</kw>
<status status="PASS" starttime="20240424 19:58:46.163" endtime="20240424 19:59:06.574"/>
</kw>
<status status="PASS" starttime="20240424 19:57:30.400" endtime="20240424 19:59:06.574"/>
</test>
<doc>Verify Selection Basket view</doc>
<meta name="Feature">Selection Basket view</meta>
<meta name="Generated by">_gherkin2robotframework on 2023-08-22T14:19:23.311271_</meta>
<status status="PASS" starttime="20240424 19:57:30.369" endtime="20240424 19:59:06.574"/>
</suite>
<suite id="s1-s15" name="16 Pin Unpin Recent Models" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\16_pin_unpin_recent_models.robot">
<test id="s1-s15-t1" name="Verify Pin and Unpin Buttons on Recent Models" line="11">
<kw name="Background">
<doc>Launch Solibri And Login To SSC</doc>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 19:59:06.825" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 19:59:06.825" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 19:59:06 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 19:59:06.621" endtime="20240424 19:59:06.825"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 19:59:06.825" endtime="20240424 19:59:06.825"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:06.825" endtime="20240424 19:59:06.859"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:59:06.866" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:59:06.859" endtime="20240424 19:59:06.866"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:59:06.866" endtime="20240424 19:59:06.866"/>
</kw>
<status status="PASS" starttime="20240424 19:59:06.859" endtime="20240424 19:59:06.866"/>
</kw>
<status status="PASS" starttime="20240424 19:59:06.621" endtime="20240424 19:59:06.866"/>
</kw>
<kw name="When User Logs In To SSC" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Logged in to SSC</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:59:06.866" endtime="20240424 19:59:06.866"/>
</kw>
<status status="PASS" starttime="20240424 19:59:06.866" endtime="20240424 19:59:06.866"/>
</kw>
<kw name="Then Solibri Office Is Opened" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Solibri Office Is Opened</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:59:06.866" endtime="20240424 19:59:06.866"/>
</kw>
<status status="PASS" starttime="20240424 19:59:06.866" endtime="20240424 19:59:06.866"/>
</kw>
<kw name="Then No Existing Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:06.866" endtime="20240424 19:59:06.910"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:59:06.910" endtime="20240424 19:59:06.918"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:06.918" endtime="20240424 19:59:06.918"/>
</kw>
<status status="PASS" starttime="20240424 19:59:06.866" endtime="20240424 19:59:06.918"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:59:06.918" endtime="20240424 19:59:06.932"/>
</kw>
<status status="PASS" starttime="20240424 19:59:06.918" endtime="20240424 19:59:06.932"/>
</kw>
<msg timestamp="20240424 19:59:06.932" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 19:59:06.918" endtime="20240424 19:59:06.932"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 19:59:06.932" endtime="20240424 19:59:06.933"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:59:06.932" endtime="20240424 19:59:06.933"/>
</branch>
<status status="PASS" starttime="20240424 19:59:06.932" endtime="20240424 19:59:06.933"/>
</if>
<status status="PASS" starttime="20240424 19:59:06.866" endtime="20240424 19:59:06.933"/>
</kw>
<kw name="Then Get Recent Models" library="pin_unpin_recent_models_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:06.934" endtime="20240424 19:59:07.000"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:59:07.000" endtime="20240424 19:59:07.011"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:07.011" endtime="20240424 19:59:07.020"/>
</kw>
<status status="PASS" starttime="20240424 19:59:06.933" endtime="20240424 19:59:07.020"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:07.020" endtime="20240424 19:59:07.025"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Recent_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:59:07.025" endtime="20240424 19:59:07.097"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${recent_model_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:59:07.097" level="INFO">${recent_model_count} = 12</msg>
<status status="PASS" starttime="20240424 19:59:07.097" endtime="20240424 19:59:07.097"/>
</kw>
<kw name="Get Table Column Values" library="SwingRobot">
<var>${default_recent_models}</var>
<arg>0</arg>
<arg>0</arg>
<doc>Returns a list containing all the values of a table column.</doc>
<msg timestamp="20240424 19:59:07.134" level="INFO">${default_recent_models} = ['Solibri Building.smc', 'Solibri Building.ifc', 'Floor Plan-Ground Floor_100.pdf', 'Solibri Building.smc', 'Crane.ifc', 'Solibri Building - modified.ifc', 'Ventilation Model.ifc', 'Solibri Building S...</msg>
<status status="PASS" starttime="20240424 19:59:07.097" endtime="20240424 19:59:07.134"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${recent_model_count}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240424 19:59:07.134" level="INFO">${recent_model_count} = 12</msg>
<status status="PASS" starttime="20240424 19:59:07.134" endtime="20240424 19:59:07.134"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${default_recent_models}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240424 19:59:07.134" level="INFO">${default_recent_models} = ['Solibri Building.smc', 'Solibri Building.ifc', 'Floor Plan-Ground Floor_100.pdf', 'Solibri Building.smc', 'Crane.ifc', 'Solibri Building - modified.ifc', 'Ventilation Model.ifc', 'Solibri Building S...</msg>
<status status="PASS" starttime="20240424 19:59:07.134" endtime="20240424 19:59:07.134"/>
</kw>
<status status="PASS" starttime="20240424 19:59:06.933" endtime="20240424 19:59:07.134"/>
</kw>
<status status="PASS" starttime="20240424 19:59:06.621" endtime="20240424 19:59:07.134"/>
</kw>
<kw name="Then Verify Recent Models and Model Places" library="pin_unpin_recent_models_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:07.134" endtime="20240424 19:59:07.134"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:59:07.134" endtime="20240424 19:59:07.147"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:07.147" endtime="20240424 19:59:07.153"/>
</kw>
<status status="PASS" starttime="20240424 19:59:07.134" endtime="20240424 19:59:07.153"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Exist</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Exist" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 19:59:07.153" endtime="20240424 19:59:07.155"/>
</kw>
<status status="PASS" starttime="20240424 19:59:07.153" endtime="20240424 19:59:07.155"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${recent_models}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:59:07.232" level="INFO">${recent_models} = 12</msg>
<status status="PASS" starttime="20240424 19:59:07.155" endtime="20240424 19:59:07.232"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${recent_models}</arg>
<arg>${recent_model_count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:59:07.232" endtime="20240424 19:59:07.232"/>
</kw>
<kw name="Get Table Column Values" library="SwingRobot">
<var>${recent_files}</var>
<arg>0</arg>
<arg>0</arg>
<doc>Returns a list containing all the values of a table column.</doc>
<msg timestamp="20240424 19:59:07.253" level="INFO">${recent_files} = ['Solibri Building.smc', 'Solibri Building.ifc', 'Floor Plan-Ground Floor_100.pdf', 'Solibri Building.smc', 'Crane.ifc', 'Solibri Building - modified.ifc', 'Ventilation Model.ifc', 'Solibri Building S...</msg>
<status status="PASS" starttime="20240424 19:59:07.232" endtime="20240424 19:59:07.253"/>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<arg>${recent_files}</arg>
<arg>${default_recent_models}</arg>
<arg>ignore_order=False</arg>
<doc>Fails if given lists are unequal.</doc>
<status status="PASS" starttime="20240424 19:59:07.253" endtime="20240424 19:59:07.253"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${recent_models_places}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 19:59:07.253" level="INFO">${recent_models_places} = 4</msg>
<status status="PASS" starttime="20240424 19:59:07.253" endtime="20240424 19:59:07.253"/>
</kw>
<kw name="Get Table Values" library="SwingRobot">
<var>${default_location}</var>
<arg>1</arg>
<doc>Returns a list of table rows containing all the values of a table.</doc>
<msg timestamp="20240424 19:59:07.272" level="INFO">${default_location} = [['RFTestFiles', ''], ['ifc', ''], ['pdf', ''], ['models', '']]</msg>
<status status="PASS" starttime="20240424 19:59:07.253" endtime="20240424 19:59:07.272"/>
</kw>
<status status="PASS" starttime="20240424 19:59:07.134" endtime="20240424 19:59:07.272"/>
</kw>
<kw name="Then Pin the Model" library="pin_unpin_recent_models_step_definitions">
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${file_to_be_pinned}</var>
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:59:07.278" level="INFO">${file_to_be_pinned} = Solibri Building.smc</msg>
<status status="PASS" starttime="20240424 19:59:07.272" endtime="20240424 19:59:07.278"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>3</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:59:07.278" endtime="20240424 19:59:07.302"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row_one_file}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:59:07.365" level="INFO">${row_one_file} = Solibri Building.smc</msg>
<status status="PASS" starttime="20240424 19:59:07.302" endtime="20240424 19:59:07.365"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${row_one_file}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240424 19:59:07.365" level="INFO">${row_one_file} = Solibri Building.smc</msg>
<status status="PASS" starttime="20240424 19:59:07.365" endtime="20240424 19:59:07.365"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Should Be Equal</arg>
<arg>${row_one_file}</arg>
<arg>${file_to_be_pinned}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${row_one_file}</arg>
<arg>${file_to_be_pinned}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:59:07.365" endtime="20240424 19:59:07.365"/>
</kw>
<msg timestamp="20240424 19:59:07.365" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20240424 19:59:07.365" endtime="20240424 19:59:07.365"/>
</kw>
<if>
<branch type="IF" condition="${status} == False">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>3</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="NOT RUN" starttime="20240424 19:59:07.365" endtime="20240424 19:59:07.365"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row_one_file}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<status status="NOT RUN" starttime="20240424 19:59:07.365" endtime="20240424 19:59:07.365"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${row_one_file}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240424 19:59:07.365" endtime="20240424 19:59:07.365"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:59:07.365" endtime="20240424 19:59:07.365"/>
</branch>
<status status="PASS" starttime="20240424 19:59:07.365" endtime="20240424 19:59:07.365"/>
</if>
<status status="PASS" starttime="20240424 19:59:07.272" endtime="20240424 19:59:07.365"/>
</kw>
<kw name="Then Verify Recent Model" library="pin_unpin_recent_models_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:07.365" endtime="20240424 19:59:07.371"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:59:07.371" endtime="20240424 19:59:07.376"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:07.376" endtime="20240424 19:59:07.430"/>
</kw>
<status status="PASS" starttime="20240424 19:59:07.365" endtime="20240424 19:59:07.430"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Exist</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Exist" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 19:59:07.430" endtime="20240424 19:59:07.438"/>
</kw>
<status status="PASS" starttime="20240424 19:59:07.430" endtime="20240424 19:59:07.438"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row1_recent_file}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:59:07.450" level="INFO">${row1_recent_file} = Solibri Building.smc</msg>
<status status="PASS" starttime="20240424 19:59:07.438" endtime="20240424 19:59:07.450"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${row1_recent_file}</arg>
<arg>${row_one_file}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:59:07.450" endtime="20240424 19:59:07.450"/>
</kw>
<status status="PASS" starttime="20240424 19:59:07.365" endtime="20240424 19:59:07.450"/>
</kw>
<kw name="Then Open ifc Model" library="Common">
<arg>${solibri_building_ifc}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:07.450" endtime="20240424 19:59:07.456"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:59:07.459" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:59:07.457" endtime="20240424 19:59:07.459"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:59:07.459" endtime="20240424 19:59:07.460"/>
</kw>
<status status="PASS" starttime="20240424 19:59:07.456" endtime="20240424 19:59:07.460"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:07.461" endtime="20240424 19:59:07.528"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:59:07.528" endtime="20240424 19:59:07.528"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:07.528" endtime="20240424 19:59:07.536"/>
</kw>
<status status="PASS" starttime="20240424 19:59:07.460" endtime="20240424 19:59:07.536"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:59:07.536" endtime="20240424 19:59:07.574"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:59:07.574" endtime="20240424 19:59:07.576"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:59:07.576" endtime="20240424 19:59:09.020"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${ifc_filename}</var>
<arg>${ifc_folder}</arg>
<arg>${ifc_filename}</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:59:09.020" level="INFO">${ifc_filename} = C:\users\public\Solibri\SOLIBRI\Samples\ifc\Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:59:09.020" endtime="20240424 19:59:09.020"/>
</kw>
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:59:09.020" endtime="20240424 19:59:09.417"/>
</kw>
<status status="PASS" starttime="20240424 19:59:09.020" endtime="20240424 19:59:09.417"/>
</kw>
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:59:09.417" endtime="20240424 19:59:09.561"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:09.561" endtime="20240424 19:59:09.633"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:59:09.633" endtime="20240424 19:59:09.633"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:09.633" endtime="20240424 19:59:09.732"/>
</kw>
<status status="PASS" starttime="20240424 19:59:09.561" endtime="20240424 19:59:09.732"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:59:14.947" level="INFO">2024-04-24 19:59:12.163+0000 [Thread-71] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 63 ms.
2024-04-24 19:59:12.163+0000 [Thread-71] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 2447 ms (using 1 threads)
2024-04-24 19:59:12.387+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 172 ms
2024-04-24 19:59:14.406+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 2243 ms.</msg>
<status status="PASS" starttime="20240424 19:59:09.732" endtime="20240424 19:59:14.947"/>
</kw>
<status status="PASS" starttime="20240424 19:59:09.732" endtime="20240424 19:59:14.947"/>
</kw>
<msg timestamp="20240424 19:59:14.947" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:59:09.732" endtime="20240424 19:59:14.947"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:59:14.947" endtime="20240424 19:59:15.404"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:59:15.404" endtime="20240424 19:59:15.955"/>
</kw>
<status status="PASS" starttime="20240424 19:59:14.947" endtime="20240424 19:59:15.955"/>
</branch>
<status status="PASS" starttime="20240424 19:59:14.947" endtime="20240424 19:59:15.955"/>
</if>
<status status="PASS" starttime="20240424 19:59:09.417" endtime="20240424 19:59:15.955"/>
</kw>
<status status="PASS" starttime="20240424 19:59:07.450" endtime="20240424 19:59:15.955"/>
</kw>
<kw name="Then Verify Recent Models" library="pin_unpin_recent_models_step_definitions">
<arg>${solibri_building_ifc}</arg>
<kw name="Split Path" library="OperatingSystem">
<var>${model_extension}</var>
<var>${solibri_model}</var>
<arg>${opened_model}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:59:15.955" level="INFO">${model_extension} = C:\users\public\Solibri\SOLIBRI\Samples\ifc</msg>
<msg timestamp="20240424 19:59:15.955" level="INFO">${solibri_model} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:59:15.955" endtime="20240424 19:59:15.955"/>
</kw>
<kw name="Verify Recent Model" library="pin_unpin_recent_models_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:15.955" endtime="20240424 19:59:16.011"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:59:16.011" endtime="20240424 19:59:16.017"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:16.017" endtime="20240424 19:59:16.021"/>
</kw>
<status status="PASS" starttime="20240424 19:59:15.955" endtime="20240424 19:59:16.021"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Exist</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Exist" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 19:59:16.021" endtime="20240424 19:59:16.184"/>
</kw>
<status status="PASS" starttime="20240424 19:59:16.021" endtime="20240424 19:59:16.184"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row1_recent_file}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:59:16.194" level="INFO">${row1_recent_file} = Solibri Building.smc</msg>
<status status="PASS" starttime="20240424 19:59:16.184" endtime="20240424 19:59:16.194"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${row1_recent_file}</arg>
<arg>${row_one_file}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:59:16.194" endtime="20240424 19:59:16.194"/>
</kw>
<status status="PASS" starttime="20240424 19:59:15.955" endtime="20240424 19:59:16.194"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row2_recent_file}</var>
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:59:16.200" level="INFO">${row2_recent_file} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:59:16.194" endtime="20240424 19:59:16.200"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${row2_recent_file}</arg>
<arg>${solibri_model}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:59:16.200" endtime="20240424 19:59:16.200"/>
</kw>
<status status="PASS" starttime="20240424 19:59:15.955" endtime="20240424 19:59:16.200"/>
</kw>
<kw name="Then Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:59:16.200" endtime="20240424 19:59:16.318"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:16.318" endtime="20240424 19:59:16.318"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:59:16.318" endtime="20240424 19:59:16.318"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:16.318" endtime="20240424 19:59:16.334"/>
</kw>
<status status="PASS" starttime="20240424 19:59:16.318" endtime="20240424 19:59:16.334"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:59:16.334" endtime="20240424 19:59:16.340"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:59:16.340" endtime="20240424 19:59:16.362"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 19:59:26.371" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:59:16.362" endtime="20240424 19:59:26.371"/>
</kw>
<msg timestamp="20240424 19:59:26.371" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:59:16.362" endtime="20240424 19:59:26.371"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 19:59:26.371" endtime="20240424 19:59:26.377"/>
</kw>
<msg timestamp="20240424 19:59:26.377" level="INFO">${check_if_save_asked} = True</msg>
<status status="PASS" starttime="20240424 19:59:26.371" endtime="20240424 19:59:26.377"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:59:26.377" endtime="20240424 19:59:26.386"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:59:26.386" endtime="20240424 19:59:26.595"/>
</kw>
<status status="PASS" starttime="20240424 19:59:26.377" endtime="20240424 19:59:26.595"/>
</kw>
<status status="PASS" starttime="20240424 19:59:26.377" endtime="20240424 19:59:26.595"/>
</branch>
<status status="PASS" starttime="20240424 19:59:26.377" endtime="20240424 19:59:26.595"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 19:59:26.595" endtime="20240424 19:59:26.595"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 19:59:26.595" endtime="20240424 19:59:26.595"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:59:26.595" endtime="20240424 19:59:26.595"/>
</branch>
<status status="PASS" starttime="20240424 19:59:26.595" endtime="20240424 19:59:26.595"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:26.595" endtime="20240424 19:59:26.654"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:59:26.654" endtime="20240424 19:59:26.670"/>
</kw>
<status status="PASS" starttime="20240424 19:59:26.654" endtime="20240424 19:59:26.670"/>
</kw>
<status status="PASS" starttime="20240424 19:59:16.200" endtime="20240424 19:59:26.670"/>
</kw>
<kw name="Then Restart Solibri" library="CommonUtils">
<arg>${SOLIBRI_HOME}</arg>
<doc>Restarts Solibri</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>message=Solibri directory is ${SOLIBRI_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 19:59:26.670" endtime="20240424 19:59:26.670"/>
</kw>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:59:26.670" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 19:59:26.670" endtime="20240424 19:59:26.670"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>condition=${is_running}</arg>
<arg>msg=Solibri is not running</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240424 19:59:26.670" endtime="20240424 19:59:26.670"/>
</kw>
<kw name="Close Solibri" library="SolibriLibrary">
<msg timestamp="20240424 19:59:26.670" level="INFO">The SMC application is still alive and need to be killed! 

The SMC application had to be killed from CMD!</msg>
<status status="PASS" starttime="20240424 19:59:26.670" endtime="20240424 19:59:26.670"/>
</kw>
<kw name="Wait For Process To Close" library="CommonUtils">
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<arg>time_out=${timeout_for_loops}</arg>
<doc>Waits for process to close</doc>
<kw name="Get Time" library="BuiltIn">
<var>${start_time}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 19:59:26.670" level="INFO">${start_time} = 2024-04-24 19:59:26</msg>
<status status="PASS" starttime="20240424 19:59:26.670" endtime="20240424 19:59:26.670"/>
</kw>
<while condition="${True}">
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:59:26.686" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 19:59:26.670" endtime="20240424 19:59:26.686"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240424 19:59:27.692" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240424 19:59:26.686" endtime="20240424 19:59:27.692"/>
</kw>
<status status="PASS" starttime="20240424 19:59:26.686" endtime="20240424 19:59:27.692"/>
</branch>
<status status="PASS" starttime="20240424 19:59:26.686" endtime="20240424 19:59:27.692"/>
</if>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Exit For Loop</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 19:59:27.692" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<status status="PASS" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.692"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 19:59:27.692" level="INFO">${now} = 2024-04-24 19:59:27</msg>
<status status="PASS" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.692"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20240424 19:59:27.692" level="INFO">${elapsed_time} = 1.0</msg>
<status status="PASS" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.692"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not close in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.692"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.692"/>
</break>
<status status="NOT RUN" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.692"/>
</branch>
<status status="PASS" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.692"/>
</if>
<status status="PASS" starttime="20240424 19:59:26.670" endtime="20240424 19:59:27.692"/>
</iter>
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:59:27.692" level="INFO">${is_running} = None</msg>
<status status="PASS" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.692"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.692"/>
</kw>
<status status="NOT RUN" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.692"/>
</branch>
<status status="PASS" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.692"/>
</if>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Exit For Loop</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 19:59:27.692" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing FOR loop.</doc>
<msg timestamp="20240424 19:59:27.692" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.692"/>
</kw>
<status status="PASS" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.692"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<status status="NOT RUN" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.692"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<status status="NOT RUN" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.692"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not close in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.692"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.692"/>
</break>
<status status="NOT RUN" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.692"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.692"/>
</if>
<status status="PASS" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.692"/>
</iter>
<status status="PASS" starttime="20240424 19:59:26.670" endtime="20240424 19:59:27.692"/>
</while>
<status status="PASS" starttime="20240424 19:59:26.670" endtime="20240424 19:59:27.692"/>
</kw>
<kw name="Open Solibri" library="SolibriLibrary">
<arg>${SOLIBRI_DIR}</arg>
<msg timestamp="20240424 19:59:27.692" level="INFO">Solibri Installation folder: D:\a\desktop-main\desktop-main\temp\installers\temporary-installation-folder\
Solibri Executable: D:\a\desktop-main\desktop-main\temp\installers\temporary-installation-folder\temporary-installation-folder\Solibri.exe</msg>
<status status="PASS" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.692"/>
</kw>
<kw name="Wait For Process To Open" library="CommonUtils">
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<arg>time_out=${timeout_for_loops}</arg>
<doc>Waits for process to open</doc>
<kw name="Get Time" library="BuiltIn">
<var>${start_time}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 19:59:27.692" level="INFO">${start_time} = 2024-04-24 19:59:27</msg>
<status status="PASS" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.692"/>
</kw>
<while condition="${True}">
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 19:59:27.708" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.708"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Sleep</arg>
<arg>1</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 19:59:27.708" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<status status="PASS" starttime="20240424 19:59:27.708" endtime="20240424 19:59:27.708"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<break>
<status status="PASS" starttime="20240424 19:59:27.708" endtime="20240424 19:59:27.708"/>
</break>
<status status="PASS" starttime="20240424 19:59:27.708" endtime="20240424 19:59:27.708"/>
</branch>
<status status="PASS" starttime="20240424 19:59:27.708" endtime="20240424 19:59:27.708"/>
</if>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<status status="NOT RUN" starttime="20240424 19:59:27.708" endtime="20240424 19:59:27.708"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<status status="NOT RUN" starttime="20240424 19:59:27.708" endtime="20240424 19:59:27.708"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not open in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 19:59:27.708" endtime="20240424 19:59:27.708"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 19:59:27.708" endtime="20240424 19:59:27.708"/>
</break>
<status status="NOT RUN" starttime="20240424 19:59:27.708" endtime="20240424 19:59:27.708"/>
</branch>
<status status="NOT RUN" starttime="20240424 19:59:27.708" endtime="20240424 19:59:27.708"/>
</if>
<status status="PASS" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.708"/>
</iter>
<status status="PASS" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.708"/>
</while>
<status status="PASS" starttime="20240424 19:59:27.692" endtime="20240424 19:59:27.708"/>
</kw>
<kw name="Wait For Solibri Window to Appear" library="CommonUtils">
<arg>Solibri Office</arg>
<doc>Wait until Solibri is started</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>18</arg>
<arg>18</arg>
<arg>Window Should Be Open</arg>
<arg>${solibri_office}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>18</arg>
<arg>18</arg>
<arg>Window Should Be Open</arg>
<arg>${solibri_office}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Window Should Be Open" library="SwingRobot">
<arg>${solibri_office}</arg>
<doc>Fails if the window is not open.</doc>
<msg timestamp="20240424 19:59:29.833" level="FAIL">Connection to remote server broken: [WinError 10061] No connection could be made because the target machine actively refused it</msg>
<status status="FAIL" starttime="20240424 19:59:27.708" endtime="20240424 19:59:29.833"/>
</kw>
<kw name="Window Should Be Open" library="SwingRobot">
<arg>${solibri_office}</arg>
<doc>Fails if the window is not open.</doc>
<status status="PASS" starttime="20240424 19:59:47.845" endtime="20240424 19:59:48.125"/>
</kw>
<status status="PASS" starttime="20240424 19:59:27.708" endtime="20240424 19:59:48.125"/>
</kw>
<msg timestamp="20240424 19:59:48.125" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:59:27.708" endtime="20240424 19:59:48.125"/>
</kw>
<status status="PASS" starttime="20240424 19:59:27.708" endtime="20240424 19:59:48.125"/>
</kw>
<status status="PASS" starttime="20240424 19:59:26.670" endtime="20240424 19:59:48.125"/>
</kw>
<kw name="Then Verify Recent Models" library="pin_unpin_recent_models_step_definitions">
<arg>${solibri_building_ifc}</arg>
<kw name="Split Path" library="OperatingSystem">
<var>${model_extension}</var>
<var>${solibri_model}</var>
<arg>${opened_model}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:59:48.125" level="INFO">${model_extension} = C:\users\public\Solibri\SOLIBRI\Samples\ifc</msg>
<msg timestamp="20240424 19:59:48.125" level="INFO">${solibri_model} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:59:48.125" endtime="20240424 19:59:48.125"/>
</kw>
<kw name="Verify Recent Model" library="pin_unpin_recent_models_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:48.125" endtime="20240424 19:59:48.229"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:59:48.229" endtime="20240424 19:59:48.233"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:48.233" endtime="20240424 19:59:48.336"/>
</kw>
<status status="PASS" starttime="20240424 19:59:48.125" endtime="20240424 19:59:48.336"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Exist</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Exist" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 19:59:48.336" endtime="20240424 19:59:48.407"/>
</kw>
<status status="PASS" starttime="20240424 19:59:48.336" endtime="20240424 19:59:48.407"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row1_recent_file}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:59:48.517" level="INFO">${row1_recent_file} = Solibri Building.smc</msg>
<status status="PASS" starttime="20240424 19:59:48.407" endtime="20240424 19:59:48.517"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${row1_recent_file}</arg>
<arg>${row_one_file}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:59:48.517" endtime="20240424 19:59:48.517"/>
</kw>
<status status="PASS" starttime="20240424 19:59:48.125" endtime="20240424 19:59:48.518"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row2_recent_file}</var>
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:59:48.630" level="INFO">${row2_recent_file} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 19:59:48.518" endtime="20240424 19:59:48.630"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${row2_recent_file}</arg>
<arg>${solibri_model}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:59:48.630" endtime="20240424 19:59:48.630"/>
</kw>
<status status="PASS" starttime="20240424 19:59:48.125" endtime="20240424 19:59:48.630"/>
</kw>
<kw name="Then Unpin the Pinned Model" library="pin_unpin_recent_models_step_definitions">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:59:48.630" endtime="20240424 19:59:48.737"/>
</kw>
<status status="PASS" starttime="20240424 19:59:48.630" endtime="20240424 19:59:48.737"/>
</kw>
<kw name="Then Open ifc Model" library="Common">
<arg>${crane_ifc}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:48.737" endtime="20240424 19:59:48.839"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 19:59:48.839" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 19:59:48.839" endtime="20240424 19:59:48.839"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 19:59:48.839" endtime="20240424 19:59:48.839"/>
</kw>
<status status="PASS" starttime="20240424 19:59:48.839" endtime="20240424 19:59:48.839"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:48.839" endtime="20240424 19:59:48.868"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:59:48.868" endtime="20240424 19:59:48.868"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:48.868" endtime="20240424 19:59:48.886"/>
</kw>
<status status="PASS" starttime="20240424 19:59:48.839" endtime="20240424 19:59:48.886"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 19:59:48.886" endtime="20240424 19:59:48.892"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:59:48.892" endtime="20240424 19:59:48.895"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:59:48.895" endtime="20240424 19:59:50.686"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${ifc_filename}</var>
<arg>${ifc_folder}</arg>
<arg>${ifc_filename}</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 19:59:50.686" level="INFO">${ifc_filename} = C:\users\public\Solibri\SOLIBRI\Samples\ifc\Crane.ifc</msg>
<status status="PASS" starttime="20240424 19:59:50.686" endtime="20240424 19:59:50.686"/>
</kw>
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 19:59:50.686" endtime="20240424 19:59:51.572"/>
</kw>
<status status="PASS" starttime="20240424 19:59:50.686" endtime="20240424 19:59:51.572"/>
</kw>
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<msg timestamp="20240424 19:59:51.826" level="INFO">Closed dialog ''.</msg>
<status status="PASS" starttime="20240424 19:59:51.572" endtime="20240424 19:59:51.826"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:51.826" endtime="20240424 19:59:51.836"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:59:51.836" endtime="20240424 19:59:51.854"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:51.854" endtime="20240424 19:59:51.857"/>
</kw>
<status status="PASS" starttime="20240424 19:59:51.826" endtime="20240424 19:59:51.857"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 19:59:53.633" level="INFO">2024-04-24 19:59:52.958+0000 [Thread-39] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 31 ms.
2024-04-24 19:59:52.958+0000 [Thread-39] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 1039 ms (using 1 threads)
2024-04-24 19:59:53.077+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 46 ms
2024-04-24 19:59:53.202+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Crane) converted in: 244 ms.</msg>
<status status="PASS" starttime="20240424 19:59:51.857" endtime="20240424 19:59:53.633"/>
</kw>
<status status="PASS" starttime="20240424 19:59:51.857" endtime="20240424 19:59:53.633"/>
</kw>
<msg timestamp="20240424 19:59:53.633" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 19:59:51.857" endtime="20240424 19:59:53.633"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 19:59:53.633" endtime="20240424 19:59:53.806"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 19:59:53.806" endtime="20240424 19:59:53.866"/>
</kw>
<status status="PASS" starttime="20240424 19:59:53.633" endtime="20240424 19:59:53.866"/>
</branch>
<status status="PASS" starttime="20240424 19:59:53.633" endtime="20240424 19:59:53.866"/>
</if>
<status status="PASS" starttime="20240424 19:59:51.572" endtime="20240424 19:59:53.866"/>
</kw>
<status status="PASS" starttime="20240424 19:59:48.737" endtime="20240424 19:59:53.866"/>
</kw>
<kw name="Then Verify Again Recent Models" library="pin_unpin_recent_models_step_definitions">
<arg>${crane_ifc}</arg>
<kw name="Split Path" library="OperatingSystem">
<var>${model_extension}</var>
<var>${model_name}</var>
<arg>${opened_model}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 19:59:53.866" level="INFO">${model_extension} = C:\users\public\Solibri\SOLIBRI\Samples\ifc</msg>
<msg timestamp="20240424 19:59:53.866" level="INFO">${model_name} = Crane.ifc</msg>
<status status="PASS" starttime="20240424 19:59:53.866" endtime="20240424 19:59:53.866"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:53.866" endtime="20240424 19:59:53.876"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:59:53.876" endtime="20240424 19:59:53.876"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:53.876" endtime="20240424 19:59:53.889"/>
</kw>
<status status="PASS" starttime="20240424 19:59:53.866" endtime="20240424 19:59:53.889"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Exist</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Exist" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 19:59:53.889" endtime="20240424 19:59:54.079"/>
</kw>
<status status="PASS" starttime="20240424 19:59:53.889" endtime="20240424 19:59:54.079"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row1_recent_file}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:59:54.089" level="INFO">${row1_recent_file} = Crane.ifc</msg>
<status status="PASS" starttime="20240424 19:59:54.079" endtime="20240424 19:59:54.089"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${row1_recent_file}</arg>
<arg>${model_name}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:59:54.089" endtime="20240424 19:59:54.089"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row2_recent_file}</var>
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 19:59:54.114" level="INFO">${row2_recent_file} = Solibri Building.smc</msg>
<status status="PASS" starttime="20240424 19:59:54.089" endtime="20240424 19:59:54.114"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${row2_recent_file}</arg>
<arg>${row_one_file}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 19:59:54.114" endtime="20240424 19:59:54.114"/>
</kw>
<status status="PASS" starttime="20240424 19:59:53.866" endtime="20240424 19:59:54.114"/>
</kw>
<kw name="Then Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 19:59:54.114" endtime="20240424 19:59:54.224"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:54.224" endtime="20240424 19:59:54.236"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 19:59:54.236" endtime="20240424 19:59:54.238"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 19:59:54.238" endtime="20240424 19:59:54.265"/>
</kw>
<status status="PASS" starttime="20240424 19:59:54.224" endtime="20240424 19:59:54.265"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 19:59:54.265" endtime="20240424 19:59:54.273"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 19:59:54.273" endtime="20240424 19:59:54.283"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 20:00:04.288" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 19:59:54.283" endtime="20240424 20:00:04.288"/>
</kw>
<msg timestamp="20240424 20:00:04.288" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 19:59:54.283" endtime="20240424 20:00:04.288"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:00:04.288" endtime="20240424 20:00:04.315"/>
</kw>
<msg timestamp="20240424 20:00:04.315" level="INFO">${check_if_save_asked} = True</msg>
<status status="PASS" starttime="20240424 20:00:04.288" endtime="20240424 20:00:04.315"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:04.315" endtime="20240424 20:00:04.321"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:00:04.321" endtime="20240424 20:00:04.513"/>
</kw>
<status status="PASS" starttime="20240424 20:00:04.315" endtime="20240424 20:00:04.513"/>
</kw>
<status status="PASS" starttime="20240424 20:00:04.315" endtime="20240424 20:00:04.513"/>
</branch>
<status status="PASS" starttime="20240424 20:00:04.315" endtime="20240424 20:00:04.513"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 20:00:04.513" endtime="20240424 20:00:04.513"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:00:04.513" endtime="20240424 20:00:04.513"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:00:04.513" endtime="20240424 20:00:04.513"/>
</branch>
<status status="PASS" starttime="20240424 20:00:04.513" endtime="20240424 20:00:04.513"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:04.513" endtime="20240424 20:00:04.523"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 20:00:04.529" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 20:00:04.523" endtime="20240424 20:00:04.529"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:00:07.543" endtime="20240424 20:00:07.546"/>
</kw>
<status status="PASS" starttime="20240424 20:00:04.523" endtime="20240424 20:00:07.546"/>
</kw>
<status status="PASS" starttime="20240424 19:59:54.114" endtime="20240424 20:00:07.546"/>
</kw>
<status status="PASS" starttime="20240424 19:59:06.621" endtime="20240424 20:00:07.546"/>
</test>
<doc>Verify Pin and Unpin Buttons on Recent Models</doc>
<meta name="Feature">Pin_Unpin Recent Models</meta>
<meta name="Generated by">_gherkin2robotframework on 2023-08-18T12:16:26.455140_</meta>
<status status="PASS" starttime="20240424 19:59:06.574" endtime="20240424 20:00:07.546"/>
</suite>
<suite id="s1-s16" name="17 Compartmentation" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\17_compartmentation.robot">
<test id="s1-s16-t1" name="Verify Compartmentation" line="13">
<kw name="Background">
<doc>Launch Solibri And Login To SSC</doc>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 20:00:07.794" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 20:00:07.794" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 20:00:07 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 20:00:07.593" endtime="20240424 20:00:07.794"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 20:00:07.794" endtime="20240424 20:00:07.794"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:07.794" endtime="20240424 20:00:07.861"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 20:00:07.864" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 20:00:07.861" endtime="20240424 20:00:07.864"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 20:00:07.864" endtime="20240424 20:00:07.864"/>
</kw>
<status status="PASS" starttime="20240424 20:00:07.861" endtime="20240424 20:00:07.864"/>
</kw>
<status status="PASS" starttime="20240424 20:00:07.593" endtime="20240424 20:00:07.864"/>
</kw>
<kw name="When User Logs In To SSC" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Logged in to SSC</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 20:00:07.864" endtime="20240424 20:00:07.864"/>
</kw>
<status status="PASS" starttime="20240424 20:00:07.864" endtime="20240424 20:00:07.864"/>
</kw>
<kw name="Then Solibri Office Is Opened" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Solibri Office Is Opened</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 20:00:07.864" endtime="20240424 20:00:07.864"/>
</kw>
<status status="PASS" starttime="20240424 20:00:07.864" endtime="20240424 20:00:07.864"/>
</kw>
<status status="PASS" starttime="20240424 20:00:07.593" endtime="20240424 20:00:07.864"/>
</kw>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 20:00:07.880" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 20:00:07.880" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 20:00:07 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 20:00:07.864" endtime="20240424 20:00:07.880"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 20:00:07.880" endtime="20240424 20:00:07.880"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:07.880" endtime="20240424 20:00:07.922"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 20:00:07.930" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 20:00:07.922" endtime="20240424 20:00:07.930"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 20:00:07.930" endtime="20240424 20:00:07.930"/>
</kw>
<status status="PASS" starttime="20240424 20:00:07.922" endtime="20240424 20:00:07.930"/>
</kw>
<status status="PASS" starttime="20240424 20:00:07.864" endtime="20240424 20:00:07.930"/>
</kw>
<kw name="And No Existing Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:07.930" endtime="20240424 20:00:07.967"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:00:07.967" endtime="20240424 20:00:07.983"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:07.983" endtime="20240424 20:00:08.027"/>
</kw>
<status status="PASS" starttime="20240424 20:00:07.930" endtime="20240424 20:00:08.027"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:00:08.027" endtime="20240424 20:00:08.050"/>
</kw>
<status status="PASS" starttime="20240424 20:00:08.027" endtime="20240424 20:00:08.050"/>
</kw>
<msg timestamp="20240424 20:00:08.050" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 20:00:08.027" endtime="20240424 20:00:08.050"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 20:00:08.050" endtime="20240424 20:00:08.050"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:00:08.050" endtime="20240424 20:00:08.050"/>
</branch>
<status status="PASS" starttime="20240424 20:00:08.050" endtime="20240424 20:00:08.050"/>
</if>
<status status="PASS" starttime="20240424 20:00:07.930" endtime="20240424 20:00:08.050"/>
</kw>
<kw name="And I Choose a Role" library="checking_view_step_definitions">
<arg>BIM Validation - Architectural</arg>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:08.050" endtime="20240424 20:00:08.071"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:00:08.071" endtime="20240424 20:00:08.071"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:08.071" endtime="20240424 20:00:08.071"/>
</kw>
<status status="PASS" starttime="20240424 20:00:08.050" endtime="20240424 20:00:08.071"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open Role</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:00:08.071" endtime="20240424 20:00:09.560"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${role_with_path}</var>
<arg>${roles_folder}</arg>
<arg>${selected_role}.xml</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 20:00:09.560" level="INFO">${role_with_path} = C:\users\public\Solibri\SOLIBRI\Roles\BIM Validation - Architectural.xml</msg>
<status status="PASS" starttime="20240424 20:00:09.560" endtime="20240424 20:00:09.560"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${role_with_path}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 20:00:09.560" endtime="20240424 20:00:09.663"/>
</kw>
<status status="PASS" starttime="20240424 20:00:08.050" endtime="20240424 20:00:09.663"/>
</kw>
<kw name="And IFC File Is Open" library="ModelHandlingResource">
<arg>${solibri_building_ifc}</arg>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${file_name_with_path}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:09.663" endtime="20240424 20:00:09.674"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 20:00:09.674" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 20:00:09.674" endtime="20240424 20:00:09.674"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 20:00:09.674" endtime="20240424 20:00:09.674"/>
</kw>
<status status="PASS" starttime="20240424 20:00:09.674" endtime="20240424 20:00:09.674"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:09.674" endtime="20240424 20:00:09.682"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:00:09.682" endtime="20240424 20:00:09.687"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:09.687" endtime="20240424 20:00:09.697"/>
</kw>
<status status="PASS" starttime="20240424 20:00:09.674" endtime="20240424 20:00:09.697"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:00:09.697" endtime="20240424 20:00:09.774"/>
</kw>
<status status="PASS" starttime="20240424 20:00:09.697" endtime="20240424 20:00:09.774"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 20:00:09.775" endtime="20240424 20:00:09.775"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:00:09.775" endtime="20240424 20:00:09.781"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:09.781" endtime="20240424 20:00:10.192"/>
</kw>
<status status="PASS" starttime="20240424 20:00:09.781" endtime="20240424 20:00:10.192"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 20:00:10.202" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 20:00:10.202" endtime="20240424 20:00:10.202"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 20:00:10.202" endtime="20240424 20:00:10.202"/>
</return>
<msg timestamp="20240424 20:00:10.202" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 20:00:10.202" endtime="20240424 20:00:10.202"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 20:00:10.202" endtime="20240424 20:00:10.415"/>
</kw>
<status status="PASS" starttime="20240424 20:00:10.202" endtime="20240424 20:00:10.415"/>
</kw>
<status status="PASS" starttime="20240424 20:00:10.202" endtime="20240424 20:00:10.415"/>
</branch>
<status status="PASS" starttime="20240424 20:00:10.202" endtime="20240424 20:00:10.415"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 20:00:10.415" endtime="20240424 20:00:10.415"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:00:10.415" endtime="20240424 20:00:10.415"/>
</branch>
<status status="PASS" starttime="20240424 20:00:10.415" endtime="20240424 20:00:10.415"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 20:00:10.415" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\ifc</msg>
<msg timestamp="20240424 20:00:10.415" level="INFO">${filename} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 20:00:10.415" endtime="20240424 20:00:10.415"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 20:00:10.415" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 20:00:10.415" level="INFO">${ext} = ifc</msg>
<status status="PASS" starttime="20240424 20:00:10.415" endtime="20240424 20:00:10.415"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<status status="NOT RUN" starttime="20240424 20:00:10.415" endtime="20240424 20:00:10.415"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:00:10.415" endtime="20240424 20:00:10.415"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 20:00:10.415" endtime="20240424 20:00:10.539"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:10.539" endtime="20240424 20:00:10.559"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:00:10.559" endtime="20240424 20:00:10.575"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:10.575" endtime="20240424 20:00:10.622"/>
</kw>
<status status="PASS" starttime="20240424 20:00:10.539" endtime="20240424 20:00:10.622"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 20:00:15.380" level="INFO">2024-04-24 20:00:12.455+0000 [Thread-59] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 31 ms.
2024-04-24 20:00:12.455+0000 [Thread-59] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 2056 ms (using 1 threads)
2024-04-24 20:00:12.584+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 129 ms
2024-04-24 20:00:14.372+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 1917 ms.</msg>
<status status="PASS" starttime="20240424 20:00:10.622" endtime="20240424 20:00:15.380"/>
</kw>
<status status="PASS" starttime="20240424 20:00:10.622" endtime="20240424 20:00:15.380"/>
</kw>
<msg timestamp="20240424 20:00:15.380" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 20:00:10.622" endtime="20240424 20:00:15.380"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:15.380" endtime="20240424 20:00:15.471"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:00:15.471" endtime="20240424 20:00:17.448"/>
</kw>
<status status="PASS" starttime="20240424 20:00:15.380" endtime="20240424 20:00:17.448"/>
</branch>
<status status="PASS" starttime="20240424 20:00:15.380" endtime="20240424 20:00:17.448"/>
</if>
<status status="PASS" starttime="20240424 20:00:10.415" endtime="20240424 20:00:17.448"/>
</kw>
<status status="PASS" starttime="20240424 20:00:10.415" endtime="20240424 20:00:17.448"/>
</branch>
<status status="PASS" starttime="20240424 20:00:10.415" endtime="20240424 20:00:17.448"/>
</if>
<status status="PASS" starttime="20240424 20:00:09.663" endtime="20240424 20:00:17.448"/>
</kw>
<status status="PASS" starttime="20240424 20:00:09.663" endtime="20240424 20:00:17.448"/>
</kw>
<kw name="Then Restore Default Units Settings" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:17.448" endtime="20240424 20:00:17.454"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:17.454" endtime="20240424 20:00:17.465"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:00:17.465" endtime="20240424 20:00:17.468"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:17.468" endtime="20240424 20:00:17.495"/>
</kw>
<status status="PASS" starttime="20240424 20:00:17.454" endtime="20240424 20:00:17.495"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:17.495" endtime="20240424 20:00:18.031"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Units</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:00:18.031" endtime="20240424 20:00:18.034"/>
</kw>
<kw name="Restore Default Settings" library="settings_step_definitions">
<arg>Units</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>${settings_dialog}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:18.034" endtime="20240424 20:00:18.295"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Restore Default Settings</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:00:18.295" endtime="20240424 20:00:18.378"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Restore Default Settings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:18.378" endtime="20240424 20:00:18.384"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Yes</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:00:18.384" endtime="20240424 20:00:18.513"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${settings_dialog}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:18.513" endtime="20240424 20:00:18.573"/>
</kw>
<status status="PASS" starttime="20240424 20:00:18.034" endtime="20240424 20:00:18.573"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:00:18.573" endtime="20240424 20:00:18.593"/>
</kw>
<status status="PASS" starttime="20240424 20:00:17.448" endtime="20240424 20:00:18.593"/>
</kw>
<kw name="Then Verify Compartmentation" library="compartmentation_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:18.593" endtime="20240424 20:00:18.646"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 20:00:18.646" endtime="20240424 20:00:18.760"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>MODEL</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:18.760" endtime="20240424 20:00:18.760"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:00:18.760" endtime="20240424 20:00:18.760"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:18.760" endtime="20240424 20:00:18.760"/>
</kw>
<status status="PASS" starttime="20240424 20:00:18.760" endtime="20240424 20:00:18.760"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>VIEWS</arg>
<arg>COMPARTMENTATION</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:00:18.775" endtime="20240424 20:00:19.534"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:19.534" endtime="20240424 20:00:19.886"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:19.886" endtime="20240424 20:00:19.943"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:19.943" endtime="20240424 20:00:19.982"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>7</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:19.982" endtime="20240424 20:00:20.070"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>8</arg>
<arg>1OOpfyUrnChBjXaXlIhzP1</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:20.070" endtime="20240424 20:00:20.161"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:20.161" endtime="20240424 20:00:20.269"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:20.269" endtime="20240424 20:00:20.685"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:00:20.685" endtime="20240424 20:00:20.780"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:20.833" level="INFO">${current_component} = 1OOpfyUrnChBjXaXlIhzP1</msg>
<status status="PASS" starttime="20240424 20:00:20.780" endtime="20240424 20:00:20.833"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:20.833" endtime="20240424 20:00:20.833"/>
</kw>
<status status="PASS" starttime="20240424 20:00:20.070" endtime="20240424 20:00:20.833"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>14</arg>
<arg>0_C8LsG8H2QfEPhx7zxWGB</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:20.833" endtime="20240424 20:00:20.903"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:20.903" endtime="20240424 20:00:20.984"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:20.984" endtime="20240424 20:00:21.218"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:00:21.218" endtime="20240424 20:00:21.275"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:21.287" level="INFO">${current_component} = 0_C8LsG8H2QfEPhx7zxWGB</msg>
<status status="PASS" starttime="20240424 20:00:21.275" endtime="20240424 20:00:21.287"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:21.287" endtime="20240424 20:00:21.287"/>
</kw>
<status status="PASS" starttime="20240424 20:00:20.833" endtime="20240424 20:00:21.287"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>20</arg>
<arg>1CzmtCt7j3EgliG_FdiIoH</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:21.287" endtime="20240424 20:00:21.387"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:21.387" endtime="20240424 20:00:21.614"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:21.614" endtime="20240424 20:00:21.716"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:00:21.716" endtime="20240424 20:00:21.805"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:21.841" level="INFO">${current_component} = 1CzmtCt7j3EgliG_FdiIoH</msg>
<status status="PASS" starttime="20240424 20:00:21.805" endtime="20240424 20:00:21.841"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:21.841" endtime="20240424 20:00:21.841"/>
</kw>
<status status="PASS" starttime="20240424 20:00:21.287" endtime="20240424 20:00:21.841"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:21.841" endtime="20240424 20:00:21.841"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:21.841" endtime="20240424 20:00:21.857"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Compartmentation Wizard</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:00:21.857" endtime="20240424 20:00:21.961"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Compartmentation Wizard</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:21.961" endtime="20240424 20:00:21.991"/>
</kw>
<kw name="Push Radio Button" library="SwingRobot">
<arg>1</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:00:21.991" endtime="20240424 20:00:22.075"/>
</kw>
<kw name="Push Radio Button" library="SwingRobot">
<arg>6</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:00:22.075" endtime="20240424 20:00:22.085"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:00:22.085" endtime="20240424 20:00:22.199"/>
</kw>
<kw name="Verify Components" library="compartmentation_step_definitions">
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:22.199" endtime="20240424 20:00:22.223"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>22</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:22.223" endtime="20240424 20:00:23.652"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>22</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:23.652" endtime="20240424 20:00:23.726"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Click On Table Cell</arg>
<arg>0</arg>
<arg>24</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>24</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:23.726" endtime="20240424 20:00:23.929"/>
</kw>
<status status="PASS" starttime="20240424 20:00:23.726" endtime="20240424 20:00:23.929"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>34</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:23.929" endtime="20240424 20:00:24.375"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>49</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:24.375" endtime="20240424 20:00:24.767"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>63</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:24.767" endtime="20240424 20:00:25.078"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>25</arg>
<arg>3SgquPBfz92e9iss$jq5a_</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:25.078" endtime="20240424 20:00:25.219"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:25.235" endtime="20240424 20:00:25.704"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:25.704" endtime="20240424 20:00:25.752"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:00:25.752" endtime="20240424 20:00:25.823"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:25.914" level="INFO">${current_component} = 3SgquPBfz92e9iss$jq5a_</msg>
<status status="PASS" starttime="20240424 20:00:25.823" endtime="20240424 20:00:25.914"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:25.914" endtime="20240424 20:00:25.914"/>
</kw>
<status status="PASS" starttime="20240424 20:00:25.078" endtime="20240424 20:00:25.914"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>32</arg>
<arg>27xQ8B8pT3mvak2foSRYgn</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:25.914" endtime="20240424 20:00:25.955"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:25.955" endtime="20240424 20:00:26.036"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:26.036" endtime="20240424 20:00:26.246"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:00:26.246" endtime="20240424 20:00:26.284"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:26.291" level="INFO">${current_component} = 27xQ8B8pT3mvak2foSRYgn</msg>
<status status="PASS" starttime="20240424 20:00:26.284" endtime="20240424 20:00:26.291"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:26.291" endtime="20240424 20:00:26.291"/>
</kw>
<status status="PASS" starttime="20240424 20:00:25.914" endtime="20240424 20:00:26.291"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>35</arg>
<arg>0KWu2NH1PF2AkGZkMvKibB</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:26.291" endtime="20240424 20:00:26.331"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:26.331" endtime="20240424 20:00:26.415"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:26.415" endtime="20240424 20:00:26.566"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:00:26.566" endtime="20240424 20:00:26.588"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:26.588" level="INFO">${current_component} = 0KWu2NH1PF2AkGZkMvKibB</msg>
<status status="PASS" starttime="20240424 20:00:26.588" endtime="20240424 20:00:26.588"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:26.588" endtime="20240424 20:00:26.588"/>
</kw>
<status status="PASS" starttime="20240424 20:00:26.291" endtime="20240424 20:00:26.588"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>47</arg>
<arg>1Jd7UlcYb73PJnEMOhW8cM</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:26.588" endtime="20240424 20:00:26.606"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:26.606" endtime="20240424 20:00:26.849"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:26.849" endtime="20240424 20:00:26.988"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:00:26.988" endtime="20240424 20:00:27.042"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:27.050" level="INFO">${current_component} = 1Jd7UlcYb73PJnEMOhW8cM</msg>
<status status="PASS" starttime="20240424 20:00:27.042" endtime="20240424 20:00:27.050"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:27.050" endtime="20240424 20:00:27.050"/>
</kw>
<status status="PASS" starttime="20240424 20:00:26.588" endtime="20240424 20:00:27.050"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>50</arg>
<arg>3mBMZfMUb3pRubPyhPaOMg</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:27.050" endtime="20240424 20:00:27.126"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:27.126" endtime="20240424 20:00:27.231"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:27.231" endtime="20240424 20:00:27.476"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:00:27.476" endtime="20240424 20:00:27.523"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:27.575" level="INFO">${current_component} = 3mBMZfMUb3pRubPyhPaOMg</msg>
<status status="PASS" starttime="20240424 20:00:27.523" endtime="20240424 20:00:27.575"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:27.575" endtime="20240424 20:00:27.575"/>
</kw>
<status status="PASS" starttime="20240424 20:00:27.050" endtime="20240424 20:00:27.575"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>62</arg>
<arg>3i5kUtXYv8uhjzxXeznHby</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:27.575" endtime="20240424 20:00:27.626"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:27.626" endtime="20240424 20:00:27.888"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:27.888" endtime="20240424 20:00:27.998"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:00:27.998" endtime="20240424 20:00:28.061"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:28.068" level="INFO">${current_component} = 3i5kUtXYv8uhjzxXeznHby</msg>
<status status="PASS" starttime="20240424 20:00:28.061" endtime="20240424 20:00:28.068"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:28.068" endtime="20240424 20:00:28.068"/>
</kw>
<status status="PASS" starttime="20240424 20:00:27.575" endtime="20240424 20:00:28.068"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>64</arg>
<arg>3cAF6Z6l1AaAN$n1Dh1jf8</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:28.068" endtime="20240424 20:00:28.103"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:28.103" endtime="20240424 20:00:28.231"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:28.231" endtime="20240424 20:00:28.370"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:00:28.370" endtime="20240424 20:00:28.388"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:28.388" level="INFO">${current_component} = 3cAF6Z6l1AaAN$n1Dh1jf8</msg>
<status status="PASS" starttime="20240424 20:00:28.388" endtime="20240424 20:00:28.388"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:28.388" endtime="20240424 20:00:28.388"/>
</kw>
<status status="PASS" starttime="20240424 20:00:28.068" endtime="20240424 20:00:28.388"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>68</arg>
<arg>3jRPkbPL18oeX1QqgppzDS</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:28.388" endtime="20240424 20:00:28.410"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:28.410" endtime="20240424 20:00:28.505"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:28.505" endtime="20240424 20:00:28.632"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:00:28.632" endtime="20240424 20:00:28.670"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:28.683" level="INFO">${current_component} = 3jRPkbPL18oeX1QqgppzDS</msg>
<status status="PASS" starttime="20240424 20:00:28.670" endtime="20240424 20:00:28.683"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:28.683" endtime="20240424 20:00:28.683"/>
</kw>
<status status="PASS" starttime="20240424 20:00:28.388" endtime="20240424 20:00:28.684"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:28.684" endtime="20240424 20:00:28.691"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${area_of_ground_floor}</var>
<arg>0</arg>
<arg>24</arg>
<arg>2</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:28.726" level="INFO">${area_of_ground_floor} = 2,021.57 sq ft</msg>
<status status="PASS" starttime="20240424 20:00:28.691" endtime="20240424 20:00:28.726"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${area_of_ground_floor}</arg>
<arg>2,021.57 sq ft</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:28.726" endtime="20240424 20:00:28.726"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${area_of_first_floor}</var>
<arg>0</arg>
<arg>34</arg>
<arg>2</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:28.726" level="INFO">${area_of_first_floor} = 2,154.93 sq ft</msg>
<status status="PASS" starttime="20240424 20:00:28.726" endtime="20240424 20:00:28.726"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${area_of_first_floor}</arg>
<arg>2,154.93 sq ft</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:28.726" endtime="20240424 20:00:28.726"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${area_of_second_floor}</var>
<arg>0</arg>
<arg>49</arg>
<arg>2</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:28.726" level="INFO">${area_of_second_floor} = 2,155.05 sq ft</msg>
<status status="PASS" starttime="20240424 20:00:28.726" endtime="20240424 20:00:28.726"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${area_of_second_floor}</arg>
<arg>2,155.05 sq ft</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:28.726" endtime="20240424 20:00:28.726"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${area_of_roof_floor}</var>
<arg>0</arg>
<arg>63</arg>
<arg>2</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:28.738" level="INFO">${area_of_roof_floor} = 164.34 sq ft</msg>
<status status="PASS" starttime="20240424 20:00:28.726" endtime="20240424 20:00:28.738"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${area_of_roof_floor}</arg>
<arg>164.34 sq ft</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:28.738" endtime="20240424 20:00:28.738"/>
</kw>
<status status="PASS" starttime="20240424 20:00:22.199" endtime="20240424 20:00:28.738"/>
</kw>
<status status="PASS" starttime="20240424 20:00:18.593" endtime="20240424 20:00:28.738"/>
</kw>
<kw name="Then Save And Close Model" library="ModelHandlingResource">
<kw name="Save Model" library="ModelHandlingResource">
<arg>${button_save_title}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:28.738" endtime="20240424 20:00:28.738"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<msg timestamp="20240424 20:00:28.917" level="INFO">Closed dialog 'COMPARTMENTATION'.</msg>
<status status="PASS" starttime="20240424 20:00:28.738" endtime="20240424 20:00:28.917"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:28.917" endtime="20240424 20:00:28.935"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:00:28.935" endtime="20240424 20:00:28.935"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:28.940" endtime="20240424 20:00:28.958"/>
</kw>
<status status="PASS" starttime="20240424 20:00:28.917" endtime="20240424 20:00:28.958"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:00:28.958" endtime="20240424 20:00:29.120"/>
</kw>
<status status="PASS" starttime="20240424 20:00:28.958" endtime="20240424 20:00:29.120"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 20:00:29.120" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 20:00:29.120" endtime="20240424 20:00:29.120"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 20:00:29.120" endtime="20240424 20:00:29.120"/>
</return>
<msg timestamp="20240424 20:00:29.120" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20240424 20:00:29.120" endtime="20240424 20:00:29.120"/>
</kw>
<if>
<branch type="IF" condition="'${os}' == 'Windows'">
<kw name="Check If File Already Exists" library="ModelHandlingResource">
<var>${file_exists}</var>
<arg>${test_files_folder}\\Solibri Building.smc</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${file_exist}</var>
<arg>File Should Exist</arg>
<arg>${filename_to_check}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${filename_to_check}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20240424 20:00:29.120" level="INFO" html="true">File '&lt;a href="file://C:\Users\runneradmin\Documents\RFTestFiles\Solibri Building.smc"&gt;C:\Users\runneradmin\Documents\RFTestFiles\Solibri Building.smc&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20240424 20:00:29.120" endtime="20240424 20:00:29.120"/>
</kw>
<msg timestamp="20240424 20:00:29.120" level="INFO">${file_exist} = True</msg>
<status status="PASS" starttime="20240424 20:00:29.120" endtime="20240424 20:00:29.120"/>
</kw>
<return>
<value>${file_exist}</value>
<status status="PASS" starttime="20240424 20:00:29.120" endtime="20240424 20:00:29.120"/>
</return>
<msg timestamp="20240424 20:00:29.120" level="INFO">${file_exists} = True</msg>
<status status="PASS" starttime="20240424 20:00:29.120" endtime="20240424 20:00:29.120"/>
</kw>
<if>
<branch type="IF" condition="${file_exists}">
<kw name="Over Write File" library="ModelHandlingResource">
<arg>${test_files_folder}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:29.120" endtime="20240424 20:00:29.128"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>Save Model as</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:29.128" endtime="20240424 20:00:29.130"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>2</arg>
<arg>Select Dialog</arg>
<arg>Save As</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 20:00:30.501" level="INFO">2024-04-24 20:00:29.135+0000 [Save as model] WARN  c.s.s.p.c.c.CheckingState - invalid state transition asked, IdleState.requestStopChecking</msg>
<status status="PASS" starttime="20240424 20:00:29.130" endtime="20240424 20:00:30.501"/>
</kw>
<status status="PASS" starttime="20240424 20:00:29.130" endtime="20240424 20:00:30.501"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${folder_to_save}\\Solibri Building.smc</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 20:00:30.501" endtime="20240424 20:00:30.688"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>2</arg>
<arg>Select Dialog</arg>
<arg>Confirm Save As</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Confirm Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:30.688" endtime="20240424 20:00:30.696"/>
</kw>
<status status="PASS" starttime="20240424 20:00:30.688" endtime="20240424 20:00:30.696"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Yes</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:00:30.696" endtime="20240424 20:00:30.739"/>
</kw>
<status status="PASS" starttime="20240424 20:00:29.120" endtime="20240424 20:00:30.739"/>
</kw>
<status status="PASS" starttime="20240424 20:00:29.120" endtime="20240424 20:00:30.739"/>
</branch>
<branch type="ELSE">
<kw name="Click On Component" library="SwingRobot">
<arg>${save_button}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="NOT RUN" starttime="20240424 20:00:30.739" endtime="20240424 20:00:30.739"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>2</arg>
<arg>Select Dialog</arg>
<arg>Save As</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20240424 20:00:30.739" endtime="20240424 20:00:30.739"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${test_files_folder}\\Solibri Building.smc</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="NOT RUN" starttime="20240424 20:00:30.739" endtime="20240424 20:00:30.739"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:00:30.739" endtime="20240424 20:00:30.739"/>
</branch>
<status status="PASS" starttime="20240424 20:00:29.120" endtime="20240424 20:00:30.739"/>
</if>
<status status="PASS" starttime="20240424 20:00:29.120" endtime="20240424 20:00:30.739"/>
</branch>
<status status="PASS" starttime="20240424 20:00:29.120" endtime="20240424 20:00:30.739"/>
</if>
<if>
<branch type="IF" condition="'${os}' == 'Darwin'">
<kw name="Get Length" library="BuiltIn">
<var>${length}</var>
<arg>${test_files_folder}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20240424 20:00:30.739" endtime="20240424 20:00:30.739"/>
</kw>
<if>
<branch type="IF" condition="${length} &gt; 0">
<kw name="Navigate To Folder" library="ModelHandlingResource">
<arg>${test_files_folder}</arg>
<tag>mac</tag>
<status status="NOT RUN" starttime="20240424 20:00:30.739" endtime="20240424 20:00:30.739"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:00:30.739" endtime="20240424 20:00:30.739"/>
</branch>
<status status="NOT RUN" starttime="20240424 20:00:30.739" endtime="20240424 20:00:30.739"/>
</if>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${fileName}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<status status="NOT RUN" starttime="20240424 20:00:30.739" endtime="20240424 20:00:30.739"/>
</kw>
<kw name="Check If File Already Exists" library="ModelHandlingResource">
<var>${file_exists}</var>
<arg>${test_files_folder}/${fileName}</arg>
<status status="NOT RUN" starttime="20240424 20:00:30.739" endtime="20240424 20:00:30.739"/>
</kw>
<if>
<branch type="IF" condition="${file_exists}">
<kw name="Over Write File" library="ModelHandlingResource">
<arg>${test_files_folder}</arg>
<status status="NOT RUN" starttime="20240424 20:00:30.739" endtime="20240424 20:00:30.739"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:00:30.739" endtime="20240424 20:00:30.739"/>
</branch>
<branch type="ELSE">
<kw name="Click On Component" library="SwingRobot">
<arg>${save_button}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="NOT RUN" starttime="20240424 20:00:30.739" endtime="20240424 20:00:30.739"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 20:00:30.739" endtime="20240424 20:00:30.739"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Save As</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:00:30.739" endtime="20240424 20:00:30.739"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:00:30.739" endtime="20240424 20:00:30.739"/>
</branch>
<status status="NOT RUN" starttime="20240424 20:00:30.739" endtime="20240424 20:00:30.739"/>
</if>
<status status="NOT RUN" starttime="20240424 20:00:30.739" endtime="20240424 20:00:30.739"/>
</branch>
<status status="PASS" starttime="20240424 20:00:30.739" endtime="20240424 20:00:30.739"/>
</if>
<kw name="Wait For Project To Save" library="ModelHandlingResource">
<kw name="Log To Console" library="BuiltIn">
<arg>Waiting For Project To Save</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 20:00:30.739" endtime="20240424 20:00:30.739"/>
</kw>
<kw name="Wait For Saving Progress To Complete" library="ModelHandlingResource">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:30.739" endtime="20240424 20:00:30.739"/>
</kw>
<kw name="List Components In Context" library="SwingRobot">
<arg>formatted</arg>
<doc>Prints components (their types and their internal names) from the selected context.</doc>
<msg timestamp="20240424 20:00:30.899" level="INFO">Level: 0 Component: com.solibri.saf.core.ApplicationFrame Index: 0 Name: frame0
    Level: 1 Component: javax.swing.JRootPane Index: 0 Name: null
       Level: 2 Component: javax.swing.JPanel Index: 0 Name: null.glassPane
       Level: 2 Component: javax.swing.JLayeredPane Index: 0 Name: null.layeredPane
          Level: 3 Component: com.solibri.modelchecker.ui.SmcPerspectivePanel Index: 1 Name: null
             Level: 4 Component: javax.swing.JPanel Index: 2 Name: null
                Level: 5 Component: javax.swing.JPanel Index: 3 Name: null
                   Level: 6 Component: com.solibri.saf.plugins.java3dplugin.actions.ThreeDViewToolbar Index: 4 Name: null
                      Level: 7 Component: com.solibri.saf.plugins.java3dplugin.actions.ThreeDViewToolbar$ToolbarWithThemeIconSize Index: null Name: 3D
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 0 Name: Undo
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 1 Name: Redo
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 2 Name: Spin
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 3 Name: dropDownButton
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 4 Name: Info
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 5 Name: dropDownButton
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 6 Name: Show All
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 7 Name: Show Unselected Transparent
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 8 Name: Show Selected
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 9 Name: Paint Visible With Current Color
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 10 Name: dropDownButton
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 11 Name: Show / Hide Space
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 12 Name: dropDownButton
                         Level: 8 Component: com.solibri.saf.plugins.java3dplugin.actions.FloorsVisibilityPopupMenuButton Index: 13 Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 14 Name: Zoom Extents
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 15 Name: Zoom In
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 16 Name: Zoom Out
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 17 Name: Zoom Selected
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 18 Name: Top Front Right
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 19 Name: dropDownButton
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 20 Name: Change Camera Projection
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$ToolBarToggleButton Index: 0 Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$ToolBarToggleButton Index: 1 Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 21 Name: null
                      Level: 7 Component: com.solibri.saf.core.ui.SearchField Index: 5 Name: null
                         Level: 8 Component: javax.swing.JTextField Index: 0 Name: null
                         Level: 8 Component: javax.swing.JButton Index: 22 Name: null
             Level: 4 Component: com.solibri.saf.core.ui.SafPanel Index: 6 Name: null
                Level: 5 Component: com.solibri.saf.core.ui.ViewSplitPane Index: 7 Name: null
                   Level: 6 Component: SMC_FILE Index: 8 Name: null
                      Level: 7 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel Index: 9 Name: FilePanel
                         Level: 8 Component: javax.swing.JPanel Index: 10 Name: null
                         Level: 8 Component: javax.swing.JToolBar Index: null Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$TransparentGradientPanel Index: 11 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 0 Name: Open Models
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 1 Name: Add Models
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 2 Name: Update Models
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 3 Name: Save Model
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 4 Name: Save Model as
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 5 Name: Security Settings
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 6 Name: Close
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 12 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 13 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 7 Name: Recent
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 8 Name: Integrations
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 9 Name: Roles
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 10 Name: Solution Center
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 11 Name: Settings
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 12 Name: Help
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 14 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 15 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 13 Name: Ruleset Manager
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 16 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 17 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 14 Name: Exit
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 18 Name: null
                         Level: 8 Component: com.solibri.saf.core.ui.SafPanel Index: 19 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.RecentPanel Index: 20 Name: RECENT
                               Level: 10 Component: com.solibri.saf.core.ui.ViewSplitPane Index: 21 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 22 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 15 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 0 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 0 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 23 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 24 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 1 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 25 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 26 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 0 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 0 Name: SafTable
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 0 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 1 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ViewSplitPane$Divider Index: 23 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 24 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 16 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 1 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 2 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 27 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 28 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 3 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 29 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 30 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 2 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 1 Name: SafTable
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 1 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 3 Name: null
                            Level: 9 Component: javax.swing.JPanel Index: 25 Name: REMOTE INTEGRATIONS
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 26 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 27 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 17 Name: null
                                     Level: 12 Component: javax.swing.JTextArea Index: 1 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 28 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 18 Name: null
                                     Level: 12 Component: com.solibri.saf.core.opencdedocuments.ConnectedServerLabel Index: 19 Name: null
                                     Level: 12 Component: javax.swing.JButton Index: 31 Name: null
                                     Level: 12 Component: javax.swing.JButton Index: 32 Name: null
                                     Level: 12 Component: javax.swing.JButton Index: 33 Name: null
                                     Level: 12 Component: com.solibri.saf.core.ui.SafPanel Index: 29 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 30 Name: null
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 31 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 20 Name: null
                                  Level: 11 Component: com.solibri.sae.ui.RoundedPanel Index: 32 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 2 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 4 Name: null
                                           Level: 14 Component: javax.swing.JPanel Index: 33 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 34 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 35 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 21 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 22 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 23 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 2 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 36 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 2 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 24 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 25 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 37 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 38 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 26 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 27 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 28 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 3 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 39 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 3 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 29 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 30 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 40 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 41 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 31 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 32 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 33 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 4 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 42 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 4 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 34 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 35 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 43 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 44 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 36 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 37 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 38 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 5 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 45 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 5 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 39 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 40 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 4 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 34 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 35 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 5 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 36 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 37 Name: null
                            Level: 9 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel Index: 46 Name: ROLES
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 47 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 41 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 42 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 43 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 44 Name: null
                                  Level: 11 Component: javax.swing.JTextField Index: 6 Name: roleNameText
                                  Level: 11 Component: com.solibri.saf.core.ui.HtmlEditorPanel Index: 48 Name: null
                                     Level: 12 Component: com.solibri.saf.core.DefaultViewToolBar Index: null Name: 
                                        Level: 13 Component: com.solibri.sae.ui.ToolBarButton Index: 38 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 3 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 5 Name: null
                                           Level: 14 Component: javax.swing.JTextPane Index: 7 Name: roleDescription
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 6 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 39 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 40 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 7 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 41 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 42 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$FileChooserPanel Index: 49 Name: null
                                     Level: 12 Component: javax.swing.JTextField Index: 8 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 43 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$LayoutFileChooserPanel Index: 50 Name: null
                                     Level: 12 Component: javax.swing.JTextField Index: 9 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 44 Name: null
                                  Level: 11 Component: com.solibri.sae.ui.JDefaultButton Index: 45 Name: null
                                  Level: 11 Component: com.solibri.sae.ui.ToolBarButton Index: 46 Name: Remove Default Layout Set
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 51 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.ResourceTablePanel Index: 52 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 45 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 4 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 8 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 47 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 48 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 9 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 49 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 50 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 6 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 2 Name: RULESETS
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 2 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 7 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 51 Name: Add Rulesets...
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 52 Name: Remove Rulesets
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.ResourceTablePanel Index: 53 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 46 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 5 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 10 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 53 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 54 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 11 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 55 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 56 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 8 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 3 Name: CLASSIFICATIONS
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 3 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 9 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 57 Name: Add Classifications...
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 58 Name: Remove Classifications
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.ResourceTablePanel Index: 54 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 47 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 6 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 12 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 59 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 60 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 13 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 61 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 62 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 10 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 4 Name: ITOS
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 4 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 11 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 63 Name: Add Information Takeoff Definitions...
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 64 Name: Remove Information Takeoff Definitions
                               Level: 10 Component: javax.swing.JSeparator Index: null Name: null
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 55 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$NamedActionButton Index: 65 Name: Save
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$NamedActionButton Index: 66 Name: Save As
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$NamedActionButton Index: 67 Name: Revert
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.SolutionCenterPanel Index: 56 Name: Solibri Solution Center
                               Level: 10 Component: javax.swing.JScrollPane Index: 7 Name: null
                                  Level: 11 Component: javax.swing.JViewport Index: 12 Name: null
                                     Level: 12 Component: javax.swing.JPanel Index: 57 Name: null
                                        Level: 13 Component: com.solibri.saf.core.ui.AntialisedLabel Index: 48 Name: null
                                        Level: 13 Component: com.solibri.saf.core.ui.AntialisedLabel Index: 49 Name: null
                                        Level: 13 Component: javax.swing.JPanel Index: 58 Name: null
                                        Level: 13 Component: javax.swing.JPanel Index: 59 Name: null
                                  Level: 11 Component: javax.swing.JScrollPane$ScrollBar Index: 14 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 68 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 69 Name: null
                                  Level: 11 Component: javax.swing.JScrollPane$ScrollBar Index: 15 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 70 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 71 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 60 Name: null
                                  Level: 11 Component: javax.swing.JTextPane Index: 10 Name: null
                                  Level: 11 Component: javax.swing.JButton Index: 72 Name: null
                                  Level: 11 Component: javax.swing.JPanel Index: 61 Name: null
                                     Level: 12 Component: javax.swing.JTextPane Index: 11 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 62 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.AntialisedLabel Index: 50 Name: null
                                  Level: 11 Component: javax.swing.JProgressBar Index: null Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.SettingsPanel Index: 63 Name: SETTINGS
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 51 Name: Layouts
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 52 Name: General
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 53 Name: Units
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 54 Name: Proxy Server Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 55 Name: Report Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 56 Name: Discipline and Color Map...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 57 Name: Checking...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 58 Name: Info...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 59 Name: IFC Import Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 60 Name: Presentation...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 61 Name: 3D...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 62 Name: Dimension...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 63 Name: Markup...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 64 Name: Sectioning...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 65 Name: Footprints...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 66 Name: Navigation Map...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 67 Name: DWG Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 68 Name: Hyperlink Templates...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 69 Name: BCF Live Connector...
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.HelpPanel Index: 64 Name: HELP
                               Level: 10 Component: javax.swing.JPanel Index: 65 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 70 Name: Help
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 71 Name: &lt;html&gt;&lt;u&gt;Support&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 72 Name: &lt;html&gt;&lt;u&gt;Feedback&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 73 Name: &lt;html&gt;&lt;u&gt;Tutorials&lt;/u&gt;
                                  Level: 11 Component: javax.swing.JSeparator Index: null Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 74 Name: &lt;html&gt;&lt;u&gt;Solibri Solution Center&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 75 Name: &lt;html&gt;&lt;u&gt;Solibri&lt;/u&gt;
                                  Level: 11 Component: javax.swing.JSeparator Index: null Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 76 Name: &lt;html&gt;&lt;u&gt;Check for Updates&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 77 Name: License Key...
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 78 Name: Borrow License...
                                  Level: 11 Component: javax.swing.JSeparator Index: null Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 79 Name: License Agreement...
                               Level: 10 Component: com.solibri.modelchecker.plugins.fileplugin.ui.InfoPanel Index: 66 Name: INFO
             Level: 4 Component: com.solibri.modelchecker.core.SmcPerspective$1 Index: null Name: Searchbar
                Level: 5 Component: com.solibri.modelchecker.core.SmcPerspective$ToDoToolBarButton Index: 73 Name: null
                Level: 5 Component: com.solibri.sae.ui.ToolBarButton Index: 74 Name: VIEWS
                Level: 5 Component: javax.swing.JButton Index: 75 Name: null
             Level: 4 Component: javax.swing.JPanel Index: 67 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 80 Name: null
                Level: 5 Component: javax.swing.JPanel Index: 68 Name: progressPanel
                   Level: 6 Component: javax.swing.JPanel Index: 69 Name: progressBarAndLabelPanel
                      Level: 7 Component: javax.swing.JProgressBar Index: null Name: thebar
                      Level: 7 Component: javax.swing.JLabel Index: 81 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 82 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 83 Name: Task
                Level: 5 Component: javax.swing.JLabel Index: 84 Name: null
                Level: 5 Component: javax.swing.JPanel Index: 70 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 85 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 86 Name: Selected
                Level: 5 Component: javax.swing.JLabel Index: 87 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 88 Name: SlideTrackingId
                Level: 5 Component: javax.swing.JLabel Index: 89 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 90 Name: SlideStatus
                Level: 5 Component: javax.swing.JLabel Index: 91 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 92 Name: Slide
                Level: 5 Component: javax.swing.JLabel Index: 93 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 94 Name: Coordinates
                Level: 5 Component: javax.swing.JLabel Index: 95 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 96 Name: Location
             Level: 4 Component: javax.swing.JPanel Index: 71 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 97 Name: null
             Level: 4 Component: javax.swing.JToolBar Index: null Name: Solibri Office
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 98 Name: FILE
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 99 Name: MODEL
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 100 Name: CHECKING
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 101 Name: COMMUNICATION
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 102 Name: INFORMATION TAKEOFF
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 103 Name: BCF LIVE CONNECTOR
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 104 Name: SCORE
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 105 Name: AddLayoutButton
          Level: 3 Component: com.formdev.flatlaf.ui.FlatTitlePane Index: null Name: null
             Level: 4 Component: javax.swing.JPanel Index: 72 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 106 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$2 Index: null Name: null
             Level: 4 Component: com.formdev.flatlaf.ui.FlatTitlePane$1 Index: 107 Name: null
             Level: 4 Component: com.formdev.flatlaf.ui.FlatTitlePane$4 Index: 73 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 76 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 77 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 78 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 79 Name: null</msg>
<status status="PASS" starttime="20240424 20:00:30.739" endtime="20240424 20:00:30.899"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${OS}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 20:00:30.915" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 20:00:30.915" endtime="20240424 20:00:30.915"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 20:00:30.915" endtime="20240424 20:00:30.915"/>
</return>
<msg timestamp="20240424 20:00:30.915" level="INFO">${OS} = Windows</msg>
<status status="PASS" starttime="20240424 20:00:30.899" endtime="20240424 20:00:30.915"/>
</kw>
<if>
<branch type="IF" condition="'${OS}' == 'Windows'">
<while condition="${True}">
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:00:30.915" endtime="20240424 20:00:32.155"/>
</kw>
<msg timestamp="20240424 20:00:32.155" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:00:30.915" endtime="20240424 20:00:32.155"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:00:32.155" endtime="20240424 20:00:32.155"/>
</break>
<status status="NOT RUN" starttime="20240424 20:00:32.155" endtime="20240424 20:00:32.155"/>
</branch>
<status status="PASS" starttime="20240424 20:00:32.155" endtime="20240424 20:00:32.155"/>
</if>
<status status="PASS" starttime="20240424 20:00:30.915" endtime="20240424 20:00:32.155"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 20:00:42.172" level="FAIL">Dialog 'Progress...' is not open</msg>
<status status="FAIL" starttime="20240424 20:00:32.155" endtime="20240424 20:00:42.172"/>
</kw>
<msg timestamp="20240424 20:00:42.172" level="INFO">${is_progress_dialog_displayed} = False</msg>
<status status="PASS" starttime="20240424 20:00:32.155" endtime="20240424 20:00:42.172"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="PASS" starttime="20240424 20:00:42.172" endtime="20240424 20:00:42.172"/>
</break>
<status status="PASS" starttime="20240424 20:00:42.172" endtime="20240424 20:00:42.172"/>
</branch>
<status status="PASS" starttime="20240424 20:00:42.172" endtime="20240424 20:00:42.172"/>
</if>
<status status="PASS" starttime="20240424 20:00:32.155" endtime="20240424 20:00:42.172"/>
</iter>
<status status="PASS" starttime="20240424 20:00:30.915" endtime="20240424 20:00:42.172"/>
</while>
<status status="PASS" starttime="20240424 20:00:30.915" endtime="20240424 20:00:42.172"/>
</branch>
<status status="PASS" starttime="20240424 20:00:30.915" endtime="20240424 20:00:42.172"/>
</if>
<if>
<branch type="IF" condition="'${OS}' == 'Darwin'">
<while condition="${True}">
<iter>
<kw name="Call Component Method" library="SwingRobot">
<var>${value}</var>
<arg>thebar</arg>
<arg>getValue</arg>
<doc>Calls a method from specified component.</doc>
<status status="NOT RUN" starttime="20240424 20:00:42.172" endtime="20240424 20:00:42.172"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Saving progress ${value}%</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240424 20:00:42.172" endtime="20240424 20:00:42.172"/>
</kw>
<if>
<branch type="IF" condition="'${value}' == '0'">
<break>
<status status="NOT RUN" starttime="20240424 20:00:42.172" endtime="20240424 20:00:42.172"/>
</break>
<status status="NOT RUN" starttime="20240424 20:00:42.172" endtime="20240424 20:00:42.172"/>
</branch>
<status status="NOT RUN" starttime="20240424 20:00:42.172" endtime="20240424 20:00:42.172"/>
</if>
<status status="NOT RUN" starttime="20240424 20:00:42.172" endtime="20240424 20:00:42.172"/>
</iter>
<status status="NOT RUN" starttime="20240424 20:00:42.172" endtime="20240424 20:00:42.172"/>
</while>
<status status="NOT RUN" starttime="20240424 20:00:42.172" endtime="20240424 20:00:42.172"/>
</branch>
<status status="PASS" starttime="20240424 20:00:42.172" endtime="20240424 20:00:42.172"/>
</if>
<status status="PASS" starttime="20240424 20:00:30.739" endtime="20240424 20:00:42.172"/>
</kw>
<status status="PASS" starttime="20240424 20:00:30.739" endtime="20240424 20:00:42.172"/>
</kw>
<status status="PASS" starttime="20240424 20:00:28.738" endtime="20240424 20:00:42.172"/>
</kw>
<kw name="Close Model Without Prompt" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:42.172" endtime="20240424 20:00:42.181"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:00:42.181" endtime="20240424 20:00:42.193"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:42.193" endtime="20240424 20:00:42.200"/>
</kw>
<status status="PASS" starttime="20240424 20:00:42.172" endtime="20240424 20:00:42.200"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:42.200" endtime="20240424 20:00:42.208"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Disabled</arg>
<arg>${button_close_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 20:00:42.209" endtime="20240424 20:00:42.384"/>
</kw>
<status status="PASS" starttime="20240424 20:00:42.208" endtime="20240424 20:00:42.447"/>
</kw>
<status status="PASS" starttime="20240424 20:00:42.172" endtime="20240424 20:00:42.447"/>
</kw>
<status status="PASS" starttime="20240424 20:00:28.738" endtime="20240424 20:00:42.447"/>
</kw>
<kw name="Then Reopen Model and Verify Persistence" library="compartmentation_step_definitions">
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${test_files_folder}/Solibri Building.smc</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:42.447" endtime="20240424 20:00:42.584"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 20:00:42.587" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 20:00:42.584" endtime="20240424 20:00:42.587"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 20:00:42.587" endtime="20240424 20:00:42.587"/>
</kw>
<status status="PASS" starttime="20240424 20:00:42.584" endtime="20240424 20:00:42.587"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:42.587" endtime="20240424 20:00:42.619"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:00:42.619" endtime="20240424 20:00:42.622"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:42.622" endtime="20240424 20:00:42.631"/>
</kw>
<status status="PASS" starttime="20240424 20:00:42.587" endtime="20240424 20:00:42.631"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:00:42.631" endtime="20240424 20:00:42.674"/>
</kw>
<status status="PASS" starttime="20240424 20:00:42.631" endtime="20240424 20:00:42.674"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 20:00:42.674" endtime="20240424 20:00:42.678"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:00:42.678" endtime="20240424 20:00:42.678"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:42.678" endtime="20240424 20:00:44.158"/>
</kw>
<status status="PASS" starttime="20240424 20:00:42.678" endtime="20240424 20:00:44.158"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 20:00:44.158" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 20:00:44.158" endtime="20240424 20:00:44.158"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 20:00:44.158" endtime="20240424 20:00:44.158"/>
</return>
<msg timestamp="20240424 20:00:44.158" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 20:00:44.158" endtime="20240424 20:00:44.158"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 20:00:44.158" endtime="20240424 20:00:44.339"/>
</kw>
<status status="PASS" starttime="20240424 20:00:44.158" endtime="20240424 20:00:44.339"/>
</kw>
<status status="PASS" starttime="20240424 20:00:44.158" endtime="20240424 20:00:44.339"/>
</branch>
<status status="PASS" starttime="20240424 20:00:44.158" endtime="20240424 20:00:44.339"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 20:00:44.339" endtime="20240424 20:00:44.339"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:00:44.339" endtime="20240424 20:00:44.339"/>
</branch>
<status status="PASS" starttime="20240424 20:00:44.339" endtime="20240424 20:00:44.339"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 20:00:44.339" level="INFO">${path} = C:\Users\runneradmin\Documents\RFTestFiles</msg>
<msg timestamp="20240424 20:00:44.339" level="INFO">${filename} = Solibri Building.smc</msg>
<status status="PASS" starttime="20240424 20:00:44.339" endtime="20240424 20:00:44.339"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 20:00:44.339" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 20:00:44.339" level="INFO">${ext} = smc</msg>
<status status="PASS" starttime="20240424 20:00:44.339" endtime="20240424 20:00:44.339"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:44.339" endtime="20240424 20:00:44.385"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:00:44.385" endtime="20240424 20:00:44.391"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:44.391" endtime="20240424 20:00:44.451"/>
</kw>
<status status="PASS" starttime="20240424 20:00:44.339" endtime="20240424 20:00:44.451"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:00:44.451" endtime="20240424 20:00:45.985"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${COMPONENT_HIERARCHY_PANEL}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:00:45.985" endtime="20240424 20:00:46.040"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>ContainmentTree</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:00:46.046" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 20:00:46.040" endtime="20240424 20:00:46.046"/>
</kw>
<if>
<branch type="IF" condition="${row_count} &gt; ${0}">
<kw name="Evaluate" library="BuiltIn">
<var>${row_count}</var>
<arg>${row_count}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 20:00:46.046" level="INFO">${row_count} = 0</msg>
<status status="PASS" starttime="20240424 20:00:46.046" endtime="20240424 20:00:46.046"/>
</kw>
<status status="PASS" starttime="20240424 20:00:46.046" endtime="20240424 20:00:46.046"/>
</branch>
<status status="PASS" starttime="20240424 20:00:46.046" endtime="20240424 20:00:46.046"/>
</if>
<status status="PASS" starttime="20240424 20:00:44.339" endtime="20240424 20:00:46.046"/>
</kw>
<status status="PASS" starttime="20240424 20:00:44.339" endtime="20240424 20:00:46.046"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<status status="NOT RUN" starttime="20240424 20:00:46.046" endtime="20240424 20:00:46.046"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:00:46.046" endtime="20240424 20:00:46.046"/>
</branch>
<status status="PASS" starttime="20240424 20:00:44.339" endtime="20240424 20:00:46.046"/>
</if>
<status status="PASS" starttime="20240424 20:00:42.447" endtime="20240424 20:00:46.046"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:46.046" endtime="20240424 20:00:46.165"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>VIEWS</arg>
<arg>COMPARTMENTATION</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:00:46.165" endtime="20240424 20:00:46.803"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:46.803" endtime="20240424 20:00:46.959"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:46.959" endtime="20240424 20:00:46.974"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:46.974" endtime="20240424 20:00:47.031"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>7</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:47.031" endtime="20240424 20:00:47.064"/>
</kw>
<kw name="Verify Components" library="compartmentation_step_definitions">
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:47.064" endtime="20240424 20:00:47.098"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>22</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:47.098" endtime="20240424 20:00:47.524"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>22</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:47.524" endtime="20240424 20:00:47.675"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Click On Table Cell</arg>
<arg>0</arg>
<arg>24</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>24</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:47.676" endtime="20240424 20:00:47.781"/>
</kw>
<status status="PASS" starttime="20240424 20:00:47.675" endtime="20240424 20:00:47.781"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>34</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:47.782" endtime="20240424 20:00:47.963"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>49</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:47.964" endtime="20240424 20:00:48.273"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>63</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:48.273" endtime="20240424 20:00:48.580"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>25</arg>
<arg>3SgquPBfz92e9iss$jq5a_</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:48.581" endtime="20240424 20:00:48.613"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:48.613" endtime="20240424 20:00:48.849"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:48.849" endtime="20240424 20:00:48.963"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:00:48.964" endtime="20240424 20:00:48.990"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:49.003" level="INFO">${current_component} = 3SgquPBfz92e9iss$jq5a_</msg>
<status status="PASS" starttime="20240424 20:00:48.990" endtime="20240424 20:00:49.003"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:49.004" endtime="20240424 20:00:49.004"/>
</kw>
<status status="PASS" starttime="20240424 20:00:48.580" endtime="20240424 20:00:49.004"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>32</arg>
<arg>27xQ8B8pT3mvak2foSRYgn</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:49.005" endtime="20240424 20:00:49.042"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:49.042" endtime="20240424 20:00:49.129"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:49.129" endtime="20240424 20:00:49.286"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:00:49.286" endtime="20240424 20:00:49.307"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:49.313" level="INFO">${current_component} = 27xQ8B8pT3mvak2foSRYgn</msg>
<status status="PASS" starttime="20240424 20:00:49.308" endtime="20240424 20:00:49.313"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:49.313" endtime="20240424 20:00:49.314"/>
</kw>
<status status="PASS" starttime="20240424 20:00:49.004" endtime="20240424 20:00:49.314"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>35</arg>
<arg>0KWu2NH1PF2AkGZkMvKibB</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:49.315" endtime="20240424 20:00:49.386"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:49.387" endtime="20240424 20:00:49.413"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:49.413" endtime="20240424 20:00:49.536"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:00:49.537" endtime="20240424 20:00:49.582"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:49.592" level="INFO">${current_component} = 0KWu2NH1PF2AkGZkMvKibB</msg>
<status status="PASS" starttime="20240424 20:00:49.582" endtime="20240424 20:00:49.592"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:49.592" endtime="20240424 20:00:49.593"/>
</kw>
<status status="PASS" starttime="20240424 20:00:49.314" endtime="20240424 20:00:49.593"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>47</arg>
<arg>1Jd7UlcYb73PJnEMOhW8cM</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:49.593" endtime="20240424 20:00:49.605"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:49.605" endtime="20240424 20:00:49.716"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:49.716" endtime="20240424 20:00:49.844"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:00:49.844" endtime="20240424 20:00:49.860"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:49.864" level="INFO">${current_component} = 1Jd7UlcYb73PJnEMOhW8cM</msg>
<status status="PASS" starttime="20240424 20:00:49.860" endtime="20240424 20:00:49.864"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:49.864" endtime="20240424 20:00:49.864"/>
</kw>
<status status="PASS" starttime="20240424 20:00:49.593" endtime="20240424 20:00:49.865"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>50</arg>
<arg>3mBMZfMUb3pRubPyhPaOMg</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:49.865" endtime="20240424 20:00:49.875"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:49.877" endtime="20240424 20:00:49.923"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:49.924" endtime="20240424 20:00:50.025"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:00:50.027" endtime="20240424 20:00:50.047"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:50.052" level="INFO">${current_component} = 3mBMZfMUb3pRubPyhPaOMg</msg>
<status status="PASS" starttime="20240424 20:00:50.048" endtime="20240424 20:00:50.052"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:50.052" endtime="20240424 20:00:50.053"/>
</kw>
<status status="PASS" starttime="20240424 20:00:49.865" endtime="20240424 20:00:50.053"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>62</arg>
<arg>3i5kUtXYv8uhjzxXeznHby</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:50.053" endtime="20240424 20:00:50.091"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:50.091" endtime="20240424 20:00:50.201"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:50.202" endtime="20240424 20:00:50.340"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:00:50.341" endtime="20240424 20:00:50.357"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:50.362" level="INFO">${current_component} = 3i5kUtXYv8uhjzxXeznHby</msg>
<status status="PASS" starttime="20240424 20:00:50.357" endtime="20240424 20:00:50.362"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:50.362" endtime="20240424 20:00:50.362"/>
</kw>
<status status="PASS" starttime="20240424 20:00:50.053" endtime="20240424 20:00:50.363"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>64</arg>
<arg>3cAF6Z6l1AaAN$n1Dh1jf8</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:50.363" endtime="20240424 20:00:50.375"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:50.376" endtime="20240424 20:00:50.446"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:50.446" endtime="20240424 20:00:50.528"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:00:50.528" endtime="20240424 20:00:50.548"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:50.567" level="INFO">${current_component} = 3cAF6Z6l1AaAN$n1Dh1jf8</msg>
<status status="PASS" starttime="20240424 20:00:50.548" endtime="20240424 20:00:50.567"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:50.567" endtime="20240424 20:00:50.567"/>
</kw>
<status status="PASS" starttime="20240424 20:00:50.363" endtime="20240424 20:00:50.567"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>68</arg>
<arg>3jRPkbPL18oeX1QqgppzDS</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:50.567" endtime="20240424 20:00:50.583"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:00:50.583" endtime="20240424 20:00:50.680"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:00:50.680" endtime="20240424 20:00:50.797"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:00:50.797" endtime="20240424 20:00:50.819"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:50.819" level="INFO">${current_component} = 3jRPkbPL18oeX1QqgppzDS</msg>
<status status="PASS" starttime="20240424 20:00:50.819" endtime="20240424 20:00:50.819"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:50.819" endtime="20240424 20:00:50.819"/>
</kw>
<status status="PASS" starttime="20240424 20:00:50.567" endtime="20240424 20:00:50.819"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:00:50.819" endtime="20240424 20:00:50.834"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${area_of_ground_floor}</var>
<arg>0</arg>
<arg>24</arg>
<arg>2</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:50.850" level="INFO">${area_of_ground_floor} = 2,021.57 sq ft</msg>
<status status="PASS" starttime="20240424 20:00:50.834" endtime="20240424 20:00:50.850"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${area_of_ground_floor}</arg>
<arg>2,021.57 sq ft</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:50.850" endtime="20240424 20:00:50.850"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${area_of_first_floor}</var>
<arg>0</arg>
<arg>34</arg>
<arg>2</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:50.907" level="INFO">${area_of_first_floor} = 2,154.93 sq ft</msg>
<status status="PASS" starttime="20240424 20:00:50.850" endtime="20240424 20:00:50.907"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${area_of_first_floor}</arg>
<arg>2,154.93 sq ft</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:50.907" endtime="20240424 20:00:50.907"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${area_of_second_floor}</var>
<arg>0</arg>
<arg>49</arg>
<arg>2</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:50.913" level="INFO">${area_of_second_floor} = 2,155.05 sq ft</msg>
<status status="PASS" starttime="20240424 20:00:50.907" endtime="20240424 20:00:50.913"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${area_of_second_floor}</arg>
<arg>2,155.05 sq ft</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:50.913" endtime="20240424 20:00:50.913"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${area_of_roof_floor}</var>
<arg>0</arg>
<arg>63</arg>
<arg>2</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:00:50.913" level="INFO">${area_of_roof_floor} = 164.34 sq ft</msg>
<status status="PASS" starttime="20240424 20:00:50.913" endtime="20240424 20:00:50.913"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${area_of_roof_floor}</arg>
<arg>164.34 sq ft</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:00:50.913" endtime="20240424 20:00:50.913"/>
</kw>
<status status="PASS" starttime="20240424 20:00:47.064" endtime="20240424 20:00:50.913"/>
</kw>
<status status="PASS" starttime="20240424 20:00:42.447" endtime="20240424 20:00:50.913"/>
</kw>
<kw name="Then Restart Solibri" library="CommonUtils">
<arg>${SOLIBRI_HOME}</arg>
<doc>Restarts Solibri</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>message=Solibri directory is ${SOLIBRI_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 20:00:50.913" endtime="20240424 20:00:50.913"/>
</kw>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 20:00:50.913" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 20:00:50.913" endtime="20240424 20:00:50.913"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>condition=${is_running}</arg>
<arg>msg=Solibri is not running</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240424 20:00:50.913" endtime="20240424 20:00:50.913"/>
</kw>
<kw name="Close Solibri" library="SolibriLibrary">
<msg timestamp="20240424 20:00:50.928" level="INFO">The SMC application is still alive and need to be killed! 

The SMC application had to be killed from CMD!</msg>
<status status="PASS" starttime="20240424 20:00:50.913" endtime="20240424 20:00:50.928"/>
</kw>
<kw name="Wait For Process To Close" library="CommonUtils">
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<arg>time_out=${timeout_for_loops}</arg>
<doc>Waits for process to close</doc>
<kw name="Get Time" library="BuiltIn">
<var>${start_time}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 20:00:50.928" level="INFO">${start_time} = 2024-04-24 20:00:50</msg>
<status status="PASS" starttime="20240424 20:00:50.928" endtime="20240424 20:00:50.928"/>
</kw>
<while condition="${True}">
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 20:00:50.928" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 20:00:50.928" endtime="20240424 20:00:50.928"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240424 20:00:51.929" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240424 20:00:50.928" endtime="20240424 20:00:51.929"/>
</kw>
<status status="PASS" starttime="20240424 20:00:50.928" endtime="20240424 20:00:51.929"/>
</branch>
<status status="PASS" starttime="20240424 20:00:50.928" endtime="20240424 20:00:51.929"/>
</if>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Exit For Loop</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 20:00:51.929" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<status status="PASS" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.929"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 20:00:51.929" level="INFO">${now} = 2024-04-24 20:00:51</msg>
<status status="PASS" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.929"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20240424 20:00:51.929" level="INFO">${elapsed_time} = 1.0</msg>
<status status="PASS" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.929"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not close in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.929"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.929"/>
</break>
<status status="NOT RUN" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.929"/>
</branch>
<status status="PASS" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.929"/>
</if>
<status status="PASS" starttime="20240424 20:00:50.928" endtime="20240424 20:00:51.929"/>
</iter>
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 20:00:51.929" level="INFO">${is_running} = None</msg>
<status status="PASS" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.929"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.929"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.929"/>
</branch>
<status status="PASS" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.929"/>
</if>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Exit For Loop</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 20:00:51.929" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing FOR loop.</doc>
<msg timestamp="20240424 20:00:51.929" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.929"/>
</kw>
<status status="PASS" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.929"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<status status="NOT RUN" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.929"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<status status="NOT RUN" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.929"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not close in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.929"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.929"/>
</break>
<status status="NOT RUN" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.929"/>
</branch>
<status status="NOT RUN" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.929"/>
</if>
<status status="PASS" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.929"/>
</iter>
<status status="PASS" starttime="20240424 20:00:50.928" endtime="20240424 20:00:51.929"/>
</while>
<status status="PASS" starttime="20240424 20:00:50.928" endtime="20240424 20:00:51.929"/>
</kw>
<kw name="Open Solibri" library="SolibriLibrary">
<arg>${SOLIBRI_DIR}</arg>
<msg timestamp="20240424 20:00:51.929" level="INFO">Solibri Installation folder: D:\a\desktop-main\desktop-main\temp\installers\temporary-installation-folder\
Solibri Executable: D:\a\desktop-main\desktop-main\temp\installers\temporary-installation-folder\temporary-installation-folder\Solibri.exe</msg>
<status status="PASS" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.929"/>
</kw>
<kw name="Wait For Process To Open" library="CommonUtils">
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<arg>time_out=${timeout_for_loops}</arg>
<doc>Waits for process to open</doc>
<kw name="Get Time" library="BuiltIn">
<var>${start_time}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 20:00:51.929" level="INFO">${start_time} = 2024-04-24 20:00:51</msg>
<status status="PASS" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.929"/>
</kw>
<while condition="${True}">
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 20:00:51.945" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 20:00:51.945" endtime="20240424 20:00:51.945"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Sleep</arg>
<arg>1</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 20:00:51.945" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<status status="PASS" starttime="20240424 20:00:51.945" endtime="20240424 20:00:51.945"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<break>
<status status="PASS" starttime="20240424 20:00:51.945" endtime="20240424 20:00:51.945"/>
</break>
<status status="PASS" starttime="20240424 20:00:51.945" endtime="20240424 20:00:51.945"/>
</branch>
<status status="PASS" starttime="20240424 20:00:51.945" endtime="20240424 20:00:51.945"/>
</if>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<status status="NOT RUN" starttime="20240424 20:00:51.945" endtime="20240424 20:00:51.945"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<status status="NOT RUN" starttime="20240424 20:00:51.945" endtime="20240424 20:00:51.945"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not open in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 20:00:51.945" endtime="20240424 20:00:51.945"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 20:00:51.945" endtime="20240424 20:00:51.945"/>
</break>
<status status="NOT RUN" starttime="20240424 20:00:51.945" endtime="20240424 20:00:51.945"/>
</branch>
<status status="NOT RUN" starttime="20240424 20:00:51.945" endtime="20240424 20:00:51.945"/>
</if>
<status status="PASS" starttime="20240424 20:00:51.945" endtime="20240424 20:00:51.945"/>
</iter>
<status status="PASS" starttime="20240424 20:00:51.945" endtime="20240424 20:00:51.945"/>
</while>
<status status="PASS" starttime="20240424 20:00:51.929" endtime="20240424 20:00:51.945"/>
</kw>
<kw name="Wait For Solibri Window to Appear" library="CommonUtils">
<arg>Solibri Office</arg>
<doc>Wait until Solibri is started</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>18</arg>
<arg>18</arg>
<arg>Window Should Be Open</arg>
<arg>${solibri_office}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>18</arg>
<arg>18</arg>
<arg>Window Should Be Open</arg>
<arg>${solibri_office}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Window Should Be Open" library="SwingRobot">
<arg>${solibri_office}</arg>
<doc>Fails if the window is not open.</doc>
<msg timestamp="20240424 20:00:54.148" level="FAIL">Connection to remote server broken: [WinError 10061] No connection could be made because the target machine actively refused it</msg>
<status status="FAIL" starttime="20240424 20:00:51.945" endtime="20240424 20:00:54.148"/>
</kw>
<kw name="Window Should Be Open" library="SwingRobot">
<arg>${solibri_office}</arg>
<doc>Fails if the window is not open.</doc>
<status status="PASS" starttime="20240424 20:01:12.171" endtime="20240424 20:01:12.679"/>
</kw>
<status status="PASS" starttime="20240424 20:00:51.945" endtime="20240424 20:01:12.679"/>
</kw>
<msg timestamp="20240424 20:01:12.679" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 20:00:51.945" endtime="20240424 20:01:12.679"/>
</kw>
<status status="PASS" starttime="20240424 20:00:51.945" endtime="20240424 20:01:12.679"/>
</kw>
<status status="PASS" starttime="20240424 20:00:50.913" endtime="20240424 20:01:12.679"/>
</kw>
<kw name="Then Reopen Model and Verify Persistence" library="compartmentation_step_definitions">
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${test_files_folder}/Solibri Building.smc</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:12.679" endtime="20240424 20:01:12.817"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 20:01:12.836" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 20:01:12.817" endtime="20240424 20:01:12.836"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 20:01:12.836" endtime="20240424 20:01:12.836"/>
</kw>
<status status="PASS" starttime="20240424 20:01:12.817" endtime="20240424 20:01:12.836"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:12.836" endtime="20240424 20:01:12.882"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:01:12.882" endtime="20240424 20:01:12.885"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:12.885" endtime="20240424 20:01:12.915"/>
</kw>
<status status="PASS" starttime="20240424 20:01:12.836" endtime="20240424 20:01:12.915"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:01:12.915" endtime="20240424 20:01:12.975"/>
</kw>
<status status="PASS" starttime="20240424 20:01:12.915" endtime="20240424 20:01:12.975"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 20:01:12.975" endtime="20240424 20:01:13.000"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:01:13.001" endtime="20240424 20:01:13.002"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:01:13.002" endtime="20240424 20:01:14.781"/>
</kw>
<status status="PASS" starttime="20240424 20:01:13.002" endtime="20240424 20:01:14.781"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 20:01:14.781" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 20:01:14.781" endtime="20240424 20:01:14.781"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 20:01:14.781" endtime="20240424 20:01:14.781"/>
</return>
<msg timestamp="20240424 20:01:14.781" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 20:01:14.781" endtime="20240424 20:01:14.781"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 20:01:14.781" endtime="20240424 20:01:15.320"/>
</kw>
<status status="PASS" starttime="20240424 20:01:14.781" endtime="20240424 20:01:15.320"/>
</kw>
<status status="PASS" starttime="20240424 20:01:14.781" endtime="20240424 20:01:15.320"/>
</branch>
<status status="PASS" starttime="20240424 20:01:14.781" endtime="20240424 20:01:15.320"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 20:01:15.320" endtime="20240424 20:01:15.320"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:01:15.320" endtime="20240424 20:01:15.320"/>
</branch>
<status status="PASS" starttime="20240424 20:01:15.320" endtime="20240424 20:01:15.320"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 20:01:15.320" level="INFO">${path} = C:\Users\runneradmin\Documents\RFTestFiles</msg>
<msg timestamp="20240424 20:01:15.320" level="INFO">${filename} = Solibri Building.smc</msg>
<status status="PASS" starttime="20240424 20:01:15.320" endtime="20240424 20:01:15.320"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 20:01:15.320" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 20:01:15.320" level="INFO">${ext} = smc</msg>
<status status="PASS" starttime="20240424 20:01:15.320" endtime="20240424 20:01:15.320"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:15.320" endtime="20240424 20:01:15.336"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:01:15.336" endtime="20240424 20:01:15.357"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:15.357" endtime="20240424 20:01:16.116"/>
</kw>
<status status="PASS" starttime="20240424 20:01:15.320" endtime="20240424 20:01:16.116"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:01:16.116" endtime="20240424 20:01:18.144"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${COMPONENT_HIERARCHY_PANEL}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:01:18.144" endtime="20240424 20:01:18.163"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>ContainmentTree</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:01:18.233" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 20:01:18.163" endtime="20240424 20:01:18.233"/>
</kw>
<if>
<branch type="IF" condition="${row_count} &gt; ${0}">
<kw name="Evaluate" library="BuiltIn">
<var>${row_count}</var>
<arg>${row_count}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 20:01:18.233" level="INFO">${row_count} = 0</msg>
<status status="PASS" starttime="20240424 20:01:18.233" endtime="20240424 20:01:18.233"/>
</kw>
<status status="PASS" starttime="20240424 20:01:18.233" endtime="20240424 20:01:18.233"/>
</branch>
<status status="PASS" starttime="20240424 20:01:18.233" endtime="20240424 20:01:18.233"/>
</if>
<status status="PASS" starttime="20240424 20:01:15.320" endtime="20240424 20:01:18.233"/>
</kw>
<status status="PASS" starttime="20240424 20:01:15.320" endtime="20240424 20:01:18.233"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<status status="NOT RUN" starttime="20240424 20:01:18.233" endtime="20240424 20:01:18.233"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:01:18.233" endtime="20240424 20:01:18.233"/>
</branch>
<status status="PASS" starttime="20240424 20:01:15.320" endtime="20240424 20:01:18.233"/>
</if>
<status status="PASS" starttime="20240424 20:01:12.679" endtime="20240424 20:01:18.233"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:18.233" endtime="20240424 20:01:18.244"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>VIEWS</arg>
<arg>COMPARTMENTATION</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:01:18.244" endtime="20240424 20:01:19.278"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:01:19.278" endtime="20240424 20:01:19.624"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:01:19.624" endtime="20240424 20:01:19.744"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:01:19.744" endtime="20240424 20:01:19.756"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>7</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:01:19.756" endtime="20240424 20:01:19.850"/>
</kw>
<kw name="Verify Components" library="compartmentation_step_definitions">
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:01:19.850" endtime="20240424 20:01:19.930"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>22</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:01:19.930" endtime="20240424 20:01:20.931"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>22</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:01:20.931" endtime="20240424 20:01:21.119"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Click On Table Cell</arg>
<arg>0</arg>
<arg>24</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>24</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:01:21.119" endtime="20240424 20:01:21.278"/>
</kw>
<status status="PASS" starttime="20240424 20:01:21.119" endtime="20240424 20:01:21.278"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>34</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:01:21.278" endtime="20240424 20:01:21.846"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>49</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:01:21.846" endtime="20240424 20:01:22.255"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>63</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:01:22.255" endtime="20240424 20:01:22.657"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>25</arg>
<arg>3SgquPBfz92e9iss$jq5a_</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:01:22.658" endtime="20240424 20:01:22.709"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:01:22.709" endtime="20240424 20:01:23.107"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:23.107" endtime="20240424 20:01:23.322"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:01:23.325" endtime="20240424 20:01:23.377"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:01:23.390" level="INFO">${current_component} = 3SgquPBfz92e9iss$jq5a_</msg>
<status status="PASS" starttime="20240424 20:01:23.378" endtime="20240424 20:01:23.390"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:01:23.390" endtime="20240424 20:01:23.391"/>
</kw>
<status status="PASS" starttime="20240424 20:01:22.657" endtime="20240424 20:01:23.391"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>32</arg>
<arg>27xQ8B8pT3mvak2foSRYgn</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:01:23.393" endtime="20240424 20:01:23.496"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:01:23.496" endtime="20240424 20:01:23.759"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:23.760" endtime="20240424 20:01:23.831"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:01:23.831" endtime="20240424 20:01:23.856"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:01:23.863" level="INFO">${current_component} = 27xQ8B8pT3mvak2foSRYgn</msg>
<status status="PASS" starttime="20240424 20:01:23.857" endtime="20240424 20:01:23.863"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:01:23.863" endtime="20240424 20:01:23.863"/>
</kw>
<status status="PASS" starttime="20240424 20:01:23.391" endtime="20240424 20:01:23.863"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>35</arg>
<arg>0KWu2NH1PF2AkGZkMvKibB</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:01:23.864" endtime="20240424 20:01:23.891"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:01:23.894" endtime="20240424 20:01:23.983"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:23.983" endtime="20240424 20:01:24.170"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:01:24.170" endtime="20240424 20:01:24.177"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:01:24.189" level="INFO">${current_component} = 0KWu2NH1PF2AkGZkMvKibB</msg>
<status status="PASS" starttime="20240424 20:01:24.177" endtime="20240424 20:01:24.189"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:01:24.189" endtime="20240424 20:01:24.189"/>
</kw>
<status status="PASS" starttime="20240424 20:01:23.864" endtime="20240424 20:01:24.190"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>47</arg>
<arg>1Jd7UlcYb73PJnEMOhW8cM</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:01:24.190" endtime="20240424 20:01:24.264"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:01:24.264" endtime="20240424 20:01:24.578"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:24.578" endtime="20240424 20:01:24.656"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:01:24.656" endtime="20240424 20:01:24.683"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:01:24.689" level="INFO">${current_component} = 1Jd7UlcYb73PJnEMOhW8cM</msg>
<status status="PASS" starttime="20240424 20:01:24.683" endtime="20240424 20:01:24.689"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:01:24.689" endtime="20240424 20:01:24.689"/>
</kw>
<status status="PASS" starttime="20240424 20:01:24.190" endtime="20240424 20:01:24.689"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>50</arg>
<arg>3mBMZfMUb3pRubPyhPaOMg</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:01:24.689" endtime="20240424 20:01:24.724"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:01:24.724" endtime="20240424 20:01:24.931"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:24.931" endtime="20240424 20:01:25.129"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:01:25.129" endtime="20240424 20:01:25.166"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:01:25.198" level="INFO">${current_component} = 3mBMZfMUb3pRubPyhPaOMg</msg>
<status status="PASS" starttime="20240424 20:01:25.166" endtime="20240424 20:01:25.198"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:01:25.198" endtime="20240424 20:01:25.198"/>
</kw>
<status status="PASS" starttime="20240424 20:01:24.689" endtime="20240424 20:01:25.198"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>62</arg>
<arg>3i5kUtXYv8uhjzxXeznHby</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:01:25.198" endtime="20240424 20:01:25.214"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:01:25.214" endtime="20240424 20:01:25.508"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:25.508" endtime="20240424 20:01:25.661"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:01:25.661" endtime="20240424 20:01:25.679"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:01:25.691" level="INFO">${current_component} = 3i5kUtXYv8uhjzxXeznHby</msg>
<status status="PASS" starttime="20240424 20:01:25.679" endtime="20240424 20:01:25.691"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:01:25.691" endtime="20240424 20:01:25.691"/>
</kw>
<status status="PASS" starttime="20240424 20:01:25.198" endtime="20240424 20:01:25.691"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>64</arg>
<arg>3cAF6Z6l1AaAN$n1Dh1jf8</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:01:25.691" endtime="20240424 20:01:25.706"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:01:25.706" endtime="20240424 20:01:25.776"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:25.776" endtime="20240424 20:01:25.986"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:01:25.986" endtime="20240424 20:01:26.077"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:01:26.093" level="INFO">${current_component} = 3cAF6Z6l1AaAN$n1Dh1jf8</msg>
<status status="PASS" starttime="20240424 20:01:26.077" endtime="20240424 20:01:26.093"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:01:26.093" endtime="20240424 20:01:26.093"/>
</kw>
<status status="PASS" starttime="20240424 20:01:25.691" endtime="20240424 20:01:26.093"/>
</kw>
<kw name="Select Component and Verify GUID Value" library="compartmentation_step_definitions">
<arg>68</arg>
<arg>3jRPkbPL18oeX1QqgppzDS</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:01:26.093" endtime="20240424 20:01:26.169"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>${component_row_number}</arg>
<arg>1</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:01:26.169" endtime="20240424 20:01:26.302"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:26.302" endtime="20240424 20:01:26.499"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>0</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:01:26.499" endtime="20240424 20:01:26.523"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${current_component}</var>
<arg>1</arg>
<arg>17</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:01:26.526" level="INFO">${current_component} = 3jRPkbPL18oeX1QqgppzDS</msg>
<status status="PASS" starttime="20240424 20:01:26.523" endtime="20240424 20:01:26.526"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${current_component}</arg>
<arg>${guid_value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:01:26.526" endtime="20240424 20:01:26.526"/>
</kw>
<status status="PASS" starttime="20240424 20:01:26.093" endtime="20240424 20:01:26.526"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>COMPARTMENTATION</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:01:26.526" endtime="20240424 20:01:26.539"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${area_of_ground_floor}</var>
<arg>0</arg>
<arg>24</arg>
<arg>2</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:01:26.553" level="INFO">${area_of_ground_floor} = 2,021.57 sq ft</msg>
<status status="PASS" starttime="20240424 20:01:26.539" endtime="20240424 20:01:26.553"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${area_of_ground_floor}</arg>
<arg>2,021.57 sq ft</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:01:26.553" endtime="20240424 20:01:26.553"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${area_of_first_floor}</var>
<arg>0</arg>
<arg>34</arg>
<arg>2</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:01:26.571" level="INFO">${area_of_first_floor} = 2,154.93 sq ft</msg>
<status status="PASS" starttime="20240424 20:01:26.553" endtime="20240424 20:01:26.571"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${area_of_first_floor}</arg>
<arg>2,154.93 sq ft</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:01:26.571" endtime="20240424 20:01:26.571"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${area_of_second_floor}</var>
<arg>0</arg>
<arg>49</arg>
<arg>2</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:01:26.583" level="INFO">${area_of_second_floor} = 2,155.05 sq ft</msg>
<status status="PASS" starttime="20240424 20:01:26.571" endtime="20240424 20:01:26.583"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${area_of_second_floor}</arg>
<arg>2,155.05 sq ft</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:01:26.583" endtime="20240424 20:01:26.583"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${area_of_roof_floor}</var>
<arg>0</arg>
<arg>63</arg>
<arg>2</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:01:26.594" level="INFO">${area_of_roof_floor} = 164.34 sq ft</msg>
<status status="PASS" starttime="20240424 20:01:26.583" endtime="20240424 20:01:26.594"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${area_of_roof_floor}</arg>
<arg>164.34 sq ft</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:01:26.594" endtime="20240424 20:01:26.594"/>
</kw>
<status status="PASS" starttime="20240424 20:01:19.850" endtime="20240424 20:01:26.594"/>
</kw>
<status status="PASS" starttime="20240424 20:01:12.679" endtime="20240424 20:01:26.594"/>
</kw>
<kw name="Clean Up" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>ScreenCapLibrary.Take Screenshot</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20240424 20:01:26.594" endtime="20240424 20:01:26.594"/>
</kw>
<kw name="Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<msg timestamp="20240424 20:01:26.697" level="INFO">Closed dialog 'COMPARTMENTATION'.</msg>
<status status="PASS" starttime="20240424 20:01:26.594" endtime="20240424 20:01:26.697"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:26.697" endtime="20240424 20:01:26.697"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:01:26.697" endtime="20240424 20:01:26.697"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:26.697" endtime="20240424 20:01:26.756"/>
</kw>
<status status="PASS" starttime="20240424 20:01:26.697" endtime="20240424 20:01:26.756"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:01:26.756" endtime="20240424 20:01:27.029"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:01:27.029" endtime="20240424 20:01:27.088"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 20:01:37.098" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 20:01:27.088" endtime="20240424 20:01:37.098"/>
</kw>
<msg timestamp="20240424 20:01:37.098" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 20:01:27.088" endtime="20240424 20:01:37.098"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 20:01:47.110" level="FAIL">Dialog 'Select' is not open</msg>
<status status="FAIL" starttime="20240424 20:01:37.098" endtime="20240424 20:01:47.110"/>
</kw>
<msg timestamp="20240424 20:01:47.110" level="INFO">${check_if_save_asked} = False</msg>
<status status="PASS" starttime="20240424 20:01:37.098" endtime="20240424 20:01:47.110"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 20:01:47.110" endtime="20240424 20:01:47.110"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:01:47.110" endtime="20240424 20:01:47.110"/>
</branch>
<status status="PASS" starttime="20240424 20:01:47.110" endtime="20240424 20:01:47.110"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 20:01:47.110" endtime="20240424 20:01:47.110"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:01:47.110" endtime="20240424 20:01:47.110"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:01:47.110" endtime="20240424 20:01:47.110"/>
</branch>
<status status="PASS" starttime="20240424 20:01:47.110" endtime="20240424 20:01:47.110"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:47.110" endtime="20240424 20:01:47.110"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:01:47.110" endtime="20240424 20:01:47.126"/>
</kw>
<status status="PASS" starttime="20240424 20:01:47.110" endtime="20240424 20:01:47.126"/>
</kw>
<status status="PASS" starttime="20240424 20:01:26.594" endtime="20240424 20:01:47.126"/>
</kw>
<status status="PASS" starttime="20240424 20:01:26.594" endtime="20240424 20:01:47.126"/>
</kw>
<status status="PASS" starttime="20240424 20:00:07.593" endtime="20240424 20:01:47.126"/>
</test>
<doc>Verify Compartmentation</doc>
<meta name="Feature">Compartmentation</meta>
<meta name="Generated by">_gherkin2robotframework on 2023-08-21T10:14:33.073893_</meta>
<status status="PASS" starttime="20240424 20:00:07.546" endtime="20240424 20:01:47.126"/>
</suite>
<suite id="s1-s17" name="18 Space Grouping View" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\18_space_grouping_view.robot">
<test id="s1-s17-t1" name="Verify default form of Space Grouping view components" line="10">
<kw name="Background">
<doc>Launch Solibri And Login To SSC</doc>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 20:01:47.365" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 20:01:47.365" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 20:01:47 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 20:01:47.173" endtime="20240424 20:01:47.365"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 20:01:47.365" endtime="20240424 20:01:47.365"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:47.365" endtime="20240424 20:01:47.401"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 20:01:47.407" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 20:01:47.401" endtime="20240424 20:01:47.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 20:01:47.407" endtime="20240424 20:01:47.407"/>
</kw>
<status status="PASS" starttime="20240424 20:01:47.401" endtime="20240424 20:01:47.407"/>
</kw>
<status status="PASS" starttime="20240424 20:01:47.173" endtime="20240424 20:01:47.407"/>
</kw>
<kw name="When User Logs In To SSC" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Logged in to SSC</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 20:01:47.407" endtime="20240424 20:01:47.407"/>
</kw>
<status status="PASS" starttime="20240424 20:01:47.407" endtime="20240424 20:01:47.407"/>
</kw>
<kw name="Then Solibri Office Is Opened" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Solibri Office Is Opened</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 20:01:47.407" endtime="20240424 20:01:47.407"/>
</kw>
<status status="PASS" starttime="20240424 20:01:47.407" endtime="20240424 20:01:47.407"/>
</kw>
<status status="PASS" starttime="20240424 20:01:47.173" endtime="20240424 20:01:47.407"/>
</kw>
<kw name="Given No Existing Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:47.407" endtime="20240424 20:01:47.446"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:01:47.446" endtime="20240424 20:01:47.452"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:47.452" endtime="20240424 20:01:47.463"/>
</kw>
<status status="PASS" starttime="20240424 20:01:47.407" endtime="20240424 20:01:47.463"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:01:47.479" endtime="20240424 20:01:47.479"/>
</kw>
<status status="PASS" starttime="20240424 20:01:47.479" endtime="20240424 20:01:47.479"/>
</kw>
<msg timestamp="20240424 20:01:47.479" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 20:01:47.479" endtime="20240424 20:01:47.479"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 20:01:47.479" endtime="20240424 20:01:47.479"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:01:47.479" endtime="20240424 20:01:47.479"/>
</branch>
<status status="PASS" starttime="20240424 20:01:47.479" endtime="20240424 20:01:47.479"/>
</if>
<status status="PASS" starttime="20240424 20:01:47.407" endtime="20240424 20:01:47.479"/>
</kw>
<kw name="And User Logs In To SSC" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Logged in to SSC</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 20:01:47.479" endtime="20240424 20:01:47.479"/>
</kw>
<status status="PASS" starttime="20240424 20:01:47.479" endtime="20240424 20:01:47.479"/>
</kw>
<kw name="And Solibri Office Is Opened" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Solibri Office Is Opened</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 20:01:47.479" endtime="20240424 20:01:47.479"/>
</kw>
<status status="PASS" starttime="20240424 20:01:47.479" endtime="20240424 20:01:47.479"/>
</kw>
<kw name="And Open &quot;BIM Validation - Architectural.xml&quot; Role" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:47.479" endtime="20240424 20:01:47.479"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Roles_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:01:47.479" endtime="20240424 20:01:47.514"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open Role</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:01:47.514" endtime="20240424 20:01:48.983"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Dialog Should Be Open</arg>
<arg>Open Role</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Open Role</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:01:48.983" endtime="20240424 20:01:49.017"/>
</kw>
<status status="PASS" starttime="20240424 20:01:48.983" endtime="20240424 20:01:49.017"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open Role</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:01:49.017" endtime="20240424 20:01:49.090"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Files</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:01:49.090" endtime="20240424 20:01:49.136"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${role_with_path}</var>
<arg>${roles_folder}</arg>
<arg>BIM Validation - Architectural.xml</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 20:01:49.136" level="INFO">${role_with_path} = C:\users\public\Solibri\SOLIBRI\Roles\BIM Validation - Architectural.xml</msg>
<status status="PASS" starttime="20240424 20:01:49.136" endtime="20240424 20:01:49.136"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${role_with_path}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 20:01:49.136" endtime="20240424 20:01:49.266"/>
</kw>
<status status="PASS" starttime="20240424 20:01:47.479" endtime="20240424 20:01:49.266"/>
</kw>
<kw name="And Open ifc Model" library="Common">
<arg>${solibri_building_ifc}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:49.266" endtime="20240424 20:01:49.317"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 20:01:49.321" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 20:01:49.317" endtime="20240424 20:01:49.321"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 20:01:49.321" endtime="20240424 20:01:49.321"/>
</kw>
<status status="PASS" starttime="20240424 20:01:49.317" endtime="20240424 20:01:49.321"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:49.321" endtime="20240424 20:01:49.424"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:01:49.424" endtime="20240424 20:01:49.431"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:49.431" endtime="20240424 20:01:49.454"/>
</kw>
<status status="PASS" starttime="20240424 20:01:49.321" endtime="20240424 20:01:49.454"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 20:01:49.454" endtime="20240424 20:01:49.458"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:01:49.458" endtime="20240424 20:01:49.460"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:01:49.460" endtime="20240424 20:01:49.945"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${ifc_filename}</var>
<arg>${ifc_folder}</arg>
<arg>${ifc_filename}</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 20:01:49.945" level="INFO">${ifc_filename} = C:\users\public\Solibri\SOLIBRI\Samples\ifc\Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 20:01:49.945" endtime="20240424 20:01:49.945"/>
</kw>
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 20:01:49.945" endtime="20240424 20:01:50.322"/>
</kw>
<status status="PASS" starttime="20240424 20:01:49.945" endtime="20240424 20:01:50.322"/>
</kw>
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 20:01:50.322" endtime="20240424 20:01:50.485"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:50.485" endtime="20240424 20:01:50.547"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:01:50.547" endtime="20240424 20:01:50.562"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:50.562" endtime="20240424 20:01:50.597"/>
</kw>
<status status="PASS" starttime="20240424 20:01:50.485" endtime="20240424 20:01:50.597"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 20:01:56.606" level="INFO">2024-04-24 20:01:53.180+0000 [Thread-76] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 15 ms.
2024-04-24 20:01:53.180+0000 [Thread-76] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 2634 ms (using 1 threads)
2024-04-24 20:01:53.423+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 172 ms
2024-04-24 20:01:55.916+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 2736 ms.</msg>
<status status="PASS" starttime="20240424 20:01:50.597" endtime="20240424 20:01:56.606"/>
</kw>
<status status="PASS" starttime="20240424 20:01:50.597" endtime="20240424 20:01:56.606"/>
</kw>
<msg timestamp="20240424 20:01:56.606" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 20:01:50.597" endtime="20240424 20:01:56.606"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:01:56.606" endtime="20240424 20:01:56.637"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:01:56.637" endtime="20240424 20:01:58.077"/>
</kw>
<status status="PASS" starttime="20240424 20:01:56.606" endtime="20240424 20:01:58.077"/>
</branch>
<status status="PASS" starttime="20240424 20:01:56.606" endtime="20240424 20:01:58.077"/>
</if>
<status status="PASS" starttime="20240424 20:01:50.322" endtime="20240424 20:01:58.077"/>
</kw>
<status status="PASS" starttime="20240424 20:01:49.266" endtime="20240424 20:01:58.077"/>
</kw>
<kw name="And Restore Default Units Settings" library="Common">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:58.077" endtime="20240424 20:01:58.112"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:58.112" endtime="20240424 20:01:58.166"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:01:58.166" endtime="20240424 20:01:58.166"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:58.166" endtime="20240424 20:01:58.216"/>
</kw>
<status status="PASS" starttime="20240424 20:01:58.112" endtime="20240424 20:01:58.216"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:01:58.216" endtime="20240424 20:01:58.859"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Units</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:01:58.859" endtime="20240424 20:01:58.864"/>
</kw>
<kw name="Restore Default Settings" library="settings_step_definitions">
<arg>Units</arg>
<kw name="Select Dialog" library="SwingRobot">
<arg>${settings_dialog}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:01:58.864" endtime="20240424 20:01:59.050"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Restore Default Settings</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:01:59.050" endtime="20240424 20:01:59.103"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Restore Default Settings</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:01:59.103" endtime="20240424 20:01:59.177"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Yes</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:01:59.177" endtime="20240424 20:01:59.199"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${settings_dialog}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:01:59.199" endtime="20240424 20:01:59.204"/>
</kw>
<status status="PASS" starttime="20240424 20:01:58.864" endtime="20240424 20:01:59.204"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:01:59.204" endtime="20240424 20:01:59.240"/>
</kw>
<status status="PASS" starttime="20240424 20:01:58.077" endtime="20240424 20:01:59.240"/>
</kw>
<kw name="When User Selects Space Grouping View" library="space_grouping_view_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:59.240" endtime="20240424 20:01:59.243"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:59.243" endtime="20240424 20:01:59.262"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:01:59.262" endtime="20240424 20:01:59.262"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:01:59.262" endtime="20240424 20:01:59.345"/>
</kw>
<status status="PASS" starttime="20240424 20:01:59.243" endtime="20240424 20:01:59.345"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Select From Popup Menu</arg>
<arg>VIEWS</arg>
<arg>SPACE GROUPING</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:01:59.345" endtime="20240424 20:01:59.348"/>
</kw>
<status status="PASS" starttime="20240424 20:01:59.240" endtime="20240424 20:01:59.348"/>
</kw>
<kw name="Then Space Grouping View Is Opened" library="space_grouping_view_step_definitions">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${dialog_open}</var>
<arg>Dialog Should Be Open</arg>
<arg>SPACE GROUPING</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>SPACE GROUPING</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:01:59.348" endtime="20240424 20:02:00.521"/>
</kw>
<msg timestamp="20240424 20:02:00.521" level="INFO">${dialog_open} = True</msg>
<status status="PASS" starttime="20240424 20:01:59.348" endtime="20240424 20:02:00.521"/>
</kw>
<if>
<branch type="IF" condition="not ${dialog_open}">
<kw name="Fail" library="BuiltIn">
<arg>SPACE GROUPING view is not opened</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 20:02:00.521" endtime="20240424 20:02:00.521"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:02:00.521" endtime="20240424 20:02:00.521"/>
</branch>
<status status="PASS" starttime="20240424 20:02:00.521" endtime="20240424 20:02:00.521"/>
</if>
<status status="PASS" starttime="20240424 20:01:59.348" endtime="20240424 20:02:00.521"/>
</kw>
<kw name="Then Space Grouping View Components Are Visible" library="space_grouping_view_step_definitions">
<kw name="Select Dialog" library="SwingRobot">
<arg>SPACE GROUPING</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:02:00.521" endtime="20240424 20:02:00.581"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:02:00.620" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 20:02:00.581" endtime="20240424 20:02:00.620"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'1'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:02:00.620" endtime="20240424 20:02:00.620"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:02:00.627" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 20:02:00.620" endtime="20240424 20:02:00.627"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'1'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:02:00.627" endtime="20240424 20:02:00.627"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row_value}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:02:00.664" level="INFO">${row_value} = Building Name</msg>
<status status="PASS" starttime="20240424 20:02:00.627" endtime="20240424 20:02:00.664"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${row_value}</arg>
<arg>Building Name</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 20:02:00.664" endtime="20240424 20:02:00.664"/>
</kw>
<kw name="Check Box Should Not Be Checked" library="SwingRobot">
<arg>0</arg>
<doc>Alias for `Check Box Should Be Unchecked` keyword.</doc>
<status status="PASS" starttime="20240424 20:02:00.664" endtime="20240424 20:02:00.680"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Show Space Grouping Settings</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:00.680" endtime="20240424 20:02:00.682"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Add to Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:00.682" endtime="20240424 20:02:00.682"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Remove from Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:00.682" endtime="20240424 20:02:00.695"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:00.695" endtime="20240424 20:02:00.702"/>
</kw>
<kw name="Get Table Headers" library="SwingRobot">
<var>${table_header}</var>
<arg>0</arg>
<doc>Returns table's header names.</doc>
<msg timestamp="20240424 20:02:00.710" level="INFO">${table_header} = ['Space', 'Type', 'Space Group Type', 'Area']</msg>
<status status="PASS" starttime="20240424 20:02:00.702" endtime="20240424 20:02:00.710"/>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<arg>${table_header}</arg>
<arg>${deafult_table_header}</arg>
<doc>Fails if given lists are unequal.</doc>
<status status="PASS" starttime="20240424 20:02:00.710" endtime="20240424 20:02:00.710"/>
</kw>
<status status="PASS" starttime="20240424 20:02:00.521" endtime="20240424 20:02:00.710"/>
</kw>
<kw name="Then Space Grouping View Components Have Default Values" library="space_grouping_view_step_definitions">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:02:00.710" endtime="20240424 20:02:00.830"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:02:00.891" level="INFO">${row_count} = 5</msg>
<status status="PASS" starttime="20240424 20:02:00.830" endtime="20240424 20:02:00.891"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'5'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:02:00.891" endtime="20240424 20:02:00.891"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row1_value}</var>
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:02:00.897" level="INFO">${row1_value} = Ground floor</msg>
<status status="PASS" starttime="20240424 20:02:00.891" endtime="20240424 20:02:00.897"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${row1_value}</arg>
<arg>Ground floor</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 20:02:00.897" endtime="20240424 20:02:00.897"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row2_value}</var>
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:02:00.903" level="INFO">${row2_value} = First floor</msg>
<status status="PASS" starttime="20240424 20:02:00.897" endtime="20240424 20:02:00.903"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${row2_value}</arg>
<arg>First floor</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 20:02:00.903" endtime="20240424 20:02:00.903"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row3_value}</var>
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:02:00.910" level="INFO">${row3_value} = Second floor</msg>
<status status="PASS" starttime="20240424 20:02:00.903" endtime="20240424 20:02:00.910"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${row3_value}</arg>
<arg>Second floor</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 20:02:00.910" endtime="20240424 20:02:00.910"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row4_value}</var>
<arg>0</arg>
<arg>4</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:02:00.914" level="INFO">${row4_value} = Roof</msg>
<status status="PASS" starttime="20240424 20:02:00.910" endtime="20240424 20:02:00.914"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${row4_value}</arg>
<arg>Roof</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 20:02:00.914" endtime="20240424 20:02:00.914"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>4</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:02:00.914" endtime="20240424 20:02:01.018"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>5</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:02:01.018" endtime="20240424 20:02:01.107"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${column1_value}</var>
<arg>0</arg>
<arg>5</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:02:01.287" level="INFO">${column1_value} = 0 GROSS AREA</msg>
<status status="PASS" starttime="20240424 20:02:01.107" endtime="20240424 20:02:01.287"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${column3_value}</var>
<arg>0</arg>
<arg>5</arg>
<arg>3</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:02:01.296" level="INFO">${column3_value} = 164.39 sq ft</msg>
<status status="PASS" starttime="20240424 20:02:01.287" endtime="20240424 20:02:01.296"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${column1_value}</arg>
<arg>0 GROSS AREA</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 20:02:01.296" endtime="20240424 20:02:01.296"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${column3_value}</arg>
<arg>164.39 sq ft</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 20:02:01.296" endtime="20240424 20:02:01.296"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:02:01.296" endtime="20240424 20:02:01.435"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>4</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:02:01.435" endtime="20240424 20:02:01.487"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${column1_value}</var>
<arg>0</arg>
<arg>4</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:02:01.678" level="INFO">${column1_value} = 0 GROSS AREA</msg>
<status status="PASS" starttime="20240424 20:02:01.487" endtime="20240424 20:02:01.678"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${column3_value}</var>
<arg>0</arg>
<arg>4</arg>
<arg>3</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:02:01.694" level="INFO">${column3_value} = 2,154.87 sq ft</msg>
<status status="PASS" starttime="20240424 20:02:01.678" endtime="20240424 20:02:01.694"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${column1_value}</arg>
<arg>0 GROSS AREA</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 20:02:01.694" endtime="20240424 20:02:01.694"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${column3_value}'</arg>
<arg>'2,154.87 sq ft'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 20:02:01.694" endtime="20240424 20:02:01.694"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:02:01.694" endtime="20240424 20:02:01.723"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:02:01.723" endtime="20240424 20:02:01.865"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${column1_value}</var>
<arg>0</arg>
<arg>3</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:02:02.096" level="INFO">${column1_value} = 0 GROSS AREA</msg>
<status status="PASS" starttime="20240424 20:02:01.865" endtime="20240424 20:02:02.096"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${column3_value}</var>
<arg>0</arg>
<arg>3</arg>
<arg>3</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:02:02.152" level="INFO">${column3_value} = 2,153.71 sq ft</msg>
<status status="PASS" starttime="20240424 20:02:02.096" endtime="20240424 20:02:02.152"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${column1_value}</arg>
<arg>0 GROSS AREA</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 20:02:02.152" endtime="20240424 20:02:02.152"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${column3_value}'</arg>
<arg>'2,153.71 sq ft'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 20:02:02.152" endtime="20240424 20:02:02.152"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:02:02.152" endtime="20240424 20:02:02.191"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:02:02.191" endtime="20240424 20:02:02.382"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${column1_value}</var>
<arg>0</arg>
<arg>2</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:02:02.543" level="INFO">${column1_value} = 0 GROSS AREA</msg>
<status status="PASS" starttime="20240424 20:02:02.382" endtime="20240424 20:02:02.543"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${column3_value}</var>
<arg>0</arg>
<arg>2</arg>
<arg>3</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:02:02.543" level="INFO">${column3_value} = 1,993.24 sq ft</msg>
<status status="PASS" starttime="20240424 20:02:02.543" endtime="20240424 20:02:02.543"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${column1_value}</arg>
<arg>0 GROSS AREA</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 20:02:02.543" endtime="20240424 20:02:02.543"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>'${column3_value}'</arg>
<arg>'1,993.24 sq ft'</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 20:02:02.543" endtime="20240424 20:02:02.543"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:02:02.543" level="INFO">${row_count} = 25</msg>
<status status="PASS" starttime="20240424 20:02:02.543" endtime="20240424 20:02:02.543"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${row_count}'</arg>
<arg>'25'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:02:02.543" endtime="20240424 20:02:02.543"/>
</kw>
<status status="PASS" starttime="20240424 20:02:00.710" endtime="20240424 20:02:02.543"/>
</kw>
<kw name="Then Verify Space Grouping Classification Setting Is Visible" library="space_grouping_view_step_definitions">
<kw name="Select Dialog" library="SwingRobot">
<arg>SPACE GROUPING</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:02:02.543" endtime="20240424 20:02:02.559"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Push Button</arg>
<arg>Show Space Grouping Settings</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:02:02.559" endtime="20240424 20:02:02.560"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Classification Settings (Space Grouping.class...)</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:02:02.560" endtime="20240424 20:02:02.922"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Classification Settings (Space Grouping.class...)</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:02:02.922" endtime="20240424 20:02:02.947"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${classification_name}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 20:02:02.979" level="INFO">${classification_name} = Space Grouping</msg>
<status status="PASS" starttime="20240424 20:02:02.947" endtime="20240424 20:02:02.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${classification_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:02:02.979" level="INFO">Space Grouping</msg>
<status status="PASS" starttime="20240424 20:02:02.979" endtime="20240424 20:02:02.979"/>
</kw>
<kw name="Should Match" library="BuiltIn">
<arg>${classification_name}</arg>
<arg>Space Grouping</arg>
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<status status="PASS" starttime="20240424 20:02:02.979" endtime="20240424 20:02:02.979"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Cancel</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:02.979" endtime="20240424 20:02:03.015"/>
</kw>
<status status="PASS" starttime="20240424 20:02:02.543" endtime="20240424 20:02:03.015"/>
</kw>
<kw name="Then Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<msg timestamp="20240424 20:02:03.127" level="INFO">Closed dialog 'SPACE GROUPING'.</msg>
<status status="PASS" starttime="20240424 20:02:03.015" endtime="20240424 20:02:03.127"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:03.127" endtime="20240424 20:02:03.132"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:02:03.132" endtime="20240424 20:02:03.132"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:03.132" endtime="20240424 20:02:03.159"/>
</kw>
<status status="PASS" starttime="20240424 20:02:03.127" endtime="20240424 20:02:03.159"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:02:03.159" endtime="20240424 20:02:03.327"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:02:03.327" endtime="20240424 20:02:03.334"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 20:02:13.343" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 20:02:03.334" endtime="20240424 20:02:13.343"/>
</kw>
<msg timestamp="20240424 20:02:13.343" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 20:02:03.334" endtime="20240424 20:02:13.343"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:02:13.343" endtime="20240424 20:02:13.343"/>
</kw>
<msg timestamp="20240424 20:02:13.343" level="INFO">${check_if_save_asked} = True</msg>
<status status="PASS" starttime="20240424 20:02:13.343" endtime="20240424 20:02:13.343"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:02:13.343" endtime="20240424 20:02:13.383"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:13.383" endtime="20240424 20:02:13.540"/>
</kw>
<status status="PASS" starttime="20240424 20:02:13.343" endtime="20240424 20:02:13.612"/>
</kw>
<status status="PASS" starttime="20240424 20:02:13.343" endtime="20240424 20:02:13.612"/>
</branch>
<status status="PASS" starttime="20240424 20:02:13.343" endtime="20240424 20:02:13.612"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 20:02:13.612" endtime="20240424 20:02:13.612"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:02:13.612" endtime="20240424 20:02:13.612"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:02:13.612" endtime="20240424 20:02:13.612"/>
</branch>
<status status="PASS" starttime="20240424 20:02:13.612" endtime="20240424 20:02:13.612"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:13.612" endtime="20240424 20:02:13.660"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:02:13.660" endtime="20240424 20:02:13.665"/>
</kw>
<status status="PASS" starttime="20240424 20:02:13.660" endtime="20240424 20:02:13.665"/>
</kw>
<status status="PASS" starttime="20240424 20:02:03.015" endtime="20240424 20:02:13.665"/>
</kw>
<status status="PASS" starttime="20240424 20:01:47.173" endtime="20240424 20:02:13.665"/>
</test>
<doc>Verify default form of Space Grouping view components</doc>
<meta name="Feature">Space Grouping view</meta>
<meta name="Generated by">_gherkin2robotframework on 2023-09-06T13:35:42.895910_</meta>
<status status="PASS" starttime="20240424 20:01:47.126" endtime="20240424 20:02:13.665"/>
</suite>
<suite id="s1-s18" name="19 Borrow License" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\19_borrow_license.robot">
<test id="s1-s18-t1" name="Verify Borrow License" line="13">
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 20:02:13.747" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 20:02:13.747" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 20:02:13 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 20:02:13.728" endtime="20240424 20:02:13.747"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 20:02:13.747" endtime="20240424 20:02:13.747"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:13.747" endtime="20240424 20:02:13.776"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 20:02:13.782" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 20:02:13.776" endtime="20240424 20:02:13.782"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 20:02:13.782" endtime="20240424 20:02:13.782"/>
</kw>
<status status="PASS" starttime="20240424 20:02:13.776" endtime="20240424 20:02:13.782"/>
</kw>
<status status="PASS" starttime="20240424 20:02:13.728" endtime="20240424 20:02:13.782"/>
</kw>
<kw name="Then Switch to Help Menu" library="borrow_license_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:13.782" endtime="20240424 20:02:13.823"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Help_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:02:13.823" endtime="20240424 20:02:13.919"/>
</kw>
<status status="PASS" starttime="20240424 20:02:13.782" endtime="20240424 20:02:13.919"/>
</kw>
<kw name="Then Verify Help Menu Status" library="borrow_license_step_definitions">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Context</arg>
<arg>HELP</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Context" library="SwingRobot">
<arg>HELP</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:02:13.919" endtime="20240424 20:02:13.925"/>
</kw>
<status status="PASS" starttime="20240424 20:02:13.919" endtime="20240424 20:02:13.925"/>
</kw>
<kw name="Component Should Be Visible" library="SwingRobot">
<arg>Help</arg>
<doc>Checks that component is visible.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:02:13.925" endtime="20240424 20:02:13.938"/>
</kw>
<kw name="Component Should Be Visible" library="SwingRobot">
<arg>&lt;html&gt;&lt;u&gt;Support&lt;/u&gt;</arg>
<doc>Checks that component is visible.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:02:13.938" endtime="20240424 20:02:13.942"/>
</kw>
<kw name="Component Should Be Visible" library="SwingRobot">
<arg>&lt;html&gt;&lt;u&gt;Feedback&lt;/u&gt;</arg>
<doc>Checks that component is visible.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:02:13.942" endtime="20240424 20:02:13.946"/>
</kw>
<kw name="Component Should Be Visible" library="SwingRobot">
<arg>&lt;html&gt;&lt;u&gt;Tutorials&lt;/u&gt;</arg>
<doc>Checks that component is visible.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:02:13.946" endtime="20240424 20:02:13.961"/>
</kw>
<kw name="Component Should Be Visible" library="SwingRobot">
<arg>&lt;html&gt;&lt;u&gt;Solibri Solution Center&lt;/u&gt;</arg>
<doc>Checks that component is visible.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:02:13.961" endtime="20240424 20:02:13.977"/>
</kw>
<kw name="Component Should Be Visible" library="SwingRobot">
<arg>&lt;html&gt;&lt;u&gt;Solibri&lt;/u&gt;</arg>
<doc>Checks that component is visible.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:02:13.977" endtime="20240424 20:02:13.993"/>
</kw>
<kw name="Component Should Be Visible" library="SwingRobot">
<arg>&lt;html&gt;&lt;u&gt;Check for Updates&lt;/u&gt;</arg>
<doc>Checks that component is visible.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:02:13.993" endtime="20240424 20:02:13.996"/>
</kw>
<kw name="Component Should Be Visible" library="SwingRobot">
<arg>License Key...</arg>
<doc>Checks that component is visible.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:02:13.996" endtime="20240424 20:02:14.008"/>
</kw>
<kw name="Component Should Be Visible" library="SwingRobot">
<arg>Borrow License...</arg>
<doc>Checks that component is visible.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:02:14.008" endtime="20240424 20:02:14.012"/>
</kw>
<status status="PASS" starttime="20240424 20:02:13.919" endtime="20240424 20:02:14.012"/>
</kw>
<kw name="Then Borrow License" library="borrow_license_step_definitions">
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Borrow License...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:02:14.012" endtime="20240424 20:02:14.012"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>License Borrowing</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:02:14.012" endtime="20240424 20:02:14.090"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Borrow Now</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:14.090" endtime="20240424 20:02:14.093"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:14.093" endtime="20240424 20:02:14.093"/>
</kw>
<kw name="Get Combobox Values" library="SwingRobot">
<var>${values}</var>
<arg>0</arg>
<doc>Returns a list containing all the values of a combobox.</doc>
<msg timestamp="20240424 20:02:14.533" level="INFO">${values} = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14']</msg>
<status status="PASS" starttime="20240424 20:02:14.093" endtime="20240424 20:02:14.533"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${values}</arg>
<arg>${combo_box_values}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240424 20:02:14.533" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:02:14.533" endtime="20240424 20:02:14.533"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Cancel</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:14.533" endtime="20240424 20:02:14.557"/>
</kw>
<status status="PASS" starttime="20240424 20:02:14.012" endtime="20240424 20:02:14.557"/>
</kw>
<status status="PASS" starttime="20240424 20:02:13.728" endtime="20240424 20:02:14.557"/>
</test>
<doc>Verifying borrow license</doc>
<meta name="Feature">borrow license</meta>
<meta name="Generated by">_gherkin2robotframework on 2023-07-24T13:45:34.846445_</meta>
<status status="PASS" starttime="20240424 20:02:13.665" endtime="20240424 20:02:14.557"/>
</suite>
<suite id="s1-s19" name="20 Information Take Off" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\20_information_take_off.robot">
<test id="s1-s19-t1" name="Verify Information Takeoff View" line="14">
<kw name="Background">
<doc>Launch Solibri And Login To SSC</doc>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 20:02:14.630" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 20:02:14.630" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 20:02:13 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 20:02:14.619" endtime="20240424 20:02:14.630"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 20:02:14.630" endtime="20240424 20:02:14.630"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:14.630" endtime="20240424 20:02:14.633"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 20:02:14.633" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 20:02:14.633" endtime="20240424 20:02:14.633"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 20:02:14.633" endtime="20240424 20:02:14.633"/>
</kw>
<status status="PASS" starttime="20240424 20:02:14.633" endtime="20240424 20:02:14.633"/>
</kw>
<status status="PASS" starttime="20240424 20:02:14.619" endtime="20240424 20:02:14.633"/>
</kw>
<kw name="When User Logs In To SSC" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Logged in to SSC</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 20:02:14.633" endtime="20240424 20:02:14.633"/>
</kw>
<status status="PASS" starttime="20240424 20:02:14.633" endtime="20240424 20:02:14.633"/>
</kw>
<kw name="Then Solibri Office Is Opened" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Solibri Office Is Opened</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 20:02:14.633" endtime="20240424 20:02:14.633"/>
</kw>
<status status="PASS" starttime="20240424 20:02:14.633" endtime="20240424 20:02:14.633"/>
</kw>
<status status="PASS" starttime="20240424 20:02:14.619" endtime="20240424 20:02:14.633"/>
</kw>
<kw name="Given No Existing Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:14.633" endtime="20240424 20:02:14.633"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:02:14.633" endtime="20240424 20:02:14.649"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:14.649" endtime="20240424 20:02:14.652"/>
</kw>
<status status="PASS" starttime="20240424 20:02:14.633" endtime="20240424 20:02:14.652"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:02:14.652" endtime="20240424 20:02:14.658"/>
</kw>
<status status="PASS" starttime="20240424 20:02:14.652" endtime="20240424 20:02:14.658"/>
</kw>
<msg timestamp="20240424 20:02:14.658" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 20:02:14.652" endtime="20240424 20:02:14.658"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 20:02:14.658" endtime="20240424 20:02:14.658"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:02:14.658" endtime="20240424 20:02:14.658"/>
</branch>
<status status="PASS" starttime="20240424 20:02:14.658" endtime="20240424 20:02:14.658"/>
</if>
<status status="PASS" starttime="20240424 20:02:14.633" endtime="20240424 20:02:14.658"/>
</kw>
<kw name="Then Verify Information Takeoff Default View When No Model is loaded" library="information_take_off_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${ITO_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:14.658" endtime="20240424 20:02:14.730"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:02:14.730" endtime="20240424 20:02:14.738"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:14.738" endtime="20240424 20:02:14.742"/>
</kw>
<status status="PASS" starttime="20240424 20:02:14.658" endtime="20240424 20:02:14.742"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Takeoff All</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:14.742" endtime="20240424 20:02:15.015"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>New...</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:15.015" endtime="20240424 20:02:15.143"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Duplicate Information Takeoff Definition</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:15.143" endtime="20240424 20:02:15.154"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Open Recommended</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:15.154" endtime="20240424 20:02:15.169"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Save</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:15.169" endtime="20240424 20:02:15.218"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Save Model as</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:15.218" endtime="20240424 20:02:15.229"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Close</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:15.229" endtime="20240424 20:02:15.240"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Edit...</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:15.240" endtime="20240424 20:02:15.291"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Report...</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:15.291" endtime="20240424 20:02:15.309"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Add to Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:15.309" endtime="20240424 20:02:15.359"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Remove from Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:15.359" endtime="20240424 20:02:15.410"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:15.410" endtime="20240424 20:02:15.459"/>
</kw>
<status status="PASS" starttime="20240424 20:02:14.658" endtime="20240424 20:02:15.459"/>
</kw>
<kw name="And File Layout Is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:15.459" endtime="20240424 20:02:15.501"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:02:15.501" endtime="20240424 20:02:15.504"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:15.504" endtime="20240424 20:02:15.508"/>
</kw>
<status status="PASS" starttime="20240424 20:02:15.459" endtime="20240424 20:02:15.508"/>
</kw>
<status status="PASS" starttime="20240424 20:02:15.459" endtime="20240424 20:02:15.508"/>
</kw>
<kw name="And Open BIM Validation Role" library="information_take_off_step_definitions">
<kw name="Open &quot;BIM Validation - Architectural.xml&quot; Role" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:15.508" endtime="20240424 20:02:15.508"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Roles_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:02:15.508" endtime="20240424 20:02:15.671"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open Role</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:15.671" endtime="20240424 20:02:17.058"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Dialog Should Be Open</arg>
<arg>Open Role</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Open Role</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:02:17.058" endtime="20240424 20:02:17.070"/>
</kw>
<status status="PASS" starttime="20240424 20:02:17.058" endtime="20240424 20:02:17.070"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open Role</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:02:17.070" endtime="20240424 20:02:17.077"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Files</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:02:17.077" endtime="20240424 20:02:17.128"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${role_with_path}</var>
<arg>${roles_folder}</arg>
<arg>BIM Validation - Architectural.xml</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 20:02:17.128" level="INFO">${role_with_path} = C:\users\public\Solibri\SOLIBRI\Roles\BIM Validation - Architectural.xml</msg>
<status status="PASS" starttime="20240424 20:02:17.128" endtime="20240424 20:02:17.128"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${role_with_path}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 20:02:17.128" endtime="20240424 20:02:17.206"/>
</kw>
<status status="PASS" starttime="20240424 20:02:15.508" endtime="20240424 20:02:17.206"/>
</kw>
<status status="PASS" starttime="20240424 20:02:15.508" endtime="20240424 20:02:17.206"/>
</kw>
<kw name="When File Is Open From File Chooser" library="ModelHandlingResource">
<arg>ifc</arg>
<if>
<branch type="IF" condition="'${filetype}' == 'ifc'">
<kw name="Join Path" library="OperatingSystem">
<var>${filename}</var>
<arg>${ifc_folder}</arg>
<arg>Solibri Building.ifc</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 20:02:17.206" level="INFO">${filename} = C:\users\public\Solibri\SOLIBRI\Samples\ifc\Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 20:02:17.206" endtime="20240424 20:02:17.206"/>
</kw>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${filename}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:17.206" endtime="20240424 20:02:17.224"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 20:02:17.228" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 20:02:17.224" endtime="20240424 20:02:17.228"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 20:02:17.228" endtime="20240424 20:02:17.228"/>
</kw>
<status status="PASS" starttime="20240424 20:02:17.224" endtime="20240424 20:02:17.228"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:17.228" endtime="20240424 20:02:17.234"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:02:17.234" endtime="20240424 20:02:17.236"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:17.236" endtime="20240424 20:02:17.288"/>
</kw>
<status status="PASS" starttime="20240424 20:02:17.228" endtime="20240424 20:02:17.288"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:02:17.288" endtime="20240424 20:02:17.294"/>
</kw>
<status status="PASS" starttime="20240424 20:02:17.288" endtime="20240424 20:02:17.294"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 20:02:17.294" endtime="20240424 20:02:17.370"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:02:17.370" endtime="20240424 20:02:17.376"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>200ms</arg>
<arg>Select Dialog</arg>
<arg>${file_chooser_open_models_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:02:17.376" endtime="20240424 20:02:17.700"/>
</kw>
<status status="PASS" starttime="20240424 20:02:17.376" endtime="20240424 20:02:17.700"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os_name}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 20:02:17.700" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 20:02:17.700" endtime="20240424 20:02:17.700"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 20:02:17.700" endtime="20240424 20:02:17.700"/>
</return>
<msg timestamp="20240424 20:02:17.700" level="INFO">${os_name} = Windows</msg>
<status status="PASS" starttime="20240424 20:02:17.700" endtime="20240424 20:02:17.700"/>
</kw>
<if>
<branch type="IF" condition="'${os_name}' == 'Windows'">
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 20:02:17.700" endtime="20240424 20:02:17.907"/>
</kw>
<status status="PASS" starttime="20240424 20:02:17.700" endtime="20240424 20:02:17.907"/>
</kw>
<status status="PASS" starttime="20240424 20:02:17.700" endtime="20240424 20:02:17.907"/>
</branch>
<status status="PASS" starttime="20240424 20:02:17.700" endtime="20240424 20:02:17.907"/>
</if>
<if>
<branch type="IF" condition="'${os_name}' == 'Darwin'">
<kw name="Open Model From File Chooser On Mac" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>mac</tag>
<tag>robot:private</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 20:02:17.907" endtime="20240424 20:02:17.907"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:02:17.907" endtime="20240424 20:02:17.907"/>
</branch>
<status status="PASS" starttime="20240424 20:02:17.907" endtime="20240424 20:02:17.907"/>
</if>
<kw name="Split Path" library="OperatingSystem">
<var>${path}</var>
<var>${filename}</var>
<arg>${ifc_filename}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20240424 20:02:17.907" level="INFO">${path} = C:\users\public\Solibri\SOLIBRI\Samples\ifc</msg>
<msg timestamp="20240424 20:02:17.907" level="INFO">${filename} = Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 20:02:17.907" endtime="20240424 20:02:17.907"/>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<var>${filename}</var>
<var>${ext}</var>
<arg>${filename}</arg>
<doc>Splits the extension from the given path.</doc>
<msg timestamp="20240424 20:02:17.907" level="INFO">${filename} = Solibri Building</msg>
<msg timestamp="20240424 20:02:17.907" level="INFO">${ext} = ifc</msg>
<status status="PASS" starttime="20240424 20:02:17.907" endtime="20240424 20:02:17.907"/>
</kw>
<if>
<branch type="IF" condition="'${ext}' == 'smc'">
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<status status="NOT RUN" starttime="20240424 20:02:17.907" endtime="20240424 20:02:17.907"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:02:17.907" endtime="20240424 20:02:17.907"/>
</branch>
<branch type="ELSE">
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 20:02:17.907" endtime="20240424 20:02:18.025"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:18.025" endtime="20240424 20:02:18.035"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:02:18.035" endtime="20240424 20:02:18.038"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:18.038" endtime="20240424 20:02:18.044"/>
</kw>
<status status="PASS" starttime="20240424 20:02:18.025" endtime="20240424 20:02:18.044"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 20:02:20.919" level="INFO">2024-04-24 20:02:19.211+0000 [Thread-154] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 9 ms.
2024-04-24 20:02:19.211+0000 [Thread-154] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 1320 ms (using 1 threads)
2024-04-24 20:02:19.288+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 70 ms
2024-04-24 20:02:20.643+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 1425 ms.</msg>
<status status="PASS" starttime="20240424 20:02:18.044" endtime="20240424 20:02:20.919"/>
</kw>
<status status="PASS" starttime="20240424 20:02:18.044" endtime="20240424 20:02:20.919"/>
</kw>
<msg timestamp="20240424 20:02:20.919" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 20:02:18.044" endtime="20240424 20:02:20.919"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:02:20.919" endtime="20240424 20:02:21.256"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:21.256" endtime="20240424 20:02:21.991"/>
</kw>
<status status="PASS" starttime="20240424 20:02:20.919" endtime="20240424 20:02:21.991"/>
</branch>
<status status="PASS" starttime="20240424 20:02:20.919" endtime="20240424 20:02:21.991"/>
</if>
<status status="PASS" starttime="20240424 20:02:17.907" endtime="20240424 20:02:21.991"/>
</kw>
<status status="PASS" starttime="20240424 20:02:17.907" endtime="20240424 20:02:21.991"/>
</branch>
<status status="PASS" starttime="20240424 20:02:17.907" endtime="20240424 20:02:21.991"/>
</if>
<status status="PASS" starttime="20240424 20:02:17.206" endtime="20240424 20:02:21.991"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${modelname}</var>
<arg>Solibri Building</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240424 20:02:21.991" level="INFO">${modelname} = Solibri Building</msg>
<status status="PASS" starttime="20240424 20:02:21.991" endtime="20240424 20:02:21.991"/>
</kw>
<status status="PASS" starttime="20240424 20:02:17.206" endtime="20240424 20:02:21.991"/>
</branch>
<branch type="ELSE IF" condition="'${filetype}' == 'pdf'">
<kw name="Join Path" library="OperatingSystem">
<var>${filename}</var>
<arg>${pdf_folder}</arg>
<arg>Floor Plan-Ground Floor_100.pdf</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<status status="NOT RUN" starttime="20240424 20:02:21.991" endtime="20240424 20:02:21.991"/>
</kw>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${filename}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 20:02:21.991" endtime="20240424 20:02:21.991"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${modelname}</var>
<arg>Floor Plan-Ground Floor_100</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240424 20:02:21.991" endtime="20240424 20:02:21.991"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:02:21.991" endtime="20240424 20:02:21.991"/>
</branch>
<branch type="ELSE IF" condition="'${filetype}' == 'smc'">
<kw name="Join Path" library="OperatingSystem">
<var>${filename}</var>
<arg>${models_folder}</arg>
<arg>Solibri Building.smc</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<status status="NOT RUN" starttime="20240424 20:02:21.991" endtime="20240424 20:02:21.991"/>
</kw>
<kw name="Open Model From File Chooser" library="ModelHandlingResource">
<arg>${filename}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<status status="NOT RUN" starttime="20240424 20:02:21.991" endtime="20240424 20:02:21.991"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${modelname}</var>
<arg>(ARC) Solibri Building</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240424 20:02:21.991" endtime="20240424 20:02:21.991"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:02:21.991" endtime="20240424 20:02:21.991"/>
</branch>
<status status="PASS" starttime="20240424 20:02:17.206" endtime="20240424 20:02:21.991"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${modelname}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240424 20:02:21.991" level="INFO">${modelname} = Solibri Building</msg>
<status status="PASS" starttime="20240424 20:02:21.991" endtime="20240424 20:02:21.991"/>
</kw>
<status status="PASS" starttime="20240424 20:02:17.206" endtime="20240424 20:02:21.991"/>
</kw>
<kw name="Then Verify ITO View When Model is loaded" library="information_take_off_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${ITO_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:21.991" endtime="20240424 20:02:22.000"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:02:22.000" endtime="20240424 20:02:22.004"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:22.004" endtime="20240424 20:02:22.019"/>
</kw>
<status status="PASS" starttime="20240424 20:02:21.991" endtime="20240424 20:02:22.019"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Takeoff All</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:22.019" endtime="20240424 20:02:22.512"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Spaces</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:22.512" endtime="20240424 20:02:22.560"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>New...</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:22.560" endtime="20240424 20:02:22.599"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Duplicate Information Takeoff Definition</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:22.599" endtime="20240424 20:02:22.612"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Open Recommended</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:22.612" endtime="20240424 20:02:22.612"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Save</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:22.612" endtime="20240424 20:02:22.622"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Save Model as</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:22.622" endtime="20240424 20:02:22.631"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Close</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:22.631" endtime="20240424 20:02:22.646"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Edit...</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:22.646" endtime="20240424 20:02:22.682"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Report...</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:22.682" endtime="20240424 20:02:22.708"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Add to Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:22.708" endtime="20240424 20:02:22.713"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Remove from Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:22.713" endtime="20240424 20:02:22.723"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:22.723" endtime="20240424 20:02:22.732"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:22.732" endtime="20240424 20:02:22.732"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>3</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:02:22.746" level="INFO">${row_count} = 0</msg>
<status status="PASS" starttime="20240424 20:02:22.732" endtime="20240424 20:02:22.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:02:22.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:02:22.746" endtime="20240424 20:02:22.746"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Information Takeoff_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:02:22.746" endtime="20240424 20:02:22.746"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:22.746" endtime="20240424 20:02:22.759"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:22.759" endtime="20240424 20:02:22.916"/>
</kw>
<status status="PASS" starttime="20240424 20:02:21.991" endtime="20240424 20:02:22.916"/>
</kw>
<kw name="Then Verify Information Takeoff Definition Settings Dialog" library="information_take_off_step_definitions">
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Push Button</arg>
<arg>New...</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:02:22.916" endtime="20240424 20:02:22.920"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Information Takeoff Definition</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:02:22.920" endtime="20240424 20:02:23.327"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${ito_name_from_settings_dialog}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 20:02:23.327" level="INFO">${ito_name_from_settings_dialog} = My ITO Definition 1</msg>
<status status="PASS" starttime="20240424 20:02:23.327" endtime="20240424 20:02:23.327"/>
</kw>
<kw name="Radio Button Should Be Selected" library="SwingRobot">
<arg>0</arg>
<doc>Fails if radiobutton is not selected.</doc>
<status status="PASS" starttime="20240424 20:02:23.327" endtime="20240424 20:02:23.336"/>
</kw>
<kw name="Radio Button Should Not Be Selected" library="SwingRobot">
<arg>1</arg>
<doc>Fails if radiobutton is selected.</doc>
<status status="PASS" starttime="20240424 20:02:23.336" endtime="20240424 20:02:23.336"/>
</kw>
<kw name="Check Box Should Not Be Checked" library="SwingRobot">
<arg>0</arg>
<doc>Alias for `Check Box Should Be Unchecked` keyword.</doc>
<status status="PASS" starttime="20240424 20:02:23.336" endtime="20240424 20:02:23.336"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Move Rows Up</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:23.336" endtime="20240424 20:02:23.362"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Move Rows Down</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:23.362" endtime="20240424 20:02:23.366"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Add to Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:23.366" endtime="20240424 20:02:23.405"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Remove from Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:23.405" endtime="20240424 20:02:23.405"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:23.405" endtime="20240424 20:02:23.413"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:02:23.423" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 20:02:23.413" endtime="20240424 20:02:23.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:02:23.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:02:23.423" endtime="20240424 20:02:23.423"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${state_value}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:02:23.427" level="INFO">${state_value} = Include</msg>
<status status="PASS" starttime="20240424 20:02:23.423" endtime="20240424 20:02:23.427"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${state_value}</arg>
<arg>Include</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:02:23.427" endtime="20240424 20:02:23.427"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${state_value}</var>
<arg>0</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:02:23.427" level="INFO">${state_value} = Any</msg>
<status status="PASS" starttime="20240424 20:02:23.427" endtime="20240424 20:02:23.427"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${state_value}</arg>
<arg>Any</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:02:23.427" endtime="20240424 20:02:23.427"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:02:23.433" level="INFO">${row_count} = 0</msg>
<status status="PASS" starttime="20240424 20:02:23.433" endtime="20240424 20:02:23.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:02:23.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:02:23.433" endtime="20240424 20:02:23.433"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Add Task</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:23.433" endtime="20240424 20:02:23.433"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Remove Task</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:23.433" endtime="20240424 20:02:23.460"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Move Tasks Up</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:23.460" endtime="20240424 20:02:23.460"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Move Tasks Down</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:23.460" endtime="20240424 20:02:23.460"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:23.460" endtime="20240424 20:02:23.460"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:23.460" endtime="20240424 20:02:23.476"/>
</kw>
<kw name="Verify Tasks Dialog" library="information_take_off_step_definitions">
<kw name="Push Button" library="SwingRobot">
<arg>Add Task</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:23.476" endtime="20240424 20:02:23.529"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Select Tasks to Add</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:02:23.529" endtime="20240424 20:02:23.534"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row_value}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:02:23.539" level="INFO">${row_value} = Open [] model</msg>
<status status="PASS" starttime="20240424 20:02:23.534" endtime="20240424 20:02:23.539"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${row_value}</arg>
<arg>Open [] model</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:02:23.539" endtime="20240424 20:02:23.539"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Add Generic Task</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:23.539" endtime="20240424 20:02:23.546"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Add User Input Task</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:23.546" endtime="20240424 20:02:23.550"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Add Ruleset Task</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:23.550" endtime="20240424 20:02:23.578"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:23.578" endtime="20240424 20:02:23.585"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:23.585" endtime="20240424 20:02:23.593"/>
</kw>
<kw name="Verify Add Generic Task Dialog" library="information_take_off_step_definitions">
<kw name="Push Button" library="SwingRobot">
<arg>Add Generic Task</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:23.593" endtime="20240424 20:02:23.651"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Add Task</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:02:23.651" endtime="20240424 20:02:23.659"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${text_field_value}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 20:02:23.661" level="INFO">${text_field_value} = Name</msg>
<status status="PASS" starttime="20240424 20:02:23.659" endtime="20240424 20:02:23.661"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${text_field_value}</arg>
<arg>Name</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:02:23.661" endtime="20240424 20:02:23.661"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${text_field_value}</var>
<arg>1</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 20:02:23.672" level="INFO">${text_field_value} = &lt;html&gt;
  &lt;head&gt;
    
  &lt;/head&gt;
  &lt;body&gt;
    Description
  &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20240424 20:02:23.661" endtime="20240424 20:02:23.672"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:23.672" endtime="20240424 20:02:23.672"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:23.672" endtime="20240424 20:02:23.672"/>
</kw>
<kw name="Verify Add Generic Task" library="information_take_off_step_definitions">
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:23.672" endtime="20240424 20:02:23.698"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Select Tasks to Add</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:02:23.698" endtime="20240424 20:02:23.705"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row1_value}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:02:23.711" level="INFO">${row1_value} = Open [] model</msg>
<status status="PASS" starttime="20240424 20:02:23.705" endtime="20240424 20:02:23.711"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${row1_value}</arg>
<arg>Open [] model</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:02:23.711" endtime="20240424 20:02:23.711"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row2_value}</var>
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:02:23.714" level="INFO">${row2_value} = Name</msg>
<status status="PASS" starttime="20240424 20:02:23.711" endtime="20240424 20:02:23.714"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${row2_value}</arg>
<arg>Name</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:02:23.714" endtime="20240424 20:02:23.714"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:23.714" endtime="20240424 20:02:23.733"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Information Takeoff Definition</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:02:23.733" endtime="20240424 20:02:23.738"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row1_value}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:02:23.755" level="INFO">${row1_value} = Open [] model</msg>
<status status="PASS" starttime="20240424 20:02:23.738" endtime="20240424 20:02:23.755"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${row1_value}</arg>
<arg>Open [] model</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:02:23.755" endtime="20240424 20:02:23.755"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row2_value}</var>
<arg>1</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:02:23.763" level="INFO">${row2_value} = Name</msg>
<status status="PASS" starttime="20240424 20:02:23.755" endtime="20240424 20:02:23.763"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${row2_value}</arg>
<arg>Name</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:02:23.763" endtime="20240424 20:02:23.763"/>
</kw>
<kw name="Verify Edit Task Dialog" library="information_take_off_step_definitions">
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Table Cell</arg>
<arg>1</arg>
<arg>1</arg>
<arg>1</arg>
<arg>2</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:02:23.763" endtime="20240424 20:02:23.763"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Edit Task</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:02:23.763" endtime="20240424 20:02:23.861"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Edit Task</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:02:23.861" endtime="20240424 20:02:23.866"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${text_field_value}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 20:02:23.871" level="INFO">${text_field_value} = Name</msg>
<status status="PASS" starttime="20240424 20:02:23.866" endtime="20240424 20:02:23.871"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${text_field_value}</arg>
<arg>Name</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:02:23.871" endtime="20240424 20:02:23.871"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:23.871" endtime="20240424 20:02:23.875"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:23.875" endtime="20240424 20:02:23.887"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:23.887" endtime="20240424 20:02:23.905"/>
</kw>
<status status="PASS" starttime="20240424 20:02:23.763" endtime="20240424 20:02:23.905"/>
</kw>
<status status="PASS" starttime="20240424 20:02:23.672" endtime="20240424 20:02:23.905"/>
</kw>
<status status="PASS" starttime="20240424 20:02:23.593" endtime="20240424 20:02:23.905"/>
</kw>
<status status="PASS" starttime="20240424 20:02:23.476" endtime="20240424 20:02:23.905"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Information Takeoff Definition</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:02:23.905" endtime="20240424 20:02:23.912"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:02:23.912" endtime="20240424 20:02:23.924"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Remove Task</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:23.924" endtime="20240424 20:02:23.932"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:02:23.932" endtime="20240424 20:02:23.932"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Remove Task</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:23.932" endtime="20240424 20:02:23.932"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:23.948" endtime="20240424 20:02:23.985"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:23.985" endtime="20240424 20:02:23.996"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Information Takeoff_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:02:23.996" endtime="20240424 20:02:24.014"/>
</kw>
<kw name="Get Button Text" library="SwingRobot">
<var>${ito_name}</var>
<arg>2</arg>
<doc>Uses current context to search for a button and when found, returns the text it is labeled with.</doc>
<msg timestamp="20240424 20:02:24.014" level="INFO">${ito_name} = My ITO Definition 1</msg>
<status status="PASS" starttime="20240424 20:02:24.014" endtime="20240424 20:02:24.014"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ito_name}</arg>
<arg>${ito_name_from_settings_dialog}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:02:24.014" endtime="20240424 20:02:24.014"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:24.014" endtime="20240424 20:02:24.014"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Takeoff All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:24.014" endtime="20240424 20:02:24.103"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Button Should Be Enabled</arg>
<arg>New...</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>New...</arg>
<doc>Fails if button is disabled.</doc>
<msg timestamp="20240424 20:02:24.142" level="FAIL">Button was disabled.</msg>
<status status="FAIL" starttime="20240424 20:02:24.103" endtime="20240424 20:02:24.142"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>New...</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:29.146" endtime="20240424 20:02:29.148"/>
</kw>
<status status="PASS" starttime="20240424 20:02:24.103" endtime="20240424 20:02:29.148"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:29.148" endtime="20240424 20:02:29.148"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>3</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:02:29.164" level="INFO">${row_count} = 45</msg>
<status status="PASS" starttime="20240424 20:02:29.148" endtime="20240424 20:02:29.164"/>
</kw>
<if>
<branch type="IF" condition="${row_count} == 0">
<kw name="Push Button" library="SwingRobot">
<arg>Takeoff All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:02:29.164" endtime="20240424 20:02:29.164"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Button Should Be Enabled</arg>
<arg>New...</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20240424 20:02:29.164" endtime="20240424 20:02:29.164"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="NOT RUN" starttime="20240424 20:02:29.164" endtime="20240424 20:02:29.164"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>3</arg>
<doc>Returns the number of rows from a table.</doc>
<status status="NOT RUN" starttime="20240424 20:02:29.164" endtime="20240424 20:02:29.164"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:02:29.164" endtime="20240424 20:02:29.164"/>
</branch>
<status status="PASS" starttime="20240424 20:02:29.164" endtime="20240424 20:02:29.164"/>
</if>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>45</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:02:29.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:02:29.164" endtime="20240424 20:02:29.164"/>
</kw>
<status status="PASS" starttime="20240424 20:02:22.916" endtime="20240424 20:02:29.164"/>
</kw>
<kw name="Then Verify Save Dialog Opens" library="information_take_off_step_definitions">
<kw name="Select Context" library="SwingRobot">
<arg>Information Takeoff_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:02:29.164" endtime="20240424 20:02:29.169"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Save</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:29.169" endtime="20240424 20:02:29.236"/>
</kw>
<kw name="Verify Save Dialog" library="information_take_off_step_definitions">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Dialog Should Be Open</arg>
<arg>Save As</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save As</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:02:29.236" endtime="20240424 20:02:30.564"/>
</kw>
<status status="PASS" starttime="20240424 20:02:29.236" endtime="20240424 20:02:30.570"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:02:30.570" endtime="20240424 20:02:30.582"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Save As</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:30.582" endtime="20240424 20:02:30.588"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:30.588" endtime="20240424 20:02:30.588"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Cancel</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:30.588" endtime="20240424 20:02:30.612"/>
</kw>
<status status="PASS" starttime="20240424 20:02:29.236" endtime="20240424 20:02:30.612"/>
</kw>
<status status="PASS" starttime="20240424 20:02:29.164" endtime="20240424 20:02:30.612"/>
</kw>
<kw name="Then Verify Save As Dialog Opens" library="information_take_off_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:30.612" endtime="20240424 20:02:30.623"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Information Takeoff_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:02:30.623" endtime="20240424 20:02:30.623"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Save Model as</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:30.623" endtime="20240424 20:02:30.634"/>
</kw>
<kw name="Verify Save Dialog" library="information_take_off_step_definitions">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Dialog Should Be Open</arg>
<arg>Save As</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save As</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:02:30.634" endtime="20240424 20:02:30.923"/>
</kw>
<status status="PASS" starttime="20240424 20:02:30.634" endtime="20240424 20:02:30.923"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:02:30.923" endtime="20240424 20:02:30.951"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Save As</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:30.951" endtime="20240424 20:02:30.992"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:30.992" endtime="20240424 20:02:31.000"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Cancel</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:31.000" endtime="20240424 20:02:31.043"/>
</kw>
<status status="PASS" starttime="20240424 20:02:30.634" endtime="20240424 20:02:31.043"/>
</kw>
<status status="PASS" starttime="20240424 20:02:30.612" endtime="20240424 20:02:31.043"/>
</kw>
<kw name="Then Verify Settings Dialog Opens" library="information_take_off_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:31.043" endtime="20240424 20:02:31.046"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Edit...</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:31.046" endtime="20240424 20:02:31.172"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Information Takeoff Definition</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:02:31.172" endtime="20240424 20:02:31.176"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Information Takeoff Definition</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:02:31.176" endtime="20240424 20:02:31.182"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Cancel</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:31.182" endtime="20240424 20:02:31.212"/>
</kw>
<status status="PASS" starttime="20240424 20:02:31.043" endtime="20240424 20:02:31.212"/>
</kw>
<kw name="Then Verify Report Dialog Opens" library="information_take_off_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:31.212" endtime="20240424 20:02:31.222"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Information Takeoff_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:02:31.222" endtime="20240424 20:02:31.226"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Report...</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:31.226" endtime="20240424 20:02:31.314"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Report Information Takeoff</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:02:31.314" endtime="20240424 20:02:31.317"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Report Information Takeoff</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:02:31.317" endtime="20240424 20:02:31.324"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Edit...</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:31.324" endtime="20240424 20:02:31.327"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Create Default...</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:31.327" endtime="20240424 20:02:31.327"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Browse...</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:02:31.327" endtime="20240424 20:02:31.327"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Save Report...</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:31.327" endtime="20240424 20:02:31.343"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:31.343" endtime="20240424 20:02:31.343"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Cancel</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:31.343" endtime="20240424 20:02:31.349"/>
</kw>
<status status="PASS" starttime="20240424 20:02:31.212" endtime="20240424 20:02:31.349"/>
</kw>
<kw name="Then Verify New Column Dialog" library="information_take_off_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:31.349" endtime="20240424 20:02:31.360"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Select From Table Cell Popup Menu</arg>
<arg>3</arg>
<arg>0</arg>
<arg>1</arg>
<arg>New Column...</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:02:31.360" endtime="20240424 20:02:31.366"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>New Column</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:02:31.366" endtime="20240424 20:02:31.982"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>New Column</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:02:31.982" endtime="20240424 20:02:31.999"/>
</kw>
<kw name="Radio Button Should Be Selected" library="SwingRobot">
<arg>Component</arg>
<doc>Fails if radiobutton is not selected.</doc>
<status status="PASS" starttime="20240424 20:02:31.999" endtime="20240424 20:02:31.999"/>
</kw>
<kw name="Radio Button Should Not Be Selected" library="SwingRobot">
<arg>Component Count</arg>
<doc>Fails if radiobutton is selected.</doc>
<status status="PASS" starttime="20240424 20:02:31.999" endtime="20240424 20:02:32.015"/>
</kw>
<kw name="Radio Button Should Not Be Selected" library="SwingRobot">
<arg>Identification</arg>
<doc>Fails if radiobutton is selected.</doc>
<status status="PASS" starttime="20240424 20:02:32.015" endtime="20240424 20:02:32.026"/>
</kw>
<kw name="Radio Button Should Not Be Selected" library="SwingRobot">
<arg>Location</arg>
<doc>Fails if radiobutton is selected.</doc>
<status status="PASS" starttime="20240424 20:02:32.026" endtime="20240424 20:02:32.028"/>
</kw>
<kw name="Radio Button Should Not Be Selected" library="SwingRobot">
<arg>Quantity</arg>
<doc>Fails if radiobutton is selected.</doc>
<status status="PASS" starttime="20240424 20:02:32.028" endtime="20240424 20:02:32.032"/>
</kw>
<kw name="Radio Button Should Not Be Selected" library="SwingRobot">
<arg>Space Boundary Areas</arg>
<doc>Fails if radiobutton is selected.</doc>
<status status="PASS" starttime="20240424 20:02:32.032" endtime="20240424 20:02:32.039"/>
</kw>
<kw name="Radio Button Should Not Be Selected" library="SwingRobot">
<arg>Property Set</arg>
<doc>Fails if radiobutton is selected.</doc>
<status status="PASS" starttime="20240424 20:02:32.039" endtime="20240424 20:02:32.068"/>
</kw>
<kw name="Radio Button Should Not Be Selected" library="SwingRobot">
<arg>Material</arg>
<doc>Fails if radiobutton is selected.</doc>
<status status="PASS" starttime="20240424 20:02:32.068" endtime="20240424 20:02:32.089"/>
</kw>
<kw name="Radio Button Should Not Be Selected" library="SwingRobot">
<arg>Profile</arg>
<doc>Fails if radiobutton is selected.</doc>
<status status="PASS" starttime="20240424 20:02:32.089" endtime="20240424 20:02:32.094"/>
</kw>
<kw name="Radio Button Should Not Be Selected" library="SwingRobot">
<arg>Classification</arg>
<doc>Fails if radiobutton is selected.</doc>
<status status="PASS" starttime="20240424 20:02:32.094" endtime="20240424 20:02:32.098"/>
</kw>
<kw name="Radio Button Should Not Be Selected" library="SwingRobot">
<arg>Hyperlink</arg>
<doc>Fails if radiobutton is selected.</doc>
<status status="PASS" starttime="20240424 20:02:32.098" endtime="20240424 20:02:32.117"/>
</kw>
<kw name="Radio Button Should Not Be Selected" library="SwingRobot">
<arg>Relation</arg>
<doc>Fails if radiobutton is selected.</doc>
<status status="PASS" starttime="20240424 20:02:32.117" endtime="20240424 20:02:32.183"/>
</kw>
<kw name="Radio Button Should Not Be Selected" library="SwingRobot">
<arg>Color</arg>
<doc>Fails if radiobutton is selected.</doc>
<status status="PASS" starttime="20240424 20:02:32.183" endtime="20240424 20:02:32.195"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:32.195" endtime="20240424 20:02:32.195"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:02:32.195" endtime="20240424 20:02:32.203"/>
</kw>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${column_name}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 20:02:32.203" level="INFO">${column_name} = Component</msg>
<status status="PASS" starttime="20240424 20:02:32.203" endtime="20240424 20:02:32.203"/>
</kw>
<kw name="Insert Into List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<arg>${column_name}</arg>
<doc>Inserts ``value`` into ``list`` to the position specified with ``index``.</doc>
<status status="PASS" starttime="20240424 20:02:32.203" endtime="20240424 20:02:32.203"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:32.203" endtime="20240424 20:02:32.419"/>
</kw>
<kw name="Dialog Should Not Be Open" library="SwingRobot">
<arg>Edit Column - ${column_name}</arg>
<doc>Fails if the dialog is open.
You might want to set the waiting timeout with the keyword `Set Jemmy Timeout`.</doc>
<status status="PASS" starttime="20240424 20:02:32.419" endtime="20240424 20:02:42.428"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:42.428" endtime="20240424 20:02:42.431"/>
</kw>
<kw name="Get Table Headers" library="SwingRobot">
<var>${table_headers}</var>
<arg>4</arg>
<doc>Returns table's header names.</doc>
<msg timestamp="20240424 20:02:42.438" level="INFO">${table_headers} = ['Component', 'Component', 'Type', 'Count', 'Color']</msg>
<status status="PASS" starttime="20240424 20:02:42.432" endtime="20240424 20:02:42.438"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${defaut_table_headers}</arg>
<arg>${table_headers}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:02:42.438" endtime="20240424 20:02:42.438"/>
</kw>
<kw name="Remove From List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20240424 20:02:42.439" endtime="20240424 20:02:42.439"/>
</kw>
<for flavor="IN">
<var>${radio_button}</var>
<value>@{radio_buttons}</value>
<iter>
<var name="${radio_button}">Component Count</var>
<kw name="Log" library="BuiltIn">
<arg>Start of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:02:42.439" level="INFO">Start of loop</msg>
<status status="PASS" starttime="20240424 20:02:42.439" endtime="20240424 20:02:42.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:02:42.440" level="INFO">Component</msg>
<status status="PASS" starttime="20240424 20:02:42.440" endtime="20240424 20:02:42.440"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${old_column_name}</var>
<arg>${column_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240424 20:02:42.440" level="INFO">${old_column_name} = Component</msg>
<status status="PASS" starttime="20240424 20:02:42.440" endtime="20240424 20:02:42.440"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Select From Table Header Popup Menu</arg>
<arg>4</arg>
<arg>1</arg>
<arg>Edit Column...</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:02:42.440" endtime="20240424 20:02:42.443"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:02:42.443" endtime="20240424 20:02:42.943"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:02:42.943" endtime="20240424 20:02:42.949"/>
</kw>
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:42.949" endtime="20240424 20:02:42.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${radio_button}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:02:42.962" level="INFO">Component Count</msg>
<status status="PASS" starttime="20240424 20:02:42.962" endtime="20240424 20:02:42.962"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${radio_button_selected}</var>
<arg>Radio Button Should Be Selected</arg>
<arg>${radio_button}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Radio Button Should Be Selected" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Fails if radiobutton is not selected.</doc>
<status status="PASS" starttime="20240424 20:02:42.963" endtime="20240424 20:02:42.967"/>
</kw>
<msg timestamp="20240424 20:02:42.967" level="INFO">${radio_button_selected} = True</msg>
<status status="PASS" starttime="20240424 20:02:42.963" endtime="20240424 20:02:42.967"/>
</kw>
<if>
<branch type="IF" condition="${radio_button_selected} == False">
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:02:42.968" endtime="20240424 20:02:42.968"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:02:42.968" endtime="20240424 20:02:42.968"/>
</branch>
<status status="PASS" starttime="20240424 20:02:42.967" endtime="20240424 20:02:42.968"/>
</if>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${column_name}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 20:02:42.973" level="INFO">${column_name} = Count</msg>
<status status="PASS" starttime="20240424 20:02:42.968" endtime="20240424 20:02:42.973"/>
</kw>
<kw name="Add New ITO Column" library="information_take_off_step_definitions">
<arg>${column_name}</arg>
<arg>${old_column_name}</arg>
<kw name="Insert Into List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<arg>${column_name}</arg>
<doc>Inserts ``value`` into ``list`` to the position specified with ``index``.</doc>
<status status="PASS" starttime="20240424 20:02:42.974" endtime="20240424 20:02:42.974"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:42.974" endtime="20240424 20:02:43.116"/>
</kw>
<kw name="Dialog Should Not Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is open.
You might want to set the waiting timeout with the keyword `Set Jemmy Timeout`.</doc>
<status status="PASS" starttime="20240424 20:02:43.116" endtime="20240424 20:02:53.120"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:02:53.120" endtime="20240424 20:02:53.120"/>
</kw>
<kw name="Get Table Headers" library="SwingRobot">
<var>${table_headers}</var>
<arg>4</arg>
<doc>Returns table's header names.</doc>
<msg timestamp="20240424 20:02:53.120" level="INFO">${table_headers} = ['Component', 'Count', 'Type', 'Count', 'Color']</msg>
<status status="PASS" starttime="20240424 20:02:53.120" endtime="20240424 20:02:53.120"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${defaut_table_headers}</arg>
<arg>${table_headers}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:02:53.120" endtime="20240424 20:02:53.120"/>
</kw>
<kw name="Remove From List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20240424 20:02:53.120" endtime="20240424 20:02:53.120"/>
</kw>
<status status="PASS" starttime="20240424 20:02:42.973" endtime="20240424 20:02:53.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>End of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:02:53.120" level="INFO">End of loop</msg>
<status status="PASS" starttime="20240424 20:02:53.120" endtime="20240424 20:02:53.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:02:53.120" level="INFO">Count</msg>
<status status="PASS" starttime="20240424 20:02:53.120" endtime="20240424 20:02:53.120"/>
</kw>
<status status="PASS" starttime="20240424 20:02:42.439" endtime="20240424 20:02:53.120"/>
</iter>
<iter>
<var name="${radio_button}">Identification</var>
<kw name="Log" library="BuiltIn">
<arg>Start of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:02:53.120" level="INFO">Start of loop</msg>
<status status="PASS" starttime="20240424 20:02:53.120" endtime="20240424 20:02:53.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:02:53.120" level="INFO">Count</msg>
<status status="PASS" starttime="20240424 20:02:53.120" endtime="20240424 20:02:53.120"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${old_column_name}</var>
<arg>${column_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240424 20:02:53.120" level="INFO">${old_column_name} = Count</msg>
<status status="PASS" starttime="20240424 20:02:53.120" endtime="20240424 20:02:53.120"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Select From Table Header Popup Menu</arg>
<arg>4</arg>
<arg>1</arg>
<arg>Edit Column...</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:02:53.120" endtime="20240424 20:02:53.120"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:02:53.120" endtime="20240424 20:02:53.684"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:02:53.684" endtime="20240424 20:02:53.692"/>
</kw>
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:53.692" endtime="20240424 20:02:53.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${radio_button}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:02:53.708" level="INFO">Identification</msg>
<status status="PASS" starttime="20240424 20:02:53.708" endtime="20240424 20:02:53.708"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${radio_button_selected}</var>
<arg>Radio Button Should Be Selected</arg>
<arg>${radio_button}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Radio Button Should Be Selected" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Fails if radiobutton is not selected.</doc>
<status status="PASS" starttime="20240424 20:02:53.708" endtime="20240424 20:02:53.760"/>
</kw>
<msg timestamp="20240424 20:02:53.760" level="INFO">${radio_button_selected} = True</msg>
<status status="PASS" starttime="20240424 20:02:53.708" endtime="20240424 20:02:53.760"/>
</kw>
<if>
<branch type="IF" condition="${radio_button_selected} == False">
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:02:53.760" endtime="20240424 20:02:53.760"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:02:53.760" endtime="20240424 20:02:53.760"/>
</branch>
<status status="PASS" starttime="20240424 20:02:53.760" endtime="20240424 20:02:53.760"/>
</if>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${column_name}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 20:02:53.765" level="INFO">${column_name} = Type</msg>
<status status="PASS" starttime="20240424 20:02:53.760" endtime="20240424 20:02:53.765"/>
</kw>
<kw name="Add New ITO Column" library="information_take_off_step_definitions">
<arg>${column_name}</arg>
<arg>${old_column_name}</arg>
<kw name="Insert Into List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<arg>${column_name}</arg>
<doc>Inserts ``value`` into ``list`` to the position specified with ``index``.</doc>
<status status="PASS" starttime="20240424 20:02:53.765" endtime="20240424 20:02:53.765"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:02:53.765" endtime="20240424 20:02:53.924"/>
</kw>
<kw name="Dialog Should Not Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is open.
You might want to set the waiting timeout with the keyword `Set Jemmy Timeout`.</doc>
<status status="PASS" starttime="20240424 20:02:53.924" endtime="20240424 20:03:03.930"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:03:03.930" endtime="20240424 20:03:03.930"/>
</kw>
<kw name="Get Table Headers" library="SwingRobot">
<var>${table_headers}</var>
<arg>4</arg>
<doc>Returns table's header names.</doc>
<msg timestamp="20240424 20:03:03.940" level="INFO">${table_headers} = ['Component', 'Type', 'Type', 'Count', 'Color']</msg>
<status status="PASS" starttime="20240424 20:03:03.930" endtime="20240424 20:03:03.940"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${defaut_table_headers}</arg>
<arg>${table_headers}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:03:03.940" endtime="20240424 20:03:03.940"/>
</kw>
<kw name="Remove From List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20240424 20:03:03.940" endtime="20240424 20:03:03.940"/>
</kw>
<status status="PASS" starttime="20240424 20:02:53.765" endtime="20240424 20:03:03.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>End of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:03.940" level="INFO">End of loop</msg>
<status status="PASS" starttime="20240424 20:03:03.940" endtime="20240424 20:03:03.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:03.940" level="INFO">Type</msg>
<status status="PASS" starttime="20240424 20:03:03.940" endtime="20240424 20:03:03.940"/>
</kw>
<status status="PASS" starttime="20240424 20:02:53.120" endtime="20240424 20:03:03.940"/>
</iter>
<iter>
<var name="${radio_button}">Location</var>
<kw name="Log" library="BuiltIn">
<arg>Start of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:03.940" level="INFO">Start of loop</msg>
<status status="PASS" starttime="20240424 20:03:03.940" endtime="20240424 20:03:03.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:03.940" level="INFO">Type</msg>
<status status="PASS" starttime="20240424 20:03:03.940" endtime="20240424 20:03:03.940"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${old_column_name}</var>
<arg>${column_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240424 20:03:03.940" level="INFO">${old_column_name} = Type</msg>
<status status="PASS" starttime="20240424 20:03:03.940" endtime="20240424 20:03:03.940"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Select From Table Header Popup Menu</arg>
<arg>4</arg>
<arg>1</arg>
<arg>Edit Column...</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:03:03.940" endtime="20240424 20:03:03.944"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:03:03.946" endtime="20240424 20:03:04.446"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:03:04.446" endtime="20240424 20:03:04.452"/>
</kw>
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:03:04.452" endtime="20240424 20:03:04.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${radio_button}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:04.467" level="INFO">Location</msg>
<status status="PASS" starttime="20240424 20:03:04.467" endtime="20240424 20:03:04.467"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${radio_button_selected}</var>
<arg>Radio Button Should Be Selected</arg>
<arg>${radio_button}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Radio Button Should Be Selected" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Fails if radiobutton is not selected.</doc>
<status status="PASS" starttime="20240424 20:03:04.467" endtime="20240424 20:03:04.467"/>
</kw>
<msg timestamp="20240424 20:03:04.467" level="INFO">${radio_button_selected} = True</msg>
<status status="PASS" starttime="20240424 20:03:04.467" endtime="20240424 20:03:04.467"/>
</kw>
<if>
<branch type="IF" condition="${radio_button_selected} == False">
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:03:04.467" endtime="20240424 20:03:04.467"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:03:04.467" endtime="20240424 20:03:04.467"/>
</branch>
<status status="PASS" starttime="20240424 20:03:04.467" endtime="20240424 20:03:04.467"/>
</if>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${column_name}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 20:03:04.475" level="INFO">${column_name} = Floor</msg>
<status status="PASS" starttime="20240424 20:03:04.467" endtime="20240424 20:03:04.475"/>
</kw>
<kw name="Add New ITO Column" library="information_take_off_step_definitions">
<arg>${column_name}</arg>
<arg>${old_column_name}</arg>
<kw name="Insert Into List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<arg>${column_name}</arg>
<doc>Inserts ``value`` into ``list`` to the position specified with ``index``.</doc>
<status status="PASS" starttime="20240424 20:03:04.475" endtime="20240424 20:03:04.475"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:03:04.475" endtime="20240424 20:03:04.610"/>
</kw>
<kw name="Dialog Should Not Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is open.
You might want to set the waiting timeout with the keyword `Set Jemmy Timeout`.</doc>
<status status="PASS" starttime="20240424 20:03:04.610" endtime="20240424 20:03:14.631"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:03:14.631" endtime="20240424 20:03:14.666"/>
</kw>
<kw name="Get Table Headers" library="SwingRobot">
<var>${table_headers}</var>
<arg>4</arg>
<doc>Returns table's header names.</doc>
<msg timestamp="20240424 20:03:14.666" level="INFO">${table_headers} = ['Component', 'Floor', 'Type', 'Count', 'Color']</msg>
<status status="PASS" starttime="20240424 20:03:14.666" endtime="20240424 20:03:14.666"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${defaut_table_headers}</arg>
<arg>${table_headers}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:03:14.666" endtime="20240424 20:03:14.666"/>
</kw>
<kw name="Remove From List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20240424 20:03:14.666" endtime="20240424 20:03:14.666"/>
</kw>
<status status="PASS" starttime="20240424 20:03:04.475" endtime="20240424 20:03:14.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>End of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:14.666" level="INFO">End of loop</msg>
<status status="PASS" starttime="20240424 20:03:14.666" endtime="20240424 20:03:14.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:14.666" level="INFO">Floor</msg>
<status status="PASS" starttime="20240424 20:03:14.666" endtime="20240424 20:03:14.666"/>
</kw>
<status status="PASS" starttime="20240424 20:03:03.940" endtime="20240424 20:03:14.666"/>
</iter>
<iter>
<var name="${radio_button}">Quantity</var>
<kw name="Log" library="BuiltIn">
<arg>Start of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:14.666" level="INFO">Start of loop</msg>
<status status="PASS" starttime="20240424 20:03:14.666" endtime="20240424 20:03:14.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:14.666" level="INFO">Floor</msg>
<status status="PASS" starttime="20240424 20:03:14.666" endtime="20240424 20:03:14.666"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${old_column_name}</var>
<arg>${column_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240424 20:03:14.666" level="INFO">${old_column_name} = Floor</msg>
<status status="PASS" starttime="20240424 20:03:14.666" endtime="20240424 20:03:14.666"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Select From Table Header Popup Menu</arg>
<arg>4</arg>
<arg>1</arg>
<arg>Edit Column...</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:03:14.666" endtime="20240424 20:03:14.666"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:03:14.666" endtime="20240424 20:03:15.089"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:03:15.089" endtime="20240424 20:03:15.102"/>
</kw>
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:03:15.102" endtime="20240424 20:03:15.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${radio_button}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:15.120" level="INFO">Quantity</msg>
<status status="PASS" starttime="20240424 20:03:15.120" endtime="20240424 20:03:15.120"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${radio_button_selected}</var>
<arg>Radio Button Should Be Selected</arg>
<arg>${radio_button}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Radio Button Should Be Selected" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Fails if radiobutton is not selected.</doc>
<status status="PASS" starttime="20240424 20:03:15.120" endtime="20240424 20:03:15.120"/>
</kw>
<msg timestamp="20240424 20:03:15.120" level="INFO">${radio_button_selected} = True</msg>
<status status="PASS" starttime="20240424 20:03:15.120" endtime="20240424 20:03:15.120"/>
</kw>
<if>
<branch type="IF" condition="${radio_button_selected} == False">
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:03:15.120" endtime="20240424 20:03:15.120"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:03:15.120" endtime="20240424 20:03:15.120"/>
</branch>
<status status="PASS" starttime="20240424 20:03:15.120" endtime="20240424 20:03:15.120"/>
</if>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${column_name}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 20:03:15.120" level="INFO">${column_name} = Area</msg>
<status status="PASS" starttime="20240424 20:03:15.120" endtime="20240424 20:03:15.120"/>
</kw>
<kw name="Add New ITO Column" library="information_take_off_step_definitions">
<arg>${column_name}</arg>
<arg>${old_column_name}</arg>
<kw name="Insert Into List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<arg>${column_name}</arg>
<doc>Inserts ``value`` into ``list`` to the position specified with ``index``.</doc>
<status status="PASS" starttime="20240424 20:03:15.120" endtime="20240424 20:03:15.120"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:03:15.120" endtime="20240424 20:03:15.248"/>
</kw>
<kw name="Dialog Should Not Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is open.
You might want to set the waiting timeout with the keyword `Set Jemmy Timeout`.</doc>
<status status="PASS" starttime="20240424 20:03:15.248" endtime="20240424 20:03:25.261"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:03:25.261" endtime="20240424 20:03:25.264"/>
</kw>
<kw name="Get Table Headers" library="SwingRobot">
<var>${table_headers}</var>
<arg>4</arg>
<doc>Returns table's header names.</doc>
<msg timestamp="20240424 20:03:25.264" level="INFO">${table_headers} = ['Component', 'Area', 'Type', 'Count', 'Color']</msg>
<status status="PASS" starttime="20240424 20:03:25.264" endtime="20240424 20:03:25.264"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${defaut_table_headers}</arg>
<arg>${table_headers}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:03:25.264" endtime="20240424 20:03:25.264"/>
</kw>
<kw name="Remove From List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20240424 20:03:25.264" endtime="20240424 20:03:25.264"/>
</kw>
<status status="PASS" starttime="20240424 20:03:15.120" endtime="20240424 20:03:25.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>End of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:25.264" level="INFO">End of loop</msg>
<status status="PASS" starttime="20240424 20:03:25.264" endtime="20240424 20:03:25.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:25.264" level="INFO">Area</msg>
<status status="PASS" starttime="20240424 20:03:25.264" endtime="20240424 20:03:25.264"/>
</kw>
<status status="PASS" starttime="20240424 20:03:14.666" endtime="20240424 20:03:25.264"/>
</iter>
<iter>
<var name="${radio_button}">Space Boundary Areas</var>
<kw name="Log" library="BuiltIn">
<arg>Start of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:25.264" level="INFO">Start of loop</msg>
<status status="PASS" starttime="20240424 20:03:25.264" endtime="20240424 20:03:25.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:25.264" level="INFO">Area</msg>
<status status="PASS" starttime="20240424 20:03:25.264" endtime="20240424 20:03:25.264"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${old_column_name}</var>
<arg>${column_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240424 20:03:25.264" level="INFO">${old_column_name} = Area</msg>
<status status="PASS" starttime="20240424 20:03:25.264" endtime="20240424 20:03:25.264"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Select From Table Header Popup Menu</arg>
<arg>4</arg>
<arg>1</arg>
<arg>Edit Column...</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:03:25.264" endtime="20240424 20:03:25.264"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:03:25.264" endtime="20240424 20:03:25.618"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:03:25.618" endtime="20240424 20:03:25.627"/>
</kw>
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:03:25.627" endtime="20240424 20:03:25.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${radio_button}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:25.643" level="INFO">Space Boundary Areas</msg>
<status status="PASS" starttime="20240424 20:03:25.643" endtime="20240424 20:03:25.643"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${radio_button_selected}</var>
<arg>Radio Button Should Be Selected</arg>
<arg>${radio_button}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Radio Button Should Be Selected" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Fails if radiobutton is not selected.</doc>
<status status="PASS" starttime="20240424 20:03:25.643" endtime="20240424 20:03:25.643"/>
</kw>
<msg timestamp="20240424 20:03:25.643" level="INFO">${radio_button_selected} = True</msg>
<status status="PASS" starttime="20240424 20:03:25.643" endtime="20240424 20:03:25.643"/>
</kw>
<if>
<branch type="IF" condition="${radio_button_selected} == False">
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:03:25.643" endtime="20240424 20:03:25.643"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:03:25.643" endtime="20240424 20:03:25.643"/>
</branch>
<status status="PASS" starttime="20240424 20:03:25.643" endtime="20240424 20:03:25.643"/>
</if>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${column_name}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 20:03:25.654" level="INFO">${column_name} = Area of Walls</msg>
<status status="PASS" starttime="20240424 20:03:25.643" endtime="20240424 20:03:25.654"/>
</kw>
<kw name="Add New ITO Column" library="information_take_off_step_definitions">
<arg>${column_name}</arg>
<arg>${old_column_name}</arg>
<kw name="Insert Into List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<arg>${column_name}</arg>
<doc>Inserts ``value`` into ``list`` to the position specified with ``index``.</doc>
<status status="PASS" starttime="20240424 20:03:25.654" endtime="20240424 20:03:25.654"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:03:25.654" endtime="20240424 20:03:25.818"/>
</kw>
<kw name="Dialog Should Not Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is open.
You might want to set the waiting timeout with the keyword `Set Jemmy Timeout`.</doc>
<status status="PASS" starttime="20240424 20:03:25.818" endtime="20240424 20:03:35.824"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:03:35.824" endtime="20240424 20:03:35.828"/>
</kw>
<kw name="Get Table Headers" library="SwingRobot">
<var>${table_headers}</var>
<arg>4</arg>
<doc>Returns table's header names.</doc>
<msg timestamp="20240424 20:03:35.834" level="INFO">${table_headers} = ['Component', 'Area of Walls', 'Type', 'Count', 'Color']</msg>
<status status="PASS" starttime="20240424 20:03:35.828" endtime="20240424 20:03:35.834"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${defaut_table_headers}</arg>
<arg>${table_headers}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:03:35.834" endtime="20240424 20:03:35.834"/>
</kw>
<kw name="Remove From List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20240424 20:03:35.834" endtime="20240424 20:03:35.834"/>
</kw>
<status status="PASS" starttime="20240424 20:03:25.654" endtime="20240424 20:03:35.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>End of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:35.834" level="INFO">End of loop</msg>
<status status="PASS" starttime="20240424 20:03:35.834" endtime="20240424 20:03:35.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:35.834" level="INFO">Area of Walls</msg>
<status status="PASS" starttime="20240424 20:03:35.834" endtime="20240424 20:03:35.834"/>
</kw>
<status status="PASS" starttime="20240424 20:03:25.264" endtime="20240424 20:03:35.834"/>
</iter>
<iter>
<var name="${radio_button}">Property Set</var>
<kw name="Log" library="BuiltIn">
<arg>Start of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:35.834" level="INFO">Start of loop</msg>
<status status="PASS" starttime="20240424 20:03:35.834" endtime="20240424 20:03:35.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:35.834" level="INFO">Area of Walls</msg>
<status status="PASS" starttime="20240424 20:03:35.834" endtime="20240424 20:03:35.834"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${old_column_name}</var>
<arg>${column_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240424 20:03:35.834" level="INFO">${old_column_name} = Area of Walls</msg>
<status status="PASS" starttime="20240424 20:03:35.834" endtime="20240424 20:03:35.834"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Select From Table Header Popup Menu</arg>
<arg>4</arg>
<arg>1</arg>
<arg>Edit Column...</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:03:35.834" endtime="20240424 20:03:35.840"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:03:35.840" endtime="20240424 20:03:36.303"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:03:36.303" endtime="20240424 20:03:36.307"/>
</kw>
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:03:36.307" endtime="20240424 20:03:36.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${radio_button}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:36.330" level="INFO">Property Set</msg>
<status status="PASS" starttime="20240424 20:03:36.330" endtime="20240424 20:03:36.330"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${radio_button_selected}</var>
<arg>Radio Button Should Be Selected</arg>
<arg>${radio_button}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Radio Button Should Be Selected" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Fails if radiobutton is not selected.</doc>
<status status="PASS" starttime="20240424 20:03:36.330" endtime="20240424 20:03:36.335"/>
</kw>
<msg timestamp="20240424 20:03:36.335" level="INFO">${radio_button_selected} = True</msg>
<status status="PASS" starttime="20240424 20:03:36.330" endtime="20240424 20:03:36.335"/>
</kw>
<if>
<branch type="IF" condition="${radio_button_selected} == False">
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:03:36.335" endtime="20240424 20:03:36.335"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:03:36.335" endtime="20240424 20:03:36.335"/>
</branch>
<status status="PASS" starttime="20240424 20:03:36.335" endtime="20240424 20:03:36.335"/>
</if>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${column_name}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 20:03:36.340" level="INFO">${column_name} = Pset_WallCommon.Reference</msg>
<status status="PASS" starttime="20240424 20:03:36.335" endtime="20240424 20:03:36.340"/>
</kw>
<kw name="Add New ITO Column" library="information_take_off_step_definitions">
<arg>${column_name}</arg>
<arg>${old_column_name}</arg>
<kw name="Insert Into List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<arg>${column_name}</arg>
<doc>Inserts ``value`` into ``list`` to the position specified with ``index``.</doc>
<status status="PASS" starttime="20240424 20:03:36.340" endtime="20240424 20:03:36.340"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:03:36.340" endtime="20240424 20:03:36.481"/>
</kw>
<kw name="Dialog Should Not Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is open.
You might want to set the waiting timeout with the keyword `Set Jemmy Timeout`.</doc>
<status status="PASS" starttime="20240424 20:03:36.481" endtime="20240424 20:03:46.500"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:03:46.500" endtime="20240424 20:03:46.503"/>
</kw>
<kw name="Get Table Headers" library="SwingRobot">
<var>${table_headers}</var>
<arg>4</arg>
<doc>Returns table's header names.</doc>
<msg timestamp="20240424 20:03:46.508" level="INFO">${table_headers} = ['Component', 'Pset_WallCommon.Reference', 'Type', 'Count', 'Color']</msg>
<status status="PASS" starttime="20240424 20:03:46.503" endtime="20240424 20:03:46.508"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${defaut_table_headers}</arg>
<arg>${table_headers}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:03:46.508" endtime="20240424 20:03:46.508"/>
</kw>
<kw name="Remove From List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20240424 20:03:46.508" endtime="20240424 20:03:46.508"/>
</kw>
<status status="PASS" starttime="20240424 20:03:36.340" endtime="20240424 20:03:46.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>End of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:46.508" level="INFO">End of loop</msg>
<status status="PASS" starttime="20240424 20:03:46.508" endtime="20240424 20:03:46.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:46.508" level="INFO">Pset_WallCommon.Reference</msg>
<status status="PASS" starttime="20240424 20:03:46.508" endtime="20240424 20:03:46.508"/>
</kw>
<status status="PASS" starttime="20240424 20:03:35.834" endtime="20240424 20:03:46.508"/>
</iter>
<iter>
<var name="${radio_button}">Material</var>
<kw name="Log" library="BuiltIn">
<arg>Start of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:46.508" level="INFO">Start of loop</msg>
<status status="PASS" starttime="20240424 20:03:46.508" endtime="20240424 20:03:46.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:46.508" level="INFO">Pset_WallCommon.Reference</msg>
<status status="PASS" starttime="20240424 20:03:46.508" endtime="20240424 20:03:46.508"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${old_column_name}</var>
<arg>${column_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240424 20:03:46.508" level="INFO">${old_column_name} = Pset_WallCommon.Reference</msg>
<status status="PASS" starttime="20240424 20:03:46.508" endtime="20240424 20:03:46.508"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Select From Table Header Popup Menu</arg>
<arg>4</arg>
<arg>1</arg>
<arg>Edit Column...</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:03:46.508" endtime="20240424 20:03:46.508"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:03:46.508" endtime="20240424 20:03:46.873"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:03:46.873" endtime="20240424 20:03:46.875"/>
</kw>
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:03:46.875" endtime="20240424 20:03:46.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${radio_button}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:46.900" level="INFO">Material</msg>
<status status="PASS" starttime="20240424 20:03:46.900" endtime="20240424 20:03:46.900"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${radio_button_selected}</var>
<arg>Radio Button Should Be Selected</arg>
<arg>${radio_button}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Radio Button Should Be Selected" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Fails if radiobutton is not selected.</doc>
<status status="PASS" starttime="20240424 20:03:46.900" endtime="20240424 20:03:46.916"/>
</kw>
<msg timestamp="20240424 20:03:46.916" level="INFO">${radio_button_selected} = True</msg>
<status status="PASS" starttime="20240424 20:03:46.900" endtime="20240424 20:03:46.916"/>
</kw>
<if>
<branch type="IF" condition="${radio_button_selected} == False">
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:03:46.916" endtime="20240424 20:03:46.916"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:03:46.916" endtime="20240424 20:03:46.916"/>
</branch>
<status status="PASS" starttime="20240424 20:03:46.916" endtime="20240424 20:03:46.916"/>
</if>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${column_name}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 20:03:46.924" level="INFO">${column_name} = Material</msg>
<status status="PASS" starttime="20240424 20:03:46.916" endtime="20240424 20:03:46.924"/>
</kw>
<kw name="Add New ITO Column" library="information_take_off_step_definitions">
<arg>${column_name}</arg>
<arg>${old_column_name}</arg>
<kw name="Insert Into List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<arg>${column_name}</arg>
<doc>Inserts ``value`` into ``list`` to the position specified with ``index``.</doc>
<status status="PASS" starttime="20240424 20:03:46.924" endtime="20240424 20:03:46.924"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:03:46.924" endtime="20240424 20:03:47.058"/>
</kw>
<kw name="Dialog Should Not Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is open.
You might want to set the waiting timeout with the keyword `Set Jemmy Timeout`.</doc>
<status status="PASS" starttime="20240424 20:03:47.058" endtime="20240424 20:03:57.063"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:03:57.063" endtime="20240424 20:03:57.063"/>
</kw>
<kw name="Get Table Headers" library="SwingRobot">
<var>${table_headers}</var>
<arg>4</arg>
<doc>Returns table's header names.</doc>
<msg timestamp="20240424 20:03:57.063" level="INFO">${table_headers} = ['Component', 'Material', 'Type', 'Count', 'Color']</msg>
<status status="PASS" starttime="20240424 20:03:57.063" endtime="20240424 20:03:57.063"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${defaut_table_headers}</arg>
<arg>${table_headers}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:03:57.063" endtime="20240424 20:03:57.063"/>
</kw>
<kw name="Remove From List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20240424 20:03:57.063" endtime="20240424 20:03:57.063"/>
</kw>
<status status="PASS" starttime="20240424 20:03:46.924" endtime="20240424 20:03:57.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>End of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:57.063" level="INFO">End of loop</msg>
<status status="PASS" starttime="20240424 20:03:57.063" endtime="20240424 20:03:57.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:57.063" level="INFO">Material</msg>
<status status="PASS" starttime="20240424 20:03:57.063" endtime="20240424 20:03:57.063"/>
</kw>
<status status="PASS" starttime="20240424 20:03:46.508" endtime="20240424 20:03:57.063"/>
</iter>
<iter>
<var name="${radio_button}">Profile</var>
<kw name="Log" library="BuiltIn">
<arg>Start of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:57.063" level="INFO">Start of loop</msg>
<status status="PASS" starttime="20240424 20:03:57.063" endtime="20240424 20:03:57.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:57.063" level="INFO">Material</msg>
<status status="PASS" starttime="20240424 20:03:57.063" endtime="20240424 20:03:57.063"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${old_column_name}</var>
<arg>${column_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240424 20:03:57.063" level="INFO">${old_column_name} = Material</msg>
<status status="PASS" starttime="20240424 20:03:57.063" endtime="20240424 20:03:57.063"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Select From Table Header Popup Menu</arg>
<arg>4</arg>
<arg>1</arg>
<arg>Edit Column...</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:03:57.063" endtime="20240424 20:03:57.073"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:03:57.073" endtime="20240424 20:03:57.439"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:03:57.440" endtime="20240424 20:03:57.448"/>
</kw>
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:03:57.448" endtime="20240424 20:03:57.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${radio_button}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:03:57.460" level="INFO">Profile</msg>
<status status="PASS" starttime="20240424 20:03:57.460" endtime="20240424 20:03:57.460"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${radio_button_selected}</var>
<arg>Radio Button Should Be Selected</arg>
<arg>${radio_button}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Radio Button Should Be Selected" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Fails if radiobutton is not selected.</doc>
<status status="PASS" starttime="20240424 20:03:57.460" endtime="20240424 20:03:57.474"/>
</kw>
<msg timestamp="20240424 20:03:57.474" level="INFO">${radio_button_selected} = True</msg>
<status status="PASS" starttime="20240424 20:03:57.460" endtime="20240424 20:03:57.474"/>
</kw>
<if>
<branch type="IF" condition="${radio_button_selected} == False">
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:03:57.474" endtime="20240424 20:03:57.474"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:03:57.474" endtime="20240424 20:03:57.474"/>
</branch>
<status status="PASS" starttime="20240424 20:03:57.474" endtime="20240424 20:03:57.474"/>
</if>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${column_name}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 20:03:57.474" level="INFO">${column_name} = Profile Type</msg>
<status status="PASS" starttime="20240424 20:03:57.474" endtime="20240424 20:03:57.474"/>
</kw>
<kw name="Add New ITO Column" library="information_take_off_step_definitions">
<arg>${column_name}</arg>
<arg>${old_column_name}</arg>
<kw name="Insert Into List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<arg>${column_name}</arg>
<doc>Inserts ``value`` into ``list`` to the position specified with ``index``.</doc>
<status status="PASS" starttime="20240424 20:03:57.474" endtime="20240424 20:03:57.474"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:03:57.474" endtime="20240424 20:03:57.612"/>
</kw>
<kw name="Dialog Should Not Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is open.
You might want to set the waiting timeout with the keyword `Set Jemmy Timeout`.</doc>
<status status="PASS" starttime="20240424 20:03:57.612" endtime="20240424 20:04:07.617"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:04:07.617" endtime="20240424 20:04:07.617"/>
</kw>
<kw name="Get Table Headers" library="SwingRobot">
<var>${table_headers}</var>
<arg>4</arg>
<doc>Returns table's header names.</doc>
<msg timestamp="20240424 20:04:07.617" level="INFO">${table_headers} = ['Component', 'Profile Type', 'Type', 'Count', 'Color']</msg>
<status status="PASS" starttime="20240424 20:04:07.617" endtime="20240424 20:04:07.617"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${defaut_table_headers}</arg>
<arg>${table_headers}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:04:07.617" endtime="20240424 20:04:07.617"/>
</kw>
<kw name="Remove From List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20240424 20:04:07.617" endtime="20240424 20:04:07.617"/>
</kw>
<status status="PASS" starttime="20240424 20:03:57.474" endtime="20240424 20:04:07.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>End of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:04:07.617" level="INFO">End of loop</msg>
<status status="PASS" starttime="20240424 20:04:07.617" endtime="20240424 20:04:07.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:04:07.617" level="INFO">Profile Type</msg>
<status status="PASS" starttime="20240424 20:04:07.617" endtime="20240424 20:04:07.617"/>
</kw>
<status status="PASS" starttime="20240424 20:03:57.063" endtime="20240424 20:04:07.617"/>
</iter>
<iter>
<var name="${radio_button}">Classification</var>
<kw name="Log" library="BuiltIn">
<arg>Start of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:04:07.617" level="INFO">Start of loop</msg>
<status status="PASS" starttime="20240424 20:04:07.617" endtime="20240424 20:04:07.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:04:07.617" level="INFO">Profile Type</msg>
<status status="PASS" starttime="20240424 20:04:07.617" endtime="20240424 20:04:07.617"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${old_column_name}</var>
<arg>${column_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240424 20:04:07.617" level="INFO">${old_column_name} = Profile Type</msg>
<status status="PASS" starttime="20240424 20:04:07.617" endtime="20240424 20:04:07.617"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Select From Table Header Popup Menu</arg>
<arg>4</arg>
<arg>1</arg>
<arg>Edit Column...</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:04:07.617" endtime="20240424 20:04:07.628"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:04:07.628" endtime="20240424 20:04:08.023"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:04:08.023" endtime="20240424 20:04:08.036"/>
</kw>
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:04:08.036" endtime="20240424 20:04:08.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${radio_button}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:04:08.046" level="INFO">Classification</msg>
<status status="PASS" starttime="20240424 20:04:08.046" endtime="20240424 20:04:08.046"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${radio_button_selected}</var>
<arg>Radio Button Should Be Selected</arg>
<arg>${radio_button}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Radio Button Should Be Selected" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Fails if radiobutton is not selected.</doc>
<status status="PASS" starttime="20240424 20:04:08.046" endtime="20240424 20:04:08.046"/>
</kw>
<msg timestamp="20240424 20:04:08.046" level="INFO">${radio_button_selected} = True</msg>
<status status="PASS" starttime="20240424 20:04:08.046" endtime="20240424 20:04:08.046"/>
</kw>
<if>
<branch type="IF" condition="${radio_button_selected} == False">
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:04:08.046" endtime="20240424 20:04:08.046"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:04:08.046" endtime="20240424 20:04:08.046"/>
</branch>
<status status="PASS" starttime="20240424 20:04:08.046" endtime="20240424 20:04:08.046"/>
</if>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${column_name}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 20:04:08.061" level="INFO">${column_name} = Space Grouping</msg>
<status status="PASS" starttime="20240424 20:04:08.046" endtime="20240424 20:04:08.061"/>
</kw>
<kw name="Add New ITO Column" library="information_take_off_step_definitions">
<arg>${column_name}</arg>
<arg>${old_column_name}</arg>
<kw name="Insert Into List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<arg>${column_name}</arg>
<doc>Inserts ``value`` into ``list`` to the position specified with ``index``.</doc>
<status status="PASS" starttime="20240424 20:04:08.061" endtime="20240424 20:04:08.061"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:04:08.061" endtime="20240424 20:04:08.205"/>
</kw>
<kw name="Dialog Should Not Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is open.
You might want to set the waiting timeout with the keyword `Set Jemmy Timeout`.</doc>
<status status="PASS" starttime="20240424 20:04:08.205" endtime="20240424 20:04:18.212"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:04:18.212" endtime="20240424 20:04:18.215"/>
</kw>
<kw name="Get Table Headers" library="SwingRobot">
<var>${table_headers}</var>
<arg>4</arg>
<doc>Returns table's header names.</doc>
<msg timestamp="20240424 20:04:18.223" level="INFO">${table_headers} = ['Component', 'Space Grouping', 'Type', 'Count', 'Color']</msg>
<status status="PASS" starttime="20240424 20:04:18.215" endtime="20240424 20:04:18.223"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${defaut_table_headers}</arg>
<arg>${table_headers}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:04:18.223" endtime="20240424 20:04:18.223"/>
</kw>
<kw name="Remove From List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20240424 20:04:18.223" endtime="20240424 20:04:18.223"/>
</kw>
<status status="PASS" starttime="20240424 20:04:08.061" endtime="20240424 20:04:18.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>End of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:04:18.223" level="INFO">End of loop</msg>
<status status="PASS" starttime="20240424 20:04:18.223" endtime="20240424 20:04:18.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:04:18.223" level="INFO">Space Grouping</msg>
<status status="PASS" starttime="20240424 20:04:18.223" endtime="20240424 20:04:18.223"/>
</kw>
<status status="PASS" starttime="20240424 20:04:07.617" endtime="20240424 20:04:18.223"/>
</iter>
<iter>
<var name="${radio_button}">Hyperlink</var>
<kw name="Log" library="BuiltIn">
<arg>Start of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:04:18.223" level="INFO">Start of loop</msg>
<status status="PASS" starttime="20240424 20:04:18.223" endtime="20240424 20:04:18.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:04:18.223" level="INFO">Space Grouping</msg>
<status status="PASS" starttime="20240424 20:04:18.223" endtime="20240424 20:04:18.223"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${old_column_name}</var>
<arg>${column_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240424 20:04:18.223" level="INFO">${old_column_name} = Space Grouping</msg>
<status status="PASS" starttime="20240424 20:04:18.223" endtime="20240424 20:04:18.223"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Select From Table Header Popup Menu</arg>
<arg>4</arg>
<arg>1</arg>
<arg>Edit Column...</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:04:18.223" endtime="20240424 20:04:18.223"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:04:18.223" endtime="20240424 20:04:18.635"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:04:18.635" endtime="20240424 20:04:18.643"/>
</kw>
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:04:18.643" endtime="20240424 20:04:18.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${radio_button}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:04:18.659" level="INFO">Hyperlink</msg>
<status status="PASS" starttime="20240424 20:04:18.659" endtime="20240424 20:04:18.659"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${radio_button_selected}</var>
<arg>Radio Button Should Be Selected</arg>
<arg>${radio_button}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Radio Button Should Be Selected" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Fails if radiobutton is not selected.</doc>
<status status="PASS" starttime="20240424 20:04:18.659" endtime="20240424 20:04:18.666"/>
</kw>
<msg timestamp="20240424 20:04:18.666" level="INFO">${radio_button_selected} = True</msg>
<status status="PASS" starttime="20240424 20:04:18.659" endtime="20240424 20:04:18.666"/>
</kw>
<if>
<branch type="IF" condition="${radio_button_selected} == False">
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:04:18.666" endtime="20240424 20:04:18.666"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:04:18.666" endtime="20240424 20:04:18.666"/>
</branch>
<status status="PASS" starttime="20240424 20:04:18.666" endtime="20240424 20:04:18.666"/>
</if>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${column_name}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 20:04:18.668" level="INFO">${column_name} = Hyperlink</msg>
<status status="PASS" starttime="20240424 20:04:18.666" endtime="20240424 20:04:18.668"/>
</kw>
<kw name="Add New ITO Column" library="information_take_off_step_definitions">
<arg>${column_name}</arg>
<arg>${old_column_name}</arg>
<kw name="Insert Into List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<arg>${column_name}</arg>
<doc>Inserts ``value`` into ``list`` to the position specified with ``index``.</doc>
<status status="PASS" starttime="20240424 20:04:18.668" endtime="20240424 20:04:18.668"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:04:18.668" endtime="20240424 20:04:18.817"/>
</kw>
<kw name="Dialog Should Not Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is open.
You might want to set the waiting timeout with the keyword `Set Jemmy Timeout`.</doc>
<status status="PASS" starttime="20240424 20:04:18.817" endtime="20240424 20:04:28.825"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:04:28.825" endtime="20240424 20:04:28.825"/>
</kw>
<kw name="Get Table Headers" library="SwingRobot">
<var>${table_headers}</var>
<arg>4</arg>
<doc>Returns table's header names.</doc>
<msg timestamp="20240424 20:04:28.825" level="INFO">${table_headers} = ['Component', 'Hyperlink', 'Type', 'Count', 'Color']</msg>
<status status="PASS" starttime="20240424 20:04:28.825" endtime="20240424 20:04:28.825"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${defaut_table_headers}</arg>
<arg>${table_headers}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:04:28.825" endtime="20240424 20:04:28.825"/>
</kw>
<kw name="Remove From List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20240424 20:04:28.825" endtime="20240424 20:04:28.825"/>
</kw>
<status status="PASS" starttime="20240424 20:04:18.668" endtime="20240424 20:04:28.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>End of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:04:28.825" level="INFO">End of loop</msg>
<status status="PASS" starttime="20240424 20:04:28.825" endtime="20240424 20:04:28.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:04:28.825" level="INFO">Hyperlink</msg>
<status status="PASS" starttime="20240424 20:04:28.825" endtime="20240424 20:04:28.825"/>
</kw>
<status status="PASS" starttime="20240424 20:04:18.223" endtime="20240424 20:04:28.825"/>
</iter>
<iter>
<var name="${radio_button}">Relation</var>
<kw name="Log" library="BuiltIn">
<arg>Start of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:04:28.825" level="INFO">Start of loop</msg>
<status status="PASS" starttime="20240424 20:04:28.825" endtime="20240424 20:04:28.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:04:28.825" level="INFO">Hyperlink</msg>
<status status="PASS" starttime="20240424 20:04:28.825" endtime="20240424 20:04:28.825"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${old_column_name}</var>
<arg>${column_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240424 20:04:28.825" level="INFO">${old_column_name} = Hyperlink</msg>
<status status="PASS" starttime="20240424 20:04:28.825" endtime="20240424 20:04:28.825"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Select From Table Header Popup Menu</arg>
<arg>4</arg>
<arg>1</arg>
<arg>Edit Column...</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:04:28.825" endtime="20240424 20:04:28.838"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:04:28.838" endtime="20240424 20:04:29.149"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:04:29.149" endtime="20240424 20:04:29.159"/>
</kw>
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:04:29.159" endtime="20240424 20:04:29.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${radio_button}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:04:29.197" level="INFO">Relation</msg>
<status status="PASS" starttime="20240424 20:04:29.197" endtime="20240424 20:04:29.197"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${radio_button_selected}</var>
<arg>Radio Button Should Be Selected</arg>
<arg>${radio_button}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Radio Button Should Be Selected" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Fails if radiobutton is not selected.</doc>
<status status="PASS" starttime="20240424 20:04:29.197" endtime="20240424 20:04:29.197"/>
</kw>
<msg timestamp="20240424 20:04:29.197" level="INFO">${radio_button_selected} = True</msg>
<status status="PASS" starttime="20240424 20:04:29.197" endtime="20240424 20:04:29.197"/>
</kw>
<if>
<branch type="IF" condition="${radio_button_selected} == False">
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:04:29.197" endtime="20240424 20:04:29.197"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:04:29.197" endtime="20240424 20:04:29.197"/>
</branch>
<status status="PASS" starttime="20240424 20:04:29.197" endtime="20240424 20:04:29.197"/>
</if>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${column_name}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 20:04:29.211" level="INFO">${column_name} = Containment</msg>
<status status="PASS" starttime="20240424 20:04:29.197" endtime="20240424 20:04:29.211"/>
</kw>
<kw name="Add New ITO Column" library="information_take_off_step_definitions">
<arg>${column_name}</arg>
<arg>${old_column_name}</arg>
<kw name="Insert Into List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<arg>${column_name}</arg>
<doc>Inserts ``value`` into ``list`` to the position specified with ``index``.</doc>
<status status="PASS" starttime="20240424 20:04:29.211" endtime="20240424 20:04:29.211"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:04:29.211" endtime="20240424 20:04:29.334"/>
</kw>
<kw name="Dialog Should Not Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is open.
You might want to set the waiting timeout with the keyword `Set Jemmy Timeout`.</doc>
<status status="PASS" starttime="20240424 20:04:29.334" endtime="20240424 20:04:39.340"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:04:39.340" endtime="20240424 20:04:39.340"/>
</kw>
<kw name="Get Table Headers" library="SwingRobot">
<var>${table_headers}</var>
<arg>4</arg>
<doc>Returns table's header names.</doc>
<msg timestamp="20240424 20:04:39.340" level="INFO">${table_headers} = ['Component', 'Containment', 'Type', 'Count', 'Color']</msg>
<status status="PASS" starttime="20240424 20:04:39.340" endtime="20240424 20:04:39.340"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${defaut_table_headers}</arg>
<arg>${table_headers}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:04:39.340" endtime="20240424 20:04:39.340"/>
</kw>
<kw name="Remove From List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20240424 20:04:39.340" endtime="20240424 20:04:39.340"/>
</kw>
<status status="PASS" starttime="20240424 20:04:29.211" endtime="20240424 20:04:39.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>End of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:04:39.340" level="INFO">End of loop</msg>
<status status="PASS" starttime="20240424 20:04:39.340" endtime="20240424 20:04:39.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:04:39.340" level="INFO">Containment</msg>
<status status="PASS" starttime="20240424 20:04:39.340" endtime="20240424 20:04:39.340"/>
</kw>
<status status="PASS" starttime="20240424 20:04:28.825" endtime="20240424 20:04:39.340"/>
</iter>
<iter>
<var name="${radio_button}">Color</var>
<kw name="Log" library="BuiltIn">
<arg>Start of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:04:39.340" level="INFO">Start of loop</msg>
<status status="PASS" starttime="20240424 20:04:39.340" endtime="20240424 20:04:39.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:04:39.340" level="INFO">Containment</msg>
<status status="PASS" starttime="20240424 20:04:39.340" endtime="20240424 20:04:39.340"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${old_column_name}</var>
<arg>${column_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240424 20:04:39.340" level="INFO">${old_column_name} = Containment</msg>
<status status="PASS" starttime="20240424 20:04:39.340" endtime="20240424 20:04:39.340"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Select From Table Header Popup Menu</arg>
<arg>4</arg>
<arg>1</arg>
<arg>Edit Column...</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:04:39.340" endtime="20240424 20:04:39.340"/>
</kw>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:04:39.340" endtime="20240424 20:04:39.692"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:04:39.692" endtime="20240424 20:04:39.715"/>
</kw>
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:04:39.715" endtime="20240424 20:04:39.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${radio_button}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:04:39.740" level="INFO">Color</msg>
<status status="PASS" starttime="20240424 20:04:39.740" endtime="20240424 20:04:39.740"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${radio_button_selected}</var>
<arg>Radio Button Should Be Selected</arg>
<arg>${radio_button}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Radio Button Should Be Selected" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Fails if radiobutton is not selected.</doc>
<status status="PASS" starttime="20240424 20:04:39.740" endtime="20240424 20:04:39.765"/>
</kw>
<msg timestamp="20240424 20:04:39.765" level="INFO">${radio_button_selected} = True</msg>
<status status="PASS" starttime="20240424 20:04:39.740" endtime="20240424 20:04:39.765"/>
</kw>
<if>
<branch type="IF" condition="${radio_button_selected} == False">
<kw name="Push Radio Button" library="SwingRobot">
<arg>${radio_button}</arg>
<doc>Uses current context to search for a radiobutton and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:04:39.765" endtime="20240424 20:04:39.765"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:04:39.765" endtime="20240424 20:04:39.765"/>
</branch>
<status status="PASS" starttime="20240424 20:04:39.765" endtime="20240424 20:04:39.765"/>
</if>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${column_name}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<msg timestamp="20240424 20:04:39.770" level="INFO">${column_name} = Color</msg>
<status status="PASS" starttime="20240424 20:04:39.765" endtime="20240424 20:04:39.770"/>
</kw>
<kw name="Add New ITO Column" library="information_take_off_step_definitions">
<arg>${column_name}</arg>
<arg>${old_column_name}</arg>
<kw name="Insert Into List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<arg>${column_name}</arg>
<doc>Inserts ``value`` into ``list`` to the position specified with ``index``.</doc>
<status status="PASS" starttime="20240424 20:04:39.770" endtime="20240424 20:04:39.770"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:04:39.770" endtime="20240424 20:04:39.903"/>
</kw>
<kw name="Dialog Should Not Be Open" library="SwingRobot">
<arg>Edit Column - ${old_column_name}</arg>
<doc>Fails if the dialog is open.
You might want to set the waiting timeout with the keyword `Set Jemmy Timeout`.</doc>
<status status="PASS" starttime="20240424 20:04:39.903" endtime="20240424 20:04:49.913"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:04:49.913" endtime="20240424 20:04:49.920"/>
</kw>
<kw name="Get Table Headers" library="SwingRobot">
<var>${table_headers}</var>
<arg>4</arg>
<doc>Returns table's header names.</doc>
<msg timestamp="20240424 20:04:49.926" level="INFO">${table_headers} = ['Component', 'Color', 'Type', 'Count', 'Color']</msg>
<status status="PASS" starttime="20240424 20:04:49.920" endtime="20240424 20:04:49.926"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${defaut_table_headers}</arg>
<arg>${table_headers}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:04:49.926" endtime="20240424 20:04:49.928"/>
</kw>
<kw name="Remove From List" library="Collections">
<arg>${defaut_table_headers}</arg>
<arg>1</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="PASS" starttime="20240424 20:04:49.928" endtime="20240424 20:04:49.928"/>
</kw>
<status status="PASS" starttime="20240424 20:04:39.770" endtime="20240424 20:04:49.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>End of loop</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:04:49.928" level="INFO">End of loop</msg>
<status status="PASS" starttime="20240424 20:04:49.928" endtime="20240424 20:04:49.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${column_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240424 20:04:49.928" level="INFO">Color</msg>
<status status="PASS" starttime="20240424 20:04:49.928" endtime="20240424 20:04:49.928"/>
</kw>
<status status="PASS" starttime="20240424 20:04:39.340" endtime="20240424 20:04:49.928"/>
</iter>
<status status="PASS" starttime="20240424 20:02:42.439" endtime="20240424 20:04:49.928"/>
</for>
<status status="PASS" starttime="20240424 20:02:31.349" endtime="20240424 20:04:49.928"/>
</kw>
<kw name="Then Close Model For Cleanup" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:04:49.928" endtime="20240424 20:04:49.928"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:04:49.928" endtime="20240424 20:04:49.928"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:04:49.928" endtime="20240424 20:04:50.074"/>
</kw>
<status status="PASS" starttime="20240424 20:04:49.928" endtime="20240424 20:04:50.074"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>3</arg>
<arg>Component Should Be Visible</arg>
<arg>${button_close_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Component Should Be Visible" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Checks that component is visible.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:04:50.074" endtime="20240424 20:04:50.078"/>
</kw>
<status status="PASS" starttime="20240424 20:04:50.074" endtime="20240424 20:04:50.078"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${close_button_is_enabled}</var>
<arg>Label Should Be Enabled</arg>
<arg>${button_close_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:04:50.078" endtime="20240424 20:04:50.078"/>
</kw>
<msg timestamp="20240424 20:04:50.078" level="INFO">${close_button_is_enabled} = True</msg>
<status status="PASS" starttime="20240424 20:04:50.078" endtime="20240424 20:04:50.078"/>
</kw>
<if>
<branch type="IF" condition="${close_button_is_enabled}">
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:04:50.078" endtime="20240424 20:04:50.084"/>
</kw>
<status status="PASS" starttime="20240424 20:04:50.078" endtime="20240424 20:04:50.084"/>
</branch>
<status status="PASS" starttime="20240424 20:04:50.078" endtime="20240424 20:04:50.084"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20</arg>
<arg>2</arg>
<arg>Dialog Should Be Open</arg>
<arg>regexp=^S.*</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>regexp=^S.*</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:04:50.084" endtime="20240424 20:04:50.110"/>
</kw>
<status status="PASS" starttime="20240424 20:04:50.084" endtime="20240424 20:04:50.110"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${save_modified_dialog}</var>
<arg>Dialog Should Be Open</arg>
<arg>regexp=^Save.*</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>regexp=^Save.*</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:04:50.110" endtime="20240424 20:04:50.110"/>
</kw>
<msg timestamp="20240424 20:04:50.110" level="INFO">${save_modified_dialog} = True</msg>
<status status="PASS" starttime="20240424 20:04:50.110" endtime="20240424 20:04:50.110"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${select_dialog}</var>
<arg>Dialog Should Be Open</arg>
<arg>regexp=^Select.*</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>regexp=^Select.*</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 20:05:00.138" level="FAIL">Dialog 'regexp=^Select.*' is not open</msg>
<status status="FAIL" starttime="20240424 20:04:50.126" endtime="20240424 20:05:00.138"/>
</kw>
<msg timestamp="20240424 20:05:00.138" level="INFO">${select_dialog} = False</msg>
<status status="PASS" starttime="20240424 20:04:50.110" endtime="20240424 20:05:00.138"/>
</kw>
<if>
<branch type="IF" condition="${select_dialog}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 20:05:00.138" endtime="20240424 20:05:00.138"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:05:00.138" endtime="20240424 20:05:00.138"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:05:00.138" endtime="20240424 20:05:00.138"/>
</branch>
<status status="PASS" starttime="20240424 20:05:00.138" endtime="20240424 20:05:00.138"/>
</if>
<if>
<branch type="IF" condition="${save_modified_dialog}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:00.138" endtime="20240424 20:05:00.138"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:00.138" endtime="20240424 20:05:00.161"/>
</kw>
<status status="PASS" starttime="20240424 20:05:00.138" endtime="20240424 20:05:00.161"/>
</branch>
<status status="PASS" starttime="20240424 20:05:00.138" endtime="20240424 20:05:00.161"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:00.161" endtime="20240424 20:05:00.236"/>
</kw>
<kw name="Take Screenshot" library="ScreenCapLibrary">
<doc>Takes a screenshot in the specified format at library import and
embeds it into the log file (PNG by default).</doc>
<msg timestamp="20240424 20:05:00.400" level="INFO" html="true">&lt;a href="screenshot_8.png"&gt;&lt;img src="screenshot_8.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240424 20:05:00.236" endtime="20240424 20:05:00.400"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:05:00.400" endtime="20240424 20:05:00.428"/>
</kw>
<status status="PASS" starttime="20240424 20:05:00.400" endtime="20240424 20:05:00.428"/>
</kw>
<status status="PASS" starttime="20240424 20:04:49.928" endtime="20240424 20:05:00.428"/>
</kw>
<status status="PASS" starttime="20240424 20:02:14.619" endtime="20240424 20:05:00.428"/>
</test>
<doc>To check the functionality Information TakeOff
Validate default Information TakeOff view
Opening IFC,PDF and SMC/Solibri model files from file chooser
Validate default Information TakeOff view
Validating newly created Information TakeOff's</doc>
<meta name="Feature">Information Take off</meta>
<meta name="Generated by">_gherkin2robotframework on 2023-06-14T11:20:47.746644_</meta>
<status status="PASS" starttime="20240424 20:02:14.557" endtime="20240424 20:05:00.428"/>
</suite>
<suite id="s1-s20" name="21 Model Categories" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\21_model_categories.robot">
<test id="s1-s20-t1" name="Verify Model Categories" line="11">
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 20:05:00.493" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 20:05:00.493" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 20:05:00 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 20:05:00.475" endtime="20240424 20:05:00.493"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 20:05:00.493" endtime="20240424 20:05:00.493"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:00.493" endtime="20240424 20:05:00.547"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 20:05:00.549" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 20:05:00.547" endtime="20240424 20:05:00.549"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 20:05:00.549" endtime="20240424 20:05:00.549"/>
</kw>
<status status="PASS" starttime="20240424 20:05:00.547" endtime="20240424 20:05:00.549"/>
</kw>
<status status="PASS" starttime="20240424 20:05:00.475" endtime="20240424 20:05:00.549"/>
</kw>
<kw name="And No Existing Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:00.549" endtime="20240424 20:05:00.553"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:05:00.553" endtime="20240424 20:05:00.553"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:00.553" endtime="20240424 20:05:00.553"/>
</kw>
<status status="PASS" starttime="20240424 20:05:00.549" endtime="20240424 20:05:00.553"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:05:00.553" endtime="20240424 20:05:00.553"/>
</kw>
<status status="PASS" starttime="20240424 20:05:00.553" endtime="20240424 20:05:00.553"/>
</kw>
<msg timestamp="20240424 20:05:00.553" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 20:05:00.553" endtime="20240424 20:05:00.553"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 20:05:00.553" endtime="20240424 20:05:00.553"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:05:00.553" endtime="20240424 20:05:00.553"/>
</branch>
<status status="PASS" starttime="20240424 20:05:00.553" endtime="20240424 20:05:00.553"/>
</if>
<status status="PASS" starttime="20240424 20:05:00.549" endtime="20240424 20:05:00.553"/>
</kw>
<kw name="Then Open Models and Add Categories" library="model_categories_step_definitions">
<kw name="Open Model" library="model_categories_step_definitions">
<arg>Solibri Building.ifc</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:00.553" endtime="20240424 20:05:00.569"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 20:05:00.572" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 20:05:00.569" endtime="20240424 20:05:00.572"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 20:05:00.572" endtime="20240424 20:05:00.572"/>
</kw>
<status status="PASS" starttime="20240424 20:05:00.569" endtime="20240424 20:05:00.572"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:00.572" endtime="20240424 20:05:00.576"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:05:00.576" endtime="20240424 20:05:00.576"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:00.576" endtime="20240424 20:05:00.582"/>
</kw>
<status status="PASS" starttime="20240424 20:05:00.572" endtime="20240424 20:05:00.582"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>3x</arg>
<arg>Label Should Exist</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Exist" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 20:05:00.582" endtime="20240424 20:05:00.584"/>
</kw>
<status status="PASS" starttime="20240424 20:05:00.582" endtime="20240424 20:05:00.584"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${Button_Open_Title}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:05:00.584" endtime="20240424 20:05:00.592"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${FileChooser_OpenModels_Title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:00.592" endtime="20240424 20:05:01.340"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${ifc_filename}</var>
<arg>${ifc_folder}</arg>
<arg>${ifc_filename}</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 20:05:01.340" level="INFO">${ifc_filename} = C:\users\public\Solibri\SOLIBRI\Samples\ifc\Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 20:05:01.340" endtime="20240424 20:05:01.340"/>
</kw>
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 20:05:01.340" endtime="20240424 20:05:01.528"/>
</kw>
<status status="PASS" starttime="20240424 20:05:01.340" endtime="20240424 20:05:01.528"/>
</kw>
<status status="PASS" starttime="20240424 20:05:00.553" endtime="20240424 20:05:01.528"/>
</kw>
<kw name="Add Categories in Disciplines Dialog" library="model_categories_step_definitions">
<arg>Architectural</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${discipline_dialog_visible}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 20:05:04.051" level="INFO">2024-04-24 20:05:02.240+0000 [Thread-279] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 0 ms.
2024-04-24 20:05:02.240+0000 [Thread-279] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 688 ms (using 1 threads)
2024-04-24 20:05:02.286+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 46 ms
2024-04-24 20:05:03.466+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 1226 ms.</msg>
<status status="PASS" starttime="20240424 20:05:01.528" endtime="20240424 20:05:04.051"/>
</kw>
<status status="PASS" starttime="20240424 20:05:01.528" endtime="20240424 20:05:04.051"/>
</kw>
<msg timestamp="20240424 20:05:04.051" level="INFO">${discipline_dialog_visible} = True</msg>
<status status="PASS" starttime="20240424 20:05:01.528" endtime="20240424 20:05:04.051"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Dialog Should Be Open</arg>
<arg>To-Do</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>To-Do</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:05:04.051" endtime="20240424 20:05:04.287"/>
</kw>
<msg timestamp="20240424 20:05:04.287" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20240424 20:05:04.051" endtime="20240424 20:05:04.287"/>
</kw>
<if>
<branch type="IF" condition="${status} == True">
<kw name="Close Dialog" library="SwingRobot">
<arg>To-Do</arg>
<doc>Closes a dialog.</doc>
<status status="PASS" starttime="20240424 20:05:04.302" endtime="20240424 20:05:04.416"/>
</kw>
<status status="PASS" starttime="20240424 20:05:04.287" endtime="20240424 20:05:04.416"/>
</branch>
<status status="PASS" starttime="20240424 20:05:04.287" endtime="20240424 20:05:04.416"/>
</if>
<if>
<branch type="IF" condition="${discipline_dialog_visible} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:04.417" endtime="20240424 20:05:04.476"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Add Category</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:05:04.476" endtime="20240424 20:05:04.480"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:05:04.480" endtime="20240424 20:05:04.526"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Add Category</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:05:04.526" endtime="20240424 20:05:04.576"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Add Category</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:04.576" endtime="20240424 20:05:04.716"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Add New Category</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:04.716" endtime="20240424 20:05:04.716"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:05:04.716" endtime="20240424 20:05:04.716"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:05:04.716" endtime="20240424 20:05:04.716"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>${category_name}</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 20:05:04.716" endtime="20240424 20:05:04.761"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:05:04.761" endtime="20240424 20:05:04.790"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:04.790" endtime="20240424 20:05:04.806"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:04.806" endtime="20240424 20:05:04.810"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${category_name_from_dialog}</var>
<arg>0</arg>
<arg>0</arg>
<arg>3</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:05:04.815" level="INFO">${category_name_from_dialog} = Architectural</msg>
<status status="PASS" starttime="20240424 20:05:04.810" endtime="20240424 20:05:04.815"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${category_name_from_dialog}</arg>
<arg>${category_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:05:04.815" endtime="20240424 20:05:04.815"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:04.815" endtime="20240424 20:05:04.865"/>
</kw>
<status status="PASS" starttime="20240424 20:05:04.416" endtime="20240424 20:05:04.865"/>
</branch>
<status status="PASS" starttime="20240424 20:05:04.416" endtime="20240424 20:05:04.865"/>
</if>
<status status="PASS" starttime="20240424 20:05:01.528" endtime="20240424 20:05:04.865"/>
</kw>
<kw name="Verify Category in Model Tree" library="model_categories_step_definitions">
<arg>Architectural</arg>
<arg>0</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:04.865" endtime="20240424 20:05:04.865"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${category_name_in_model_tree_view}</var>
<arg>0</arg>
<arg>${row_index_in_model_tree_view}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:05:04.885" level="INFO">${category_name_in_model_tree_view} = Architectural</msg>
<status status="PASS" starttime="20240424 20:05:04.865" endtime="20240424 20:05:04.885"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${category_name_in_model_tree_view}</arg>
<arg>${category_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:05:04.885" endtime="20240424 20:05:04.885"/>
</kw>
<status status="PASS" starttime="20240424 20:05:04.865" endtime="20240424 20:05:04.885"/>
</kw>
<kw name="Add Model" library="model_categories_step_definitions">
<arg>Solibri Building Structural.ifc</arg>
<doc>Adds a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:04.885" endtime="20240424 20:05:04.889"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>FILE</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:04.889" endtime="20240424 20:05:04.893"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:05:04.893" endtime="20240424 20:05:04.895"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:04.895" endtime="20240424 20:05:04.918"/>
</kw>
<status status="PASS" starttime="20240424 20:05:04.889" endtime="20240424 20:05:04.918"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Exist</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Exist" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 20:05:04.918" endtime="20240424 20:05:05.066"/>
</kw>
<status status="PASS" starttime="20240424 20:05:04.918" endtime="20240424 20:05:05.066"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_add_models_title}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:05:05.066" endtime="20240424 20:05:05.078"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_add_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:05.078" endtime="20240424 20:05:06.447"/>
</kw>
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 20:05:06.447" endtime="20240424 20:05:06.563"/>
</kw>
<status status="PASS" starttime="20240424 20:05:06.447" endtime="20240424 20:05:06.563"/>
</kw>
<status status="PASS" starttime="20240424 20:05:04.885" endtime="20240424 20:05:06.563"/>
</kw>
<kw name="Add Categories in Disciplines Dialog" library="model_categories_step_definitions">
<arg>Structural</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${discipline_dialog_visible}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 20:05:07.205" level="INFO">2024-04-24 20:05:06.754+0000 [Thread-332] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 0 ms.
2024-04-24 20:05:06.754+0000 [Thread-332] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 32 ms (using 1 threads)
2024-04-24 20:05:06.754+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 0 ms
2024-04-24 20:05:06.793+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building Structural) converted in: 39 ms.</msg>
<status status="PASS" starttime="20240424 20:05:06.563" endtime="20240424 20:05:07.205"/>
</kw>
<status status="PASS" starttime="20240424 20:05:06.563" endtime="20240424 20:05:07.205"/>
</kw>
<msg timestamp="20240424 20:05:07.205" level="INFO">${discipline_dialog_visible} = True</msg>
<status status="PASS" starttime="20240424 20:05:06.563" endtime="20240424 20:05:07.205"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Dialog Should Be Open</arg>
<arg>To-Do</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>To-Do</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 20:05:17.212" level="FAIL">Dialog 'To-Do' is not open</msg>
<status status="FAIL" starttime="20240424 20:05:07.205" endtime="20240424 20:05:17.212"/>
</kw>
<msg timestamp="20240424 20:05:17.212" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20240424 20:05:07.205" endtime="20240424 20:05:17.212"/>
</kw>
<if>
<branch type="IF" condition="${status} == True">
<kw name="Close Dialog" library="SwingRobot">
<arg>To-Do</arg>
<doc>Closes a dialog.</doc>
<status status="NOT RUN" starttime="20240424 20:05:17.212" endtime="20240424 20:05:17.212"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:05:17.212" endtime="20240424 20:05:17.212"/>
</branch>
<status status="PASS" starttime="20240424 20:05:17.212" endtime="20240424 20:05:17.212"/>
</if>
<if>
<branch type="IF" condition="${discipline_dialog_visible} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:17.212" endtime="20240424 20:05:17.212"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Add Category</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:05:17.212" endtime="20240424 20:05:17.212"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:05:17.212" endtime="20240424 20:05:17.227"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Add Category</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:05:17.227" endtime="20240424 20:05:17.234"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Add Category</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:17.234" endtime="20240424 20:05:17.265"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Add New Category</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:17.265" endtime="20240424 20:05:17.270"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:05:17.270" endtime="20240424 20:05:17.270"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:05:17.270" endtime="20240424 20:05:17.270"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>${category_name}</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 20:05:17.270" endtime="20240424 20:05:17.370"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:05:17.370" endtime="20240424 20:05:17.370"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:17.370" endtime="20240424 20:05:17.386"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:17.386" endtime="20240424 20:05:17.386"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${category_name_from_dialog}</var>
<arg>0</arg>
<arg>0</arg>
<arg>3</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:05:17.386" level="INFO">${category_name_from_dialog} = Structural</msg>
<status status="PASS" starttime="20240424 20:05:17.386" endtime="20240424 20:05:17.386"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${category_name_from_dialog}</arg>
<arg>${category_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:05:17.386" endtime="20240424 20:05:17.386"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:17.386" endtime="20240424 20:05:17.427"/>
</kw>
<status status="PASS" starttime="20240424 20:05:17.212" endtime="20240424 20:05:17.427"/>
</branch>
<status status="PASS" starttime="20240424 20:05:17.212" endtime="20240424 20:05:17.427"/>
</if>
<status status="PASS" starttime="20240424 20:05:06.563" endtime="20240424 20:05:17.427"/>
</kw>
<kw name="Verify Category in Model Tree" library="model_categories_step_definitions">
<arg>Structural</arg>
<arg>1</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:17.442" endtime="20240424 20:05:17.446"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${category_name_in_model_tree_view}</var>
<arg>0</arg>
<arg>${row_index_in_model_tree_view}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:05:17.446" level="INFO">${category_name_in_model_tree_view} = Structural</msg>
<status status="PASS" starttime="20240424 20:05:17.446" endtime="20240424 20:05:17.446"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${category_name_in_model_tree_view}</arg>
<arg>${category_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:05:17.446" endtime="20240424 20:05:17.446"/>
</kw>
<status status="PASS" starttime="20240424 20:05:17.427" endtime="20240424 20:05:17.446"/>
</kw>
<kw name="Add Model" library="model_categories_step_definitions">
<arg>First_Floor_Vent.ifc</arg>
<doc>Adds a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:17.446" endtime="20240424 20:05:17.446"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>FILE</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:17.446" endtime="20240424 20:05:17.455"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:05:17.455" endtime="20240424 20:05:17.455"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:17.455" endtime="20240424 20:05:17.482"/>
</kw>
<status status="PASS" starttime="20240424 20:05:17.446" endtime="20240424 20:05:17.482"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Exist</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Exist" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 20:05:17.482" endtime="20240424 20:05:17.608"/>
</kw>
<status status="PASS" starttime="20240424 20:05:17.482" endtime="20240424 20:05:17.608"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_add_models_title}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:05:17.608" endtime="20240424 20:05:17.613"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_add_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:17.613" endtime="20240424 20:05:18.939"/>
</kw>
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 20:05:18.939" endtime="20240424 20:05:19.047"/>
</kw>
<status status="PASS" starttime="20240424 20:05:18.939" endtime="20240424 20:05:19.047"/>
</kw>
<status status="PASS" starttime="20240424 20:05:17.446" endtime="20240424 20:05:19.047"/>
</kw>
<kw name="Add Categories in Disciplines Dialog" library="model_categories_step_definitions">
<arg>Ventilation</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${discipline_dialog_visible}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 20:05:19.443" level="INFO">2024-04-24 20:05:19.186+0000 [Thread-349] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 0 ms.
2024-04-24 20:05:19.186+0000 [Thread-349] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 82 ms (using 1 threads)
2024-04-24 20:05:19.186+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 0 ms
2024-04-24 20:05:19.217+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (First_Floor_Vent) converted in: 31 ms.</msg>
<status status="PASS" starttime="20240424 20:05:19.047" endtime="20240424 20:05:19.443"/>
</kw>
<status status="PASS" starttime="20240424 20:05:19.047" endtime="20240424 20:05:19.443"/>
</kw>
<msg timestamp="20240424 20:05:19.443" level="INFO">${discipline_dialog_visible} = True</msg>
<status status="PASS" starttime="20240424 20:05:19.047" endtime="20240424 20:05:19.443"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Dialog Should Be Open</arg>
<arg>To-Do</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>To-Do</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 20:05:29.452" level="FAIL">Dialog 'To-Do' is not open</msg>
<status status="FAIL" starttime="20240424 20:05:19.443" endtime="20240424 20:05:29.452"/>
</kw>
<msg timestamp="20240424 20:05:29.452" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20240424 20:05:19.443" endtime="20240424 20:05:29.452"/>
</kw>
<if>
<branch type="IF" condition="${status} == True">
<kw name="Close Dialog" library="SwingRobot">
<arg>To-Do</arg>
<doc>Closes a dialog.</doc>
<status status="NOT RUN" starttime="20240424 20:05:29.452" endtime="20240424 20:05:29.452"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:05:29.452" endtime="20240424 20:05:29.452"/>
</branch>
<status status="PASS" starttime="20240424 20:05:29.452" endtime="20240424 20:05:29.452"/>
</if>
<if>
<branch type="IF" condition="${discipline_dialog_visible} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:29.452" endtime="20240424 20:05:29.452"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Add Category</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:05:29.452" endtime="20240424 20:05:29.464"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:05:29.464" endtime="20240424 20:05:29.476"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Add Category</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:05:29.476" endtime="20240424 20:05:29.481"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Add Category</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:29.481" endtime="20240424 20:05:29.513"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Add New Category</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:29.513" endtime="20240424 20:05:29.513"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:05:29.513" endtime="20240424 20:05:29.513"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:05:29.513" endtime="20240424 20:05:29.525"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>${category_name}</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 20:05:29.525" endtime="20240424 20:05:29.542"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:05:29.542" endtime="20240424 20:05:29.542"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:29.542" endtime="20240424 20:05:29.562"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:29.562" endtime="20240424 20:05:29.566"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${category_name_from_dialog}</var>
<arg>0</arg>
<arg>0</arg>
<arg>3</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:05:29.569" level="INFO">${category_name_from_dialog} = Ventilation</msg>
<status status="PASS" starttime="20240424 20:05:29.566" endtime="20240424 20:05:29.569"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${category_name_from_dialog}</arg>
<arg>${category_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:05:29.569" endtime="20240424 20:05:29.569"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:29.569" endtime="20240424 20:05:29.614"/>
</kw>
<status status="PASS" starttime="20240424 20:05:29.452" endtime="20240424 20:05:29.614"/>
</branch>
<status status="PASS" starttime="20240424 20:05:29.452" endtime="20240424 20:05:29.614"/>
</if>
<status status="PASS" starttime="20240424 20:05:19.047" endtime="20240424 20:05:29.614"/>
</kw>
<kw name="Verify Category in Model Tree" library="model_categories_step_definitions">
<arg>Ventilation</arg>
<arg>2</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:29.614" endtime="20240424 20:05:29.617"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${category_name_in_model_tree_view}</var>
<arg>0</arg>
<arg>${row_index_in_model_tree_view}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:05:29.626" level="INFO">${category_name_in_model_tree_view} = Ventilation</msg>
<status status="PASS" starttime="20240424 20:05:29.617" endtime="20240424 20:05:29.626"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${category_name_in_model_tree_view}</arg>
<arg>${category_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:05:29.626" endtime="20240424 20:05:29.626"/>
</kw>
<status status="PASS" starttime="20240424 20:05:29.614" endtime="20240424 20:05:29.626"/>
</kw>
<kw name="Add Model" library="model_categories_step_definitions">
<arg>Ground_Floor_Vent.ifc</arg>
<doc>Adds a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:29.626" endtime="20240424 20:05:29.629"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>FILE</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:29.629" endtime="20240424 20:05:29.629"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:05:29.629" endtime="20240424 20:05:29.629"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:29.629" endtime="20240424 20:05:29.641"/>
</kw>
<status status="PASS" starttime="20240424 20:05:29.629" endtime="20240424 20:05:29.644"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Exist</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Exist" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 20:05:29.644" endtime="20240424 20:05:29.767"/>
</kw>
<status status="PASS" starttime="20240424 20:05:29.644" endtime="20240424 20:05:29.767"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_add_models_title}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:05:29.767" endtime="20240424 20:05:29.767"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_add_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:29.767" endtime="20240424 20:05:31.123"/>
</kw>
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 20:05:31.123" endtime="20240424 20:05:31.262"/>
</kw>
<status status="PASS" starttime="20240424 20:05:31.123" endtime="20240424 20:05:31.262"/>
</kw>
<status status="PASS" starttime="20240424 20:05:29.626" endtime="20240424 20:05:31.262"/>
</kw>
<kw name="Add Categories in Disciplines Dialog" library="model_categories_step_definitions">
<arg>Ventilation</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${discipline_dialog_visible}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 20:05:31.660" level="INFO">2024-04-24 20:05:31.328+0000 [Thread-366] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 0 ms.
2024-04-24 20:05:31.328+0000 [Thread-366] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 27 ms (using 1 threads)
2024-04-24 20:05:31.342+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 14 ms
2024-04-24 20:05:31.357+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Ground_Floor_Vent) converted in: 29 ms.</msg>
<status status="PASS" starttime="20240424 20:05:31.262" endtime="20240424 20:05:31.660"/>
</kw>
<status status="PASS" starttime="20240424 20:05:31.262" endtime="20240424 20:05:31.660"/>
</kw>
<msg timestamp="20240424 20:05:31.660" level="INFO">${discipline_dialog_visible} = True</msg>
<status status="PASS" starttime="20240424 20:05:31.262" endtime="20240424 20:05:31.660"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Dialog Should Be Open</arg>
<arg>To-Do</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>To-Do</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 20:05:41.679" level="FAIL">Dialog 'To-Do' is not open</msg>
<status status="FAIL" starttime="20240424 20:05:31.660" endtime="20240424 20:05:41.679"/>
</kw>
<msg timestamp="20240424 20:05:41.679" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20240424 20:05:31.660" endtime="20240424 20:05:41.679"/>
</kw>
<if>
<branch type="IF" condition="${status} == True">
<kw name="Close Dialog" library="SwingRobot">
<arg>To-Do</arg>
<doc>Closes a dialog.</doc>
<status status="NOT RUN" starttime="20240424 20:05:41.679" endtime="20240424 20:05:41.679"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:05:41.679" endtime="20240424 20:05:41.679"/>
</branch>
<status status="PASS" starttime="20240424 20:05:41.679" endtime="20240424 20:05:41.679"/>
</if>
<if>
<branch type="IF" condition="${discipline_dialog_visible} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:41.679" endtime="20240424 20:05:41.679"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Add Category</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:05:41.679" endtime="20240424 20:05:41.679"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:05:41.679" endtime="20240424 20:05:41.706"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Add Category</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:05:41.706" endtime="20240424 20:05:41.711"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Add Category</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:41.711" endtime="20240424 20:05:41.745"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Add New Category</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:41.745" endtime="20240424 20:05:41.751"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:05:41.751" endtime="20240424 20:05:41.751"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:05:41.751" endtime="20240424 20:05:41.751"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>${category_name}</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 20:05:41.751" endtime="20240424 20:05:41.784"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:05:41.784" endtime="20240424 20:05:41.784"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:41.784" endtime="20240424 20:05:41.799"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:41.799" endtime="20240424 20:05:41.799"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${category_name_from_dialog}</var>
<arg>0</arg>
<arg>0</arg>
<arg>3</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:05:41.799" level="INFO">${category_name_from_dialog} = Ventilation</msg>
<status status="PASS" starttime="20240424 20:05:41.799" endtime="20240424 20:05:41.799"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${category_name_from_dialog}</arg>
<arg>${category_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:05:41.799" endtime="20240424 20:05:41.799"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:41.799" endtime="20240424 20:05:41.851"/>
</kw>
<status status="PASS" starttime="20240424 20:05:41.679" endtime="20240424 20:05:41.851"/>
</branch>
<status status="PASS" starttime="20240424 20:05:41.679" endtime="20240424 20:05:41.851"/>
</if>
<status status="PASS" starttime="20240424 20:05:31.262" endtime="20240424 20:05:41.851"/>
</kw>
<kw name="Add Model" library="model_categories_step_definitions">
<arg>Solibri Building - modified.ifc</arg>
<doc>Adds a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:41.851" endtime="20240424 20:05:41.854"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>FILE</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:41.854" endtime="20240424 20:05:41.854"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:05:41.854" endtime="20240424 20:05:41.862"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:41.862" endtime="20240424 20:05:41.979"/>
</kw>
<status status="PASS" starttime="20240424 20:05:41.854" endtime="20240424 20:05:41.979"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Exist</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Exist" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 20:05:41.979" endtime="20240424 20:05:41.995"/>
</kw>
<status status="PASS" starttime="20240424 20:05:41.979" endtime="20240424 20:05:41.995"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_add_models_title}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:05:41.995" endtime="20240424 20:05:42.000"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_add_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:42.000" endtime="20240424 20:05:43.328"/>
</kw>
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 20:05:43.328" endtime="20240424 20:05:43.443"/>
</kw>
<status status="PASS" starttime="20240424 20:05:43.328" endtime="20240424 20:05:43.443"/>
</kw>
<status status="PASS" starttime="20240424 20:05:41.851" endtime="20240424 20:05:43.443"/>
</kw>
<kw name="Add Categories in Disciplines Dialog" library="model_categories_step_definitions">
<arg>Architectural</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${discipline_dialog_visible}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 20:05:45.593" level="INFO">2024-04-24 20:05:44.144+0000 [Thread-383] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 0 ms.
2024-04-24 20:05:44.144+0000 [Thread-383] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 672 ms (using 1 threads)
2024-04-24 20:05:44.202+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 58 ms
2024-04-24 20:05:45.244+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building - modified) converted in: 1100 ms.</msg>
<status status="PASS" starttime="20240424 20:05:43.443" endtime="20240424 20:05:45.593"/>
</kw>
<status status="PASS" starttime="20240424 20:05:43.443" endtime="20240424 20:05:45.593"/>
</kw>
<msg timestamp="20240424 20:05:45.593" level="INFO">${discipline_dialog_visible} = True</msg>
<status status="PASS" starttime="20240424 20:05:43.443" endtime="20240424 20:05:45.593"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Dialog Should Be Open</arg>
<arg>To-Do</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>To-Do</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 20:05:55.608" level="FAIL">Dialog 'To-Do' is not open</msg>
<status status="FAIL" starttime="20240424 20:05:45.593" endtime="20240424 20:05:55.608"/>
</kw>
<msg timestamp="20240424 20:05:55.608" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20240424 20:05:45.593" endtime="20240424 20:05:55.608"/>
</kw>
<if>
<branch type="IF" condition="${status} == True">
<kw name="Close Dialog" library="SwingRobot">
<arg>To-Do</arg>
<doc>Closes a dialog.</doc>
<status status="NOT RUN" starttime="20240424 20:05:55.608" endtime="20240424 20:05:55.608"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:05:55.608" endtime="20240424 20:05:55.608"/>
</branch>
<status status="PASS" starttime="20240424 20:05:55.608" endtime="20240424 20:05:55.608"/>
</if>
<if>
<branch type="IF" condition="${discipline_dialog_visible} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:55.608" endtime="20240424 20:05:55.608"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Add Category</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:05:55.608" endtime="20240424 20:05:55.616"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:05:55.616" endtime="20240424 20:05:55.631"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Add Category</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:05:55.631" endtime="20240424 20:05:55.638"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Add Category</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:55.638" endtime="20240424 20:05:55.682"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Add New Category</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:55.682" endtime="20240424 20:05:55.722"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:05:55.722" endtime="20240424 20:05:55.729"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:05:55.729" endtime="20240424 20:05:55.756"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>${category_name}</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 20:05:55.756" endtime="20240424 20:05:55.775"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:05:55.775" endtime="20240424 20:05:55.778"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:55.778" endtime="20240424 20:05:55.792"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:55.792" endtime="20240424 20:05:55.797"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${category_name_from_dialog}</var>
<arg>0</arg>
<arg>0</arg>
<arg>3</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:05:55.805" level="INFO">${category_name_from_dialog} = Architectural</msg>
<status status="PASS" starttime="20240424 20:05:55.797" endtime="20240424 20:05:55.805"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${category_name_from_dialog}</arg>
<arg>${category_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:05:55.805" endtime="20240424 20:05:55.805"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:55.805" endtime="20240424 20:05:55.908"/>
</kw>
<status status="PASS" starttime="20240424 20:05:55.608" endtime="20240424 20:05:55.908"/>
</branch>
<status status="PASS" starttime="20240424 20:05:55.608" endtime="20240424 20:05:55.908"/>
</if>
<status status="PASS" starttime="20240424 20:05:43.443" endtime="20240424 20:05:55.908"/>
</kw>
<status status="PASS" starttime="20240424 20:05:00.553" endtime="20240424 20:05:55.908"/>
</kw>
<kw name="Then Verify Models in Category" library="model_categories_step_definitions">
<doc>Verifies that the models are in the correct categories</doc>
<kw name="Verify Category in Model Tree" library="model_categories_step_definitions">
<arg>Architectural</arg>
<arg>0</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:55.909" endtime="20240424 20:05:55.928"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${category_name_in_model_tree_view}</var>
<arg>0</arg>
<arg>${row_index_in_model_tree_view}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:05:55.942" level="INFO">${category_name_in_model_tree_view} = Architectural</msg>
<status status="PASS" starttime="20240424 20:05:55.928" endtime="20240424 20:05:55.942"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${category_name_in_model_tree_view}</arg>
<arg>${category_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:05:55.942" endtime="20240424 20:05:55.942"/>
</kw>
<status status="PASS" starttime="20240424 20:05:55.909" endtime="20240424 20:05:55.942"/>
</kw>
<kw name="Verify Category in Model Tree" library="model_categories_step_definitions">
<arg>Structural</arg>
<arg>1</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:55.942" endtime="20240424 20:05:55.946"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${category_name_in_model_tree_view}</var>
<arg>0</arg>
<arg>${row_index_in_model_tree_view}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:05:55.950" level="INFO">${category_name_in_model_tree_view} = Structural</msg>
<status status="PASS" starttime="20240424 20:05:55.946" endtime="20240424 20:05:55.950"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${category_name_in_model_tree_view}</arg>
<arg>${category_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:05:55.950" endtime="20240424 20:05:55.950"/>
</kw>
<status status="PASS" starttime="20240424 20:05:55.942" endtime="20240424 20:05:55.950"/>
</kw>
<kw name="Verify Category in Model Tree" library="model_categories_step_definitions">
<arg>Ventilation</arg>
<arg>2</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:55.950" endtime="20240424 20:05:55.953"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${category_name_in_model_tree_view}</var>
<arg>0</arg>
<arg>${row_index_in_model_tree_view}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:05:55.957" level="INFO">${category_name_in_model_tree_view} = Ventilation</msg>
<status status="PASS" starttime="20240424 20:05:55.953" endtime="20240424 20:05:55.957"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${category_name_in_model_tree_view}</arg>
<arg>${category_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:05:55.957" endtime="20240424 20:05:55.957"/>
</kw>
<status status="PASS" starttime="20240424 20:05:55.950" endtime="20240424 20:05:55.957"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:05:55.957" endtime="20240424 20:05:56.049"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${ventilation_model_1}</var>
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:05:56.058" level="INFO">${ventilation_model_1} = (C) First_Floor_Vent</msg>
<status status="PASS" starttime="20240424 20:05:56.049" endtime="20240424 20:05:56.058"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ventilation_model_1}</arg>
<arg>(C) First_Floor_Vent</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:05:56.058" endtime="20240424 20:05:56.058"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${ventilation_model_2}</var>
<arg>0</arg>
<arg>4</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:05:56.062" level="INFO">${ventilation_model_2} = (D) Ground_Floor_Vent</msg>
<status status="PASS" starttime="20240424 20:05:56.058" endtime="20240424 20:05:56.062"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ventilation_model_2}</arg>
<arg>(D) Ground_Floor_Vent</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:05:56.063" endtime="20240424 20:05:56.063"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:05:56.063" endtime="20240424 20:05:56.082"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${structural_model}</var>
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:05:56.100" level="INFO">${structural_model} = (B) Solibri Building Structural</msg>
<status status="PASS" starttime="20240424 20:05:56.082" endtime="20240424 20:05:56.100"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${structural_model}</arg>
<arg>(B) Solibri Building Structural</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:05:56.100" endtime="20240424 20:05:56.100"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:05:56.100" endtime="20240424 20:05:56.194"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${architectural_model_1}</var>
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:05:56.201" level="INFO">${architectural_model_1} = (E) Solibri Building - modified</msg>
<status status="PASS" starttime="20240424 20:05:56.194" endtime="20240424 20:05:56.201"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${architectural_model_1}</arg>
<arg>(E) Solibri Building - modified</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:05:56.201" endtime="20240424 20:05:56.201"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${architectural_model_2}</var>
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:05:56.206" level="INFO">${architectural_model_2} = Solibri Building</msg>
<status status="PASS" starttime="20240424 20:05:56.201" endtime="20240424 20:05:56.206"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${architectural_model_2}</arg>
<arg>Solibri Building</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:05:56.206" endtime="20240424 20:05:56.206"/>
</kw>
<status status="PASS" starttime="20240424 20:05:55.908" endtime="20240424 20:05:56.206"/>
</kw>
<kw name="Then Remove Categories" library="model_categories_step_definitions">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:05:56.206" endtime="20240424 20:05:56.215"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Delete Category</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 20:05:56.215" endtime="20240424 20:05:56.435"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Delete Category</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 20:05:56.435" endtime="20240424 20:05:56.579"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Delete Category</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 20:05:56.579" endtime="20240424 20:05:56.762"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:05:56.804" level="INFO">${row_count} = 5</msg>
<status status="PASS" starttime="20240424 20:05:56.762" endtime="20240424 20:05:56.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>5</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:05:56.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:05:56.804" endtime="20240424 20:05:56.804"/>
</kw>
<status status="PASS" starttime="20240424 20:05:56.206" endtime="20240424 20:05:56.804"/>
</kw>
<kw name="Then Create Category in Model Tree" library="model_categories_step_definitions">
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Categories|Choose...</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 20:05:56.804" endtime="20240424 20:05:57.410"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Choose Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:57.410" endtime="20240424 20:05:57.425"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Uncheck All</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:05:57.425" endtime="20240424 20:05:57.425"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Check All</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:05:57.425" endtime="20240424 20:05:57.432"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>New Category...</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:05:57.432" endtime="20240424 20:05:57.436"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:05:57.436" endtime="20240424 20:05:57.436"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:05:57.436" endtime="20240424 20:05:57.436"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>New Category...</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:57.436" endtime="20240424 20:05:57.467"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Add New Category</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:57.467" endtime="20240424 20:05:57.517"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:05:57.517" endtime="20240424 20:05:57.517"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:05:57.517" endtime="20240424 20:05:57.517"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>Structural</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 20:05:57.517" endtime="20240424 20:05:57.540"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:05:57.540" endtime="20240424 20:05:57.540"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:57.540" endtime="20240424 20:05:57.558"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Choose Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:57.558" endtime="20240424 20:05:57.562"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:57.562" endtime="20240424 20:05:57.659"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:57.660" endtime="20240424 20:05:57.698"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<arg>Categories|Choose...</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 20:05:57.698" endtime="20240424 20:05:58.336"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Choose Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:58.336" endtime="20240424 20:05:58.340"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>New Category...</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:58.340" endtime="20240424 20:05:58.369"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Add New Category</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:58.369" endtime="20240424 20:05:58.375"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>Ventilation</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 20:05:58.375" endtime="20240424 20:05:58.396"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:58.396" endtime="20240424 20:05:58.409"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Choose Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:58.409" endtime="20240424 20:05:58.414"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:58.414" endtime="20240424 20:05:58.545"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:58.545" endtime="20240424 20:05:58.583"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<arg>Categories|Choose...</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 20:05:58.583" endtime="20240424 20:05:59.134"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Choose Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:59.134" endtime="20240424 20:05:59.138"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:05:59.141" level="INFO">${row_count} = 2</msg>
<status status="PASS" starttime="20240424 20:05:59.138" endtime="20240424 20:05:59.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>2</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:05:59.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:05:59.141" endtime="20240424 20:05:59.141"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:05:59.141" endtime="20240424 20:05:59.156"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:59.156" endtime="20240424 20:05:59.301"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:05:59.301" endtime="20240424 20:05:59.306"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<arg>Categories|Choose...</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 20:05:59.306" endtime="20240424 20:05:59.795"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Choose Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:59.795" endtime="20240424 20:05:59.801"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>New Category...</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:59.801" endtime="20240424 20:05:59.816"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Add New Category</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:59.816" endtime="20240424 20:05:59.832"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>Architectural</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 20:05:59.833" endtime="20240424 20:05:59.854"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:59.854" endtime="20240424 20:05:59.866"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Choose Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:05:59.866" endtime="20240424 20:05:59.880"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:05:59.880" endtime="20240424 20:06:00.119"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:00.119" endtime="20240424 20:06:00.165"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<arg>Categories|Architectural</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 20:06:00.165" endtime="20240424 20:06:00.742"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:06:00.745" level="INFO">${row_count} = 3</msg>
<status status="PASS" starttime="20240424 20:06:00.742" endtime="20240424 20:06:00.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>3</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:06:00.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:06:00.745" endtime="20240424 20:06:00.745"/>
</kw>
<status status="PASS" starttime="20240424 20:05:56.804" endtime="20240424 20:06:00.745"/>
</kw>
<kw name="Then Verify Models in Category" library="model_categories_step_definitions">
<doc>Verifies that the models are in the correct categories</doc>
<kw name="Verify Category in Model Tree" library="model_categories_step_definitions">
<arg>Architectural</arg>
<arg>0</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:00.760" endtime="20240424 20:06:00.760"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${category_name_in_model_tree_view}</var>
<arg>0</arg>
<arg>${row_index_in_model_tree_view}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:06:00.760" level="INFO">${category_name_in_model_tree_view} = Architectural</msg>
<status status="PASS" starttime="20240424 20:06:00.760" endtime="20240424 20:06:00.760"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${category_name_in_model_tree_view}</arg>
<arg>${category_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:06:00.760" endtime="20240424 20:06:00.760"/>
</kw>
<status status="PASS" starttime="20240424 20:06:00.745" endtime="20240424 20:06:00.760"/>
</kw>
<kw name="Verify Category in Model Tree" library="model_categories_step_definitions">
<arg>Structural</arg>
<arg>1</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:00.760" endtime="20240424 20:06:00.772"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${category_name_in_model_tree_view}</var>
<arg>0</arg>
<arg>${row_index_in_model_tree_view}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:06:00.775" level="INFO">${category_name_in_model_tree_view} = Structural</msg>
<status status="PASS" starttime="20240424 20:06:00.772" endtime="20240424 20:06:00.775"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${category_name_in_model_tree_view}</arg>
<arg>${category_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:06:00.775" endtime="20240424 20:06:00.775"/>
</kw>
<status status="PASS" starttime="20240424 20:06:00.760" endtime="20240424 20:06:00.775"/>
</kw>
<kw name="Verify Category in Model Tree" library="model_categories_step_definitions">
<arg>Ventilation</arg>
<arg>2</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:00.775" endtime="20240424 20:06:00.775"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${category_name_in_model_tree_view}</var>
<arg>0</arg>
<arg>${row_index_in_model_tree_view}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:06:00.784" level="INFO">${category_name_in_model_tree_view} = Ventilation</msg>
<status status="PASS" starttime="20240424 20:06:00.775" endtime="20240424 20:06:00.784"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${category_name_in_model_tree_view}</arg>
<arg>${category_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:06:00.784" endtime="20240424 20:06:00.784"/>
</kw>
<status status="PASS" starttime="20240424 20:06:00.775" endtime="20240424 20:06:00.784"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:06:00.784" endtime="20240424 20:06:00.793"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${ventilation_model_1}</var>
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:06:00.807" level="INFO">${ventilation_model_1} = (C) First_Floor_Vent</msg>
<status status="PASS" starttime="20240424 20:06:00.793" endtime="20240424 20:06:00.807"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ventilation_model_1}</arg>
<arg>(C) First_Floor_Vent</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:06:00.807" endtime="20240424 20:06:00.807"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${ventilation_model_2}</var>
<arg>0</arg>
<arg>4</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:06:00.807" level="INFO">${ventilation_model_2} = (D) Ground_Floor_Vent</msg>
<status status="PASS" starttime="20240424 20:06:00.807" endtime="20240424 20:06:00.807"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ventilation_model_2}</arg>
<arg>(D) Ground_Floor_Vent</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:06:00.807" endtime="20240424 20:06:00.807"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:06:00.807" endtime="20240424 20:06:00.826"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${structural_model}</var>
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:06:00.840" level="INFO">${structural_model} = (B) Solibri Building Structural</msg>
<status status="PASS" starttime="20240424 20:06:00.826" endtime="20240424 20:06:00.840"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${structural_model}</arg>
<arg>(B) Solibri Building Structural</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:06:00.840" endtime="20240424 20:06:00.840"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:06:00.840" endtime="20240424 20:06:00.871"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${architectural_model_1}</var>
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:06:00.880" level="INFO">${architectural_model_1} = (E) Solibri Building - modified</msg>
<status status="PASS" starttime="20240424 20:06:00.871" endtime="20240424 20:06:00.880"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${architectural_model_1}</arg>
<arg>(E) Solibri Building - modified</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:06:00.880" endtime="20240424 20:06:00.880"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${architectural_model_2}</var>
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:06:00.896" level="INFO">${architectural_model_2} = Solibri Building</msg>
<status status="PASS" starttime="20240424 20:06:00.880" endtime="20240424 20:06:00.896"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${architectural_model_2}</arg>
<arg>Solibri Building</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:06:00.896" endtime="20240424 20:06:00.896"/>
</kw>
<status status="PASS" starttime="20240424 20:06:00.745" endtime="20240424 20:06:00.896"/>
</kw>
<kw name="Then Save And Close Model" library="ModelHandlingResource">
<kw name="Save Model" library="ModelHandlingResource">
<arg>${button_save_title}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:00.896" endtime="20240424 20:06:00.896"/>
</kw>
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 20:06:00.896" endtime="20240424 20:06:01.012"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:01.012" endtime="20240424 20:06:01.016"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:06:01.016" endtime="20240424 20:06:01.019"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:01.019" endtime="20240424 20:06:01.023"/>
</kw>
<status status="PASS" starttime="20240424 20:06:01.012" endtime="20240424 20:06:01.023"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Be Enabled</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:06:01.025" endtime="20240424 20:06:01.156"/>
</kw>
<status status="PASS" starttime="20240424 20:06:01.023" endtime="20240424 20:06:01.156"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${os}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 20:06:01.156" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 20:06:01.156" endtime="20240424 20:06:01.156"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 20:06:01.156" endtime="20240424 20:06:01.156"/>
</return>
<msg timestamp="20240424 20:06:01.156" level="INFO">${os} = Windows</msg>
<status status="PASS" starttime="20240424 20:06:01.156" endtime="20240424 20:06:01.156"/>
</kw>
<if>
<branch type="IF" condition="'${os}' == 'Windows'">
<kw name="Check If File Already Exists" library="ModelHandlingResource">
<var>${file_exists}</var>
<arg>${test_files_folder}\\Solibri Building.smc</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${file_exist}</var>
<arg>File Should Exist</arg>
<arg>${filename_to_check}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${filename_to_check}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20240424 20:06:01.156" level="INFO" html="true">File '&lt;a href="file://C:\Users\runneradmin\Documents\RFTestFiles\Solibri Building.smc"&gt;C:\Users\runneradmin\Documents\RFTestFiles\Solibri Building.smc&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20240424 20:06:01.156" endtime="20240424 20:06:01.156"/>
</kw>
<msg timestamp="20240424 20:06:01.156" level="INFO">${file_exist} = True</msg>
<status status="PASS" starttime="20240424 20:06:01.156" endtime="20240424 20:06:01.156"/>
</kw>
<return>
<value>${file_exist}</value>
<status status="PASS" starttime="20240424 20:06:01.156" endtime="20240424 20:06:01.156"/>
</return>
<msg timestamp="20240424 20:06:01.156" level="INFO">${file_exists} = True</msg>
<status status="PASS" starttime="20240424 20:06:01.156" endtime="20240424 20:06:01.156"/>
</kw>
<if>
<branch type="IF" condition="${file_exists}">
<kw name="Over Write File" library="ModelHandlingResource">
<arg>${test_files_folder}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:01.156" endtime="20240424 20:06:01.156"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>Save Model as</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:06:01.156" endtime="20240424 20:06:01.170"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>2</arg>
<arg>Select Dialog</arg>
<arg>Save As</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:06:01.170" endtime="20240424 20:06:01.467"/>
</kw>
<status status="PASS" starttime="20240424 20:06:01.170" endtime="20240424 20:06:01.467"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${folder_to_save}\\Solibri Building.smc</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 20:06:01.467" endtime="20240424 20:06:01.645"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>2</arg>
<arg>Select Dialog</arg>
<arg>Confirm Save As</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Confirm Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:06:01.645" endtime="20240424 20:06:01.680"/>
</kw>
<status status="PASS" starttime="20240424 20:06:01.645" endtime="20240424 20:06:01.680"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Yes</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:06:01.680" endtime="20240424 20:06:01.712"/>
</kw>
<status status="PASS" starttime="20240424 20:06:01.156" endtime="20240424 20:06:01.712"/>
</kw>
<status status="PASS" starttime="20240424 20:06:01.156" endtime="20240424 20:06:01.712"/>
</branch>
<branch type="ELSE">
<kw name="Click On Component" library="SwingRobot">
<arg>${save_button}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="NOT RUN" starttime="20240424 20:06:01.712" endtime="20240424 20:06:01.712"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>2</arg>
<arg>Select Dialog</arg>
<arg>Save As</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20240424 20:06:01.712" endtime="20240424 20:06:01.712"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${test_files_folder}\\Solibri Building.smc</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="NOT RUN" starttime="20240424 20:06:01.712" endtime="20240424 20:06:01.712"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:06:01.712" endtime="20240424 20:06:01.712"/>
</branch>
<status status="PASS" starttime="20240424 20:06:01.156" endtime="20240424 20:06:01.712"/>
</if>
<status status="PASS" starttime="20240424 20:06:01.156" endtime="20240424 20:06:01.712"/>
</branch>
<status status="PASS" starttime="20240424 20:06:01.156" endtime="20240424 20:06:01.712"/>
</if>
<if>
<branch type="IF" condition="'${os}' == 'Darwin'">
<kw name="Get Length" library="BuiltIn">
<var>${length}</var>
<arg>${test_files_folder}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20240424 20:06:01.712" endtime="20240424 20:06:01.712"/>
</kw>
<if>
<branch type="IF" condition="${length} &gt; 0">
<kw name="Navigate To Folder" library="ModelHandlingResource">
<arg>${test_files_folder}</arg>
<tag>mac</tag>
<status status="NOT RUN" starttime="20240424 20:06:01.712" endtime="20240424 20:06:01.712"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:06:01.712" endtime="20240424 20:06:01.712"/>
</branch>
<status status="NOT RUN" starttime="20240424 20:06:01.712" endtime="20240424 20:06:01.712"/>
</if>
<kw name="Get Text Field Value" library="SwingRobot">
<var>${fileName}</var>
<arg>0</arg>
<doc>Returns the value of a text component (e.g. text field, password field, text area).</doc>
<status status="NOT RUN" starttime="20240424 20:06:01.712" endtime="20240424 20:06:01.712"/>
</kw>
<kw name="Check If File Already Exists" library="ModelHandlingResource">
<var>${file_exists}</var>
<arg>${test_files_folder}/${fileName}</arg>
<status status="NOT RUN" starttime="20240424 20:06:01.712" endtime="20240424 20:06:01.712"/>
</kw>
<if>
<branch type="IF" condition="${file_exists}">
<kw name="Over Write File" library="ModelHandlingResource">
<arg>${test_files_folder}</arg>
<status status="NOT RUN" starttime="20240424 20:06:01.712" endtime="20240424 20:06:01.712"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:06:01.712" endtime="20240424 20:06:01.712"/>
</branch>
<branch type="ELSE">
<kw name="Click On Component" library="SwingRobot">
<arg>${save_button}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="NOT RUN" starttime="20240424 20:06:01.712" endtime="20240424 20:06:01.712"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 20:06:01.712" endtime="20240424 20:06:01.712"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Save As</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:06:01.712" endtime="20240424 20:06:01.712"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:06:01.712" endtime="20240424 20:06:01.712"/>
</branch>
<status status="NOT RUN" starttime="20240424 20:06:01.712" endtime="20240424 20:06:01.712"/>
</if>
<status status="NOT RUN" starttime="20240424 20:06:01.712" endtime="20240424 20:06:01.712"/>
</branch>
<status status="PASS" starttime="20240424 20:06:01.712" endtime="20240424 20:06:01.712"/>
</if>
<kw name="Wait For Project To Save" library="ModelHandlingResource">
<kw name="Log To Console" library="BuiltIn">
<arg>Waiting For Project To Save</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 20:06:01.712" endtime="20240424 20:06:01.712"/>
</kw>
<kw name="Wait For Saving Progress To Complete" library="ModelHandlingResource">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:01.712" endtime="20240424 20:06:01.720"/>
</kw>
<kw name="List Components In Context" library="SwingRobot">
<arg>formatted</arg>
<doc>Prints components (their types and their internal names) from the selected context.</doc>
<msg timestamp="20240424 20:06:02.011" level="INFO">Level: 0 Component: com.solibri.saf.core.ApplicationFrame Index: 0 Name: frame0
    Level: 1 Component: javax.swing.JRootPane Index: 0 Name: null
       Level: 2 Component: javax.swing.JPanel Index: 0 Name: null.glassPane
       Level: 2 Component: javax.swing.JLayeredPane Index: 0 Name: null.layeredPane
          Level: 3 Component: com.solibri.modelchecker.ui.SmcPerspectivePanel Index: 1 Name: null
             Level: 4 Component: javax.swing.JPanel Index: 2 Name: null
                Level: 5 Component: javax.swing.JPanel Index: 3 Name: null
                   Level: 6 Component: com.solibri.saf.plugins.java3dplugin.actions.ThreeDViewToolbar Index: 4 Name: null
                      Level: 7 Component: com.solibri.saf.plugins.java3dplugin.actions.ThreeDViewToolbar$ToolbarWithThemeIconSize Index: null Name: 3D
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 0 Name: Undo
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 1 Name: Redo
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 2 Name: Spin
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 3 Name: dropDownButton
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 4 Name: Info
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 5 Name: dropDownButton
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 6 Name: Show All
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 7 Name: Show Unselected Transparent
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 8 Name: Show Selected
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 9 Name: Paint Visible With Current Color
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 10 Name: dropDownButton
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 11 Name: Show / Hide Space
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 12 Name: dropDownButton
                         Level: 8 Component: com.solibri.saf.plugins.java3dplugin.actions.FloorsVisibilityPopupMenuButton Index: 13 Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 14 Name: Zoom Extents
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 15 Name: Zoom In
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 16 Name: Zoom Out
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 17 Name: Zoom Selected
                         Level: 8 Component: com.solibri.sae.ui.ComboButtonBar Index: null Name: null
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 18 Name: Top Front Right
                            Level: 9 Component: com.solibri.sae.ui.ToolBarButton Index: 19 Name: dropDownButton
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 20 Name: Change Camera Projection
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$ToolBarToggleButton Index: 0 Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$ToolBarToggleButton Index: 1 Name: null
                         Level: 8 Component: com.solibri.saf.core.DefaultViewToolBar$1 Index: null Name: null
                         Level: 8 Component: com.solibri.sae.ui.ToolBarButton Index: 21 Name: null
                      Level: 7 Component: com.solibri.saf.core.ui.SearchField Index: 5 Name: null
                         Level: 8 Component: javax.swing.JTextField Index: 0 Name: null
                         Level: 8 Component: javax.swing.JButton Index: 22 Name: null
             Level: 4 Component: com.solibri.saf.core.ui.SafPanel Index: 6 Name: null
                Level: 5 Component: com.solibri.saf.core.ui.ViewSplitPane Index: 7 Name: null
                   Level: 6 Component: SMC_FILE Index: 8 Name: null
                      Level: 7 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel Index: 9 Name: FilePanel
                         Level: 8 Component: javax.swing.JPanel Index: 10 Name: null
                         Level: 8 Component: javax.swing.JToolBar Index: null Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$TransparentGradientPanel Index: 11 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 0 Name: Open Models
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 1 Name: Add Models
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 2 Name: Update Models
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 3 Name: Save Model
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 4 Name: Save Model as
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 5 Name: Security Settings
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 6 Name: Close
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 12 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 13 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 7 Name: Recent
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 8 Name: Integrations
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 9 Name: Roles
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 10 Name: Solution Center
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 11 Name: Settings
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$PanelActionToggleButton Index: 12 Name: Help
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 14 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 15 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 13 Name: Ruleset Manager
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 16 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 17 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.FileViewPanel$MenuButton Index: 14 Name: Exit
                            Level: 9 Component: com.solibri.saf.core.ui.SafPanel Index: 18 Name: null
                         Level: 8 Component: com.solibri.saf.core.ui.SafPanel Index: 19 Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.RecentPanel Index: 20 Name: RECENT
                               Level: 10 Component: com.solibri.saf.core.ui.ViewSplitPane Index: 21 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 22 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 15 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 0 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 0 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 23 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 24 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 1 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 25 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 26 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 0 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 0 Name: SafTable
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 0 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 1 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ViewSplitPane$Divider Index: 23 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 24 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 16 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 1 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 2 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 27 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 28 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 3 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 29 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 30 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 2 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 1 Name: SafTable
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 1 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 3 Name: null
                            Level: 9 Component: javax.swing.JPanel Index: 25 Name: REMOTE INTEGRATIONS
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 26 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 27 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 17 Name: null
                                     Level: 12 Component: javax.swing.JTextArea Index: 1 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 28 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 18 Name: null
                                     Level: 12 Component: com.solibri.saf.core.opencdedocuments.ConnectedServerLabel Index: 19 Name: null
                                     Level: 12 Component: javax.swing.JButton Index: 31 Name: null
                                     Level: 12 Component: javax.swing.JButton Index: 32 Name: null
                                     Level: 12 Component: javax.swing.JButton Index: 33 Name: null
                                     Level: 12 Component: com.solibri.saf.core.ui.SafPanel Index: 29 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.SafPanel Index: 30 Name: null
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 31 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 20 Name: null
                                  Level: 11 Component: com.solibri.sae.ui.RoundedPanel Index: 32 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 2 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 4 Name: null
                                           Level: 14 Component: javax.swing.JPanel Index: 33 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 34 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 35 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 21 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 22 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 23 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 2 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 36 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 2 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 24 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 25 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 37 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 38 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 26 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 27 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 28 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 3 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 39 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 3 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 29 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 30 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 40 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 41 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 31 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 32 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 33 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 4 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 42 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 4 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 34 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 35 Name: null
                                              Level: 15 Component: com.solibri.saf.core.ui.resourceprovider.IntegrationPanel Index: 43 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 44 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 36 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 37 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 38 Name: null
                                                 Level: 16 Component: javax.swing.JTextArea Index: 5 Name: null
                                                 Level: 16 Component: javax.swing.JPanel Index: 45 Name: null
                                                    Level: 17 Component: com.solibri.sae.ui.ToggleSwitchButton Index: 5 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 39 Name: null
                                                    Level: 17 Component: javax.swing.JLabel Index: 40 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 4 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 34 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 35 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 5 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 36 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 37 Name: null
                            Level: 9 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel Index: 46 Name: ROLES
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 47 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 41 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 42 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 43 Name: null
                                  Level: 11 Component: javax.swing.JLabel Index: 44 Name: null
                                  Level: 11 Component: javax.swing.JTextField Index: 6 Name: roleNameText
                                  Level: 11 Component: com.solibri.saf.core.ui.HtmlEditorPanel Index: 48 Name: null
                                     Level: 12 Component: com.solibri.saf.core.DefaultViewToolBar Index: null Name: 
                                        Level: 13 Component: com.solibri.sae.ui.ToolBarButton Index: 38 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 3 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 5 Name: null
                                           Level: 14 Component: javax.swing.JTextPane Index: 7 Name: roleDescription
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 6 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 39 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 40 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 7 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 41 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 42 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$FileChooserPanel Index: 49 Name: null
                                     Level: 12 Component: javax.swing.JTextField Index: 8 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 43 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$LayoutFileChooserPanel Index: 50 Name: null
                                     Level: 12 Component: javax.swing.JTextField Index: 9 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 44 Name: null
                                  Level: 11 Component: com.solibri.sae.ui.JDefaultButton Index: 45 Name: null
                                  Level: 11 Component: com.solibri.sae.ui.ToolBarButton Index: 46 Name: Remove Default Layout Set
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 51 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.ResourceTablePanel Index: 52 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 45 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 4 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 8 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 47 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 48 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 9 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 49 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 50 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 6 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 2 Name: RULESETS
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 2 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 7 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 51 Name: Add Rulesets...
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 52 Name: Remove Rulesets
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.ResourceTablePanel Index: 53 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 46 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 5 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 10 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 53 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 54 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 11 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 55 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 56 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 8 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 3 Name: CLASSIFICATIONS
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 3 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 9 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 57 Name: Add Classifications...
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 58 Name: Remove Classifications
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.ResourceTablePanel Index: 54 Name: null
                                     Level: 12 Component: javax.swing.JLabel Index: 47 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane Index: 6 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 12 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 59 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 60 Name: null
                                        Level: 13 Component: javax.swing.JScrollPane$ScrollBar Index: 13 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 61 Name: null
                                           Level: 14 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 62 Name: null
                                        Level: 13 Component: com.solibri.sae.ui.Ui$AlternateRowViewPort Index: 10 Name: null
                                           Level: 14 Component: com.solibri.saf.core.ui.SafTable Index: 4 Name: ITOS
                                              Level: 15 Component: javax.swing.CellRendererPane Index: 4 Name: null
                                        Level: 13 Component: javax.swing.JViewport Index: 11 Name: null
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 63 Name: Add Information Takeoff Definitions...
                                     Level: 12 Component: com.solibri.sae.ui.ToolBarButton Index: 64 Name: Remove Information Takeoff Definitions
                               Level: 10 Component: javax.swing.JSeparator Index: null Name: null
                               Level: 10 Component: com.solibri.saf.core.ui.SafPanel Index: 55 Name: null
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$NamedActionButton Index: 65 Name: Save
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$NamedActionButton Index: 66 Name: Save As
                                  Level: 11 Component: com.solibri.saf.plugins.roleplugin.ui.RolesPanel$NamedActionButton Index: 67 Name: Revert
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.SolutionCenterPanel Index: 56 Name: Solibri Solution Center
                               Level: 10 Component: javax.swing.JScrollPane Index: 7 Name: null
                                  Level: 11 Component: javax.swing.JViewport Index: 12 Name: null
                                     Level: 12 Component: javax.swing.JPanel Index: 57 Name: null
                                        Level: 13 Component: com.solibri.saf.core.ui.AntialisedLabel Index: 48 Name: null
                                        Level: 13 Component: com.solibri.saf.core.ui.AntialisedLabel Index: 49 Name: null
                                        Level: 13 Component: javax.swing.JPanel Index: 58 Name: null
                                        Level: 13 Component: javax.swing.JPanel Index: 59 Name: null
                                  Level: 11 Component: javax.swing.JScrollPane$ScrollBar Index: 14 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 68 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 69 Name: null
                                  Level: 11 Component: javax.swing.JScrollPane$ScrollBar Index: 15 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 70 Name: null
                                     Level: 12 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 71 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 60 Name: null
                                  Level: 11 Component: javax.swing.JTextPane Index: 10 Name: null
                                  Level: 11 Component: javax.swing.JButton Index: 72 Name: null
                                  Level: 11 Component: javax.swing.JPanel Index: 61 Name: null
                                     Level: 12 Component: javax.swing.JTextPane Index: 11 Name: null
                               Level: 10 Component: javax.swing.JPanel Index: 62 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.AntialisedLabel Index: 50 Name: null
                                  Level: 11 Component: javax.swing.JProgressBar Index: null Name: null
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.SettingsPanel Index: 63 Name: SETTINGS
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 51 Name: Layouts
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 52 Name: General
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 53 Name: Units
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 54 Name: Proxy Server Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 55 Name: Report Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 56 Name: Discipline and Color Map...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 57 Name: Checking...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 58 Name: Info...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 59 Name: IFC Import Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 60 Name: Presentation...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 61 Name: 3D...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 62 Name: Dimension...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 63 Name: Markup...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 64 Name: Sectioning...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 65 Name: Footprints...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 66 Name: Navigation Map...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 67 Name: DWG Settings...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 68 Name: Hyperlink Templates...
                               Level: 10 Component: com.solibri.saf.core.ui.ActionLabel Index: 69 Name: BCF Live Connector...
                            Level: 9 Component: com.solibri.modelchecker.plugins.fileplugin.ui.HelpPanel Index: 64 Name: HELP
                               Level: 10 Component: javax.swing.JPanel Index: 65 Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 70 Name: Help
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 71 Name: &lt;html&gt;&lt;u&gt;Support&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 72 Name: &lt;html&gt;&lt;u&gt;Feedback&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 73 Name: &lt;html&gt;&lt;u&gt;Tutorials&lt;/u&gt;
                                  Level: 11 Component: javax.swing.JSeparator Index: null Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 74 Name: &lt;html&gt;&lt;u&gt;Solibri Solution Center&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 75 Name: &lt;html&gt;&lt;u&gt;Solibri&lt;/u&gt;
                                  Level: 11 Component: javax.swing.JSeparator Index: null Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 76 Name: &lt;html&gt;&lt;u&gt;Check for Updates&lt;/u&gt;
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 77 Name: License Key...
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 78 Name: Borrow License...
                                  Level: 11 Component: javax.swing.JSeparator Index: null Name: null
                                  Level: 11 Component: com.solibri.saf.core.ui.ActionLabel Index: 79 Name: License Agreement...
                               Level: 10 Component: com.solibri.modelchecker.plugins.fileplugin.ui.InfoPanel Index: 66 Name: INFO
                                  Level: 11 Component: javax.swing.JButton Index: 73 Name: null
                                  Level: 11 Component: javax.swing.JScrollPane Index: 8 Name: null
                                     Level: 12 Component: javax.swing.JViewport Index: 13 Name: null
                                        Level: 13 Component: javax.swing.JPanel Index: 67 Name: null
                                           Level: 14 Component: javax.swing.JLabel Index: 80 Name: null
                                           Level: 14 Component: javax.swing.JLabel Index: 81 Name: null
                                           Level: 14 Component: javax.swing.JTextField Index: 12 Name: null
                                           Level: 14 Component: javax.swing.JLabel Index: 82 Name: null
                                           Level: 14 Component: javax.swing.JTextField Index: 13 Name: null
                                           Level: 14 Component: javax.swing.JLabel Index: 83 Name: null
                                           Level: 14 Component: javax.swing.JTextField Index: 14 Name: null
                                           Level: 14 Component: javax.swing.JLabel Index: 84 Name: null
                                           Level: 14 Component: javax.swing.JTextField Index: 15 Name: null
                                           Level: 14 Component: javax.swing.JLabel Index: 85 Name: null
                                           Level: 14 Component: javax.swing.JTextField Index: 16 Name: null
                                           Level: 14 Component: javax.swing.JLabel Index: 86 Name: null
                                           Level: 14 Component: javax.swing.JTextField Index: 17 Name: null
                                           Level: 14 Component: javax.swing.JLabel Index: 87 Name: null
                                           Level: 14 Component: javax.swing.JTextField Index: 18 Name: null
                                           Level: 14 Component: javax.swing.JLabel Index: 88 Name: null
                                           Level: 14 Component: javax.swing.JTextField Index: 19 Name: null
                                           Level: 14 Component: javax.swing.JLabel Index: 89 Name: null
                                           Level: 14 Component: javax.swing.JLabel Index: 90 Name: null
                                           Level: 14 Component: javax.swing.JTextField Index: 20 Name: null
                                           Level: 14 Component: javax.swing.JLabel Index: 91 Name: null
                                           Level: 14 Component: javax.swing.JTextField Index: 21 Name: null
                                           Level: 14 Component: javax.swing.JLabel Index: 92 Name: null
                                           Level: 14 Component: javax.swing.JTextField Index: 22 Name: null
                                           Level: 14 Component: javax.swing.JLabel Index: 93 Name: null
                                           Level: 14 Component: javax.swing.JTextField Index: 23 Name: null
                                           Level: 14 Component: javax.swing.JLabel Index: 94 Name: null
                                           Level: 14 Component: javax.swing.JTextField Index: 24 Name: null
                                           Level: 14 Component: javax.swing.JLabel Index: 95 Name: null
                                           Level: 14 Component: javax.swing.JTextField Index: 25 Name: null
                                           Level: 14 Component: javax.swing.JLabel Index: 96 Name: null
                                           Level: 14 Component: javax.swing.JLabel Index: 97 Name: null
                                           Level: 14 Component: javax.swing.JTextField Index: 26 Name: null
                                           Level: 14 Component: javax.swing.JLabel Index: 98 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane$ScrollBar Index: 16 Name: null
                                        Level: 13 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 74 Name: null
                                        Level: 13 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 75 Name: null
                                     Level: 12 Component: javax.swing.JScrollPane$ScrollBar Index: 17 Name: null
                                        Level: 13 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 76 Name: null
                                        Level: 13 Component: com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton Index: 77 Name: null
             Level: 4 Component: com.solibri.modelchecker.core.SmcPerspective$1 Index: null Name: Searchbar
                Level: 5 Component: com.solibri.modelchecker.core.SmcPerspective$ToDoToolBarButton Index: 78 Name: null
                Level: 5 Component: com.solibri.sae.ui.ToolBarButton Index: 79 Name: VIEWS
                Level: 5 Component: javax.swing.JButton Index: 80 Name: null
             Level: 4 Component: javax.swing.JPanel Index: 68 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 99 Name: null
                Level: 5 Component: javax.swing.JPanel Index: 69 Name: progressPanel
                   Level: 6 Component: javax.swing.JPanel Index: 70 Name: progressBarAndLabelPanel
                      Level: 7 Component: javax.swing.JProgressBar Index: null Name: thebar
                      Level: 7 Component: javax.swing.JLabel Index: 100 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 101 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 102 Name: Task
                Level: 5 Component: javax.swing.JLabel Index: 103 Name: null
                Level: 5 Component: javax.swing.JPanel Index: 71 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 104 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 105 Name: Selected
                Level: 5 Component: javax.swing.JLabel Index: 106 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 107 Name: SlideTrackingId
                Level: 5 Component: javax.swing.JLabel Index: 108 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 109 Name: SlideStatus
                Level: 5 Component: javax.swing.JLabel Index: 110 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 111 Name: Slide
                Level: 5 Component: javax.swing.JLabel Index: 112 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 113 Name: Coordinates
                Level: 5 Component: javax.swing.JLabel Index: 114 Name: null
                Level: 5 Component: com.solibri.saf.core.PerspectiveStatus$StatusLabel Index: 115 Name: Location
             Level: 4 Component: javax.swing.JPanel Index: 72 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 116 Name: null
             Level: 4 Component: javax.swing.JToolBar Index: null Name: Solibri Office
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 117 Name: FILE
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 118 Name: MODEL
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 119 Name: CHECKING
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 120 Name: COMMUNICATION
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 121 Name: INFORMATION TAKEOFF
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 122 Name: BCF LIVE CONNECTOR
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 123 Name: SCORE
                Level: 5 Component: com.solibri.saf.core.ui.PerspectivePanel$ViewLayoutToggleButton Index: 124 Name: AddLayoutButton
          Level: 3 Component: com.formdev.flatlaf.ui.FlatTitlePane Index: null Name: null
             Level: 4 Component: javax.swing.JPanel Index: 73 Name: null
                Level: 5 Component: javax.swing.JLabel Index: 125 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$2 Index: null Name: null
             Level: 4 Component: com.formdev.flatlaf.ui.FlatTitlePane$1 Index: 126 Name: null
             Level: 4 Component: com.formdev.flatlaf.ui.FlatTitlePane$4 Index: 74 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 81 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 82 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 83 Name: null
                Level: 5 Component: com.formdev.flatlaf.ui.FlatTitlePane$5 Index: 84 Name: null</msg>
<status status="PASS" starttime="20240424 20:06:01.720" endtime="20240424 20:06:02.011"/>
</kw>
<kw name="Get OS Name" library="Common">
<var>${OS}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 20:06:02.011" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20240424 20:06:02.011" endtime="20240424 20:06:02.011"/>
</kw>
<return>
<value>${system}</value>
<status status="PASS" starttime="20240424 20:06:02.011" endtime="20240424 20:06:02.011"/>
</return>
<msg timestamp="20240424 20:06:02.011" level="INFO">${OS} = Windows</msg>
<status status="PASS" starttime="20240424 20:06:02.011" endtime="20240424 20:06:02.011"/>
</kw>
<if>
<branch type="IF" condition="'${OS}' == 'Windows'">
<while condition="${True}">
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:02.011" endtime="20240424 20:06:02.224"/>
</kw>
<msg timestamp="20240424 20:06:02.240" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:02.011" endtime="20240424 20:06:02.240"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:02.240" endtime="20240424 20:06:02.240"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:02.240" endtime="20240424 20:06:02.240"/>
</branch>
<status status="PASS" starttime="20240424 20:06:02.240" endtime="20240424 20:06:02.240"/>
</if>
<status status="PASS" starttime="20240424 20:06:02.011" endtime="20240424 20:06:02.240"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:02.240" endtime="20240424 20:06:02.680"/>
</kw>
<msg timestamp="20240424 20:06:02.680" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:02.240" endtime="20240424 20:06:02.680"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:02.680" endtime="20240424 20:06:02.680"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:02.680" endtime="20240424 20:06:02.680"/>
</branch>
<status status="PASS" starttime="20240424 20:06:02.680" endtime="20240424 20:06:02.680"/>
</if>
<status status="PASS" starttime="20240424 20:06:02.240" endtime="20240424 20:06:02.680"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:02.680" endtime="20240424 20:06:02.867"/>
</kw>
<msg timestamp="20240424 20:06:02.867" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:02.680" endtime="20240424 20:06:02.867"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:02.867" endtime="20240424 20:06:02.867"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:02.867" endtime="20240424 20:06:02.867"/>
</branch>
<status status="PASS" starttime="20240424 20:06:02.867" endtime="20240424 20:06:02.867"/>
</if>
<status status="PASS" starttime="20240424 20:06:02.680" endtime="20240424 20:06:02.867"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:02.867" endtime="20240424 20:06:02.905"/>
</kw>
<msg timestamp="20240424 20:06:02.905" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:02.867" endtime="20240424 20:06:02.905"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:02.905" endtime="20240424 20:06:02.905"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:02.905" endtime="20240424 20:06:02.905"/>
</branch>
<status status="PASS" starttime="20240424 20:06:02.905" endtime="20240424 20:06:02.905"/>
</if>
<status status="PASS" starttime="20240424 20:06:02.867" endtime="20240424 20:06:02.905"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:02.905" endtime="20240424 20:06:02.908"/>
</kw>
<msg timestamp="20240424 20:06:02.908" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:02.905" endtime="20240424 20:06:02.908"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:02.908" endtime="20240424 20:06:02.908"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:02.908" endtime="20240424 20:06:02.908"/>
</branch>
<status status="PASS" starttime="20240424 20:06:02.908" endtime="20240424 20:06:02.908"/>
</if>
<status status="PASS" starttime="20240424 20:06:02.905" endtime="20240424 20:06:02.908"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:02.908" endtime="20240424 20:06:02.979"/>
</kw>
<msg timestamp="20240424 20:06:02.979" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:02.908" endtime="20240424 20:06:02.979"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:02.979" endtime="20240424 20:06:02.979"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:02.979" endtime="20240424 20:06:02.979"/>
</branch>
<status status="PASS" starttime="20240424 20:06:02.979" endtime="20240424 20:06:02.979"/>
</if>
<status status="PASS" starttime="20240424 20:06:02.908" endtime="20240424 20:06:02.979"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:02.979" endtime="20240424 20:06:02.979"/>
</kw>
<msg timestamp="20240424 20:06:02.979" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:02.979" endtime="20240424 20:06:02.979"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:02.979" endtime="20240424 20:06:02.979"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:02.979" endtime="20240424 20:06:02.979"/>
</branch>
<status status="PASS" starttime="20240424 20:06:02.979" endtime="20240424 20:06:02.979"/>
</if>
<status status="PASS" starttime="20240424 20:06:02.979" endtime="20240424 20:06:02.979"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:02.979" endtime="20240424 20:06:02.979"/>
</kw>
<msg timestamp="20240424 20:06:02.979" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:02.979" endtime="20240424 20:06:02.979"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:02.979" endtime="20240424 20:06:02.979"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:02.979" endtime="20240424 20:06:02.979"/>
</branch>
<status status="PASS" starttime="20240424 20:06:02.979" endtime="20240424 20:06:02.979"/>
</if>
<status status="PASS" starttime="20240424 20:06:02.979" endtime="20240424 20:06:02.979"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:02.995" endtime="20240424 20:06:02.995"/>
</kw>
<msg timestamp="20240424 20:06:02.995" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:02.979" endtime="20240424 20:06:02.995"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:02.995" endtime="20240424 20:06:02.995"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:02.995" endtime="20240424 20:06:02.995"/>
</branch>
<status status="PASS" starttime="20240424 20:06:02.995" endtime="20240424 20:06:02.995"/>
</if>
<status status="PASS" starttime="20240424 20:06:02.979" endtime="20240424 20:06:02.995"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:02.995" endtime="20240424 20:06:02.995"/>
</kw>
<msg timestamp="20240424 20:06:02.995" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:02.995" endtime="20240424 20:06:02.995"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:02.995" endtime="20240424 20:06:02.995"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:02.995" endtime="20240424 20:06:02.995"/>
</branch>
<status status="PASS" starttime="20240424 20:06:02.995" endtime="20240424 20:06:02.995"/>
</if>
<status status="PASS" starttime="20240424 20:06:02.995" endtime="20240424 20:06:02.995"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:02.995" endtime="20240424 20:06:03.004"/>
</kw>
<msg timestamp="20240424 20:06:03.004" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:02.995" endtime="20240424 20:06:03.004"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.004"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.004"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.004"/>
</if>
<status status="PASS" starttime="20240424 20:06:02.995" endtime="20240424 20:06:03.004"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.004"/>
</kw>
<msg timestamp="20240424 20:06:03.004" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.004"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.004"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.004"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.004"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.004"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.004"/>
</kw>
<msg timestamp="20240424 20:06:03.004" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.004"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.004"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.004"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.004"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.004"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.004"/>
</kw>
<msg timestamp="20240424 20:06:03.004" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.004"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.004"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.004"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.004"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.004"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.066"/>
</kw>
<msg timestamp="20240424 20:06:03.066" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.066"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.066" endtime="20240424 20:06:03.066"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.066" endtime="20240424 20:06:03.066"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.066" endtime="20240424 20:06:03.066"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.004" endtime="20240424 20:06:03.082"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.082" endtime="20240424 20:06:03.082"/>
</kw>
<msg timestamp="20240424 20:06:03.082" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.082" endtime="20240424 20:06:03.082"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.082" endtime="20240424 20:06:03.082"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.082" endtime="20240424 20:06:03.082"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.082" endtime="20240424 20:06:03.082"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.082" endtime="20240424 20:06:03.082"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.082" endtime="20240424 20:06:03.082"/>
</kw>
<msg timestamp="20240424 20:06:03.082" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.082" endtime="20240424 20:06:03.082"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.082" endtime="20240424 20:06:03.082"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.082" endtime="20240424 20:06:03.082"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.082" endtime="20240424 20:06:03.082"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.082" endtime="20240424 20:06:03.082"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.082" endtime="20240424 20:06:03.082"/>
</kw>
<msg timestamp="20240424 20:06:03.082" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.082" endtime="20240424 20:06:03.082"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.082" endtime="20240424 20:06:03.082"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.082" endtime="20240424 20:06:03.082"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.082" endtime="20240424 20:06:03.082"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.082" endtime="20240424 20:06:03.082"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.097" endtime="20240424 20:06:03.102"/>
</kw>
<msg timestamp="20240424 20:06:03.102" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.097" endtime="20240424 20:06:03.102"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.102" endtime="20240424 20:06:03.102"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.102" endtime="20240424 20:06:03.102"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.102" endtime="20240424 20:06:03.102"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.097" endtime="20240424 20:06:03.102"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.102" endtime="20240424 20:06:03.111"/>
</kw>
<msg timestamp="20240424 20:06:03.111" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.102" endtime="20240424 20:06:03.111"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.111" endtime="20240424 20:06:03.111"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.111" endtime="20240424 20:06:03.111"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.111" endtime="20240424 20:06:03.111"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.102" endtime="20240424 20:06:03.111"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.111" endtime="20240424 20:06:03.115"/>
</kw>
<msg timestamp="20240424 20:06:03.115" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.111" endtime="20240424 20:06:03.115"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.115" endtime="20240424 20:06:03.115"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.115" endtime="20240424 20:06:03.115"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.115" endtime="20240424 20:06:03.115"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.111" endtime="20240424 20:06:03.115"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.116" endtime="20240424 20:06:03.119"/>
</kw>
<msg timestamp="20240424 20:06:03.119" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.116" endtime="20240424 20:06:03.119"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.119" endtime="20240424 20:06:03.119"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.119" endtime="20240424 20:06:03.119"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.119" endtime="20240424 20:06:03.119"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.116" endtime="20240424 20:06:03.119"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.135" endtime="20240424 20:06:03.247"/>
</kw>
<msg timestamp="20240424 20:06:03.247" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.135" endtime="20240424 20:06:03.247"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.247" endtime="20240424 20:06:03.247"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.247" endtime="20240424 20:06:03.247"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.247" endtime="20240424 20:06:03.247"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.119" endtime="20240424 20:06:03.247"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.247" endtime="20240424 20:06:03.263"/>
</kw>
<msg timestamp="20240424 20:06:03.263" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.247" endtime="20240424 20:06:03.263"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.263" endtime="20240424 20:06:03.263"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.263" endtime="20240424 20:06:03.263"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.263" endtime="20240424 20:06:03.263"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.247" endtime="20240424 20:06:03.263"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.263" endtime="20240424 20:06:03.267"/>
</kw>
<msg timestamp="20240424 20:06:03.267" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.263" endtime="20240424 20:06:03.267"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.267" endtime="20240424 20:06:03.267"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.267" endtime="20240424 20:06:03.267"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.267" endtime="20240424 20:06:03.267"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.263" endtime="20240424 20:06:03.267"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.267" endtime="20240424 20:06:03.269"/>
</kw>
<msg timestamp="20240424 20:06:03.269" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.267" endtime="20240424 20:06:03.269"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.269" endtime="20240424 20:06:03.269"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.269" endtime="20240424 20:06:03.269"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.269" endtime="20240424 20:06:03.269"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.267" endtime="20240424 20:06:03.269"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.269" endtime="20240424 20:06:03.315"/>
</kw>
<msg timestamp="20240424 20:06:03.315" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.269" endtime="20240424 20:06:03.315"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.315"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.315"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.315"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.269" endtime="20240424 20:06:03.315"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.315"/>
</kw>
<msg timestamp="20240424 20:06:03.315" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.315"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.315"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.315"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.315"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.315"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.315"/>
</kw>
<msg timestamp="20240424 20:06:03.315" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.315"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.315"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.315"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.315"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.315"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.315"/>
</kw>
<msg timestamp="20240424 20:06:03.315" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.315"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.315"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.315"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.315"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.315"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.330"/>
</kw>
<msg timestamp="20240424 20:06:03.330" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.330"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.330" endtime="20240424 20:06:03.330"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.330" endtime="20240424 20:06:03.330"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.330" endtime="20240424 20:06:03.330"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.315" endtime="20240424 20:06:03.330"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.330" endtime="20240424 20:06:03.330"/>
</kw>
<msg timestamp="20240424 20:06:03.330" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.330" endtime="20240424 20:06:03.330"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.330" endtime="20240424 20:06:03.330"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.330" endtime="20240424 20:06:03.330"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.330" endtime="20240424 20:06:03.330"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.330" endtime="20240424 20:06:03.330"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.330" endtime="20240424 20:06:03.545"/>
</kw>
<msg timestamp="20240424 20:06:03.545" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.330" endtime="20240424 20:06:03.545"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.545" endtime="20240424 20:06:03.545"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.545" endtime="20240424 20:06:03.545"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.545" endtime="20240424 20:06:03.545"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.330" endtime="20240424 20:06:03.545"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:03.545" endtime="20240424 20:06:03.576"/>
</kw>
<msg timestamp="20240424 20:06:03.576" level="INFO">${is_progress_dialog_displayed} = True</msg>
<status status="PASS" starttime="20240424 20:06:03.545" endtime="20240424 20:06:03.576"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:03.576" endtime="20240424 20:06:03.576"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:03.576" endtime="20240424 20:06:03.576"/>
</branch>
<status status="PASS" starttime="20240424 20:06:03.576" endtime="20240424 20:06:03.576"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.545" endtime="20240424 20:06:03.576"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_progress_dialog_displayed}</var>
<arg>Dialog Should Be Open</arg>
<arg>Progress...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Progress...</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 20:06:13.589" level="FAIL">Dialog 'Progress...' is not open</msg>
<status status="FAIL" starttime="20240424 20:06:03.576" endtime="20240424 20:06:13.589"/>
</kw>
<msg timestamp="20240424 20:06:13.589" level="INFO">${is_progress_dialog_displayed} = False</msg>
<status status="PASS" starttime="20240424 20:06:03.576" endtime="20240424 20:06:13.589"/>
</kw>
<if>
<branch type="IF" condition="'${is_progress_dialog_displayed}' == 'False'">
<break>
<status status="PASS" starttime="20240424 20:06:13.589" endtime="20240424 20:06:13.589"/>
</break>
<status status="PASS" starttime="20240424 20:06:13.589" endtime="20240424 20:06:13.589"/>
</branch>
<status status="PASS" starttime="20240424 20:06:13.589" endtime="20240424 20:06:13.589"/>
</if>
<status status="PASS" starttime="20240424 20:06:03.576" endtime="20240424 20:06:13.589"/>
</iter>
<status status="PASS" starttime="20240424 20:06:02.011" endtime="20240424 20:06:13.589"/>
</while>
<status status="PASS" starttime="20240424 20:06:02.011" endtime="20240424 20:06:13.589"/>
</branch>
<status status="PASS" starttime="20240424 20:06:02.011" endtime="20240424 20:06:13.589"/>
</if>
<if>
<branch type="IF" condition="'${OS}' == 'Darwin'">
<while condition="${True}">
<iter>
<kw name="Call Component Method" library="SwingRobot">
<var>${value}</var>
<arg>thebar</arg>
<arg>getValue</arg>
<doc>Calls a method from specified component.</doc>
<status status="NOT RUN" starttime="20240424 20:06:13.589" endtime="20240424 20:06:13.589"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Saving progress ${value}%</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240424 20:06:13.589" endtime="20240424 20:06:13.589"/>
</kw>
<if>
<branch type="IF" condition="'${value}' == '0'">
<break>
<status status="NOT RUN" starttime="20240424 20:06:13.589" endtime="20240424 20:06:13.589"/>
</break>
<status status="NOT RUN" starttime="20240424 20:06:13.589" endtime="20240424 20:06:13.589"/>
</branch>
<status status="NOT RUN" starttime="20240424 20:06:13.589" endtime="20240424 20:06:13.589"/>
</if>
<status status="NOT RUN" starttime="20240424 20:06:13.589" endtime="20240424 20:06:13.589"/>
</iter>
<status status="NOT RUN" starttime="20240424 20:06:13.589" endtime="20240424 20:06:13.589"/>
</while>
<status status="NOT RUN" starttime="20240424 20:06:13.589" endtime="20240424 20:06:13.589"/>
</branch>
<status status="PASS" starttime="20240424 20:06:13.589" endtime="20240424 20:06:13.589"/>
</if>
<status status="PASS" starttime="20240424 20:06:01.712" endtime="20240424 20:06:13.589"/>
</kw>
<status status="PASS" starttime="20240424 20:06:01.712" endtime="20240424 20:06:13.589"/>
</kw>
<status status="PASS" starttime="20240424 20:06:00.896" endtime="20240424 20:06:13.589"/>
</kw>
<kw name="Close Model Without Prompt" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:13.589" endtime="20240424 20:06:13.603"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:06:13.603" endtime="20240424 20:06:13.605"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:13.605" endtime="20240424 20:06:13.613"/>
</kw>
<status status="PASS" starttime="20240424 20:06:13.589" endtime="20240424 20:06:13.613"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:06:13.613" endtime="20240424 20:06:13.686"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Disabled</arg>
<arg>${button_close_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<msg timestamp="20240424 20:06:13.727" level="FAIL">Label 'Close' is not disabled</msg>
<status status="FAIL" starttime="20240424 20:06:13.686" endtime="20240424 20:06:13.727"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 20:06:16.731" endtime="20240424 20:06:16.734"/>
</kw>
<status status="PASS" starttime="20240424 20:06:13.686" endtime="20240424 20:06:16.734"/>
</kw>
<status status="PASS" starttime="20240424 20:06:13.589" endtime="20240424 20:06:16.734"/>
</kw>
<status status="PASS" starttime="20240424 20:06:00.896" endtime="20240424 20:06:16.734"/>
</kw>
<kw name="Then Reopen Model and Verify Categories" library="model_categories_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:16.734" endtime="20240424 20:06:16.734"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Recent_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:06:16.734" endtime="20240424 20:06:16.746"/>
</kw>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>${Button_Open_Title}</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 20:06:16.746" endtime="20240424 20:06:16.942"/>
</kw>
<kw name="Wait for SMC Model to Load" library="ModelTreeResource">
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:16.958" endtime="20240424 20:06:17.288"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:06:17.288" endtime="20240424 20:06:17.324"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:17.340" endtime="20240424 20:06:17.465"/>
</kw>
<status status="PASS" starttime="20240424 20:06:16.942" endtime="20240424 20:06:17.465"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>2</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:06:17.465" endtime="20240424 20:06:18.174"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${COMPONENT_HIERARCHY_PANEL}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:06:18.174" endtime="20240424 20:06:18.188"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>ContainmentTree</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:06:18.196" level="INFO">${row_count} = 3</msg>
<status status="PASS" starttime="20240424 20:06:18.188" endtime="20240424 20:06:18.196"/>
</kw>
<if>
<branch type="IF" condition="${row_count} &gt; ${0}">
<kw name="Evaluate" library="BuiltIn">
<var>${row_count}</var>
<arg>${row_count}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240424 20:06:18.196" level="INFO">${row_count} = 2</msg>
<status status="PASS" starttime="20240424 20:06:18.196" endtime="20240424 20:06:18.196"/>
</kw>
<status status="PASS" starttime="20240424 20:06:18.196" endtime="20240424 20:06:18.196"/>
</branch>
<status status="PASS" starttime="20240424 20:06:18.196" endtime="20240424 20:06:18.196"/>
</if>
<status status="PASS" starttime="20240424 20:06:16.942" endtime="20240424 20:06:18.196"/>
</kw>
<kw name="Verify Models in Category" library="model_categories_step_definitions">
<doc>Verifies that the models are in the correct categories</doc>
<kw name="Verify Category in Model Tree" library="model_categories_step_definitions">
<arg>Architectural</arg>
<arg>0</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:18.196" endtime="20240424 20:06:18.200"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${category_name_in_model_tree_view}</var>
<arg>0</arg>
<arg>${row_index_in_model_tree_view}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:06:18.203" level="INFO">${category_name_in_model_tree_view} = Architectural</msg>
<status status="PASS" starttime="20240424 20:06:18.200" endtime="20240424 20:06:18.203"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${category_name_in_model_tree_view}</arg>
<arg>${category_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:06:18.203" endtime="20240424 20:06:18.203"/>
</kw>
<status status="PASS" starttime="20240424 20:06:18.196" endtime="20240424 20:06:18.203"/>
</kw>
<kw name="Verify Category in Model Tree" library="model_categories_step_definitions">
<arg>Structural</arg>
<arg>1</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:18.203" endtime="20240424 20:06:18.203"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${category_name_in_model_tree_view}</var>
<arg>0</arg>
<arg>${row_index_in_model_tree_view}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:06:18.213" level="INFO">${category_name_in_model_tree_view} = Structural</msg>
<status status="PASS" starttime="20240424 20:06:18.203" endtime="20240424 20:06:18.213"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${category_name_in_model_tree_view}</arg>
<arg>${category_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:06:18.213" endtime="20240424 20:06:18.213"/>
</kw>
<status status="PASS" starttime="20240424 20:06:18.203" endtime="20240424 20:06:18.213"/>
</kw>
<kw name="Verify Category in Model Tree" library="model_categories_step_definitions">
<arg>Ventilation</arg>
<arg>2</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:18.213" endtime="20240424 20:06:18.216"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${category_name_in_model_tree_view}</var>
<arg>0</arg>
<arg>${row_index_in_model_tree_view}</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:06:18.218" level="INFO">${category_name_in_model_tree_view} = Ventilation</msg>
<status status="PASS" starttime="20240424 20:06:18.216" endtime="20240424 20:06:18.218"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${category_name_in_model_tree_view}</arg>
<arg>${category_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:06:18.218" endtime="20240424 20:06:18.218"/>
</kw>
<status status="PASS" starttime="20240424 20:06:18.213" endtime="20240424 20:06:18.218"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:06:18.218" endtime="20240424 20:06:18.247"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${ventilation_model_1}</var>
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:06:18.251" level="INFO">${ventilation_model_1} = (C) First_Floor_Vent</msg>
<status status="PASS" starttime="20240424 20:06:18.247" endtime="20240424 20:06:18.251"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ventilation_model_1}</arg>
<arg>(C) First_Floor_Vent</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:06:18.251" endtime="20240424 20:06:18.251"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${ventilation_model_2}</var>
<arg>0</arg>
<arg>4</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:06:18.257" level="INFO">${ventilation_model_2} = (D) Ground_Floor_Vent</msg>
<status status="PASS" starttime="20240424 20:06:18.251" endtime="20240424 20:06:18.257"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ventilation_model_2}</arg>
<arg>(D) Ground_Floor_Vent</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:06:18.257" endtime="20240424 20:06:18.257"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:06:18.257" endtime="20240424 20:06:18.273"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${structural_model}</var>
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:06:18.312" level="INFO">${structural_model} = (B) Solibri Building Structural</msg>
<status status="PASS" starttime="20240424 20:06:18.273" endtime="20240424 20:06:18.312"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${structural_model}</arg>
<arg>(B) Solibri Building Structural</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:06:18.312" endtime="20240424 20:06:18.312"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:06:18.312" endtime="20240424 20:06:18.388"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${architectural_model_1}</var>
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:06:18.390" level="INFO">${architectural_model_1} = (E) Solibri Building - modified</msg>
<status status="PASS" starttime="20240424 20:06:18.388" endtime="20240424 20:06:18.390"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${architectural_model_1}</arg>
<arg>(E) Solibri Building - modified</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:06:18.390" endtime="20240424 20:06:18.390"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${architectural_model_2}</var>
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:06:18.390" level="INFO">${architectural_model_2} = Solibri Building</msg>
<status status="PASS" starttime="20240424 20:06:18.390" endtime="20240424 20:06:18.390"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${architectural_model_2}</arg>
<arg>Solibri Building</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:06:18.390" endtime="20240424 20:06:18.390"/>
</kw>
<status status="PASS" starttime="20240424 20:06:18.196" endtime="20240424 20:06:18.390"/>
</kw>
<status status="PASS" starttime="20240424 20:06:16.734" endtime="20240424 20:06:18.390"/>
</kw>
<kw name="Then Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 20:06:18.390" endtime="20240424 20:06:18.505"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:18.505" endtime="20240424 20:06:18.505"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:06:18.505" endtime="20240424 20:06:18.520"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:18.520" endtime="20240424 20:06:18.524"/>
</kw>
<status status="PASS" starttime="20240424 20:06:18.505" endtime="20240424 20:06:18.537"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:06:18.538" endtime="20240424 20:06:18.675"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:06:18.675" endtime="20240424 20:06:18.679"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 20:06:28.694" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 20:06:18.679" endtime="20240424 20:06:28.694"/>
</kw>
<msg timestamp="20240424 20:06:28.694" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 20:06:18.679" endtime="20240424 20:06:28.694"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 20:06:38.703" level="FAIL">Dialog 'Select' is not open</msg>
<status status="FAIL" starttime="20240424 20:06:28.694" endtime="20240424 20:06:38.703"/>
</kw>
<msg timestamp="20240424 20:06:38.703" level="INFO">${check_if_save_asked} = False</msg>
<status status="PASS" starttime="20240424 20:06:28.694" endtime="20240424 20:06:38.703"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 20:06:38.706" endtime="20240424 20:06:38.706"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:06:38.703" endtime="20240424 20:06:38.706"/>
</branch>
<status status="PASS" starttime="20240424 20:06:38.703" endtime="20240424 20:06:38.706"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 20:06:38.706" endtime="20240424 20:06:38.706"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:06:38.706" endtime="20240424 20:06:38.706"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:06:38.706" endtime="20240424 20:06:38.706"/>
</branch>
<status status="PASS" starttime="20240424 20:06:38.706" endtime="20240424 20:06:38.706"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:38.706" endtime="20240424 20:06:38.710"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:06:38.710" endtime="20240424 20:06:38.731"/>
</kw>
<status status="PASS" starttime="20240424 20:06:38.710" endtime="20240424 20:06:38.731"/>
</kw>
<status status="PASS" starttime="20240424 20:06:18.390" endtime="20240424 20:06:38.731"/>
</kw>
<status status="PASS" starttime="20240424 20:05:00.475" endtime="20240424 20:06:38.731"/>
</test>
<doc>Verify Model Categories</doc>
<meta name="Feature">Model Categories</meta>
<meta name="Generated by">_gherkin2robotframework on 2023-09-22T14:07:04.940537_</meta>
<status status="PASS" starttime="20240424 20:05:00.428" endtime="20240424 20:06:38.731"/>
</suite>
<suite id="s1-s21" name="22 Hyperlink Manager View" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\22_hyperlink_manager_view.robot">
<test id="s1-s21-t1" name="Verify default Hyperlink Manager view components" line="11">
<kw name="Background">
<doc>Launch Solibri And Login To SSC</doc>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 20:06:38.781" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 20:06:38.781" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 20:06:38 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 20:06:38.767" endtime="20240424 20:06:38.781"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 20:06:38.781" endtime="20240424 20:06:38.781"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:38.781" endtime="20240424 20:06:38.781"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 20:06:38.787" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 20:06:38.781" endtime="20240424 20:06:38.787"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 20:06:38.787" endtime="20240424 20:06:38.787"/>
</kw>
<status status="PASS" starttime="20240424 20:06:38.781" endtime="20240424 20:06:38.787"/>
</kw>
<status status="PASS" starttime="20240424 20:06:38.767" endtime="20240424 20:06:38.787"/>
</kw>
<kw name="When User Logs In To SSC" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Logged in to SSC</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 20:06:38.787" endtime="20240424 20:06:38.787"/>
</kw>
<status status="PASS" starttime="20240424 20:06:38.787" endtime="20240424 20:06:38.787"/>
</kw>
<kw name="Then Solibri Office Is Opened" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Solibri Office Is Opened</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 20:06:38.787" endtime="20240424 20:06:38.787"/>
</kw>
<status status="PASS" starttime="20240424 20:06:38.787" endtime="20240424 20:06:38.787"/>
</kw>
<kw name="Then No Existing Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:38.787" endtime="20240424 20:06:38.787"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:06:38.787" endtime="20240424 20:06:38.787"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:38.795" endtime="20240424 20:06:38.865"/>
</kw>
<status status="PASS" starttime="20240424 20:06:38.787" endtime="20240424 20:06:38.865"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:06:38.865" endtime="20240424 20:06:38.882"/>
</kw>
<status status="PASS" starttime="20240424 20:06:38.865" endtime="20240424 20:06:38.882"/>
</kw>
<msg timestamp="20240424 20:06:38.882" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 20:06:38.865" endtime="20240424 20:06:38.882"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 20:06:38.882" endtime="20240424 20:06:38.882"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:06:38.882" endtime="20240424 20:06:38.882"/>
</branch>
<status status="PASS" starttime="20240424 20:06:38.882" endtime="20240424 20:06:38.882"/>
</if>
<status status="PASS" starttime="20240424 20:06:38.787" endtime="20240424 20:06:38.882"/>
</kw>
<status status="PASS" starttime="20240424 20:06:38.767" endtime="20240424 20:06:38.882"/>
</kw>
<kw name="Then Open Hyperlink Manager View" library="hyperlink_manager_view_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:38.882" endtime="20240424 20:06:38.887"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:38.887" endtime="20240424 20:06:38.887"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:06:38.887" endtime="20240424 20:06:38.887"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:38.887" endtime="20240424 20:06:38.983"/>
</kw>
<status status="PASS" starttime="20240424 20:06:38.887" endtime="20240424 20:06:38.983"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Component Should Exist</arg>
<arg>Model Tree_View</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Component Should Exist" library="SwingRobot">
<arg>Model Tree_View</arg>
<doc>Fails if component does not exist within current context.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:06:38.983" endtime="20240424 20:06:38.996"/>
</kw>
<status status="PASS" starttime="20240424 20:06:38.983" endtime="20240424 20:06:38.996"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>VIEWS</arg>
<arg>HYPERLINK MANAGER</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:06:38.996" endtime="20240424 20:06:39.569"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>3x</arg>
<arg>Dialog Should Be Open</arg>
<arg>HYPERLINK MANAGER</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>HYPERLINK MANAGER</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:39.569" endtime="20240424 20:06:39.716"/>
</kw>
<status status="PASS" starttime="20240424 20:06:39.569" endtime="20240424 20:06:39.716"/>
</kw>
<status status="PASS" starttime="20240424 20:06:38.882" endtime="20240424 20:06:39.716"/>
</kw>
<kw name="Then Verify Default Hyperlink Manager View" library="hyperlink_manager_view_step_definitions">
<kw name="Select Dialog" library="SwingRobot">
<arg>HYPERLINK MANAGER</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:06:39.716" endtime="20240424 20:06:39.730"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>New Hyperlink</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:06:39.730" endtime="20240424 20:06:39.740"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Open Hyperlink Templates</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:06:39.740" endtime="20240424 20:06:39.740"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Edit Hyperlink...</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:06:39.740" endtime="20240424 20:06:39.740"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Add to Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:06:39.740" endtime="20240424 20:06:39.749"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Remove from Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:06:39.749" endtime="20240424 20:06:39.749"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:06:39.749" endtime="20240424 20:06:39.753"/>
</kw>
<status status="PASS" starttime="20240424 20:06:39.716" endtime="20240424 20:06:39.753"/>
</kw>
<kw name="Then Model is Open" library="hyperlink_manager_view_step_definitions">
<kw name="Open ifc Model" library="Common">
<arg>${solibri_building_ifc}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:39.753" endtime="20240424 20:06:39.765"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 20:06:39.765" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 20:06:39.765" endtime="20240424 20:06:39.765"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 20:06:39.765" endtime="20240424 20:06:39.765"/>
</kw>
<status status="PASS" starttime="20240424 20:06:39.765" endtime="20240424 20:06:39.765"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:39.765" endtime="20240424 20:06:39.773"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:06:39.773" endtime="20240424 20:06:39.773"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:39.773" endtime="20240424 20:06:39.783"/>
</kw>
<status status="PASS" starttime="20240424 20:06:39.765" endtime="20240424 20:06:39.784"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 20:06:39.784" endtime="20240424 20:06:39.909"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:06:39.909" endtime="20240424 20:06:39.925"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:06:39.925" endtime="20240424 20:06:41.220"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${ifc_filename}</var>
<arg>${ifc_folder}</arg>
<arg>${ifc_filename}</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 20:06:41.220" level="INFO">${ifc_filename} = C:\users\public\Solibri\SOLIBRI\Samples\ifc\Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 20:06:41.220" endtime="20240424 20:06:41.220"/>
</kw>
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 20:06:41.220" endtime="20240424 20:06:41.558"/>
</kw>
<status status="PASS" starttime="20240424 20:06:41.220" endtime="20240424 20:06:41.561"/>
</kw>
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<msg timestamp="20240424 20:06:41.684" level="INFO">Closed dialog 'HYPERLINK MANAGER'.</msg>
<status status="PASS" starttime="20240424 20:06:41.561" endtime="20240424 20:06:41.684"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:41.684" endtime="20240424 20:06:41.684"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:06:41.684" endtime="20240424 20:06:41.694"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:41.694" endtime="20240424 20:06:41.694"/>
</kw>
<status status="PASS" starttime="20240424 20:06:41.684" endtime="20240424 20:06:41.694"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 20:06:44.653" level="INFO">2024-04-24 20:06:42.236+0000 [Thread-487] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 0 ms.
2024-04-24 20:06:42.236+0000 [Thread-487] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 655 ms (using 1 threads)
2024-04-24 20:06:42.268+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 32 ms
2024-04-24 20:06:43.236+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 1000 ms.</msg>
<status status="PASS" starttime="20240424 20:06:41.694" endtime="20240424 20:06:44.653"/>
</kw>
<status status="PASS" starttime="20240424 20:06:41.694" endtime="20240424 20:06:44.653"/>
</kw>
<msg timestamp="20240424 20:06:44.653" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 20:06:41.694" endtime="20240424 20:06:44.653"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:06:44.654" endtime="20240424 20:06:45.227"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:06:45.227" endtime="20240424 20:06:45.361"/>
</kw>
<status status="PASS" starttime="20240424 20:06:44.654" endtime="20240424 20:06:45.361"/>
</branch>
<status status="PASS" starttime="20240424 20:06:44.653" endtime="20240424 20:06:45.361"/>
</if>
<status status="PASS" starttime="20240424 20:06:41.561" endtime="20240424 20:06:45.361"/>
</kw>
<status status="PASS" starttime="20240424 20:06:39.753" endtime="20240424 20:06:45.361"/>
</kw>
<status status="PASS" starttime="20240424 20:06:39.753" endtime="20240424 20:06:45.361"/>
</kw>
<kw name="Then Open Hyperlink Manager View" library="hyperlink_manager_view_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:45.361" endtime="20240424 20:06:45.361"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:45.361" endtime="20240424 20:06:45.368"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:06:45.368" endtime="20240424 20:06:45.373"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:06:45.373" endtime="20240424 20:06:45.446"/>
</kw>
<status status="PASS" starttime="20240424 20:06:45.361" endtime="20240424 20:06:45.446"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Component Should Exist</arg>
<arg>Model Tree_View</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Component Should Exist" library="SwingRobot">
<arg>Model Tree_View</arg>
<doc>Fails if component does not exist within current context.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:06:45.446" endtime="20240424 20:06:45.446"/>
</kw>
<status status="PASS" starttime="20240424 20:06:45.446" endtime="20240424 20:06:45.446"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>VIEWS</arg>
<arg>HYPERLINK MANAGER</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:06:45.446" endtime="20240424 20:06:46.020"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>3x</arg>
<arg>Dialog Should Be Open</arg>
<arg>HYPERLINK MANAGER</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>HYPERLINK MANAGER</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:06:46.020" endtime="20240424 20:06:46.132"/>
</kw>
<status status="PASS" starttime="20240424 20:06:46.020" endtime="20240424 20:06:46.132"/>
</kw>
<status status="PASS" starttime="20240424 20:06:45.361" endtime="20240424 20:06:46.133"/>
</kw>
<kw name="Then Open Hyperlink Template" library="hyperlink_manager_view_step_definitions">
<kw name="Select Dialog" library="SwingRobot">
<arg>HYPERLINK MANAGER</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:06:46.133" endtime="20240424 20:06:46.136"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open Hyperlink Templates</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:06:46.136" endtime="20240424 20:06:47.432"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open Hyperlink Templates</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:06:47.432" endtime="20240424 20:06:47.432"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Open</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:06:47.432" endtime="20240424 20:06:47.432"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:06:47.432" endtime="20240424 20:06:47.450"/>
</kw>
<kw name="Get Combobox Values" library="SwingRobot">
<var>${file_type_values}</var>
<arg>0</arg>
<doc>Returns a list containing all the values of a combobox.</doc>
<msg timestamp="20240424 20:06:47.800" level="INFO">${file_type_values} = ['Recent', 'Desktop', 'This PC', '3D Objects', 'Desktop', 'Documents', 'Downloads', 'Music', 'Pictures', 'Videos', 'Floppy Disk Drive (A:)', 'Windows (C:)', 'Users', 'Public', 'Solibri', 'SOLIBRI', 'H...</msg>
<status status="PASS" starttime="20240424 20:06:47.450" endtime="20240424 20:06:47.800"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${hyperlink_template}</var>
<arg>${hyperlinks_folder}</arg>
<arg>IFC Documentation.hyperlink</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 20:06:47.800" level="INFO">${hyperlink_template} = C:\users\public\Solibri\SOLIBRI\Hyperlink Templates\IFC Documentation.hyperlink</msg>
<status status="PASS" starttime="20240424 20:06:47.800" endtime="20240424 20:06:47.800"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>${hyperlink_template}</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 20:06:47.800" endtime="20240424 20:06:47.869"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:06:47.869" endtime="20240424 20:06:48.189"/>
</kw>
<status status="PASS" starttime="20240424 20:06:46.133" endtime="20240424 20:06:48.189"/>
</kw>
<kw name="Then Verify Hyperlink Template Loaded" library="hyperlink_manager_view_step_definitions">
<kw name="Select Dialog" library="SwingRobot">
<arg>HYPERLINK MANAGER</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:06:48.189" endtime="20240424 20:06:48.223"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row_value}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:06:48.228" level="INFO">${row_value} = Hyperlink Templates</msg>
<status status="PASS" starttime="20240424 20:06:48.223" endtime="20240424 20:06:48.228"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${row_value}</arg>
<arg>Hyperlink Templates</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:06:48.228" endtime="20240424 20:06:48.228"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:06:48.228" endtime="20240424 20:06:48.252"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:06:48.252" endtime="20240424 20:06:48.319"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:06:48.363" level="INFO">${row_count} = 552</msg>
<status status="PASS" starttime="20240424 20:06:48.319" endtime="20240424 20:06:48.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>552</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:06:48.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:06:48.363" endtime="20240424 20:06:48.363"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:06:48.363" endtime="20240424 20:06:48.392"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${edit_menu}</var>
<arg>Select From Table Cell Popup Menu</arg>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Edit Hyperlink...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Edit Hyperlink...</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 20:06:48.392" endtime="20240424 20:06:48.758"/>
</kw>
<msg timestamp="20240424 20:06:48.758" level="INFO">${edit_menu} = True</msg>
<status status="PASS" starttime="20240424 20:06:48.392" endtime="20240424 20:06:48.758"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remove_menu}</var>
<arg>Select From Table Cell Popup Menu</arg>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Remove Selected Hyperlinks</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Remove Selected Hyperlinks</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 20:06:48.758" endtime="20240424 20:06:48.983"/>
</kw>
<msg timestamp="20240424 20:06:48.983" level="INFO">${remove_menu} = True</msg>
<status status="PASS" starttime="20240424 20:06:48.758" endtime="20240424 20:06:48.983"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${assign_menu}</var>
<arg>Select From Table Cell Popup Menu</arg>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Assign from Selection Basket</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Assign from Selection Basket</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<msg timestamp="20240424 20:06:59.095" level="FAIL">org.netbeans.jemmy.TimeoutExpiredException: Component enabled: class javax.swing.JPopupMenu$1</msg>
<status status="FAIL" starttime="20240424 20:06:48.983" endtime="20240424 20:06:59.095"/>
</kw>
<msg timestamp="20240424 20:06:59.095" level="INFO">${assign_menu} = False</msg>
<status status="PASS" starttime="20240424 20:06:48.983" endtime="20240424 20:06:59.095"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${unassign_menu}</var>
<arg>Select From Table Cell Popup Menu</arg>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Unassign from Selection Basket</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Unassign from Selection Basket</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<msg timestamp="20240424 20:07:09.217" level="FAIL">org.netbeans.jemmy.TimeoutExpiredException: Component enabled: class javax.swing.JPopupMenu$1</msg>
<status status="FAIL" starttime="20240424 20:06:59.095" endtime="20240424 20:07:09.217"/>
</kw>
<msg timestamp="20240424 20:07:09.217" level="INFO">${unassign_menu} = False</msg>
<status status="PASS" starttime="20240424 20:06:59.095" endtime="20240424 20:07:09.217"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${find_replace_menu}</var>
<arg>Select From Table Cell Popup Menu</arg>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Find and Replace Hyperlinks...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Find and Replace Hyperlinks...</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<msg timestamp="20240424 20:07:19.325" level="FAIL">org.netbeans.jemmy.TimeoutExpiredException: Component enabled: class javax.swing.JPopupMenu$1</msg>
<status status="FAIL" starttime="20240424 20:07:09.217" endtime="20240424 20:07:19.325"/>
</kw>
<msg timestamp="20240424 20:07:19.325" level="INFO">${find_replace_menu} = False</msg>
<status status="PASS" starttime="20240424 20:07:09.217" endtime="20240424 20:07:19.325"/>
</kw>
<kw name="Close Dialog" library="SwingRobot">
<arg>Hyperlink Template</arg>
<doc>Closes a dialog.</doc>
<status status="PASS" starttime="20240424 20:07:19.325" endtime="20240424 20:07:19.337"/>
</kw>
<if>
<branch type="IF" condition="not ${edit_menu}">
<kw name="Fail" library="BuiltIn">
<arg>Edit Hyperlink... menu is not present</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 20:07:19.337" endtime="20240424 20:07:19.337"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:07:19.337" endtime="20240424 20:07:19.337"/>
</branch>
<status status="PASS" starttime="20240424 20:07:19.337" endtime="20240424 20:07:19.337"/>
</if>
<if>
<branch type="IF" condition="not ${remove_menu}">
<kw name="Fail" library="BuiltIn">
<arg>Remove Selected Hyperlinks menu is not disabled</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 20:07:19.337" endtime="20240424 20:07:19.337"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:07:19.337" endtime="20240424 20:07:19.337"/>
</branch>
<status status="PASS" starttime="20240424 20:07:19.337" endtime="20240424 20:07:19.337"/>
</if>
<if>
<branch type="IF" condition="${assign_menu}">
<kw name="Fail" library="BuiltIn">
<arg>Assign from Selection Basket is not disabled</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 20:07:19.337" endtime="20240424 20:07:19.337"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:07:19.337" endtime="20240424 20:07:19.337"/>
</branch>
<status status="PASS" starttime="20240424 20:07:19.337" endtime="20240424 20:07:19.337"/>
</if>
<if>
<branch type="IF" condition="${unassign_menu}">
<kw name="Fail" library="BuiltIn">
<arg>Unassign from Selection Basket menu is not disabled</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 20:07:19.337" endtime="20240424 20:07:19.337"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:07:19.337" endtime="20240424 20:07:19.337"/>
</branch>
<status status="PASS" starttime="20240424 20:07:19.337" endtime="20240424 20:07:19.337"/>
</if>
<if>
<branch type="IF" condition="${find_replace_menu}">
<kw name="Fail" library="BuiltIn">
<arg>Find and Replace Hyperlinks... menu is not disaled</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 20:07:19.337" endtime="20240424 20:07:19.337"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:07:19.337" endtime="20240424 20:07:19.337"/>
</branch>
<status status="PASS" starttime="20240424 20:07:19.337" endtime="20240424 20:07:19.337"/>
</if>
<status status="PASS" starttime="20240424 20:06:48.189" endtime="20240424 20:07:19.337"/>
</kw>
<kw name="Then Verify Hyperlink Template in Model Tree view" library="hyperlink_manager_view_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:07:19.337" endtime="20240424 20:07:19.337"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row_value}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:07:19.353" level="INFO">${row_value} = Solibri Building</msg>
<status status="PASS" starttime="20240424 20:07:19.353" endtime="20240424 20:07:19.353"/>
</kw>
<kw name="Switch to Component Hierarchy" library="ModelTreeResource">
<doc>Opens Class tree in Component hierarchy ModelViewComponentHierarchyPanel</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:07:19.353" endtime="20240424 20:07:19.353"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>3</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:07:19.353" endtime="20240424 20:07:19.386"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${select_component_hierarchy}</var>
<arg>Toggle Button Should Be Selected</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Toggle Button Should Be Selected" library="SwingRobot">
<arg>3</arg>
<doc>Fails if toggle button is not selected.</doc>
<status status="PASS" starttime="20240424 20:07:19.386" endtime="20240424 20:07:19.395"/>
</kw>
<msg timestamp="20240424 20:07:19.395" level="INFO">${select_component_hierarchy} = True</msg>
<status status="PASS" starttime="20240424 20:07:19.386" endtime="20240424 20:07:19.395"/>
</kw>
<if>
<branch type="IF" condition="${select_component_hierarchy} == ${False}">
<kw name="Push Toggle Button" library="SwingRobot">
<arg>3</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:07:19.395" endtime="20240424 20:07:19.395"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:07:19.395" endtime="20240424 20:07:19.395"/>
</branch>
<status status="PASS" starttime="20240424 20:07:19.395" endtime="20240424 20:07:19.395"/>
</if>
<status status="PASS" starttime="20240424 20:07:19.353" endtime="20240424 20:07:19.395"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:07:19.395" endtime="20240424 20:07:19.575"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:07:19.575" endtime="20240424 20:07:19.857"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Select From Table Cell Popup Menu</arg>
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<arg>Hyperlinks|Show|IFC Documentation</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<arg>Hyperlinks|Show|IFC Documentation</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 20:07:19.858" endtime="20240424 20:07:21.180"/>
</kw>
<msg timestamp="20240424 20:07:21.181" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20240424 20:07:19.857" endtime="20240424 20:07:21.181"/>
</kw>
<if>
<branch type="IF" condition="not ${status}">
<kw name="Fail" library="BuiltIn">
<arg>Hyperlink Template is not visible in Model Tree view Menu</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 20:07:21.272" endtime="20240424 20:07:21.273"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:07:21.181" endtime="20240424 20:07:21.273"/>
</branch>
<status status="PASS" starttime="20240424 20:07:21.181" endtime="20240424 20:07:21.273"/>
</if>
<status status="PASS" starttime="20240424 20:07:19.337" endtime="20240424 20:07:21.273"/>
</kw>
<kw name="Then Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<msg timestamp="20240424 20:07:21.390" level="INFO">Closed dialog 'HYPERLINK MANAGER'.</msg>
<status status="PASS" starttime="20240424 20:07:21.274" endtime="20240424 20:07:21.390"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:07:21.391" endtime="20240424 20:07:21.435"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:07:21.435" endtime="20240424 20:07:21.532"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:07:21.532" endtime="20240424 20:07:21.568"/>
</kw>
<status status="PASS" starttime="20240424 20:07:21.390" endtime="20240424 20:07:21.568"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:07:21.568" endtime="20240424 20:07:21.724"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:07:21.724" endtime="20240424 20:07:21.728"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 20:07:31.740" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 20:07:21.729" endtime="20240424 20:07:31.740"/>
</kw>
<msg timestamp="20240424 20:07:31.740" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 20:07:21.728" endtime="20240424 20:07:31.740"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:07:31.740" endtime="20240424 20:07:31.740"/>
</kw>
<msg timestamp="20240424 20:07:31.740" level="INFO">${check_if_save_asked} = True</msg>
<status status="PASS" starttime="20240424 20:07:31.740" endtime="20240424 20:07:31.740"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:07:31.740" endtime="20240424 20:07:31.747"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:07:31.747" endtime="20240424 20:07:31.789"/>
</kw>
<status status="PASS" starttime="20240424 20:07:31.740" endtime="20240424 20:07:31.820"/>
</kw>
<status status="PASS" starttime="20240424 20:07:31.740" endtime="20240424 20:07:31.820"/>
</branch>
<status status="PASS" starttime="20240424 20:07:31.740" endtime="20240424 20:07:31.820"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 20:07:31.820" endtime="20240424 20:07:31.820"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:07:31.820" endtime="20240424 20:07:31.820"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:07:31.820" endtime="20240424 20:07:31.820"/>
</branch>
<status status="PASS" starttime="20240424 20:07:31.820" endtime="20240424 20:07:31.820"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:07:31.820" endtime="20240424 20:07:31.839"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<msg timestamp="20240424 20:07:31.853" level="FAIL">Label 'Open Models' is not enabled</msg>
<status status="FAIL" starttime="20240424 20:07:31.840" endtime="20240424 20:07:31.853"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:07:34.864" endtime="20240424 20:07:34.864"/>
</kw>
<status status="PASS" starttime="20240424 20:07:31.839" endtime="20240424 20:07:34.864"/>
</kw>
<status status="PASS" starttime="20240424 20:07:21.273" endtime="20240424 20:07:34.864"/>
</kw>
<doc>Background</doc>
<status status="PASS" starttime="20240424 20:06:38.767" endtime="20240424 20:07:34.864"/>
</test>
<test id="s1-s21-t2" name="Verify Hyperlink Template Loads Automatically, When Model is Opened" line="23">
<kw name="Given Hyperlink Template Loaded in Settings" library="hyperlink_manager_view_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:07:34.864" endtime="20240424 20:07:34.871"/>
</kw>
<kw name="Switch to the Settings View" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:07:34.871" endtime="20240424 20:07:34.871"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:07:34.871" endtime="20240424 20:07:34.871"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:07:34.871" endtime="20240424 20:07:34.880"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:07:34.880" endtime="20240424 20:07:34.949"/>
</kw>
<status status="PASS" starttime="20240424 20:07:34.871" endtime="20240424 20:07:34.949"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:07:34.949" endtime="20240424 20:07:35.199"/>
</kw>
<status status="PASS" starttime="20240424 20:07:34.871" endtime="20240424 20:07:35.199"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Hyperlink Templates...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:07:35.199" endtime="20240424 20:07:35.207"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Hyperlink Templates</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:07:35.207" endtime="20240424 20:07:35.329"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>OK</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:07:35.329" endtime="20240424 20:07:35.384"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:07:35.384" endtime="20240424 20:07:35.388"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Add Row</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:07:35.388" endtime="20240424 20:07:35.390"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Remove Rows</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:07:35.390" endtime="20240424 20:07:35.393"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Add Row</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:07:35.393" endtime="20240424 20:07:36.740"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open Hyperlink Templates</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:07:36.740" endtime="20240424 20:07:36.750"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Open</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:07:36.750" endtime="20240424 20:07:36.755"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Cancel</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:07:36.755" endtime="20240424 20:07:36.771"/>
</kw>
<kw name="Get Combobox Values" library="SwingRobot">
<var>${file_type_values}</var>
<arg>0</arg>
<doc>Returns a list containing all the values of a combobox.</doc>
<msg timestamp="20240424 20:07:37.045" level="INFO">${file_type_values} = ['Recent', 'Desktop', 'This PC', '3D Objects', 'Desktop', 'Documents', 'Downloads', 'Music', 'Pictures', 'Videos', 'Floppy Disk Drive (A:)', 'Windows (C:)', 'Users', 'Public', 'Solibri', 'SOLIBRI', 'H...</msg>
<status status="PASS" starttime="20240424 20:07:36.771" endtime="20240424 20:07:37.045"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${hyperlink_template}</var>
<arg>${hyperlinks_folder}</arg>
<arg>IFC Documentation.hyperlink</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 20:07:37.045" level="INFO">${hyperlink_template} = C:\users\public\Solibri\SOLIBRI\Hyperlink Templates\IFC Documentation.hyperlink</msg>
<status status="PASS" starttime="20240424 20:07:37.045" endtime="20240424 20:07:37.045"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>${hyperlink_template}</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 20:07:37.045" endtime="20240424 20:07:37.097"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:07:37.097" endtime="20240424 20:07:37.910"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Hyperlink Templates</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:07:37.910" endtime="20240424 20:07:37.910"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:07:37.910" endtime="20240424 20:07:37.936"/>
</kw>
<status status="PASS" starttime="20240424 20:07:34.864" endtime="20240424 20:07:37.936"/>
</kw>
<kw name="Then Model is Open" library="hyperlink_manager_view_step_definitions">
<kw name="Open ifc Model" library="Common">
<arg>${solibri_building_ifc}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:07:37.937" endtime="20240424 20:07:37.943"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 20:07:37.945" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 20:07:37.943" endtime="20240424 20:07:37.945"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 20:07:37.945" endtime="20240424 20:07:37.945"/>
</kw>
<status status="PASS" starttime="20240424 20:07:37.943" endtime="20240424 20:07:37.945"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:07:37.945" endtime="20240424 20:07:37.947"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:07:37.947" endtime="20240424 20:07:37.950"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:07:37.950" endtime="20240424 20:07:37.954"/>
</kw>
<status status="PASS" starttime="20240424 20:07:37.945" endtime="20240424 20:07:37.954"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 20:07:37.954" endtime="20240424 20:07:38.022"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:07:38.022" endtime="20240424 20:07:38.022"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:07:38.022" endtime="20240424 20:07:38.339"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${ifc_filename}</var>
<arg>${ifc_folder}</arg>
<arg>${ifc_filename}</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 20:07:38.339" level="INFO">${ifc_filename} = C:\users\public\Solibri\SOLIBRI\Samples\ifc\Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 20:07:38.339" endtime="20240424 20:07:38.339"/>
</kw>
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 20:07:38.339" endtime="20240424 20:07:39.411"/>
</kw>
<status status="PASS" starttime="20240424 20:07:38.339" endtime="20240424 20:07:39.411"/>
</kw>
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<status status="PASS" starttime="20240424 20:07:39.411" endtime="20240424 20:07:39.523"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:07:39.523" endtime="20240424 20:07:39.523"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:07:39.523" endtime="20240424 20:07:39.530"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:07:39.530" endtime="20240424 20:07:39.530"/>
</kw>
<status status="PASS" starttime="20240424 20:07:39.523" endtime="20240424 20:07:39.530"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 20:07:41.861" level="INFO">2024-04-24 20:07:40.151+0000 [Thread-562] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 0 ms.
2024-04-24 20:07:40.151+0000 [Thread-562] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 722 ms (using 1 threads)
2024-04-24 20:07:40.182+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 31 ms
2024-04-24 20:07:41.169+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 1018 ms.</msg>
<status status="PASS" starttime="20240424 20:07:39.530" endtime="20240424 20:07:41.861"/>
</kw>
<status status="PASS" starttime="20240424 20:07:39.530" endtime="20240424 20:07:41.861"/>
</kw>
<msg timestamp="20240424 20:07:41.861" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 20:07:39.530" endtime="20240424 20:07:41.861"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:07:41.861" endtime="20240424 20:07:41.950"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:07:41.950" endtime="20240424 20:07:42.727"/>
</kw>
<status status="PASS" starttime="20240424 20:07:41.861" endtime="20240424 20:07:42.727"/>
</branch>
<status status="PASS" starttime="20240424 20:07:41.861" endtime="20240424 20:07:42.727"/>
</if>
<status status="PASS" starttime="20240424 20:07:39.411" endtime="20240424 20:07:42.727"/>
</kw>
<status status="PASS" starttime="20240424 20:07:37.937" endtime="20240424 20:07:42.727"/>
</kw>
<status status="PASS" starttime="20240424 20:07:37.937" endtime="20240424 20:07:42.727"/>
</kw>
<kw name="Then Open Hyperlink Manager View" library="hyperlink_manager_view_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:07:42.727" endtime="20240424 20:07:42.739"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:07:42.740" endtime="20240424 20:07:42.754"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:07:42.755" endtime="20240424 20:07:42.758"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:07:42.758" endtime="20240424 20:07:42.761"/>
</kw>
<status status="PASS" starttime="20240424 20:07:42.739" endtime="20240424 20:07:42.761"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Component Should Exist</arg>
<arg>Model Tree_View</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Component Should Exist" library="SwingRobot">
<arg>Model Tree_View</arg>
<doc>Fails if component does not exist within current context.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:07:42.761" endtime="20240424 20:07:42.765"/>
</kw>
<status status="PASS" starttime="20240424 20:07:42.761" endtime="20240424 20:07:42.765"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>VIEWS</arg>
<arg>HYPERLINK MANAGER</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:07:42.765" endtime="20240424 20:07:43.447"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>3x</arg>
<arg>Dialog Should Be Open</arg>
<arg>HYPERLINK MANAGER</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>HYPERLINK MANAGER</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:07:43.447" endtime="20240424 20:07:43.559"/>
</kw>
<status status="PASS" starttime="20240424 20:07:43.447" endtime="20240424 20:07:43.559"/>
</kw>
<status status="PASS" starttime="20240424 20:07:42.727" endtime="20240424 20:07:43.559"/>
</kw>
<kw name="Then Verify Hyperlink Template Loaded" library="hyperlink_manager_view_step_definitions">
<kw name="Select Dialog" library="SwingRobot">
<arg>HYPERLINK MANAGER</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:07:43.559" endtime="20240424 20:07:43.563"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row_value}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:07:43.564" level="INFO">${row_value} = Hyperlink Templates</msg>
<status status="PASS" starttime="20240424 20:07:43.563" endtime="20240424 20:07:43.564"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${row_value}</arg>
<arg>Hyperlink Templates</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:07:43.564" endtime="20240424 20:07:43.564"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:07:43.564" endtime="20240424 20:07:43.580"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:07:43.580" endtime="20240424 20:07:43.649"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:07:43.657" level="INFO">${row_count} = 552</msg>
<status status="PASS" starttime="20240424 20:07:43.649" endtime="20240424 20:07:43.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>552</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:07:43.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:07:43.657" endtime="20240424 20:07:43.657"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:07:43.657" endtime="20240424 20:07:43.686"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${edit_menu}</var>
<arg>Select From Table Cell Popup Menu</arg>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Edit Hyperlink...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Edit Hyperlink...</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 20:07:43.686" endtime="20240424 20:07:44.010"/>
</kw>
<msg timestamp="20240424 20:07:44.010" level="INFO">${edit_menu} = True</msg>
<status status="PASS" starttime="20240424 20:07:43.686" endtime="20240424 20:07:44.010"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remove_menu}</var>
<arg>Select From Table Cell Popup Menu</arg>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Remove Selected Hyperlinks</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Remove Selected Hyperlinks</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 20:07:44.010" endtime="20240424 20:07:44.318"/>
</kw>
<msg timestamp="20240424 20:07:44.318" level="INFO">${remove_menu} = True</msg>
<status status="PASS" starttime="20240424 20:07:44.010" endtime="20240424 20:07:44.318"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${assign_menu}</var>
<arg>Select From Table Cell Popup Menu</arg>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Assign from Selection Basket</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Assign from Selection Basket</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<msg timestamp="20240424 20:07:54.525" level="FAIL">org.netbeans.jemmy.TimeoutExpiredException: Component enabled: class javax.swing.JPopupMenu$1</msg>
<status status="FAIL" starttime="20240424 20:07:44.318" endtime="20240424 20:07:54.525"/>
</kw>
<msg timestamp="20240424 20:07:54.525" level="INFO">${assign_menu} = False</msg>
<status status="PASS" starttime="20240424 20:07:44.318" endtime="20240424 20:07:54.525"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${unassign_menu}</var>
<arg>Select From Table Cell Popup Menu</arg>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Unassign from Selection Basket</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Unassign from Selection Basket</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<msg timestamp="20240424 20:08:04.659" level="FAIL">org.netbeans.jemmy.TimeoutExpiredException: Component enabled: class javax.swing.JPopupMenu$1</msg>
<status status="FAIL" starttime="20240424 20:07:54.525" endtime="20240424 20:08:04.659"/>
</kw>
<msg timestamp="20240424 20:08:04.659" level="INFO">${unassign_menu} = False</msg>
<status status="PASS" starttime="20240424 20:07:54.525" endtime="20240424 20:08:04.659"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${find_replace_menu}</var>
<arg>Select From Table Cell Popup Menu</arg>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Find and Replace Hyperlinks...</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Find and Replace Hyperlinks...</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<msg timestamp="20240424 20:08:14.853" level="FAIL">org.netbeans.jemmy.TimeoutExpiredException: Component enabled: class javax.swing.JPopupMenu$1</msg>
<status status="FAIL" starttime="20240424 20:08:04.659" endtime="20240424 20:08:14.853"/>
</kw>
<msg timestamp="20240424 20:08:14.853" level="INFO">${find_replace_menu} = False</msg>
<status status="PASS" starttime="20240424 20:08:04.659" endtime="20240424 20:08:14.853"/>
</kw>
<kw name="Close Dialog" library="SwingRobot">
<arg>Hyperlink Template</arg>
<doc>Closes a dialog.</doc>
<status status="PASS" starttime="20240424 20:08:14.853" endtime="20240424 20:08:14.853"/>
</kw>
<if>
<branch type="IF" condition="not ${edit_menu}">
<kw name="Fail" library="BuiltIn">
<arg>Edit Hyperlink... menu is not present</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 20:08:14.867" endtime="20240424 20:08:14.867"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:08:14.867" endtime="20240424 20:08:14.867"/>
</branch>
<status status="PASS" starttime="20240424 20:08:14.853" endtime="20240424 20:08:14.867"/>
</if>
<if>
<branch type="IF" condition="not ${remove_menu}">
<kw name="Fail" library="BuiltIn">
<arg>Remove Selected Hyperlinks menu is not disabled</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 20:08:14.867" endtime="20240424 20:08:14.867"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:08:14.867" endtime="20240424 20:08:14.867"/>
</branch>
<status status="PASS" starttime="20240424 20:08:14.867" endtime="20240424 20:08:14.867"/>
</if>
<if>
<branch type="IF" condition="${assign_menu}">
<kw name="Fail" library="BuiltIn">
<arg>Assign from Selection Basket is not disabled</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 20:08:14.867" endtime="20240424 20:08:14.867"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:08:14.867" endtime="20240424 20:08:14.867"/>
</branch>
<status status="PASS" starttime="20240424 20:08:14.867" endtime="20240424 20:08:14.867"/>
</if>
<if>
<branch type="IF" condition="${unassign_menu}">
<kw name="Fail" library="BuiltIn">
<arg>Unassign from Selection Basket menu is not disabled</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 20:08:14.867" endtime="20240424 20:08:14.867"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:08:14.867" endtime="20240424 20:08:14.867"/>
</branch>
<status status="PASS" starttime="20240424 20:08:14.867" endtime="20240424 20:08:14.867"/>
</if>
<if>
<branch type="IF" condition="${find_replace_menu}">
<kw name="Fail" library="BuiltIn">
<arg>Find and Replace Hyperlinks... menu is not disaled</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 20:08:14.867" endtime="20240424 20:08:14.867"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:08:14.867" endtime="20240424 20:08:14.867"/>
</branch>
<status status="PASS" starttime="20240424 20:08:14.867" endtime="20240424 20:08:14.867"/>
</if>
<status status="PASS" starttime="20240424 20:07:43.559" endtime="20240424 20:08:14.867"/>
</kw>
<kw name="Then Verify Hyperlink Template in Model Tree view" library="hyperlink_manager_view_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:14.867" endtime="20240424 20:08:14.867"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row_value}</var>
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:08:14.882" level="INFO">${row_value} = class com.solibri.sae.solibri.construction.SColumn</msg>
<status status="PASS" starttime="20240424 20:08:14.867" endtime="20240424 20:08:14.882"/>
</kw>
<kw name="Switch to Component Hierarchy" library="ModelTreeResource">
<doc>Opens Class tree in Component hierarchy ModelViewComponentHierarchyPanel</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:14.882" endtime="20240424 20:08:14.882"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>3</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:08:14.882" endtime="20240424 20:08:14.882"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${select_component_hierarchy}</var>
<arg>Toggle Button Should Be Selected</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Toggle Button Should Be Selected" library="SwingRobot">
<arg>3</arg>
<doc>Fails if toggle button is not selected.</doc>
<status status="PASS" starttime="20240424 20:08:14.882" endtime="20240424 20:08:14.897"/>
</kw>
<msg timestamp="20240424 20:08:14.897" level="INFO">${select_component_hierarchy} = True</msg>
<status status="PASS" starttime="20240424 20:08:14.882" endtime="20240424 20:08:14.897"/>
</kw>
<if>
<branch type="IF" condition="${select_component_hierarchy} == ${False}">
<kw name="Push Toggle Button" library="SwingRobot">
<arg>3</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:08:14.897" endtime="20240424 20:08:14.897"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:08:14.897" endtime="20240424 20:08:14.897"/>
</branch>
<status status="PASS" starttime="20240424 20:08:14.897" endtime="20240424 20:08:14.897"/>
</if>
<status status="PASS" starttime="20240424 20:08:14.882" endtime="20240424 20:08:14.897"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:14.897" endtime="20240424 20:08:14.917"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:14.917" endtime="20240424 20:08:15.136"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Select From Table Cell Popup Menu</arg>
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<arg>Hyperlinks|Show|IFC Documentation</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<arg>Hyperlinks|Show|IFC Documentation</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 20:08:15.136" endtime="20240424 20:08:16.610"/>
</kw>
<msg timestamp="20240424 20:08:16.610" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20240424 20:08:15.136" endtime="20240424 20:08:16.610"/>
</kw>
<if>
<branch type="IF" condition="not ${status}">
<kw name="Fail" library="BuiltIn">
<arg>Hyperlink Template is not visible in Model Tree view Menu</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 20:08:16.610" endtime="20240424 20:08:16.610"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:08:16.610" endtime="20240424 20:08:16.610"/>
</branch>
<status status="PASS" starttime="20240424 20:08:16.610" endtime="20240424 20:08:16.610"/>
</if>
<status status="PASS" starttime="20240424 20:08:14.867" endtime="20240424 20:08:16.610"/>
</kw>
<kw name="Then Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<msg timestamp="20240424 20:08:16.757" level="INFO">Closed dialog 'HYPERLINK MANAGER'.</msg>
<status status="PASS" starttime="20240424 20:08:16.610" endtime="20240424 20:08:16.757"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:16.757" endtime="20240424 20:08:16.757"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:08:16.757" endtime="20240424 20:08:16.845"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:16.845" endtime="20240424 20:08:16.898"/>
</kw>
<status status="PASS" starttime="20240424 20:08:16.757" endtime="20240424 20:08:16.898"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:08:16.898" endtime="20240424 20:08:17.111"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:17.111" endtime="20240424 20:08:17.116"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 20:08:27.126" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 20:08:17.117" endtime="20240424 20:08:27.126"/>
</kw>
<msg timestamp="20240424 20:08:27.126" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 20:08:17.117" endtime="20240424 20:08:27.126"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:08:27.126" endtime="20240424 20:08:27.126"/>
</kw>
<msg timestamp="20240424 20:08:27.126" level="INFO">${check_if_save_asked} = True</msg>
<status status="PASS" starttime="20240424 20:08:27.126" endtime="20240424 20:08:27.126"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:08:27.126" endtime="20240424 20:08:27.126"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:08:27.126" endtime="20240424 20:08:27.157"/>
</kw>
<status status="PASS" starttime="20240424 20:08:27.126" endtime="20240424 20:08:27.157"/>
</kw>
<status status="PASS" starttime="20240424 20:08:27.126" endtime="20240424 20:08:27.157"/>
</branch>
<status status="PASS" starttime="20240424 20:08:27.126" endtime="20240424 20:08:27.157"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 20:08:27.157" endtime="20240424 20:08:27.157"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:08:27.157" endtime="20240424 20:08:27.157"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:08:27.157" endtime="20240424 20:08:27.157"/>
</branch>
<status status="PASS" starttime="20240424 20:08:27.157" endtime="20240424 20:08:27.157"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:27.157" endtime="20240424 20:08:27.311"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:08:27.311" endtime="20240424 20:08:27.346"/>
</kw>
<status status="PASS" starttime="20240424 20:08:27.311" endtime="20240424 20:08:27.346"/>
</kw>
<status status="PASS" starttime="20240424 20:08:16.610" endtime="20240424 20:08:27.346"/>
</kw>
<kw name="Then Clear Hyperlink Template from Settings" library="hyperlink_manager_view_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:27.346" endtime="20240424 20:08:27.348"/>
</kw>
<kw name="Switch to the Settings View" library="settings_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:27.348" endtime="20240424 20:08:27.354"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:27.354" endtime="20240424 20:08:27.355"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:08:27.355" endtime="20240424 20:08:27.359"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:27.359" endtime="20240424 20:08:27.429"/>
</kw>
<status status="PASS" starttime="20240424 20:08:27.354" endtime="20240424 20:08:27.429"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:27.429" endtime="20240424 20:08:27.679"/>
</kw>
<status status="PASS" starttime="20240424 20:08:27.348" endtime="20240424 20:08:27.679"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Hyperlink Templates...</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:08:27.679" endtime="20240424 20:08:27.687"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Hyperlink Templates</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:08:27.687" endtime="20240424 20:08:27.739"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:27.739" endtime="20240424 20:08:27.757"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Remove Rows</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:08:27.757" endtime="20240424 20:08:27.762"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:08:27.762" endtime="20240424 20:08:27.780"/>
</kw>
<status status="PASS" starttime="20240424 20:08:27.346" endtime="20240424 20:08:27.780"/>
</kw>
<status status="PASS" starttime="20240424 20:07:34.864" endtime="20240424 20:08:27.780"/>
</test>
<doc>Verify default Hyperlink Manager view components</doc>
<meta name="Feature">Hyperlink Manager view</meta>
<meta name="Generated by">_gherkin2robotframework on 2023-10-17T14:56:24.177654_</meta>
<status status="PASS" starttime="20240424 20:06:38.731" endtime="20240424 20:08:27.780"/>
</suite>
<suite id="s1-s22" name="23 Custom Relation View" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\23_custom_relation_view.robot">
<test id="s1-s22-t1" name="Verify Custom Relation View" line="11">
<kw name="Background">
<doc>Launch Solibri And Login To SSC</doc>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 20:08:27.851" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 20:08:27.851" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 20:08:27 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 20:08:27.843" endtime="20240424 20:08:27.851"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 20:08:27.851" endtime="20240424 20:08:27.851"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:27.851" endtime="20240424 20:08:27.851"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 20:08:27.851" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 20:08:27.851" endtime="20240424 20:08:27.851"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 20:08:27.851" endtime="20240424 20:08:27.851"/>
</kw>
<status status="PASS" starttime="20240424 20:08:27.851" endtime="20240424 20:08:27.851"/>
</kw>
<status status="PASS" starttime="20240424 20:08:27.843" endtime="20240424 20:08:27.851"/>
</kw>
<kw name="When User Logs In To SSC" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Logged in to SSC</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 20:08:27.851" endtime="20240424 20:08:27.851"/>
</kw>
<status status="PASS" starttime="20240424 20:08:27.851" endtime="20240424 20:08:27.851"/>
</kw>
<kw name="And Solibri Office Is Opened" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Solibri Office Is Opened</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 20:08:27.851" endtime="20240424 20:08:27.851"/>
</kw>
<status status="PASS" starttime="20240424 20:08:27.851" endtime="20240424 20:08:27.851"/>
</kw>
<kw name="And No Existing Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:27.851" endtime="20240424 20:08:27.851"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:08:27.851" endtime="20240424 20:08:27.867"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:27.867" endtime="20240424 20:08:27.869"/>
</kw>
<status status="PASS" starttime="20240424 20:08:27.851" endtime="20240424 20:08:27.869"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:08:27.869" endtime="20240424 20:08:27.875"/>
</kw>
<status status="PASS" starttime="20240424 20:08:27.869" endtime="20240424 20:08:27.875"/>
</kw>
<msg timestamp="20240424 20:08:27.875" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 20:08:27.869" endtime="20240424 20:08:27.875"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 20:08:27.875" endtime="20240424 20:08:27.875"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:08:27.875" endtime="20240424 20:08:27.875"/>
</branch>
<status status="PASS" starttime="20240424 20:08:27.875" endtime="20240424 20:08:27.875"/>
</if>
<status status="PASS" starttime="20240424 20:08:27.851" endtime="20240424 20:08:27.875"/>
</kw>
<status status="PASS" starttime="20240424 20:08:27.843" endtime="20240424 20:08:27.875"/>
</kw>
<kw name="And Open &quot;BIM Validation - Architectural.xml&quot; Role" library="role_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:27.875" endtime="20240424 20:08:27.880"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Roles_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:27.880" endtime="20240424 20:08:27.948"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open Role</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:08:27.948" endtime="20240424 20:08:29.321"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Dialog Should Be Open</arg>
<arg>Open Role</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Open Role</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:08:29.321" endtime="20240424 20:08:29.326"/>
</kw>
<status status="PASS" starttime="20240424 20:08:29.321" endtime="20240424 20:08:29.326"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Open Role</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:08:29.326" endtime="20240424 20:08:29.330"/>
</kw>
<kw name="Select Tab" library="SwingRobot">
<arg>Files</arg>
<doc>Selects a tab.
The optional tab pane identifier can be provided, otherwise the first matching tab is selected.</doc>
<status status="PASS" starttime="20240424 20:08:29.330" endtime="20240424 20:08:29.345"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${role_with_path}</var>
<arg>${roles_folder}</arg>
<arg>BIM Validation - Architectural.xml</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 20:08:29.345" level="INFO">${role_with_path} = C:\users\public\Solibri\SOLIBRI\Roles\BIM Validation - Architectural.xml</msg>
<status status="PASS" starttime="20240424 20:08:29.345" endtime="20240424 20:08:29.345"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${role_with_path}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 20:08:29.345" endtime="20240424 20:08:29.466"/>
</kw>
<status status="PASS" starttime="20240424 20:08:27.875" endtime="20240424 20:08:29.466"/>
</kw>
<kw name="Then Open Custom Relation View" library="custom_relation_view_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:29.466" endtime="20240424 20:08:29.466"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:08:29.466" endtime="20240424 20:08:29.473"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:29.473" endtime="20240424 20:08:29.602"/>
</kw>
<status status="PASS" starttime="20240424 20:08:29.466" endtime="20240424 20:08:29.602"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Component Should Exist</arg>
<arg>Model Tree_View</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Component Should Exist" library="SwingRobot">
<arg>Model Tree_View</arg>
<doc>Fails if component does not exist within current context.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:08:29.602" endtime="20240424 20:08:29.605"/>
</kw>
<status status="PASS" starttime="20240424 20:08:29.602" endtime="20240424 20:08:29.605"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Select From Popup Menu</arg>
<arg>VIEWS</arg>
<arg>CUSTOM RELATIONS</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:08:29.605" endtime="20240424 20:08:29.611"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Dialog Should Be Open</arg>
<arg>CUSTOM RELATIONS</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>CUSTOM RELATIONS</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:08:29.611" endtime="20240424 20:08:30.325"/>
</kw>
<status status="PASS" starttime="20240424 20:08:29.611" endtime="20240424 20:08:30.325"/>
</kw>
<status status="PASS" starttime="20240424 20:08:29.466" endtime="20240424 20:08:30.325"/>
</kw>
<kw name="Then Verify Custom Relation View without Model" library="custom_relation_view_step_definitions">
<kw name="Select Dialog" library="SwingRobot">
<arg>CUSTOM RELATIONS</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:08:30.325" endtime="20240424 20:08:30.331"/>
</kw>
<kw name="Combo Box Should Be Disabled" library="SwingRobot">
<arg>0</arg>
<doc>Fails if combobox is enabled.</doc>
<status status="PASS" starttime="20240424 20:08:30.331" endtime="20240424 20:08:30.331"/>
</kw>
<status status="PASS" starttime="20240424 20:08:30.325" endtime="20240424 20:08:30.331"/>
</kw>
<kw name="Then Open ifc Model" library="Common">
<arg>${solibri_building_ifc}</arg>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:30.331" endtime="20240424 20:08:30.356"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 20:08:30.359" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 20:08:30.356" endtime="20240424 20:08:30.359"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 20:08:30.359" endtime="20240424 20:08:30.359"/>
</kw>
<status status="PASS" starttime="20240424 20:08:30.356" endtime="20240424 20:08:30.359"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:30.359" endtime="20240424 20:08:30.366"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:08:30.366" endtime="20240424 20:08:30.368"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:30.368" endtime="20240424 20:08:30.372"/>
</kw>
<status status="PASS" starttime="20240424 20:08:30.359" endtime="20240424 20:08:30.372"/>
</kw>
<kw name="Label Should Be Disabled" library="SwingRobot">
<arg>${button_add_models_title}</arg>
<doc>Fails if the label is not disabled.</doc>
<status status="PASS" starttime="20240424 20:08:30.372" endtime="20240424 20:08:30.486"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${button_open_title}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:08:30.486" endtime="20240424 20:08:30.494"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>${file_chooser_open_models_title}</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:08:30.494" endtime="20240424 20:08:30.807"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${ifc_filename}</var>
<arg>${ifc_folder}</arg>
<arg>${ifc_filename}</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20240424 20:08:30.807" level="INFO">${ifc_filename} = C:\users\public\Solibri\SOLIBRI\Samples\ifc\Solibri Building.ifc</msg>
<status status="PASS" starttime="20240424 20:08:30.807" endtime="20240424 20:08:30.807"/>
</kw>
<kw name="Open Model From File Chooser On Windows" library="ModelHandlingResource">
<arg>${ifc_filename}</arg>
<tag>windows</tag>
<doc>Opens a given model by selecting file from the file chooser</doc>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>${ifc_filename}</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 20:08:30.807" endtime="20240424 20:08:30.991"/>
</kw>
<status status="PASS" starttime="20240424 20:08:30.807" endtime="20240424 20:08:30.991"/>
</kw>
<kw name="Wait for IFC Model to Load" library="Common">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<msg timestamp="20240424 20:08:31.246" level="INFO">Closed dialog 'CUSTOM RELATIONS'.</msg>
<status status="PASS" starttime="20240424 20:08:30.991" endtime="20240424 20:08:31.246"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:31.246" endtime="20240424 20:08:31.246"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:08:31.246" endtime="20240424 20:08:31.246"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:31.246" endtime="20240424 20:08:31.326"/>
</kw>
<status status="PASS" starttime="20240424 20:08:31.246" endtime="20240424 20:08:31.326"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5</arg>
<arg>5</arg>
<arg>Select Dialog</arg>
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 20:08:33.334" level="INFO">2024-04-24 20:08:31.791+0000 [Thread-639] INFO  c.s.s.p.i.ConcurrentIfcStepFactory - Missing references resolved in 0 ms.
2024-04-24 20:08:31.791+0000 [Thread-639] INFO  c.solibri.ifc.newparser.StepParser - Ifc parsed in 815 ms (using 1 threads)
2024-04-24 20:08:31.829+0000 [Open model] INFO  com.solibri.ifc.ifc.NewStepModel - Inverse info resolved in 38 ms
2024-04-24 20:08:32.680+0000 [Open model] INFO  com.solibri.sae.step.Ifc2xInterface - IFC model (Solibri Building) converted in: 889 ms.</msg>
<status status="PASS" starttime="20240424 20:08:31.326" endtime="20240424 20:08:33.335"/>
</kw>
<status status="PASS" starttime="20240424 20:08:31.326" endtime="20240424 20:08:33.335"/>
</kw>
<msg timestamp="20240424 20:08:33.335" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 20:08:31.326" endtime="20240424 20:08:33.335"/>
</kw>
<if>
<branch type="IF" condition="${result} == ${True}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Ensure Model Disciplines and Categories</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:08:33.335" endtime="20240424 20:08:33.420"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:08:33.420" endtime="20240424 20:08:33.736"/>
</kw>
<status status="PASS" starttime="20240424 20:08:33.335" endtime="20240424 20:08:33.736"/>
</branch>
<status status="PASS" starttime="20240424 20:08:33.335" endtime="20240424 20:08:33.736"/>
</if>
<status status="PASS" starttime="20240424 20:08:30.991" endtime="20240424 20:08:33.736"/>
</kw>
<status status="PASS" starttime="20240424 20:08:30.331" endtime="20240424 20:08:33.736"/>
</kw>
<kw name="Then Open Custom Relation View" library="custom_relation_view_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:33.736" endtime="20240424 20:08:33.753"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:08:33.753" endtime="20240424 20:08:33.753"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:33.753" endtime="20240424 20:08:33.764"/>
</kw>
<status status="PASS" starttime="20240424 20:08:33.736" endtime="20240424 20:08:33.764"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Component Should Exist</arg>
<arg>Model Tree_View</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Component Should Exist" library="SwingRobot">
<arg>Model Tree_View</arg>
<doc>Fails if component does not exist within current context.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:08:33.764" endtime="20240424 20:08:33.764"/>
</kw>
<status status="PASS" starttime="20240424 20:08:33.764" endtime="20240424 20:08:33.764"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Select From Popup Menu</arg>
<arg>VIEWS</arg>
<arg>CUSTOM RELATIONS</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:08:33.764" endtime="20240424 20:08:33.764"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Dialog Should Be Open</arg>
<arg>CUSTOM RELATIONS</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>CUSTOM RELATIONS</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:08:33.764" endtime="20240424 20:08:34.560"/>
</kw>
<status status="PASS" starttime="20240424 20:08:33.764" endtime="20240424 20:08:34.560"/>
</kw>
<status status="PASS" starttime="20240424 20:08:33.736" endtime="20240424 20:08:34.561"/>
</kw>
<kw name="Then Verify Custom Relation View with Model" library="custom_relation_view_step_definitions">
<kw name="Select Dialog" library="SwingRobot">
<arg>CUSTOM RELATIONS</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:08:34.561" endtime="20240424 20:08:34.564"/>
</kw>
<kw name="Get Combobox Values" library="SwingRobot">
<var>${values}</var>
<arg>0</arg>
<doc>Returns a list containing all the values of a combobox.</doc>
<msg timestamp="20240424 20:08:34.813" level="INFO">${values} = ['Nearest Spaces', 'Federated Floors']</msg>
<status status="PASS" starttime="20240424 20:08:34.564" endtime="20240424 20:08:34.813"/>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<arg>${values}</arg>
<arg>${combo_box_values}</arg>
<doc>Fails if given lists are unequal.</doc>
<status status="PASS" starttime="20240424 20:08:34.813" endtime="20240424 20:08:34.813"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Relate To</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:08:34.813" endtime="20240424 20:08:34.816"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Restore Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:08:34.816" endtime="20240424 20:08:34.816"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Add to Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:08:34.816" endtime="20240424 20:08:34.854"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Remove from Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:08:34.854" endtime="20240424 20:08:34.857"/>
</kw>
<kw name="Button Should Be Disabled" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Fails if button is enabled.</doc>
<status status="PASS" starttime="20240424 20:08:34.857" endtime="20240424 20:08:34.860"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5x</arg>
<arg>Push Toggle Button</arg>
<arg>3</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>3</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:08:34.860" endtime="20240424 20:08:34.876"/>
</kw>
<status status="PASS" starttime="20240424 20:08:34.860" endtime="20240424 20:08:34.876"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5x</arg>
<arg>Toggle Button Should Be Selected</arg>
<arg>3</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Toggle Button Should Be Selected" library="SwingRobot">
<arg>3</arg>
<doc>Fails if toggle button is not selected.</doc>
<status status="PASS" starttime="20240424 20:08:34.876" endtime="20240424 20:08:34.879"/>
</kw>
<status status="PASS" starttime="20240424 20:08:34.876" endtime="20240424 20:08:34.879"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Table Should Not Be Empty</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Table Should Not Be Empty" library="Common">
<arg>0</arg>
<arg>1</arg>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>${table_locator}</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:08:34.886" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 20:08:34.879" endtime="20240424 20:08:34.886"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${row_count} &gt; ${table_rows}</arg>
<arg>The table has fewer rows than expected</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20240424 20:08:34.886" level="FAIL">The table has fewer rows than expected</msg>
<status status="FAIL" starttime="20240424 20:08:34.886" endtime="20240424 20:08:34.886"/>
</kw>
<status status="FAIL" starttime="20240424 20:08:34.879" endtime="20240424 20:08:34.886"/>
</kw>
<kw name="Table Should Not Be Empty" library="Common">
<arg>0</arg>
<arg>1</arg>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>${table_locator}</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:08:34.910" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 20:08:34.902" endtime="20240424 20:08:34.910"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${row_count} &gt; ${table_rows}</arg>
<arg>The table has fewer rows than expected</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20240424 20:08:34.910" level="FAIL">The table has fewer rows than expected</msg>
<status status="FAIL" starttime="20240424 20:08:34.910" endtime="20240424 20:08:34.910"/>
</kw>
<status status="FAIL" starttime="20240424 20:08:34.902" endtime="20240424 20:08:34.910"/>
</kw>
<kw name="Table Should Not Be Empty" library="Common">
<arg>0</arg>
<arg>1</arg>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>${table_locator}</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:08:34.949" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 20:08:34.926" endtime="20240424 20:08:34.949"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${row_count} &gt; ${table_rows}</arg>
<arg>The table has fewer rows than expected</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20240424 20:08:34.949" level="FAIL">The table has fewer rows than expected</msg>
<status status="FAIL" starttime="20240424 20:08:34.949" endtime="20240424 20:08:34.949"/>
</kw>
<status status="FAIL" starttime="20240424 20:08:34.926" endtime="20240424 20:08:34.949"/>
</kw>
<kw name="Table Should Not Be Empty" library="Common">
<arg>0</arg>
<arg>1</arg>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>${table_locator}</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:08:34.968" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 20:08:34.965" endtime="20240424 20:08:34.968"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${row_count} &gt; ${table_rows}</arg>
<arg>The table has fewer rows than expected</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20240424 20:08:34.968" level="FAIL">The table has fewer rows than expected</msg>
<status status="FAIL" starttime="20240424 20:08:34.968" endtime="20240424 20:08:34.968"/>
</kw>
<status status="FAIL" starttime="20240424 20:08:34.965" endtime="20240424 20:08:34.968"/>
</kw>
<kw name="Table Should Not Be Empty" library="Common">
<arg>0</arg>
<arg>1</arg>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>${table_locator}</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:08:34.988" level="INFO">${row_count} = 4</msg>
<status status="PASS" starttime="20240424 20:08:34.983" endtime="20240424 20:08:34.988"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${row_count} &gt; ${table_rows}</arg>
<arg>The table has fewer rows than expected</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240424 20:08:34.988" endtime="20240424 20:08:34.988"/>
</kw>
<status status="PASS" starttime="20240424 20:08:34.983" endtime="20240424 20:08:34.988"/>
</kw>
<status status="PASS" starttime="20240424 20:08:34.879" endtime="20240424 20:08:34.988"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>0</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:08:34.992" level="INFO">${row_count} = 4</msg>
<status status="PASS" starttime="20240424 20:08:34.988" endtime="20240424 20:08:34.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>4</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:08:34.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:08:34.992" endtime="20240424 20:08:34.992"/>
</kw>
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${selected_value}</var>
<arg>0</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 20:08:35.237" level="INFO">${selected_value} = Nearest Spaces</msg>
<status status="PASS" starttime="20240424 20:08:34.992" endtime="20240424 20:08:35.237"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${selected_value}</arg>
<arg>Nearest Spaces</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:08:35.237" endtime="20240424 20:08:35.237"/>
</kw>
<status status="PASS" starttime="20240424 20:08:34.561" endtime="20240424 20:08:35.237"/>
</kw>
<kw name="Then Verify Ground Floor Nearest Space Custom Relation" library="custom_relation_view_step_definitions">
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${selected_value}</var>
<arg>0</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 20:08:35.497" level="INFO">${selected_value} = Nearest Spaces</msg>
<status status="PASS" starttime="20240424 20:08:35.237" endtime="20240424 20:08:35.497"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${selected_value}</arg>
<arg>Nearest Spaces</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:08:35.497" endtime="20240424 20:08:35.497"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:35.497" endtime="20240424 20:08:35.515"/>
</kw>
<kw name="Verify Nearest Space Custom Relation" library="custom_relation_view_step_definitions">
<kw name="Check Box Should Be Enabled" library="SwingRobot">
<arg>Automatic</arg>
<doc>Fails if checkbox is disabled.</doc>
<status status="PASS" starttime="20240424 20:08:35.515" endtime="20240424 20:08:35.576"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>Automatic</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 20:08:35.576" endtime="20240424 20:08:35.592"/>
</kw>
<kw name="Check Box Should Be Enabled" library="SwingRobot">
<arg>Related by User</arg>
<doc>Fails if checkbox is disabled.</doc>
<status status="PASS" starttime="20240424 20:08:35.592" endtime="20240424 20:08:35.592"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>Related by User</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 20:08:35.592" endtime="20240424 20:08:35.592"/>
</kw>
<kw name="Check Box Should Be Enabled" library="SwingRobot">
<arg>2</arg>
<doc>Fails if checkbox is disabled.</doc>
<status status="PASS" starttime="20240424 20:08:35.592" endtime="20240424 20:08:35.600"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>2</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 20:08:35.600" endtime="20240424 20:08:35.602"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:08:35.602" level="INFO">${row_count} = 0</msg>
<status status="PASS" starttime="20240424 20:08:35.602" endtime="20240424 20:08:35.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:08:35.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:08:35.602" endtime="20240424 20:08:35.602"/>
</kw>
<status status="PASS" starttime="20240424 20:08:35.515" endtime="20240424 20:08:35.602"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:35.602" endtime="20240424 20:08:35.622"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:35.622" endtime="20240424 20:08:35.669"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:35.669" endtime="20240424 20:08:35.722"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:08:35.801" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 20:08:35.722" endtime="20240424 20:08:35.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:08:35.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:08:35.801" endtime="20240424 20:08:35.801"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row_value}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:08:35.801" level="INFO">${row_value} = Space.0.12 : Women[105]</msg>
<status status="PASS" starttime="20240424 20:08:35.801" endtime="20240424 20:08:35.801"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${row_value}</arg>
<arg>Space.0.12 : Women[105]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:08:35.801" endtime="20240424 20:08:35.801"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:35.801" endtime="20240424 20:08:35.841"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:35.841" endtime="20240424 20:08:35.895"/>
</kw>
<status status="PASS" starttime="20240424 20:08:35.237" endtime="20240424 20:08:35.895"/>
</kw>
<kw name="Then Verify First Floor Nearest Space Custom Relation" library="custom_relation_view_step_definitions">
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${selected_value}</var>
<arg>0</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 20:08:36.171" level="INFO">${selected_value} = Nearest Spaces</msg>
<status status="PASS" starttime="20240424 20:08:35.895" endtime="20240424 20:08:36.171"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${selected_value}</arg>
<arg>Nearest Spaces</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:08:36.171" endtime="20240424 20:08:36.171"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:36.171" endtime="20240424 20:08:36.196"/>
</kw>
<kw name="Verify Nearest Space Custom Relation" library="custom_relation_view_step_definitions">
<kw name="Check Box Should Be Enabled" library="SwingRobot">
<arg>Automatic</arg>
<doc>Fails if checkbox is disabled.</doc>
<status status="PASS" starttime="20240424 20:08:36.196" endtime="20240424 20:08:36.230"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>Automatic</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 20:08:36.230" endtime="20240424 20:08:36.246"/>
</kw>
<kw name="Check Box Should Be Enabled" library="SwingRobot">
<arg>Related by User</arg>
<doc>Fails if checkbox is disabled.</doc>
<status status="PASS" starttime="20240424 20:08:36.246" endtime="20240424 20:08:36.250"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>Related by User</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 20:08:36.250" endtime="20240424 20:08:36.251"/>
</kw>
<kw name="Check Box Should Be Enabled" library="SwingRobot">
<arg>2</arg>
<doc>Fails if checkbox is disabled.</doc>
<status status="PASS" starttime="20240424 20:08:36.251" endtime="20240424 20:08:36.251"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>2</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 20:08:36.251" endtime="20240424 20:08:36.251"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:08:36.258" level="INFO">${row_count} = 0</msg>
<status status="PASS" starttime="20240424 20:08:36.251" endtime="20240424 20:08:36.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:08:36.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:08:36.258" endtime="20240424 20:08:36.258"/>
</kw>
<status status="PASS" starttime="20240424 20:08:36.196" endtime="20240424 20:08:36.258"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:36.258" endtime="20240424 20:08:36.286"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:36.286" endtime="20240424 20:08:36.319"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:36.319" endtime="20240424 20:08:36.407"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:08:36.496" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 20:08:36.407" endtime="20240424 20:08:36.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:08:36.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:08:36.496" endtime="20240424 20:08:36.496"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row_value}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:08:36.512" level="INFO">${row_value} = Space.1.7 : Corridor[240]</msg>
<status status="PASS" starttime="20240424 20:08:36.496" endtime="20240424 20:08:36.512"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${row_value}</arg>
<arg>Space.1.7 : Corridor[240]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:08:36.512" endtime="20240424 20:08:36.512"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:36.512" endtime="20240424 20:08:36.593"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:36.593" endtime="20240424 20:08:36.612"/>
</kw>
<status status="PASS" starttime="20240424 20:08:35.895" endtime="20240424 20:08:36.612"/>
</kw>
<kw name="Then Verify Second Floor Nearest Space Custom Relation" library="custom_relation_view_step_definitions">
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${selected_value}</var>
<arg>0</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 20:08:36.920" level="INFO">${selected_value} = Nearest Spaces</msg>
<status status="PASS" starttime="20240424 20:08:36.612" endtime="20240424 20:08:36.920"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${selected_value}</arg>
<arg>Nearest Spaces</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:08:36.920" endtime="20240424 20:08:36.920"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:36.920" endtime="20240424 20:08:36.936"/>
</kw>
<kw name="Verify Nearest Space Custom Relation" library="custom_relation_view_step_definitions">
<kw name="Check Box Should Be Enabled" library="SwingRobot">
<arg>Automatic</arg>
<doc>Fails if checkbox is disabled.</doc>
<status status="PASS" starttime="20240424 20:08:36.936" endtime="20240424 20:08:36.978"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>Automatic</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 20:08:36.978" endtime="20240424 20:08:36.994"/>
</kw>
<kw name="Check Box Should Be Enabled" library="SwingRobot">
<arg>Related by User</arg>
<doc>Fails if checkbox is disabled.</doc>
<status status="PASS" starttime="20240424 20:08:36.994" endtime="20240424 20:08:36.994"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>Related by User</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 20:08:36.994" endtime="20240424 20:08:36.994"/>
</kw>
<kw name="Check Box Should Be Enabled" library="SwingRobot">
<arg>2</arg>
<doc>Fails if checkbox is disabled.</doc>
<status status="PASS" starttime="20240424 20:08:36.994" endtime="20240424 20:08:37.001"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>2</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 20:08:37.001" endtime="20240424 20:08:37.004"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:08:37.004" level="INFO">${row_count} = 0</msg>
<status status="PASS" starttime="20240424 20:08:37.004" endtime="20240424 20:08:37.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:08:37.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:08:37.004" endtime="20240424 20:08:37.004"/>
</kw>
<status status="PASS" starttime="20240424 20:08:36.936" endtime="20240424 20:08:37.004"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:37.004" endtime="20240424 20:08:37.019"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:37.019" endtime="20240424 20:08:37.078"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>4</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:37.078" endtime="20240424 20:08:37.134"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:08:37.221" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 20:08:37.134" endtime="20240424 20:08:37.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:08:37.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:08:37.221" endtime="20240424 20:08:37.221"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row_value}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:08:37.237" level="INFO">${row_value} = Space.2.4 : Corridor[320]</msg>
<status status="PASS" starttime="20240424 20:08:37.221" endtime="20240424 20:08:37.237"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${row_value}</arg>
<arg>Space.2.4 : Corridor[320]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:08:37.237" endtime="20240424 20:08:37.237"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:37.237" endtime="20240424 20:08:37.273"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:37.273" endtime="20240424 20:08:37.328"/>
</kw>
<status status="PASS" starttime="20240424 20:08:36.612" endtime="20240424 20:08:37.328"/>
</kw>
<kw name="Then Verify Roof Nearest Space Custom Relation" library="custom_relation_view_step_definitions">
<kw name="Get Selected Item From Combo Box" library="SwingRobot">
<var>${selected_value}</var>
<arg>0</arg>
<doc>Returns an item from a combobox.</doc>
<msg timestamp="20240424 20:08:37.637" level="INFO">${selected_value} = Nearest Spaces</msg>
<status status="PASS" starttime="20240424 20:08:37.328" endtime="20240424 20:08:37.637"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${selected_value}</arg>
<arg>Nearest Spaces</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:08:37.637" endtime="20240424 20:08:37.637"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:37.637" endtime="20240424 20:08:37.656"/>
</kw>
<kw name="Verify Nearest Space Custom Relation" library="custom_relation_view_step_definitions">
<kw name="Check Box Should Be Enabled" library="SwingRobot">
<arg>Automatic</arg>
<doc>Fails if checkbox is disabled.</doc>
<status status="PASS" starttime="20240424 20:08:37.656" endtime="20240424 20:08:37.696"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>Automatic</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 20:08:37.696" endtime="20240424 20:08:37.696"/>
</kw>
<kw name="Check Box Should Be Enabled" library="SwingRobot">
<arg>Related by User</arg>
<doc>Fails if checkbox is disabled.</doc>
<status status="PASS" starttime="20240424 20:08:37.696" endtime="20240424 20:08:37.710"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>Related by User</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 20:08:37.710" endtime="20240424 20:08:37.710"/>
</kw>
<kw name="Check Box Should Be Enabled" library="SwingRobot">
<arg>2</arg>
<doc>Fails if checkbox is disabled.</doc>
<status status="PASS" starttime="20240424 20:08:37.710" endtime="20240424 20:08:37.713"/>
</kw>
<kw name="Check Box Should Be Checked" library="SwingRobot">
<arg>2</arg>
<doc>Fails if checkbox is not checked.</doc>
<status status="PASS" starttime="20240424 20:08:37.713" endtime="20240424 20:08:37.713"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:08:37.719" level="INFO">${row_count} = 0</msg>
<status status="PASS" starttime="20240424 20:08:37.713" endtime="20240424 20:08:37.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:08:37.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:08:37.719" endtime="20240424 20:08:37.719"/>
</kw>
<status status="PASS" starttime="20240424 20:08:37.656" endtime="20240424 20:08:37.719"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:37.719" endtime="20240424 20:08:37.734"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>4</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:37.734" endtime="20240424 20:08:37.759"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>5</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:37.759" endtime="20240424 20:08:37.826"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:08:37.976" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 20:08:37.843" endtime="20240424 20:08:37.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:08:37.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:08:37.976" endtime="20240424 20:08:37.976"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row_value}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:08:38.024" level="INFO">${row_value} = Space.3.1 : Technical[401]</msg>
<status status="PASS" starttime="20240424 20:08:37.976" endtime="20240424 20:08:38.024"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${row_value}</arg>
<arg>Space.3.1 : Technical[401]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240424 20:08:38.024" endtime="20240424 20:08:38.024"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>4</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:38.024" endtime="20240424 20:08:38.059"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:38.059" endtime="20240424 20:08:38.101"/>
</kw>
<status status="PASS" starttime="20240424 20:08:37.328" endtime="20240424 20:08:38.101"/>
</kw>
<kw name="Then Verify Ground Floor Federated Floor Custom Relation" library="custom_relation_view_step_definitions">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:38.101" endtime="20240424 20:08:38.207"/>
</kw>
<kw name="Select From Combo Box" library="SwingRobot">
<arg>0</arg>
<arg>Federated Floors</arg>
<doc>Selects an item from a combobox.
The item selection is verified by default and can be disabled using the optional ``verifySelection`` parameter with any value.</doc>
<status status="PASS" starttime="20240424 20:08:38.207" endtime="20240424 20:08:38.776"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:08:38.780" level="INFO">${row_count} = 180</msg>
<status status="PASS" starttime="20240424 20:08:38.776" endtime="20240424 20:08:38.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>180</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:08:38.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:08:38.780" endtime="20240424 20:08:38.780"/>
</kw>
<status status="PASS" starttime="20240424 20:08:38.101" endtime="20240424 20:08:38.780"/>
</kw>
<kw name="Then Verify First Floor Federated Floor Custom Relation" library="custom_relation_view_step_definitions">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:38.780" endtime="20240424 20:08:38.807"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:08:38.841" level="INFO">${row_count} = 158</msg>
<status status="PASS" starttime="20240424 20:08:38.807" endtime="20240424 20:08:38.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>158</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:08:38.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:08:38.841" endtime="20240424 20:08:38.841"/>
</kw>
<status status="PASS" starttime="20240424 20:08:38.780" endtime="20240424 20:08:38.841"/>
</kw>
<kw name="Then Verify Second Floor Federated Floor Custom Relation" library="custom_relation_view_step_definitions">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:38.841" endtime="20240424 20:08:38.872"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:08:38.930" level="INFO">${row_count} = 186</msg>
<status status="PASS" starttime="20240424 20:08:38.872" endtime="20240424 20:08:38.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>186</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:08:38.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:08:38.930" endtime="20240424 20:08:38.930"/>
</kw>
<status status="PASS" starttime="20240424 20:08:38.841" endtime="20240424 20:08:38.930"/>
</kw>
<kw name="Then Verify Roof Federated Floor Custom Relation" library="custom_relation_view_step_definitions">
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:38.930" endtime="20240424 20:08:38.954"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:08:38.988" level="INFO">${row_count} = 26</msg>
<status status="PASS" starttime="20240424 20:08:38.954" endtime="20240424 20:08:38.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>26</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:08:38.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:08:38.988" endtime="20240424 20:08:38.988"/>
</kw>
<status status="PASS" starttime="20240424 20:08:38.930" endtime="20240424 20:08:38.988"/>
</kw>
<kw name="Then Create Federated Floor Custom Relation" library="custom_relation_view_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:38.988" endtime="20240424 20:08:39.017"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Model Tree_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:39.017" endtime="20240424 20:08:39.023"/>
</kw>
<kw name="Switch to Component Hierarchy" library="ModelTreeResource">
<doc>Opens Class tree in Component hierarchy ModelViewComponentHierarchyPanel</doc>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:39.023" endtime="20240424 20:08:39.037"/>
</kw>
<kw name="Push Toggle Button" library="SwingRobot">
<arg>3</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:08:39.037" endtime="20240424 20:08:39.103"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${select_component_hierarchy}</var>
<arg>Toggle Button Should Be Selected</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Toggle Button Should Be Selected" library="SwingRobot">
<arg>3</arg>
<doc>Fails if toggle button is not selected.</doc>
<status status="PASS" starttime="20240424 20:08:39.103" endtime="20240424 20:08:39.106"/>
</kw>
<msg timestamp="20240424 20:08:39.106" level="INFO">${select_component_hierarchy} = True</msg>
<status status="PASS" starttime="20240424 20:08:39.103" endtime="20240424 20:08:39.106"/>
</kw>
<if>
<branch type="IF" condition="${select_component_hierarchy} == ${False}">
<kw name="Push Toggle Button" library="SwingRobot">
<arg>3</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:08:39.106" endtime="20240424 20:08:39.106"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:08:39.106" endtime="20240424 20:08:39.106"/>
</branch>
<status status="PASS" starttime="20240424 20:08:39.106" endtime="20240424 20:08:39.106"/>
</if>
<status status="PASS" starttime="20240424 20:08:39.023" endtime="20240424 20:08:39.106"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>0</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:39.106" endtime="20240424 20:08:39.134"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<arg>2</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:39.134" endtime="20240424 20:08:39.193"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:39.193" endtime="20240424 20:08:39.232"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${component_name}</var>
<arg>0</arg>
<arg>2</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:08:39.429" level="INFO">${component_name} = Column.0.3</msg>
<status status="PASS" starttime="20240424 20:08:39.232" endtime="20240424 20:08:39.429"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Set to Selection Basket</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:08:39.429" endtime="20240424 20:08:39.447"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>CUSTOM RELATIONS</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:08:39.447" endtime="20240424 20:08:39.448"/>
</kw>
<kw name="Click On Table Cell" library="SwingRobot">
<arg>0</arg>
<arg>1</arg>
<arg>0</arg>
<doc>Clicks on a cell in a table, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:39.448" endtime="20240424 20:08:39.494"/>
</kw>
<kw name="Button Should Be Enabled" library="SwingRobot">
<arg>Relate To</arg>
<doc>Fails if button is disabled.</doc>
<status status="PASS" starttime="20240424 20:08:39.494" endtime="20240424 20:08:39.549"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Relate To</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:08:39.550" endtime="20240424 20:08:39.694"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:08:39.738" level="INFO">${row_count} = 159</msg>
<status status="PASS" starttime="20240424 20:08:39.694" endtime="20240424 20:08:39.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>159</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:08:39.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:08:39.738" endtime="20240424 20:08:39.738"/>
</kw>
<kw name="Uncheck Check Box" library="SwingRobot">
<arg>Automatic</arg>
<doc>Uses current context to search for a checkbox and when found, unchecks it.</doc>
<status status="PASS" starttime="20240424 20:08:39.738" endtime="20240424 20:08:39.789"/>
</kw>
<kw name="Check Check Box" library="SwingRobot">
<arg>1</arg>
<doc>Uses current context to search for a checkbox and when found, checks it.</doc>
<status status="PASS" starttime="20240424 20:08:39.789" endtime="20240424 20:08:39.792"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:08:39.796" level="INFO">${row_count} = 1</msg>
<status status="PASS" starttime="20240424 20:08:39.792" endtime="20240424 20:08:39.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:08:39.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:08:39.796" endtime="20240424 20:08:39.796"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row_value}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:08:39.800" level="INFO">${row_value} = Column.0.3</msg>
<status status="PASS" starttime="20240424 20:08:39.796" endtime="20240424 20:08:39.800"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${row_value}</arg>
<arg>${component_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:08:39.800" endtime="20240424 20:08:39.800"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Restore Basket</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:08:39.800" endtime="20240424 20:08:39.917"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:08:39.953" level="INFO">${row_count} = 0</msg>
<status status="PASS" starttime="20240424 20:08:39.917" endtime="20240424 20:08:39.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:08:39.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:08:39.953" endtime="20240424 20:08:39.953"/>
</kw>
<kw name="Check All Checkboxes" library="SwingRobot">
<doc>Checks all checkboxes in current context.</doc>
<status status="PASS" starttime="20240424 20:08:39.953" endtime="20240424 20:08:40.054"/>
</kw>
<kw name="Get Table Row Count" library="SwingRobot">
<var>${row_count}</var>
<arg>1</arg>
<doc>Returns the number of rows from a table.</doc>
<msg timestamp="20240424 20:08:40.058" level="INFO">${row_count} = 158</msg>
<status status="PASS" starttime="20240424 20:08:40.054" endtime="20240424 20:08:40.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${row_count}</arg>
<arg>158</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240424 20:08:40.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240424 20:08:40.058" endtime="20240424 20:08:40.058"/>
</kw>
<status status="PASS" starttime="20240424 20:08:38.988" endtime="20240424 20:08:40.058"/>
</kw>
<kw name="Then Create Unrelated Custom Relation" library="custom_relation_view_step_definitions">
<kw name="Select From Table Cell Popup Menu" library="SwingRobot">
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<arg>Unrelate</arg>
<doc>Selects an item from a table cell popup.
Separator for items is ``|``.</doc>
<status status="PASS" starttime="20240424 20:08:40.058" endtime="20240424 20:08:40.367"/>
</kw>
<kw name="Uncheck Check Box" library="SwingRobot">
<arg>Automatic</arg>
<doc>Uses current context to search for a checkbox and when found, unchecks it.</doc>
<status status="PASS" starttime="20240424 20:08:40.367" endtime="20240424 20:08:40.404"/>
</kw>
<kw name="Uncheck Check Box" library="SwingRobot">
<arg>Related by User</arg>
<doc>Uses current context to search for a checkbox and when found, unchecks it.</doc>
<status status="PASS" starttime="20240424 20:08:40.405" endtime="20240424 20:08:40.415"/>
</kw>
<kw name="Get Table Cell Value" library="SwingRobot">
<var>${row_value}</var>
<arg>1</arg>
<arg>0</arg>
<arg>0</arg>
<doc>Returns cell's value from a table.</doc>
<msg timestamp="20240424 20:08:40.468" level="INFO">${row_value} = Column.1.13.1</msg>
<status status="PASS" starttime="20240424 20:08:40.415" endtime="20240424 20:08:40.468"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${row_value}</arg>
<arg>Column.1.13.1</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240424 20:08:40.468" endtime="20240424 20:08:40.468"/>
</kw>
<status status="PASS" starttime="20240424 20:08:40.058" endtime="20240424 20:08:40.468"/>
</kw>
<kw name="Then Close Model" library="ModelHandlingResource">
<kw name="Close All Dialogs" library="SwingRobot">
<doc>Closes all the dialogs that are open.</doc>
<msg timestamp="20240424 20:08:40.569" level="INFO">Closed dialog 'CUSTOM RELATIONS'.</msg>
<status status="PASS" starttime="20240424 20:08:40.468" endtime="20240424 20:08:40.569"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:40.569" endtime="20240424 20:08:40.572"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:08:40.572" endtime="20240424 20:08:40.577"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:40.577" endtime="20240424 20:08:40.580"/>
</kw>
<status status="PASS" starttime="20240424 20:08:40.569" endtime="20240424 20:08:40.580"/>
</kw>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:08:40.580" endtime="20240424 20:08:40.729"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${button_close_title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:40.729" endtime="20240424 20:08:40.735"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_modidied_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Save Modified Files</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Fails if the dialog is not open.</doc>
<msg timestamp="20240424 20:08:50.742" level="FAIL">Dialog 'Save Modified Files' is not open</msg>
<status status="FAIL" starttime="20240424 20:08:40.735" endtime="20240424 20:08:50.742"/>
</kw>
<msg timestamp="20240424 20:08:50.742" level="INFO">${check_if_modidied_asked} = False</msg>
<status status="PASS" starttime="20240424 20:08:40.735" endtime="20240424 20:08:50.742"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_if_save_asked}</var>
<arg>Dialog Should Be Open</arg>
<arg>Select</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dialog Should Be Open" library="SwingRobot">
<arg>Select</arg>
<doc>Fails if the dialog is not open.</doc>
<status status="PASS" starttime="20240424 20:08:50.742" endtime="20240424 20:08:50.756"/>
</kw>
<msg timestamp="20240424 20:08:50.756" level="INFO">${check_if_save_asked} = True</msg>
<status status="PASS" starttime="20240424 20:08:50.742" endtime="20240424 20:08:50.756"/>
</kw>
<if>
<branch type="IF" condition="${check_if_save_asked}">
<kw name="Close the Close Dialog Without Saving" library="ModelHandlingResource">
<kw name="Select Dialog" library="SwingRobot">
<arg>Select</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:08:50.756" endtime="20240424 20:08:50.756"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>No</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:08:50.756" endtime="20240424 20:08:50.772"/>
</kw>
<status status="PASS" starttime="20240424 20:08:50.756" endtime="20240424 20:08:50.772"/>
</kw>
<status status="PASS" starttime="20240424 20:08:50.756" endtime="20240424 20:08:50.772"/>
</branch>
<status status="PASS" starttime="20240424 20:08:50.756" endtime="20240424 20:08:50.772"/>
</if>
<if>
<branch type="IF" condition="${check_if_modidied_asked}">
<kw name="Select Dialog" library="SwingRobot">
<arg>Save Modified Files</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="NOT RUN" starttime="20240424 20:08:50.772" endtime="20240424 20:08:50.776"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Close All</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="NOT RUN" starttime="20240424 20:08:50.777" endtime="20240424 20:08:50.777"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:08:50.772" endtime="20240424 20:08:50.777"/>
</branch>
<status status="PASS" starttime="20240424 20:08:50.772" endtime="20240424 20:08:50.777"/>
</if>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:50.777" endtime="20240424 20:08:50.940"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>3</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:08:50.944" endtime="20240424 20:08:50.946"/>
</kw>
<status status="PASS" starttime="20240424 20:08:50.942" endtime="20240424 20:08:50.946"/>
</kw>
<status status="PASS" starttime="20240424 20:08:40.468" endtime="20240424 20:08:50.946"/>
</kw>
<status status="PASS" starttime="20240424 20:08:27.843" endtime="20240424 20:08:50.946"/>
</test>
<doc>Verify Custom Relation View</doc>
<meta name="Feature">Custom Relation View</meta>
<meta name="Generated by">_gherkin2robotframework on 2023-10-19T11:53:14.522413_</meta>
<status status="PASS" starttime="20240424 20:08:27.780" endtime="20240424 20:08:50.946"/>
</suite>
<suite id="s1-s23" name="24 Layout" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\24_layout.robot">
<test id="s1-s23-t1" name="Test Layout" line="12">
<kw name="Background">
<doc>Launch Solibri And Login To SSC</doc>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 20:08:50.997" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 20:08:50.997" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 20:08:50 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 20:08:50.978" endtime="20240424 20:08:50.997"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 20:08:50.997" endtime="20240424 20:08:50.997"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:50.997" endtime="20240424 20:08:50.997"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 20:08:50.997" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 20:08:50.997" endtime="20240424 20:08:50.997"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 20:08:50.997" endtime="20240424 20:08:50.997"/>
</kw>
<status status="PASS" starttime="20240424 20:08:50.997" endtime="20240424 20:08:50.997"/>
</kw>
<status status="PASS" starttime="20240424 20:08:50.978" endtime="20240424 20:08:50.997"/>
</kw>
<kw name="When User Logs In To SSC" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Logged in to SSC</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 20:08:50.997" endtime="20240424 20:08:50.997"/>
</kw>
<status status="PASS" starttime="20240424 20:08:50.997" endtime="20240424 20:08:50.997"/>
</kw>
<kw name="Then Solibri Office Is Opened" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Solibri Office Is Opened</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 20:08:50.997" endtime="20240424 20:08:50.997"/>
</kw>
<status status="PASS" starttime="20240424 20:08:50.997" endtime="20240424 20:08:50.997"/>
</kw>
<status status="PASS" starttime="20240424 20:08:50.978" endtime="20240424 20:08:50.997"/>
</kw>
<kw name="Then Verify Default Layouts" library="layout_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:50.997" endtime="20240424 20:08:50.997"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:50.997" endtime="20240424 20:08:50.997"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:08:50.997" endtime="20240424 20:08:51.012"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:51.012" endtime="20240424 20:08:51.012"/>
</kw>
<status status="PASS" starttime="20240424 20:08:50.997" endtime="20240424 20:08:51.012"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${MODEL_TREE_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:51.012" endtime="20240424 20:08:51.132"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:51.132" endtime="20240424 20:08:51.221"/>
</kw>
<status status="PASS" starttime="20240424 20:08:51.012" endtime="20240424 20:08:51.221"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${INFO_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:51.221" endtime="20240424 20:08:51.242"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:51.242" endtime="20240424 20:08:51.277"/>
</kw>
<status status="PASS" starttime="20240424 20:08:51.221" endtime="20240424 20:08:51.277"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>3DPanel</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:51.277" endtime="20240424 20:08:51.316"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:51.316" endtime="20240424 20:08:51.316"/>
</kw>
<status status="PASS" starttime="20240424 20:08:51.277" endtime="20240424 20:08:51.316"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:51.316" endtime="20240424 20:08:51.336"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:08:51.336" endtime="20240424 20:08:51.336"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:51.336" endtime="20240424 20:08:51.376"/>
</kw>
<status status="PASS" starttime="20240424 20:08:51.316" endtime="20240424 20:08:51.376"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${CHECKING_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:51.376" endtime="20240424 20:08:51.380"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:51.380" endtime="20240424 20:08:51.531"/>
</kw>
<status status="PASS" starttime="20240424 20:08:51.376" endtime="20240424 20:08:51.538"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${RESULT_SUMMARY_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:51.538" endtime="20240424 20:08:51.538"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:51.538" endtime="20240424 20:08:51.545"/>
</kw>
<status status="PASS" starttime="20240424 20:08:51.538" endtime="20240424 20:08:51.545"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${RESULT_SUMMARY_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:51.545" endtime="20240424 20:08:51.545"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:51.545" endtime="20240424 20:08:51.550"/>
</kw>
<status status="PASS" starttime="20240424 20:08:51.545" endtime="20240424 20:08:51.550"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${INFO_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:51.550" endtime="20240424 20:08:51.550"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:51.550" endtime="20240424 20:08:51.555"/>
</kw>
<status status="PASS" starttime="20240424 20:08:51.550" endtime="20240424 20:08:51.555"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>3DPanel</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:51.555" endtime="20240424 20:08:51.557"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:51.557" endtime="20240424 20:08:51.560"/>
</kw>
<status status="PASS" starttime="20240424 20:08:51.555" endtime="20240424 20:08:51.560"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${COMMUNICATION_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:51.560" endtime="20240424 20:08:51.560"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:08:51.560" endtime="20240424 20:08:51.560"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:51.560" endtime="20240424 20:08:51.696"/>
</kw>
<status status="PASS" starttime="20240424 20:08:51.560" endtime="20240424 20:08:51.696"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${PRESENTATION_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:51.696" endtime="20240424 20:08:51.893"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:51.893" endtime="20240424 20:08:51.904"/>
</kw>
<status status="PASS" starttime="20240424 20:08:51.696" endtime="20240424 20:08:51.904"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${ISSUES_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:51.904" endtime="20240424 20:08:52.000"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:52.000" endtime="20240424 20:08:52.012"/>
</kw>
<status status="PASS" starttime="20240424 20:08:51.904" endtime="20240424 20:08:52.012"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${ISSUE_DETAIL_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.012" endtime="20240424 20:08:52.022"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:52.022" endtime="20240424 20:08:52.033"/>
</kw>
<status status="PASS" starttime="20240424 20:08:52.012" endtime="20240424 20:08:52.033"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${ISSUE_SORTER_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.033" endtime="20240424 20:08:52.044"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:52.044" endtime="20240424 20:08:52.067"/>
</kw>
<status status="PASS" starttime="20240424 20:08:52.033" endtime="20240424 20:08:52.067"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>3DPanel</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.067" endtime="20240424 20:08:52.158"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:52.158" endtime="20240424 20:08:52.200"/>
</kw>
<status status="PASS" starttime="20240424 20:08:52.067" endtime="20240424 20:08:52.201"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${ITO_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.202" endtime="20240424 20:08:52.213"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:08:52.213" endtime="20240424 20:08:52.217"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.217" endtime="20240424 20:08:52.227"/>
</kw>
<status status="PASS" starttime="20240424 20:08:52.201" endtime="20240424 20:08:52.227"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${MODEL_TREE_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.228" endtime="20240424 20:08:52.347"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:52.348" endtime="20240424 20:08:52.360"/>
</kw>
<status status="PASS" starttime="20240424 20:08:52.228" endtime="20240424 20:08:52.360"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${CLASSIFICATION_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.361" endtime="20240424 20:08:52.364"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:52.364" endtime="20240424 20:08:52.365"/>
</kw>
<status status="PASS" starttime="20240424 20:08:52.360" endtime="20240424 20:08:52.365"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${SELECTION_BASKET_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.366" endtime="20240424 20:08:52.368"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:52.368" endtime="20240424 20:08:52.369"/>
</kw>
<status status="PASS" starttime="20240424 20:08:52.366" endtime="20240424 20:08:52.369"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${INFO_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.370" endtime="20240424 20:08:52.372"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:52.372" endtime="20240424 20:08:52.374"/>
</kw>
<status status="PASS" starttime="20240424 20:08:52.369" endtime="20240424 20:08:52.374"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${ITO_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.374" endtime="20240424 20:08:52.376"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:52.376" endtime="20240424 20:08:52.378"/>
</kw>
<status status="PASS" starttime="20240424 20:08:52.374" endtime="20240424 20:08:52.378"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>3DPanel</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.378" endtime="20240424 20:08:52.380"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:52.380" endtime="20240424 20:08:52.382"/>
</kw>
<status status="PASS" starttime="20240424 20:08:52.378" endtime="20240424 20:08:52.382"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${BCF_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.383" endtime="20240424 20:08:52.385"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:08:52.385" endtime="20240424 20:08:52.387"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.388" endtime="20240424 20:08:52.390"/>
</kw>
<status status="PASS" starttime="20240424 20:08:52.383" endtime="20240424 20:08:52.390"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${BCF_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.391" endtime="20240424 20:08:52.393"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:52.393" endtime="20240424 20:08:52.543"/>
</kw>
<status status="PASS" starttime="20240424 20:08:52.390" endtime="20240424 20:08:52.544"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${LIVE_ISSUE_DETAILS_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.544" endtime="20240424 20:08:52.547"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:52.547" endtime="20240424 20:08:52.549"/>
</kw>
<status status="PASS" starttime="20240424 20:08:52.544" endtime="20240424 20:08:52.550"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>3DPanel</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.550" endtime="20240424 20:08:52.552"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:52.552" endtime="20240424 20:08:52.554"/>
</kw>
<status status="PASS" starttime="20240424 20:08:52.550" endtime="20240424 20:08:52.554"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${SCORE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.554" endtime="20240424 20:08:52.557"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:08:52.557" endtime="20240424 20:08:52.559"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.560" endtime="20240424 20:08:52.562"/>
</kw>
<status status="PASS" starttime="20240424 20:08:52.554" endtime="20240424 20:08:52.562"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${CHECKING_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.563" endtime="20240424 20:08:52.566"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:52.567" endtime="20240424 20:08:52.690"/>
</kw>
<status status="PASS" starttime="20240424 20:08:52.562" endtime="20240424 20:08:52.690"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${SCORE_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.691" endtime="20240424 20:08:52.693"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:52.694" endtime="20240424 20:08:52.695"/>
</kw>
<status status="PASS" starttime="20240424 20:08:52.690" endtime="20240424 20:08:52.696"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>3DPanel</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.696" endtime="20240424 20:08:52.698"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:08:52.698" endtime="20240424 20:08:52.700"/>
</kw>
<status status="PASS" starttime="20240424 20:08:52.696" endtime="20240424 20:08:52.700"/>
</kw>
<status status="PASS" starttime="20240424 20:08:50.997" endtime="20240424 20:08:52.700"/>
</kw>
<kw name="And Create Layout" library="layout_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.700" endtime="20240424 20:08:52.702"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>AddLayoutButton</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:08:52.702" endtime="20240424 20:08:52.705"/>
</kw>
<kw name="Component Should Be Visible" library="SwingRobot">
<arg>AddLayoutButton</arg>
<doc>Checks that component is visible.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:08:52.705" endtime="20240424 20:08:52.707"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>New Layout</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:08:52.707" endtime="20240424 20:08:52.815"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>test</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 20:08:52.815" endtime="20240424 20:08:52.832"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:08:52.833" endtime="20240424 20:08:52.857"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>TEST</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.859" endtime="20240424 20:08:52.862"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:08:52.862" endtime="20240424 20:08:52.865"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:52.865" endtime="20240424 20:08:52.868"/>
</kw>
<status status="PASS" starttime="20240424 20:08:52.858" endtime="20240424 20:08:52.868"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>VIEWS</arg>
<arg>MODEL TREE</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:08:52.868" endtime="20240424 20:08:53.512"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240424 20:08:54.513" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240424 20:08:53.512" endtime="20240424 20:08:54.513"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>VIEWS</arg>
<arg>CHECKING</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:08:54.513" endtime="20240424 20:08:55.096"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>CHECKING</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:08:55.096" endtime="20240424 20:08:55.212"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>DockingMenuButton</arg>
<arg>Dock</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:08:55.213" endtime="20240424 20:08:55.792"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240424 20:08:56.804" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240424 20:08:55.792" endtime="20240424 20:08:56.804"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:56.804" endtime="20240424 20:08:56.804"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>VIEWS</arg>
<arg>INFO</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:08:56.804" endtime="20240424 20:08:57.420"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>INFO</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:08:57.420" endtime="20240424 20:08:57.545"/>
</kw>
<kw name="Select From Popup Menu" library="SwingRobot">
<arg>DockingMenuButton</arg>
<arg>Dock</arg>
<doc>Selects an item from the components context popup menu.
*N.B.* Regular expression can be used to select the dialog by prefixing the identifier with ``regexp=``.
See more details in `Regular expressions` section.</doc>
<status status="PASS" starttime="20240424 20:08:57.545" endtime="20240424 20:08:58.152"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240424 20:08:59.164" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240424 20:08:58.152" endtime="20240424 20:08:59.164"/>
</kw>
<status status="PASS" starttime="20240424 20:08:52.700" endtime="20240424 20:08:59.164"/>
</kw>
<kw name="When Save Layout" library="layout_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:59.164" endtime="20240424 20:08:59.166"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:59.166" endtime="20240424 20:08:59.182"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:08:59.182" endtime="20240424 20:08:59.182"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:08:59.182" endtime="20240424 20:08:59.310"/>
</kw>
<status status="PASS" starttime="20240424 20:08:59.166" endtime="20240424 20:08:59.310"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:08:59.310" endtime="20240424 20:08:59.663"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Layouts</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:08:59.663" endtime="20240424 20:08:59.666"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Layouts</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:08:59.666" endtime="20240424 20:08:59.914"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Save As...</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:08:59.914" endtime="20240424 20:09:01.198"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Save As</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:09:01.198" endtime="20240424 20:09:01.204"/>
</kw>
<kw name="Type Into Text Field" library="SwingRobot">
<arg>0</arg>
<arg>TEST</arg>
<doc>Types text into a text component (e.g. text field, password field, text area).
Same as `Insert Into Textfield` but sends real key events when setting text field contents.
Useful if application expects real keyboard events instead of only setting the text of the textfield.</doc>
<status status="PASS" starttime="20240424 20:09:01.204" endtime="20240424 20:09:01.228"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Save As</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:09:01.228" endtime="20240424 20:09:01.247"/>
</kw>
<status status="PASS" starttime="20240424 20:08:59.164" endtime="20240424 20:09:01.247"/>
</kw>
<kw name="And Remove Layout" library="layout_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:01.247" endtime="20240424 20:09:01.247"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>TEST</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:01.247" endtime="20240424 20:09:01.253"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:09:01.253" endtime="20240424 20:09:01.253"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:01.256" endtime="20240424 20:09:01.357"/>
</kw>
<status status="PASS" starttime="20240424 20:09:01.247" endtime="20240424 20:09:01.357"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Select From Popup Menu</arg>
<arg>TEST</arg>
<arg>Remove Layout</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:09:01.357" endtime="20240424 20:09:01.361"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Remove Layout</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:09:01.361" endtime="20240424 20:09:02.157"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:09:02.157" endtime="20240424 20:09:02.212"/>
</kw>
<status status="PASS" starttime="20240424 20:09:01.247" endtime="20240424 20:09:02.212"/>
</kw>
<kw name="And Restart Solibri Again" library="settings_step_definitions">
<kw name="Restart Solibri" library="CommonUtils">
<arg>${SOLIBRI_HOME}</arg>
<doc>Restarts Solibri</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>message=Solibri directory is ${SOLIBRI_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 20:09:02.212" endtime="20240424 20:09:02.212"/>
</kw>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 20:09:02.212" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 20:09:02.212" endtime="20240424 20:09:02.212"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>condition=${is_running}</arg>
<arg>msg=Solibri is not running</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240424 20:09:02.212" endtime="20240424 20:09:02.212"/>
</kw>
<kw name="Close Solibri" library="SolibriLibrary">
<msg timestamp="20240424 20:09:02.212" level="INFO">The SMC application is still alive and need to be killed! 

The SMC application had to be killed from CMD!</msg>
<status status="PASS" starttime="20240424 20:09:02.212" endtime="20240424 20:09:02.212"/>
</kw>
<kw name="Wait For Process To Close" library="CommonUtils">
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<arg>time_out=${timeout_for_loops}</arg>
<doc>Waits for process to close</doc>
<kw name="Get Time" library="BuiltIn">
<var>${start_time}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 20:09:02.212" level="INFO">${start_time} = 2024-04-24 20:09:02</msg>
<status status="PASS" starttime="20240424 20:09:02.212" endtime="20240424 20:09:02.212"/>
</kw>
<while condition="${True}">
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 20:09:02.228" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 20:09:02.212" endtime="20240424 20:09:02.228"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240424 20:09:03.243" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240424 20:09:02.228" endtime="20240424 20:09:03.243"/>
</kw>
<status status="PASS" starttime="20240424 20:09:02.228" endtime="20240424 20:09:03.243"/>
</branch>
<status status="PASS" starttime="20240424 20:09:02.228" endtime="20240424 20:09:03.243"/>
</if>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Exit For Loop</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 20:09:03.243" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<status status="PASS" starttime="20240424 20:09:03.243" endtime="20240424 20:09:03.243"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 20:09:03.243" level="INFO">${now} = 2024-04-24 20:09:03</msg>
<status status="PASS" starttime="20240424 20:09:03.243" endtime="20240424 20:09:03.243"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20240424 20:09:03.243" level="INFO">${elapsed_time} = 1.0</msg>
<status status="PASS" starttime="20240424 20:09:03.243" endtime="20240424 20:09:03.243"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not close in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 20:09:03.243" endtime="20240424 20:09:03.243"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 20:09:03.243" endtime="20240424 20:09:03.243"/>
</break>
<status status="NOT RUN" starttime="20240424 20:09:03.243" endtime="20240424 20:09:03.243"/>
</branch>
<status status="PASS" starttime="20240424 20:09:03.243" endtime="20240424 20:09:03.243"/>
</if>
<status status="PASS" starttime="20240424 20:09:02.212" endtime="20240424 20:09:03.243"/>
</iter>
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 20:09:03.243" level="INFO">${is_running} = None</msg>
<status status="PASS" starttime="20240424 20:09:03.243" endtime="20240424 20:09:03.243"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240424 20:09:03.243" endtime="20240424 20:09:03.243"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:09:03.243" endtime="20240424 20:09:03.243"/>
</branch>
<status status="PASS" starttime="20240424 20:09:03.243" endtime="20240424 20:09:03.243"/>
</if>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Exit For Loop</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 20:09:03.243" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing FOR loop.</doc>
<msg timestamp="20240424 20:09:03.243" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20240424 20:09:03.243" endtime="20240424 20:09:03.243"/>
</kw>
<status status="PASS" starttime="20240424 20:09:03.243" endtime="20240424 20:09:03.243"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<status status="NOT RUN" starttime="20240424 20:09:03.243" endtime="20240424 20:09:03.243"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<status status="NOT RUN" starttime="20240424 20:09:03.243" endtime="20240424 20:09:03.243"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not close in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 20:09:03.243" endtime="20240424 20:09:03.243"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 20:09:03.243" endtime="20240424 20:09:03.243"/>
</break>
<status status="NOT RUN" starttime="20240424 20:09:03.243" endtime="20240424 20:09:03.243"/>
</branch>
<status status="NOT RUN" starttime="20240424 20:09:03.243" endtime="20240424 20:09:03.243"/>
</if>
<status status="PASS" starttime="20240424 20:09:03.243" endtime="20240424 20:09:03.243"/>
</iter>
<status status="PASS" starttime="20240424 20:09:02.212" endtime="20240424 20:09:03.243"/>
</while>
<status status="PASS" starttime="20240424 20:09:02.212" endtime="20240424 20:09:03.243"/>
</kw>
<kw name="Open Solibri" library="SolibriLibrary">
<arg>${SOLIBRI_DIR}</arg>
<msg timestamp="20240424 20:09:03.243" level="INFO">Solibri Installation folder: D:\a\desktop-main\desktop-main\temp\installers\temporary-installation-folder\
Solibri Executable: D:\a\desktop-main\desktop-main\temp\installers\temporary-installation-folder\temporary-installation-folder\Solibri.exe</msg>
<status status="PASS" starttime="20240424 20:09:03.243" endtime="20240424 20:09:03.243"/>
</kw>
<kw name="Wait For Process To Open" library="CommonUtils">
<arg>process_name=${SOLIBRI_PROCESS_NAME}</arg>
<arg>time_out=${timeout_for_loops}</arg>
<doc>Waits for process to open</doc>
<kw name="Get Time" library="BuiltIn">
<var>${start_time}</var>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20240424 20:09:03.258" level="INFO">${start_time} = 2024-04-24 20:09:03</msg>
<status status="PASS" starttime="20240424 20:09:03.258" endtime="20240424 20:09:03.258"/>
</kw>
<while condition="${True}">
<iter>
<kw name="Is Process Running" library="SolibriLibrary">
<var>${is_running}</var>
<arg>process_name=${process_name}</arg>
<doc>Check if there is any running process that contains the given name processName.</doc>
<msg timestamp="20240424 20:09:03.258" level="INFO">${is_running} = True</msg>
<status status="PASS" starttime="20240424 20:09:03.258" endtime="20240424 20:09:03.258"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${is_running}</arg>
<arg>Sleep</arg>
<arg>1</arg>
<doc>*DEPRECATED since RF 5.0. Use Native IF/ELSE or `Run Keyword If` instead.*</doc>
<msg timestamp="20240424 20:09:03.258" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<status status="PASS" starttime="20240424 20:09:03.258" endtime="20240424 20:09:03.258"/>
</kw>
<if>
<branch type="IF" condition="${is_running}">
<break>
<status status="PASS" starttime="20240424 20:09:03.258" endtime="20240424 20:09:03.258"/>
</break>
<status status="PASS" starttime="20240424 20:09:03.258" endtime="20240424 20:09:03.258"/>
</branch>
<status status="PASS" starttime="20240424 20:09:03.258" endtime="20240424 20:09:03.258"/>
</if>
<kw name="Get Time" library="BuiltIn">
<var>${now}</var>
<doc>Returns the given time in the requested format.</doc>
<status status="NOT RUN" starttime="20240424 20:09:03.258" endtime="20240424 20:09:03.258"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${elapsed_time}</var>
<arg>${now}</arg>
<arg>${start_time}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<status status="NOT RUN" starttime="20240424 20:09:03.258" endtime="20240424 20:09:03.258"/>
</kw>
<if>
<branch type="IF" condition="${elapsed_time} &gt;= ${time_out}">
<kw name="Fail" library="BuiltIn">
<arg>Solibri did not open in</arg>
<arg>${time_out} seconds</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240424 20:09:03.258" endtime="20240424 20:09:03.258"/>
</kw>
<break>
<status status="NOT RUN" starttime="20240424 20:09:03.258" endtime="20240424 20:09:03.258"/>
</break>
<status status="NOT RUN" starttime="20240424 20:09:03.258" endtime="20240424 20:09:03.258"/>
</branch>
<status status="NOT RUN" starttime="20240424 20:09:03.258" endtime="20240424 20:09:03.258"/>
</if>
<status status="PASS" starttime="20240424 20:09:03.258" endtime="20240424 20:09:03.258"/>
</iter>
<status status="PASS" starttime="20240424 20:09:03.258" endtime="20240424 20:09:03.258"/>
</while>
<status status="PASS" starttime="20240424 20:09:03.243" endtime="20240424 20:09:03.258"/>
</kw>
<kw name="Wait For Solibri Window to Appear" library="CommonUtils">
<arg>Solibri Office</arg>
<doc>Wait until Solibri is started</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>18</arg>
<arg>18</arg>
<arg>Window Should Be Open</arg>
<arg>${solibri_office}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>18</arg>
<arg>18</arg>
<arg>Window Should Be Open</arg>
<arg>${solibri_office}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Window Should Be Open" library="SwingRobot">
<arg>${solibri_office}</arg>
<doc>Fails if the window is not open.</doc>
<msg timestamp="20240424 20:09:05.274" level="FAIL">Connection to remote server broken: [WinError 10061] No connection could be made because the target machine actively refused it</msg>
<status status="FAIL" starttime="20240424 20:09:03.258" endtime="20240424 20:09:05.274"/>
</kw>
<kw name="Window Should Be Open" library="SwingRobot">
<arg>${solibri_office}</arg>
<doc>Fails if the window is not open.</doc>
<status status="PASS" starttime="20240424 20:09:23.827" endtime="20240424 20:09:25.345"/>
</kw>
<status status="PASS" starttime="20240424 20:09:03.258" endtime="20240424 20:09:25.345"/>
</kw>
<msg timestamp="20240424 20:09:25.345" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240424 20:09:03.258" endtime="20240424 20:09:25.345"/>
</kw>
<status status="PASS" starttime="20240424 20:09:03.258" endtime="20240424 20:09:25.345"/>
</kw>
<status status="PASS" starttime="20240424 20:09:02.212" endtime="20240424 20:09:25.345"/>
</kw>
<status status="PASS" starttime="20240424 20:09:02.212" endtime="20240424 20:09:25.345"/>
</kw>
<kw name="And Open Saved Layout" library="layout_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:25.345" endtime="20240424 20:09:25.423"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:25.423" endtime="20240424 20:09:25.593"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:09:25.593" endtime="20240424 20:09:25.606"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:25.606" endtime="20240424 20:09:25.646"/>
</kw>
<status status="PASS" starttime="20240424 20:09:25.423" endtime="20240424 20:09:25.646"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Label Should Exist</arg>
<arg>${Exit_Title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Exist" library="SwingRobot">
<arg>${Exit_Title}</arg>
<doc>Fails if label does not exist within current context.</doc>
<status status="PASS" starttime="20240424 20:09:25.660" endtime="20240424 20:09:26.154"/>
</kw>
<status status="PASS" starttime="20240424 20:09:25.660" endtime="20240424 20:09:26.155"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<msg timestamp="20240424 20:09:28.392" level="INFO">2024-04-24 20:09:27.985+0000 [Thread-17] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8082 (http)
2024-04-24 20:09:28.001+0000 [Thread-17] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2024-04-24 20:09:28.001+0000 [Thread-17] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-04-24 20:09:28.001+0000 [Thread-17] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]</msg>
<status status="PASS" starttime="20240424 20:09:26.155" endtime="20240424 20:09:28.392"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Layouts</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:09:28.392" endtime="20240424 20:09:28.448"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Layouts</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<msg timestamp="20240424 20:09:29.040" level="INFO">2024-04-24 20:09:28.696+0000 [Thread-20] ERROR c.s.s.p.a.AnalyticsPlugin - Analytics plugin not started.
revulytics.DesktopUsageMetricsException: Revulytics proxy setting failed
	at revulytics.RevulyticsConnection.a(Unknown Source)
	at revulytics.RevulyticsConnection.connect(Unknown Source)
	at revulytics.RevulyticsConnection.&lt;init&gt;(Unknown Source)
	at com.solibri.saf.plugins.analyticsplugin.AnalyticsPlugin.start(Unknown Source)
	at com.solibri.modelchecker.core.ModelChecker.a(Unknown Source)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-04-24 20:09:28.962+0000 [Thread-17] INFO  o.a.c.c.C.[.[.[/solibri/v1] - Initializing Spring embedded WebApplicationContext
2024-04-24 20:09:28.962+0000 [Thread-17] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5669 ms</msg>
<status status="PASS" starttime="20240424 20:09:28.448" endtime="20240424 20:09:29.040"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Open...</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<msg timestamp="20240424 20:09:32.357" level="INFO">2024-04-24 20:09:31.294+0000 [Thread-17] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2024-04-24 20:09:31.341+0000 [Thread-17] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8082 (http) with context path '/solibri/v1'
2024-04-24 20:09:31.356+0000 [Thread-17] INFO  o.s.boot.SpringApplication - Started application in 10.129 seconds (process running for 28.069)</msg>
<status status="PASS" starttime="20240424 20:09:29.040" endtime="20240424 20:09:32.357"/>
</kw>
<kw name="Choose From File Chooser" library="SwingRobot">
<arg>Test.layout</arg>
<doc>Chooses from a filechooser by pushing the approve button.
An optional file name can be provided, which is inserted to the file name textfield.
Expects the file chooser to be open.</doc>
<status status="PASS" starttime="20240424 20:09:32.357" endtime="20240424 20:09:32.727"/>
</kw>
<status status="PASS" starttime="20240424 20:09:25.345" endtime="20240424 20:09:32.727"/>
</kw>
<kw name="Then Verify Saved Layout" library="layout_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:32.727" endtime="20240424 20:09:32.732"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>TEST</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:32.732" endtime="20240424 20:09:32.743"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:09:32.743" endtime="20240424 20:09:32.780"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:32.780" endtime="20240424 20:09:32.808"/>
</kw>
<status status="PASS" starttime="20240424 20:09:32.732" endtime="20240424 20:09:32.808"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${MODEL_TREE_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:32.823" endtime="20240424 20:09:32.842"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:32.842" endtime="20240424 20:09:33.234"/>
</kw>
<status status="PASS" starttime="20240424 20:09:32.808" endtime="20240424 20:09:33.234"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${CHECKING_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:33.234" endtime="20240424 20:09:33.248"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:33.262" endtime="20240424 20:09:33.268"/>
</kw>
<status status="PASS" starttime="20240424 20:09:33.234" endtime="20240424 20:09:33.268"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${INFO_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:33.268" endtime="20240424 20:09:33.292"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:33.292" endtime="20240424 20:09:33.295"/>
</kw>
<status status="PASS" starttime="20240424 20:09:33.268" endtime="20240424 20:09:33.295"/>
</kw>
<status status="PASS" starttime="20240424 20:09:32.727" endtime="20240424 20:09:33.295"/>
</kw>
<kw name="When Restore Layout" library="layout_step_definitions">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:33.295" endtime="20240424 20:09:33.315"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:09:33.315" endtime="20240424 20:09:33.349"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:33.349" endtime="20240424 20:09:33.372"/>
</kw>
<status status="PASS" starttime="20240424 20:09:33.295" endtime="20240424 20:09:33.372"/>
</kw>
<kw name="Click On Component" library="SwingRobot">
<arg>${Button_Settings_Title}</arg>
<doc>Clicks on a component, optionally using click count, a specific mouse button and keyboard modifiers.</doc>
<status status="PASS" starttime="20240424 20:09:33.372" endtime="20240424 20:09:34.121"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>Layouts</arg>
<arg>1</arg>
<arg>BUTTON1_DOWN_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:09:34.121" endtime="20240424 20:09:34.160"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Layouts</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:09:34.160" endtime="20240424 20:09:34.237"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>Restore</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:09:34.237" endtime="20240424 20:09:34.313"/>
</kw>
<kw name="Select Dialog" library="SwingRobot">
<arg>Restore</arg>
<doc>Selects a dialog as current context and sets focus to it.</doc>
<status status="PASS" starttime="20240424 20:09:34.313" endtime="20240424 20:09:34.317"/>
</kw>
<kw name="Push Button" library="SwingRobot">
<arg>OK</arg>
<doc>Uses current context to search for a button and when found, pushes it.</doc>
<status status="PASS" starttime="20240424 20:09:34.317" endtime="20240424 20:09:34.823"/>
</kw>
<status status="PASS" starttime="20240424 20:09:33.295" endtime="20240424 20:09:34.823"/>
</kw>
<kw name="Then Verify Default Layouts" library="layout_step_definitions">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:34.823" endtime="20240424 20:09:34.829"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:34.829" endtime="20240424 20:09:34.860"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:09:34.860" endtime="20240424 20:09:34.876"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:34.876" endtime="20240424 20:09:34.916"/>
</kw>
<status status="PASS" starttime="20240424 20:09:34.829" endtime="20240424 20:09:34.916"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${MODEL_TREE_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:34.916" endtime="20240424 20:09:34.945"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:34.945" endtime="20240424 20:09:35.173"/>
</kw>
<status status="PASS" starttime="20240424 20:09:34.916" endtime="20240424 20:09:35.173"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${INFO_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:35.173" endtime="20240424 20:09:35.176"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:35.176" endtime="20240424 20:09:35.183"/>
</kw>
<status status="PASS" starttime="20240424 20:09:35.173" endtime="20240424 20:09:35.183"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>3DPanel</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:35.183" endtime="20240424 20:09:35.183"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:35.183" endtime="20240424 20:09:35.183"/>
</kw>
<status status="PASS" starttime="20240424 20:09:35.183" endtime="20240424 20:09:35.183"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:35.183" endtime="20240424 20:09:35.183"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:09:35.183" endtime="20240424 20:09:35.198"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:35.198" endtime="20240424 20:09:35.238"/>
</kw>
<status status="PASS" starttime="20240424 20:09:35.183" endtime="20240424 20:09:35.238"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${CHECKING_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:35.238" endtime="20240424 20:09:35.514"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:35.514" endtime="20240424 20:09:35.517"/>
</kw>
<status status="PASS" starttime="20240424 20:09:35.238" endtime="20240424 20:09:35.517"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${RESULT_SUMMARY_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:35.517" endtime="20240424 20:09:35.523"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:35.523" endtime="20240424 20:09:35.523"/>
</kw>
<status status="PASS" starttime="20240424 20:09:35.517" endtime="20240424 20:09:35.523"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${RESULT_SUMMARY_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:35.523" endtime="20240424 20:09:35.563"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:35.563" endtime="20240424 20:09:35.568"/>
</kw>
<status status="PASS" starttime="20240424 20:09:35.523" endtime="20240424 20:09:35.568"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${INFO_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:35.568" endtime="20240424 20:09:35.640"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:35.640" endtime="20240424 20:09:35.674"/>
</kw>
<status status="PASS" starttime="20240424 20:09:35.568" endtime="20240424 20:09:35.674"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>3DPanel</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:35.674" endtime="20240424 20:09:35.710"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:35.710" endtime="20240424 20:09:35.738"/>
</kw>
<status status="PASS" starttime="20240424 20:09:35.674" endtime="20240424 20:09:35.738"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${COMMUNICATION_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:35.738" endtime="20240424 20:09:35.749"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:09:35.749" endtime="20240424 20:09:35.753"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:35.753" endtime="20240424 20:09:35.759"/>
</kw>
<status status="PASS" starttime="20240424 20:09:35.738" endtime="20240424 20:09:35.759"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${PRESENTATION_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:35.759" endtime="20240424 20:09:35.764"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:35.764" endtime="20240424 20:09:35.974"/>
</kw>
<status status="PASS" starttime="20240424 20:09:35.759" endtime="20240424 20:09:35.974"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${ISSUES_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:35.974" endtime="20240424 20:09:35.977"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:35.977" endtime="20240424 20:09:35.987"/>
</kw>
<status status="PASS" starttime="20240424 20:09:35.974" endtime="20240424 20:09:35.987"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${ISSUE_DETAIL_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:35.987" endtime="20240424 20:09:36.039"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:36.039" endtime="20240424 20:09:36.039"/>
</kw>
<status status="PASS" starttime="20240424 20:09:35.987" endtime="20240424 20:09:36.039"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${ISSUE_SORTER_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:36.039" endtime="20240424 20:09:36.055"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:36.055" endtime="20240424 20:09:36.063"/>
</kw>
<status status="PASS" starttime="20240424 20:09:36.039" endtime="20240424 20:09:36.063"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>3DPanel</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:36.063" endtime="20240424 20:09:36.070"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:36.070" endtime="20240424 20:09:36.077"/>
</kw>
<status status="PASS" starttime="20240424 20:09:36.063" endtime="20240424 20:09:36.077"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${ITO_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:36.077" endtime="20240424 20:09:36.079"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:09:36.079" endtime="20240424 20:09:36.083"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:36.083" endtime="20240424 20:09:36.090"/>
</kw>
<status status="PASS" starttime="20240424 20:09:36.077" endtime="20240424 20:09:36.090"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${MODEL_TREE_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:36.090" endtime="20240424 20:09:36.093"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:36.093" endtime="20240424 20:09:36.243"/>
</kw>
<status status="PASS" starttime="20240424 20:09:36.090" endtime="20240424 20:09:36.243"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${CLASSIFICATION_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:36.252" endtime="20240424 20:09:36.253"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:36.253" endtime="20240424 20:09:36.260"/>
</kw>
<status status="PASS" starttime="20240424 20:09:36.243" endtime="20240424 20:09:36.264"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${SELECTION_BASKET_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:36.264" endtime="20240424 20:09:36.264"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:36.264" endtime="20240424 20:09:36.264"/>
</kw>
<status status="PASS" starttime="20240424 20:09:36.264" endtime="20240424 20:09:36.264"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${INFO_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:36.264" endtime="20240424 20:09:36.264"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:36.264" endtime="20240424 20:09:36.264"/>
</kw>
<status status="PASS" starttime="20240424 20:09:36.264" endtime="20240424 20:09:36.264"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${ITO_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:36.264" endtime="20240424 20:09:36.281"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:36.281" endtime="20240424 20:09:36.284"/>
</kw>
<status status="PASS" starttime="20240424 20:09:36.264" endtime="20240424 20:09:36.284"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>3DPanel</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:36.284" endtime="20240424 20:09:36.288"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:36.288" endtime="20240424 20:09:36.292"/>
</kw>
<status status="PASS" starttime="20240424 20:09:36.284" endtime="20240424 20:09:36.292"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${BCF_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:36.292" endtime="20240424 20:09:36.314"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:09:36.314" endtime="20240424 20:09:36.314"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:36.314" endtime="20240424 20:09:36.321"/>
</kw>
<status status="PASS" starttime="20240424 20:09:36.292" endtime="20240424 20:09:36.321"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${BCF_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:36.324" endtime="20240424 20:09:36.325"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:36.325" endtime="20240424 20:09:36.540"/>
</kw>
<status status="PASS" starttime="20240424 20:09:36.321" endtime="20240424 20:09:36.540"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${LIVE_ISSUE_DETAILS_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:36.542" endtime="20240424 20:09:36.542"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:36.542" endtime="20240424 20:09:36.542"/>
</kw>
<status status="PASS" starttime="20240424 20:09:36.540" endtime="20240424 20:09:36.542"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>3DPanel</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:36.542" endtime="20240424 20:09:36.595"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:36.595" endtime="20240424 20:09:36.610"/>
</kw>
<status status="PASS" starttime="20240424 20:09:36.542" endtime="20240424 20:09:36.610"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${SCORE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:36.610" endtime="20240424 20:09:36.616"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:09:36.616" endtime="20240424 20:09:36.620"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:36.620" endtime="20240424 20:09:36.624"/>
</kw>
<status status="PASS" starttime="20240424 20:09:36.610" endtime="20240424 20:09:36.624"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${CHECKING_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:36.624" endtime="20240424 20:09:36.630"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:36.630" endtime="20240424 20:09:36.770"/>
</kw>
<status status="PASS" starttime="20240424 20:09:36.624" endtime="20240424 20:09:36.770"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>${SCORE_VIEW_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:36.770" endtime="20240424 20:09:36.784"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:36.784" endtime="20240424 20:09:36.789"/>
</kw>
<status status="PASS" starttime="20240424 20:09:36.770" endtime="20240424 20:09:36.789"/>
</kw>
<kw name="Validate" library="layout_step_definitions">
<arg>3DPanel</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:36.789" endtime="20240424 20:09:36.797"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>${view_name}</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="PASS" starttime="20240424 20:09:36.797" endtime="20240424 20:09:36.803"/>
</kw>
<status status="PASS" starttime="20240424 20:09:36.789" endtime="20240424 20:09:36.803"/>
</kw>
<status status="PASS" starttime="20240424 20:09:34.823" endtime="20240424 20:09:36.803"/>
</kw>
<status status="PASS" starttime="20240424 20:08:50.978" endtime="20240424 20:09:36.803"/>
</test>
<doc>Verify Layout</doc>
<meta name="Feature">layout</meta>
<meta name="Generated by">_gherkin2robotframework on 2023-08-21T10:14:33.073893_</meta>
<status status="PASS" starttime="20240424 20:08:50.946" endtime="20240424 20:09:36.803"/>
</suite>
<suite id="s1-s24" name="25 Languages" source="D:\a\desktop-main\desktop-main\desktop-main\robot-tests\tests\ui\25_languages.robot">
<test id="s1-s24-t1" name="Verify Languages" line="10">
<kw name="Background">
<doc>Launch Solibri And Login To SSC</doc>
<kw name="Given Solibri Is Running" library="Common">
<kw name="GET" library="RequestsLibrary">
<arg>http://${host}:8082/solibri/v1/ping</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240424 20:09:37.096" level="INFO">GET Request : url=http://127.0.0.1:8082/solibri/v1/ping 
 path_url=/solibri/v1/ping 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240424 20:09:37.096" level="INFO">GET Response : url=http://127.0.0.1:8082/solibri/v1/ping 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Date': 'Wed, 24 Apr 2024 20:09:37 GMT', 'Keep-Alive': 'timeout=60', 'Connection': 'keep-alive'} 
 body={"answer":"pong"} 
 </msg>
<status status="PASS" starttime="20240424 20:09:36.925" endtime="20240424 20:09:37.102"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240424 20:09:37.102" endtime="20240424 20:09:37.102"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:37.102" endtime="20240424 20:09:37.109"/>
</kw>
<kw name="Context Should Be Solibri" library="Common">
<kw name="Get Current Context" library="SwingRobot">
<var>${context}</var>
<doc>Returns the component name in current context or title if window or dialog is selected.</doc>
<msg timestamp="20240424 20:09:37.110" level="INFO">${context} = Solibri Office</msg>
<status status="PASS" starttime="20240424 20:09:37.109" endtime="20240424 20:09:37.110"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${context}</arg>
<arg>${application_frame_title}</arg>
<arg>msg="Invalid Context"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240424 20:09:37.110" endtime="20240424 20:09:37.110"/>
</kw>
<status status="PASS" starttime="20240424 20:09:37.109" endtime="20240424 20:09:37.110"/>
</kw>
<status status="PASS" starttime="20240424 20:09:36.925" endtime="20240424 20:09:37.110"/>
</kw>
<kw name="When User Logs In To SSC" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Logged in to SSC</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 20:09:37.110" endtime="20240424 20:09:37.110"/>
</kw>
<status status="PASS" starttime="20240424 20:09:37.110" endtime="20240424 20:09:37.110"/>
</kw>
<kw name="Then Solibri Office Is Opened" library="Common">
<kw name="Log To Console" library="BuiltIn">
<arg>Solibri Office Is Opened</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240424 20:09:37.110" endtime="20240424 20:09:37.110"/>
</kw>
<status status="PASS" starttime="20240424 20:09:37.110" endtime="20240424 20:09:37.110"/>
</kw>
<kw name="Then No Existing Model is Open" library="ModelHandlingResource">
<kw name="Switch Layout" library="Common">
<arg>${FILE_LAYOUT_NAME}</arg>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:37.110" endtime="20240424 20:09:37.121"/>
</kw>
<kw name="Run Keyword In Separate Thread" library="SwingRobot">
<arg>Click On Component</arg>
<arg>${layout_name}</arg>
<arg>1</arg>
<arg>BUTTON1_MASK</arg>
<doc>Executes the given keyword with the given arguments in a separate thread.
Useful if the given keyword starts a process that stays running (e.g. opens a dialog) and doesn't return.
Known limitations:
- The return value of the keyword being run is ignored.
- Exceptions thrown by the keyword are ignored, which implies that this keyword should not be used
  in conjunction with keywords such `Label Text Should Be` or `Menu Item Should Be Enabled`.</doc>
<status status="PASS" starttime="20240424 20:09:37.121" endtime="20240424 20:09:37.121"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:37.121" endtime="20240424 20:09:37.131"/>
</kw>
<status status="PASS" starttime="20240424 20:09:37.110" endtime="20240424 20:09:37.131"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${model_open}</var>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>5</arg>
<arg>Label Should Be Enabled</arg>
<arg>${button_open_title}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Label Should Be Enabled" library="SwingRobot">
<arg>${button_open_title}</arg>
<doc>Fails if the label is not enabled.</doc>
<status status="PASS" starttime="20240424 20:09:37.131" endtime="20240424 20:09:37.413"/>
</kw>
<status status="PASS" starttime="20240424 20:09:37.131" endtime="20240424 20:09:37.413"/>
</kw>
<msg timestamp="20240424 20:09:37.413" level="INFO">${model_open} = True</msg>
<status status="PASS" starttime="20240424 20:09:37.131" endtime="20240424 20:09:37.413"/>
</kw>
<if>
<branch type="IF" condition="not ${model_open}">
<kw name="Close Model" library="ModelHandlingResource">
<status status="NOT RUN" starttime="20240424 20:09:37.413" endtime="20240424 20:09:37.413"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:09:37.413" endtime="20240424 20:09:37.413"/>
</branch>
<status status="PASS" starttime="20240424 20:09:37.413" endtime="20240424 20:09:37.413"/>
</if>
<status status="PASS" starttime="20240424 20:09:37.110" endtime="20240424 20:09:37.413"/>
</kw>
<status status="PASS" starttime="20240424 20:09:36.925" endtime="20240424 20:09:37.413"/>
</kw>
<kw name="Then Verify Language" library="languages_step_definitions">
<arg>English</arg>
<if>
<branch type="IF" condition="&quot;${language}&quot; == &quot;English&quot;">
<kw name="Verify English Context" library="english_language">
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="PASS" starttime="20240424 20:09:37.413" endtime="20240424 20:09:37.418"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>8</value>
<iter>
<var name="${index}">0</var>
<kw name="Get Button Text" library="SwingRobot">
<var>${button_name}</var>
<arg>${index}</arg>
<doc>Uses current context to search for a button and when found, returns the text it is labeled with.</doc>
<msg timestamp="20240424 20:09:37.423" level="INFO">${button_name} = </msg>
<status status="PASS" starttime="20240424 20:09:37.418" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${button_name}</arg>
<arg>${expected_button_names[${index}]}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20240424 20:09:37.423" level="FAIL"> != Open Model...</msg>
<status status="FAIL" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<status status="FAIL" starttime="20240424 20:09:37.418" endtime="20240424 20:09:37.423"/>
</iter>
<status status="FAIL" starttime="20240424 20:09:37.418" endtime="20240424 20:09:37.423"/>
</for>
<for flavor="IN RANGE">
<var>${index}</var>
<value>6</value>
<iter>
<var name="${index}"/>
<kw name="Get Label Content" library="SwingRobot">
<var>${label_name}</var>
<arg>${index}</arg>
<doc>Returns the text displayed on a label.
Assumes that the label exists in the current context.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${label_name}</arg>
<arg>${expected_label_names[${index}]}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</iter>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</for>
<kw name="Switch Layout" library="Common">
<arg>${MODEL_LAYOUT_NAME}</arg>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Component Should Exist</arg>
<arg>Model Tree_View</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Get Label Content" library="SwingRobot">
<var>${label_name}</var>
<arg>0</arg>
<doc>Returns the text displayed on a label.
Assumes that the label exists in the current context.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${label_name}</arg>
<arg>MODEL TREE</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Get Label Content" library="SwingRobot">
<var>${label_name_2}</var>
<arg>2</arg>
<doc>Returns the text displayed on a label.
Assumes that the label exists in the current context.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${label_name_2}</arg>
<arg>INFO</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Get Label Content" library="SwingRobot">
<var>${label_name_4}</var>
<arg>4</arg>
<doc>Returns the text displayed on a label.
Assumes that the label exists in the current context.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${label_name_4}</arg>
<arg>3D</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${CHECKING_LAYOUT_NAME}</arg>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Component Should Exist</arg>
<arg>Result Summary_View</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Get Button Text" library="SwingRobot">
<var>${button_name_2}</var>
<arg>2</arg>
<doc>Uses current context to search for a button and when found, returns the text it is labeled with.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${button_name_2}</arg>
<arg>Spin</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Get Button Text" library="SwingRobot">
<var>${button_name_4}</var>
<arg>4</arg>
<doc>Uses current context to search for a button and when found, returns the text it is labeled with.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${button_name_4}</arg>
<arg>Info</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Get Label Content" library="SwingRobot">
<var>${label_name}</var>
<arg>0</arg>
<doc>Returns the text displayed on a label.
Assumes that the label exists in the current context.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${label_name}</arg>
<arg>CHECKING</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Get Label Content" library="SwingRobot">
<var>${label_name_1}</var>
<arg>1</arg>
<doc>Returns the text displayed on a label.
Assumes that the label exists in the current context.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${label_name_1}</arg>
<arg>Click to add rulesets...</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Result Summary_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Get Label Content" library="SwingRobot">
<var>${label_name_2}</var>
<arg>0</arg>
<doc>Returns the text displayed on a label.
Assumes that the label exists in the current context.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${label_name_2}</arg>
<arg>RESULT SUMMARY</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Select Context" library="SwingRobot">
<arg>Results_View</arg>
<doc>Selects a container as current context.
Context has to be a window, dialog, internal frame or panel. Requires that a parent context has been selected beforehand using `Select Window` or `Select Dialog`.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Get Label Content" library="SwingRobot">
<var>${label_name_3}</var>
<arg>0</arg>
<doc>Returns the text displayed on a label.
Assumes that the label exists in the current context.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${label_name_3}</arg>
<arg>RESULTS</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Select Main Window" library="SwingRobot">
<doc>Selects the window that was opened first as current context.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.423" endtime="20240424 20:09:37.423"/>
</kw>
<kw name="Get Label Content" library="SwingRobot">
<var>${label_name_4}</var>
<arg>4</arg>
<doc>Returns the text displayed on a label.
Assumes that the label exists in the current context.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${label_name_4}</arg>
<arg>INFO</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<kw name="Get Label Content" library="SwingRobot">
<var>${label_name_6}</var>
<arg>6</arg>
<doc>Returns the text displayed on a label.
Assumes that the label exists in the current context.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${label_name_6}</arg>
<arg>3D</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<kw name="Switch Layout" library="Common">
<arg>${COMMUNICATION_LAYOUT_NAME}</arg>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Component Should Exist</arg>
<arg>Presentation_View</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<kw name="Get Button Text" library="SwingRobot">
<var>${button_name_2}</var>
<arg>2</arg>
<doc>Uses current context to search for a button and when found, returns the text it is labeled with.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${button_name_2}</arg>
<arg>Spin</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<kw name="Get Button Text" library="SwingRobot">
<var>${button_name_4}</var>
<arg>4</arg>
<doc>Uses current context to search for a button and when found, returns the text it is labeled with.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${button_name_4}</arg>
<arg>Info</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>5</value>
<iter>
<var name="${index}"/>
<kw name="Get Label Content" library="SwingRobot">
<var>${label_name}</var>
<arg>${index}</arg>
<doc>Returns the text displayed on a label.
Assumes that the label exists in the current context.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${label_name}</arg>
<arg>${expected_communication_label_names[${index}]}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</iter>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</for>
<kw name="Switch Layout" library="Common">
<arg>${ITO_LAYOUT_NAME}</arg>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Component Should Exist</arg>
<arg>Information Takeoff_View</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>9</value>
<iter>
<var name="${index}"/>
<kw name="Get Label Content" library="SwingRobot">
<var>${label_name}</var>
<arg>${index}</arg>
<doc>Returns the text displayed on a label.
Assumes that the label exists in the current context.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${label_name}</arg>
<arg>${expected_ito_label_names[${index}]}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</iter>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</for>
<kw name="Switch Layout" library="Common">
<arg>${BCF_LAYOUT_NAME}</arg>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Component Should Exist</arg>
<arg>BCF Live View_View</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>3</value>
<iter>
<var name="${index}"/>
<kw name="Get Label Content" library="SwingRobot">
<var>${label_name}</var>
<arg>${index}</arg>
<doc>Returns the text displayed on a label.
Assumes that the label exists in the current context.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${label_name}</arg>
<arg>${expected_bcf_label_names[${index}]}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</iter>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</for>
<kw name="Switch Layout" library="Common">
<arg>${SCORE_LAYOUT_NAME}</arg>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5x</arg>
<arg>2x</arg>
<arg>Component Should Exist</arg>
<arg>Score_View</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>4</value>
<iter>
<var name="${index}"/>
<kw name="Get Label Content" library="SwingRobot">
<var>${label_name}</var>
<arg>${index}</arg>
<doc>Returns the text displayed on a label.
Assumes that the label exists in the current context.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${label_name}</arg>
<arg>${expected_score_label_names[${index}]}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</iter>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</for>
<status status="FAIL" starttime="20240424 20:09:37.413" endtime="20240424 20:09:37.438"/>
</kw>
<status status="FAIL" starttime="20240424 20:09:37.413" endtime="20240424 20:09:37.438"/>
</branch>
<branch type="ELSE IF" condition="&quot;${language}&quot; == &quot;Finnish&quot;">
<kw name="Verify Finnish Context" library="finnish_language">
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</branch>
<branch type="ELSE IF" condition="&quot;${language}&quot; == &quot;German&quot;">
<kw name="Verify German Context" library="german_language">
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</branch>
<branch type="ELSE IF" condition="&quot;${language}&quot; == &quot;Japanese&quot;">
<kw name="Verify Japanese Context" library="japanese_language">
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</branch>
<branch type="ELSE IF" condition="&quot;${language}&quot; == &quot;French&quot;">
<kw name="Verify French Context" library="french_language">
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</branch>
<status status="FAIL" starttime="20240424 20:09:37.413" endtime="20240424 20:09:37.438"/>
</if>
<status status="FAIL" starttime="20240424 20:09:37.413" endtime="20240424 20:09:37.438"/>
</kw>
<kw name="Then Verify Language" library="languages_step_definitions">
<arg>Finnish</arg>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<kw name="Then Verify Language" library="languages_step_definitions">
<arg>German</arg>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<kw name="Then Verify Language" library="languages_step_definitions">
<arg>Japanese</arg>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<kw name="Then Verify Language" library="languages_step_definitions">
<arg>French</arg>
<status status="NOT RUN" starttime="20240424 20:09:37.438" endtime="20240424 20:09:37.438"/>
</kw>
<status status="FAIL" starttime="20240424 20:09:36.925" endtime="20240424 20:09:37.438"> != Open Model...</status>
</test>
<doc>Verify Language</doc>
<meta name="Feature">language</meta>
<meta name="Generated by">_gherkin2robotframework on 2023-08-21T10:14:33.073893_</meta>
<status status="FAIL" starttime="20240424 20:09:36.803" endtime="20240424 20:09:37.438"/>
</suite>
<kw name="Stop Video Recording" library="ScreenCapLibrary" type="TEARDOWN">
<arg>alias=${SUITE_NAME}</arg>
<arg>save_to_disk=${False}</arg>
<doc>Stops the video recording corresponding to the given ``alias`` and generates the file in WebM format. If no
``alias`` is specified, the last opened recording will be closed. If there are more recordings with the same
alias all of them will be closed. If ``embed`` argument was set to
``True`` the video will be displayed in the log file.
Furthermore, if the ``save_to_disk`` parameter is set to ``False``, the video will be embedded and available in
the log file only.</doc>
<status status="PASS" starttime="20240424 20:09:37.438" endtime="20240424 20:09:39.816"/>
</kw>
<status status="FAIL" starttime="20240424 19:39:06.735" endtime="20240424 20:09:39.816"/>
</suite>
<statistics>
<total>
<stat pass="52" fail="5" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">ifc</stat>
<stat pass="1" fail="0" skip="0">pdf</stat>
<stat pass="1" fail="0" skip="0">smc</stat>
<stat pass="1" fail="0" skip="0">smoke</stat>
<stat pass="3" fail="0" skip="0">tag</stat>
</tag>
<suite>
<stat pass="52" fail="5" skip="0" id="s1" name="Ui">Ui</stat>
<stat pass="12" fail="1" skip="0" id="s1-s1" name="01 Model Handling Flow">Ui.01 Model Handling Flow</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="02 Role">Ui.02 Role</stat>
<stat pass="1" fail="2" skip="0" id="s1-s3" name="03 Checking View">Ui.03 Checking View</stat>
<stat pass="17" fail="0" skip="0" id="s1-s4" name="04 Settings">Ui.04 Settings</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="05 Integrations View">Ui.05 Integrations View</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="06 Security Settings">Ui.06 Security Settings</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="07 3D Toolbar">Ui.07 3D Toolbar</stat>
<stat pass="2" fail="0" skip="0" id="s1-s8" name="08 Classification">Ui.08 Classification</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="09 Communication">Ui.09 Communication</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="10 Ruleset Manager">Ui.10 Ruleset Manager</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="11 Company Extension">Ui.11 Company Extension</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="12 Drawings Dialog">Ui.12 Drawings Dialog</stat>
<stat pass="0" fail="1" skip="0" id="s1-s13" name="13 Info View">Ui.13 Info View</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="14 Selection Basket View">Ui.14 Selection Basket View</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="16 Pin Unpin Recent Models">Ui.16 Pin Unpin Recent Models</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="17 Compartmentation">Ui.17 Compartmentation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="18 Space Grouping View">Ui.18 Space Grouping View</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="19 Borrow License">Ui.19 Borrow License</stat>
<stat pass="1" fail="0" skip="0" id="s1-s19" name="20 Information Take Off">Ui.20 Information Take Off</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="21 Model Categories">Ui.21 Model Categories</stat>
<stat pass="2" fail="0" skip="0" id="s1-s21" name="22 Hyperlink Manager View">Ui.22 Hyperlink Manager View</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="23 Custom Relation View">Ui.23 Custom Relation View</stat>
<stat pass="1" fail="0" skip="0" id="s1-s23" name="24 Layout">Ui.24 Layout</stat>
<stat pass="0" fail="1" skip="0" id="s1-s24" name="25 Languages">Ui.25 Languages</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20240424 19:45:52.335" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 19:45:52.429" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 19:45:52.444" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 19:50:56.689" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 19:50:56.689" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 19:50:56.704" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 19:51:48.755" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 19:51:48.755" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 19:51:48.770" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 19:52:20.211" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 19:52:20.211" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 19:52:20.226" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 19:58:18.918" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 19:58:18.918" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 19:58:18.933" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 19:59:27.692" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 19:59:27.692" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 19:59:27.708" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 20:00:51.929" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 20:00:51.929" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 20:00:51.945" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 20:09:03.243" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 20:09:03.243" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
<msg timestamp="20240424 20:09:03.258" level="WARN">Keyword 'BuiltIn.Run Keyword Unless' is deprecated. </msg>
</errors>
</robot>
